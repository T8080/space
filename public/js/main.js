var shadow$provide = {};
var CLOSURE_NO_DEPS = true;
var CLOSURE_BASE_PATH = '/js/cljs-runtime/';
var CLOSURE_DEFINES = {"goog.DEBUG":true,"goog.LOCALE":"en","goog.TRANSPILE":"never","goog.ENABLE_DEBUG_LOADER":false};
var COMPILED = false;
var goog = goog || {};
goog.global = this || self;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.exportPath_ = function(name, object, overwriteImplicit, objectToExportTo) {
  var parts = name.split(".");
  var cur = objectToExportTo || goog.global;
  if (!(parts[0] in cur) && typeof cur.execScript != "undefined") {
    cur.execScript("var " + parts[0]);
  }
  for (var part; parts.length && (part = parts.shift());) {
    if (!parts.length && object !== undefined) {
      if (!overwriteImplicit && goog.isObject(object) && goog.isObject(cur[part])) {
        for (var prop in object) {
          if (object.hasOwnProperty(prop)) {
            cur[part][prop] = object[prop];
          }
        }
      } else {
        cur[part] = object;
      }
    } else if (cur[part] && cur[part] !== Object.prototype[part]) {
      cur = cur[part];
    } else {
      cur = cur[part] = {};
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    var uncompiledDefines = goog.global.CLOSURE_UNCOMPILED_DEFINES;
    var defines = goog.global.CLOSURE_DEFINES;
    if (uncompiledDefines && uncompiledDefines.nodeType === undefined && Object.prototype.hasOwnProperty.call(uncompiledDefines, name)) {
      value = uncompiledDefines[name];
    } else if (defines && defines.nodeType === undefined && Object.prototype.hasOwnProperty.call(defines, name)) {
      value = defines[name];
    }
  }
  return value;
};
goog.FEATURESET_YEAR = goog.define("goog.FEATURESET_YEAR", 2012);
goog.DEBUG = goog.define("goog.DEBUG", true);
goog.LOCALE = goog.define("goog.LOCALE", "en");
goog.getLocale = function() {
  return goog.LOCALE;
};
goog.TRUSTED_SITE = goog.define("goog.TRUSTED_SITE", true);
goog.DISALLOW_TEST_ONLY_CODE = goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (goog.isInModuleLoader_()) {
    throw new Error("goog.provide cannot be used within a module.");
  }
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw new Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, object, overwriteImplicit) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, object, overwriteImplicit);
};
goog.NONCE_PATTERN_ = /^[\w+/_-]+[=]{0,2}$/;
goog.getScriptNonce_ = function(opt_window) {
  var doc = (opt_window || goog.global).document;
  var script = doc.querySelector && doc.querySelector("script[nonce]");
  if (script) {
    var nonce = script["nonce"] || script.getAttribute("nonce");
    if (nonce && goog.NONCE_PATTERN_.test(nonce)) {
      return nonce;
    }
  }
  return "";
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (typeof name !== "string" || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw new Error("Invalid module identifier");
  }
  if (!goog.isInGoogModuleLoader_()) {
    throw new Error("Module " + name + " has been loaded incorrectly. Note, " + "modules cannot be loaded as normal scripts. They require some kind of " + "pre-processing step. You're likely trying to load a module via a " + "script tag or as a part of a concatenated bundle without rewriting the " + "module. For more info see: " + "https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw new Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw new Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (name in goog.loadedModules_) {
      return goog.loadedModules_[name].exports;
    } else if (!goog.implicitNamespaces_[name]) {
      var ns = goog.getObjectByName(name);
      return ns != null ? ns : null;
    }
  }
  return null;
};
goog.ModuleType = {ES6:"es6", GOOG:"goog"};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_();
};
goog.isInGoogModuleLoader_ = function() {
  return !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.GOOG;
};
goog.isInEs6ModuleLoader_ = function() {
  var inLoader = !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.ES6;
  if (inLoader) {
    return true;
  }
  var jscomp = goog.global["$jscomp"];
  if (jscomp) {
    if (typeof jscomp.getCurrentModulePath != "function") {
      return false;
    }
    return !!jscomp.getCurrentModulePath();
  }
  return false;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInGoogModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw new Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.declareModuleId = function(namespace) {
  if (!COMPILED) {
    if (!goog.isInEs6ModuleLoader_()) {
      throw new Error("goog.declareModuleId may only be called from " + "within an ES6 module");
    }
    if (goog.moduleLoaderState_ && goog.moduleLoaderState_.moduleName) {
      throw new Error("goog.declareModuleId may only be called once per module.");
    }
    if (namespace in goog.loadedModules_) {
      throw new Error('Module with namespace "' + namespace + '" already exists.');
    }
  }
  if (goog.moduleLoaderState_) {
    goog.moduleLoaderState_.moduleName = namespace;
  } else {
    var jscomp = goog.global["$jscomp"];
    if (!jscomp || typeof jscomp.getCurrentModulePath != "function") {
      throw new Error('Module with namespace "' + namespace + '" has been loaded incorrectly.');
    }
    var exports = jscomp.require(jscomp.getCurrentModulePath());
    goog.loadedModules_[namespace] = {exports:exports, type:goog.ModuleType.ES6, moduleId:namespace};
  }
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw new Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
goog.forwardDeclare("Document");
goog.forwardDeclare("HTMLScriptElement");
goog.forwardDeclare("XMLHttpRequest");
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.getObjectByName(name) != null;
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var i = 0; i < parts.length; i++) {
    cur = cur[parts[i]];
    if (cur == null) {
      return null;
    }
  }
  return cur;
};
goog.addDependency = function(relPath, provides, requires, opt_loadFlags) {
  if (!COMPILED && goog.DEPENDENCIES_ENABLED) {
    goog.debugLoader_.addDependency(relPath, provides, requires, opt_loadFlags);
  }
};
goog.ENABLE_DEBUG_LOADER = goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(namespace) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER) {
      goog.debugLoader_.requested(namespace);
    }
    if (goog.isProvided_(namespace)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(namespace);
      }
    } else if (goog.ENABLE_DEBUG_LOADER) {
      var moduleLoaderState = goog.moduleLoaderState_;
      goog.moduleLoaderState_ = null;
      try {
        goog.debugLoader_.load_(namespace);
      } finally {
        goog.moduleLoaderState_ = moduleLoaderState;
      }
    }
    return null;
  }
};
goog.requireType = function(namespace) {
  return {};
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw new Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.instance_ = undefined;
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor();
  };
};
goog.instantiatedSingletons_ = [];
goog.LOAD_MODULE_USING_EVAL = goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.SEAL_MODULE_EXPORTS = goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
goog.TRANSPILE = goog.define("goog.TRANSPILE", "detect");
goog.ASSUME_ES_MODULES_TRANSPILED = goog.define("goog.ASSUME_ES_MODULES_TRANSPILED", false);
goog.TRANSPILE_TO_LANGUAGE = goog.define("goog.TRANSPILE_TO_LANGUAGE", "");
goog.TRANSPILER = goog.define("goog.TRANSPILER", "transpile.js");
goog.TRUSTED_TYPES_POLICY_NAME = goog.define("goog.TRUSTED_TYPES_POLICY_NAME", "goog");
goog.hasBadLetScoping = null;
goog.loadModule = function(moduleDef) {
  var previousState = goog.moduleLoaderState_;
  try {
    goog.moduleLoaderState_ = {moduleName:"", declareLegacyNamespace:false, type:goog.ModuleType.GOOG};
    var origExports = {};
    var exports = origExports;
    if (typeof moduleDef === "function") {
      exports = moduleDef.call(undefined, exports);
    } else if (typeof moduleDef === "string") {
      exports = goog.loadModuleFromSource_.call(undefined, exports, moduleDef);
    } else {
      throw new Error("Invalid module definition");
    }
    var moduleName = goog.moduleLoaderState_.moduleName;
    if (typeof moduleName === "string" && moduleName) {
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        var isDefaultExport = origExports !== exports;
        goog.constructNamespace_(moduleName, exports, isDefaultExport);
      } else if (goog.SEAL_MODULE_EXPORTS && Object.seal && typeof exports == "object" && exports != null) {
        Object.seal(exports);
      }
      var data = {exports:exports, type:goog.ModuleType.GOOG, moduleId:goog.moduleLoaderState_.moduleName};
      goog.loadedModules_[moduleName] = data;
    } else {
      throw new Error('Invalid module name "' + moduleName + '"');
    }
  } finally {
    goog.moduleLoaderState_ = previousState;
  }
};
goog.loadModuleFromSource_ = function(exports) {
  eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(arguments[1]));
  return exports;
};
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
      components.splice(--i, 2);
    } else {
      i++;
    }
  }
  return components.join("/");
};
goog.global.CLOSURE_LOAD_FILE_SYNC;
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    try {
      var xhr = new goog.global["XMLHttpRequest"]();
      xhr.open("get", src, false);
      xhr.send();
      return xhr.status == 0 || xhr.status == 200 ? xhr.responseText : null;
    } catch (err) {
      return null;
    }
  }
};
goog.transpile_ = function(code, path, target) {
  var jscomp = goog.global["$jscomp"];
  if (!jscomp) {
    goog.global["$jscomp"] = jscomp = {};
  }
  var transpile = jscomp.transpile;
  if (!transpile) {
    var transpilerPath = goog.basePath + goog.TRANSPILER;
    var transpilerCode = goog.loadFileSync_(transpilerPath);
    if (transpilerCode) {
      (function() {
        (0,eval)(transpilerCode + "\n//# sourceURL\x3d" + transpilerPath);
      }).call(goog.global);
      if (goog.global["$gwtExport"] && goog.global["$gwtExport"]["$jscomp"] && !goog.global["$gwtExport"]["$jscomp"]["transpile"]) {
        throw new Error('The transpiler did not properly export the "transpile" ' + "method. $gwtExport: " + JSON.stringify(goog.global["$gwtExport"]));
      }
      goog.global["$jscomp"].transpile = goog.global["$gwtExport"]["$jscomp"]["transpile"];
      jscomp = goog.global["$jscomp"];
      transpile = jscomp.transpile;
    }
  }
  if (!transpile) {
    var suffix = " requires transpilation but no transpiler was found.";
    transpile = jscomp.transpile = function(code, path) {
      goog.logToConsole_(path + suffix);
      return code;
    };
  }
  return transpile(code, path, target);
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s != "object") {
    return s;
  }
  if (!value) {
    return "null";
  }
  if (Array.isArray(value)) {
    return "array";
  }
  return s;
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return Object.prototype.hasOwnProperty.call(obj, goog.UID_PROPERTY_) && obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if (obj !== null && "removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1e9 >>> 0);
goog.uidCounter_ = 0;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (typeof obj.clone === "function") {
      return obj.clone();
    }
    if (typeof Map !== "undefined" && obj instanceof Map) {
      return new Map(obj);
    } else if (typeof Set !== "undefined" && obj instanceof Set) {
      return new Set(obj);
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments);
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error();
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = function() {
  return Date.now();
};
goog.globalEval = function(script) {
  (0,eval)(script);
};
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.global.CLOSURE_CSS_NAME_MAP_FN;
goog.getCssName = function(className, opt_modifier) {
  if (String(className).charAt(0) == ".") {
    throw new Error('className passed in goog.getCssName must not start with ".".' + " You passed: " + className);
  }
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0; i < parts.length; i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  var result = opt_modifier ? className + "-" + rename(opt_modifier) : rename(className);
  if (goog.global.CLOSURE_CSS_NAME_MAP_FN) {
    return goog.global.CLOSURE_CSS_NAME_MAP_FN(result);
  }
  return result;
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values, opt_options) {
  if (opt_options && opt_options.html) {
    str = str.replace(/</g, "\x26lt;");
  }
  if (opt_options && opt_options.unescapeHtmlEntities) {
    str = str.replace(/&lt;/g, "\x3c").replace(/&gt;/g, "\x3e").replace(/&apos;/g, "'").replace(/&quot;/g, '"').replace(/&amp;/g, "\x26");
  }
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, objectToExportTo) {
  goog.exportPath_(publicPath, object, true, objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor();
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2; i < arguments.length; i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.scope = function(fn) {
  if (goog.isInModuleLoader_()) {
    throw new Error("goog.scope is not supported within a module.");
  }
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw new Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.defineClass.SEAL_CLASS_INSTANCES = goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {
    return ctr;
  }
  var wrappedCtr = function() {
    var instance = ctr.apply(this, arguments) || this;
    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
    return instance;
  };
  return wrappedCtr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0; i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.identity_ = function(s) {
  return s;
};
goog.createTrustedTypesPolicy = function(name) {
  var policy = null;
  var policyFactory = goog.global.trustedTypes;
  if (!policyFactory || !policyFactory.createPolicy) {
    return policy;
  }
  try {
    policy = policyFactory.createPolicy(name, {createHTML:goog.identity_, createScript:goog.identity_, createScriptURL:goog.identity_});
  } catch (e) {
    goog.logToConsole_(e.message);
  }
  return policy;
};
if (!COMPILED && goog.DEPENDENCIES_ENABLED) {
  goog.isEdge_ = function() {
    var userAgent = goog.global.navigator && goog.global.navigator.userAgent ? goog.global.navigator.userAgent : "";
    var edgeRe = /Edge\/(\d+)(\.\d)*/i;
    return !!userAgent.match(edgeRe);
  };
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return doc != null && "write" in doc;
  };
  goog.isDocumentLoading_ = function() {
    var doc = goog.global.document;
    return doc.attachEvent ? doc.readyState != "complete" : doc.readyState == "loading";
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH != undefined && typeof goog.global.CLOSURE_BASE_PATH === "string") {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else if (!goog.inHtmlDocument_()) {
      return;
    }
    var doc = goog.global.document;
    var currentScript = doc.currentScript;
    if (currentScript) {
      var scripts = [currentScript];
    } else {
      var scripts = doc.getElementsByTagName("SCRIPT");
    }
    for (var i = scripts.length - 1; i >= 0; --i) {
      var script = scripts[i];
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.findBasePath_();
  goog.Transpiler = function() {
    this.requiresTranspilation_ = null;
    this.transpilationTarget_ = goog.TRANSPILE_TO_LANGUAGE;
  };
  goog.Transpiler.prototype.createRequiresTranspilation_ = function() {
    var transpilationTarget = "es3";
    var requiresTranspilation = {"es3":false};
    var transpilationRequiredForAllLaterModes = false;
    function addNewerLanguageTranspilationCheck(modeName, isSupported) {
      if (transpilationRequiredForAllLaterModes) {
        requiresTranspilation[modeName] = true;
      } else if (isSupported()) {
        transpilationTarget = modeName;
        requiresTranspilation[modeName] = false;
      } else {
        requiresTranspilation[modeName] = true;
        transpilationRequiredForAllLaterModes = true;
      }
    }
    function evalCheck(code) {
      try {
        return !!eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(code));
      } catch (ignored) {
        return false;
      }
    }
    addNewerLanguageTranspilationCheck("es5", function() {
      return evalCheck("[1,].length\x3d\x3d1");
    });
    addNewerLanguageTranspilationCheck("es6", function() {
      if (goog.isEdge_()) {
        return false;
      }
      var es6fullTest = "class X{constructor(){if(new.target!\x3dString)throw 1;this.x\x3d42}}" + "let q\x3dReflect.construct(X,[],String);if(q.x!\x3d42||!(q instanceof " + "String))throw 1;for(const a of[2,3]){if(a\x3d\x3d2)continue;function " + "f(z\x3d{a}){let a\x3d0;return z.a}{function f(){return 0;}}return f()" + "\x3d\x3d3}";
      return evalCheck('(()\x3d\x3e{"use strict";' + es6fullTest + "})()");
    });
    addNewerLanguageTranspilationCheck("es7", function() {
      return evalCheck("2**3\x3d\x3d8");
    });
    addNewerLanguageTranspilationCheck("es8", function() {
      return evalCheck("async()\x3d\x3e1,1");
    });
    addNewerLanguageTranspilationCheck("es9", function() {
      return evalCheck("({...rest}\x3d{}),1");
    });
    addNewerLanguageTranspilationCheck("es_2019", function() {
      return evalCheck('let r;try{r\x3d"\u2029"}catch{};r');
    });
    addNewerLanguageTranspilationCheck("es_2020", function() {
      return evalCheck("null?.x??1");
    });
    addNewerLanguageTranspilationCheck("es_next", function() {
      return false;
    });
    return {target:transpilationTarget, map:requiresTranspilation};
  };
  goog.Transpiler.prototype.needsTranspile = function(lang, module) {
    if (goog.TRANSPILE == "always") {
      return true;
    } else if (goog.TRANSPILE == "never") {
      return false;
    } else if (!this.requiresTranspilation_) {
      var obj = this.createRequiresTranspilation_();
      this.requiresTranspilation_ = obj.map;
      this.transpilationTarget_ = this.transpilationTarget_ || obj.target;
    }
    if (lang in this.requiresTranspilation_) {
      if (this.requiresTranspilation_[lang]) {
        return true;
      } else if (goog.inHtmlDocument_() && module == "es6" && !("noModule" in goog.global.document.createElement("script"))) {
        return true;
      } else {
        return false;
      }
    } else {
      throw new Error("Unknown language mode: " + lang);
    }
  };
  goog.Transpiler.prototype.transpile = function(code, path) {
    return goog.transpile_(code, path, this.transpilationTarget_);
  };
  goog.transpiler_ = new goog.Transpiler();
  goog.protectScriptTag_ = function(str) {
    return str.replace(/<\/(SCRIPT)/ig, "\\x3c/$1");
  };
  goog.DebugLoader_ = function() {
    this.dependencies_ = {};
    this.idToPath_ = {};
    this.written_ = {};
    this.loadingDeps_ = [];
    this.depsToLoad_ = [];
    this.paused_ = false;
    this.factory_ = new goog.DependencyFactory(goog.transpiler_);
    this.deferredCallbacks_ = {};
    this.deferredQueue_ = [];
  };
  goog.DebugLoader_.prototype.bootstrap = function(namespaces, callback) {
    var cb = callback;
    function resolve() {
      if (cb) {
        goog.global.setTimeout(cb, 0);
        cb = null;
      }
    }
    if (!namespaces.length) {
      resolve();
      return;
    }
    var deps = [];
    for (var i = 0; i < namespaces.length; i++) {
      var path = this.getPathFromDeps_(namespaces[i]);
      if (!path) {
        throw new Error("Unregonized namespace: " + namespaces[i]);
      }
      deps.push(this.dependencies_[path]);
    }
    var require = goog.require;
    var loaded = 0;
    for (var i = 0; i < namespaces.length; i++) {
      require(namespaces[i]);
      deps[i].onLoad(function() {
        if (++loaded == namespaces.length) {
          resolve();
        }
      });
    }
  };
  goog.DebugLoader_.prototype.loadClosureDeps = function() {
    var relPath = "deps.js";
    this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath + relPath), relPath, [], [], {}, false));
    this.loadDeps_();
  };
  goog.DebugLoader_.prototype.requested = function(absPathOrId, opt_force) {
    var path = this.getPathFromDeps_(absPathOrId);
    if (path && (opt_force || this.areDepsLoaded_(this.dependencies_[path].requires))) {
      var callback = this.deferredCallbacks_[path];
      if (callback) {
        delete this.deferredCallbacks_[path];
        callback();
      }
    }
  };
  goog.DebugLoader_.prototype.setDependencyFactory = function(factory) {
    this.factory_ = factory;
  };
  goog.DebugLoader_.prototype.load_ = function(namespace) {
    if (!this.getPathFromDeps_(namespace)) {
      var errorMessage = "goog.require could not find: " + namespace;
      goog.logToConsole_(errorMessage);
    } else {
      var loader = this;
      var deps = [];
      var visit = function(namespace) {
        var path = loader.getPathFromDeps_(namespace);
        if (!path) {
          throw new Error("Bad dependency path or symbol: " + namespace);
        }
        if (loader.written_[path]) {
          return;
        }
        loader.written_[path] = true;
        var dep = loader.dependencies_[path];
        for (var i = 0; i < dep.requires.length; i++) {
          if (!goog.isProvided_(dep.requires[i])) {
            visit(dep.requires[i]);
          }
        }
        deps.push(dep);
      };
      visit(namespace);
      var wasLoading = !!this.depsToLoad_.length;
      this.depsToLoad_ = this.depsToLoad_.concat(deps);
      if (!this.paused_ && !wasLoading) {
        this.loadDeps_();
      }
    }
  };
  goog.DebugLoader_.prototype.loadDeps_ = function() {
    var loader = this;
    var paused = this.paused_;
    while (this.depsToLoad_.length && !paused) {
      (function() {
        var loadCallDone = false;
        var dep = loader.depsToLoad_.shift();
        var loaded = false;
        loader.loading_(dep);
        var controller = {pause:function() {
          if (loadCallDone) {
            throw new Error("Cannot call pause after the call to load.");
          } else {
            paused = true;
          }
        }, resume:function() {
          if (loadCallDone) {
            loader.resume_();
          } else {
            paused = false;
          }
        }, loaded:function() {
          if (loaded) {
            throw new Error("Double call to loaded.");
          }
          loaded = true;
          loader.loaded_(dep);
        }, pending:function() {
          var pending = [];
          for (var i = 0; i < loader.loadingDeps_.length; i++) {
            pending.push(loader.loadingDeps_[i]);
          }
          return pending;
        }, setModuleState:function(type) {
          goog.moduleLoaderState_ = {type:type, moduleName:"", declareLegacyNamespace:false};
        }, registerEs6ModuleExports:function(path, exports, opt_closureNamespace) {
          if (opt_closureNamespace) {
            goog.loadedModules_[opt_closureNamespace] = {exports:exports, type:goog.ModuleType.ES6, moduleId:opt_closureNamespace || ""};
          }
        }, registerGoogModuleExports:function(moduleId, exports) {
          goog.loadedModules_[moduleId] = {exports:exports, type:goog.ModuleType.GOOG, moduleId:moduleId};
        }, clearModuleState:function() {
          goog.moduleLoaderState_ = null;
        }, defer:function(callback) {
          if (loadCallDone) {
            throw new Error("Cannot register with defer after the call to load.");
          }
          loader.defer_(dep, callback);
        }, areDepsLoaded:function() {
          return loader.areDepsLoaded_(dep.requires);
        }};
        try {
          dep.load(controller);
        } finally {
          loadCallDone = true;
        }
      })();
    }
    if (paused) {
      this.pause_();
    }
  };
  goog.DebugLoader_.prototype.pause_ = function() {
    this.paused_ = true;
  };
  goog.DebugLoader_.prototype.resume_ = function() {
    if (this.paused_) {
      this.paused_ = false;
      this.loadDeps_();
    }
  };
  goog.DebugLoader_.prototype.loading_ = function(dep) {
    this.loadingDeps_.push(dep);
  };
  goog.DebugLoader_.prototype.loaded_ = function(dep) {
    for (var i = 0; i < this.loadingDeps_.length; i++) {
      if (this.loadingDeps_[i] == dep) {
        this.loadingDeps_.splice(i, 1);
        break;
      }
    }
    for (var i = 0; i < this.deferredQueue_.length; i++) {
      if (this.deferredQueue_[i] == dep.path) {
        this.deferredQueue_.splice(i, 1);
        break;
      }
    }
    if (this.loadingDeps_.length == this.deferredQueue_.length && !this.depsToLoad_.length) {
      while (this.deferredQueue_.length) {
        this.requested(this.deferredQueue_.shift(), true);
      }
    }
    dep.loaded();
  };
  goog.DebugLoader_.prototype.areDepsLoaded_ = function(pathsOrIds) {
    for (var i = 0; i < pathsOrIds.length; i++) {
      var path = this.getPathFromDeps_(pathsOrIds[i]);
      if (!path || !(path in this.deferredCallbacks_) && !goog.isProvided_(pathsOrIds[i])) {
        return false;
      }
    }
    return true;
  };
  goog.DebugLoader_.prototype.getPathFromDeps_ = function(absPathOrId) {
    if (absPathOrId in this.idToPath_) {
      return this.idToPath_[absPathOrId];
    } else if (absPathOrId in this.dependencies_) {
      return absPathOrId;
    } else {
      return null;
    }
  };
  goog.DebugLoader_.prototype.defer_ = function(dependency, callback) {
    this.deferredCallbacks_[dependency.path] = callback;
    this.deferredQueue_.push(dependency.path);
  };
  goog.LoadController = function() {
  };
  goog.LoadController.prototype.pause = function() {
  };
  goog.LoadController.prototype.resume = function() {
  };
  goog.LoadController.prototype.loaded = function() {
  };
  goog.LoadController.prototype.pending = function() {
  };
  goog.LoadController.prototype.registerEs6ModuleExports = function(path, exports, opt_closureNamespace) {
  };
  goog.LoadController.prototype.setModuleState = function(type) {
  };
  goog.LoadController.prototype.clearModuleState = function() {
  };
  goog.LoadController.prototype.defer = function(callback) {
  };
  goog.LoadController.prototype.areDepsLoaded = function() {
  };
  goog.Dependency = function(path, relativePath, provides, requires, loadFlags) {
    this.path = path;
    this.relativePath = relativePath;
    this.provides = provides;
    this.requires = requires;
    this.loadFlags = loadFlags;
    this.loaded_ = false;
    this.loadCallbacks_ = [];
  };
  goog.Dependency.prototype.getPathName = function() {
    var pathName = this.path;
    var protocolIndex = pathName.indexOf("://");
    if (protocolIndex >= 0) {
      pathName = pathName.substring(protocolIndex + 3);
      var slashIndex = pathName.indexOf("/");
      if (slashIndex >= 0) {
        pathName = pathName.substring(slashIndex + 1);
      }
    }
    return pathName;
  };
  goog.Dependency.prototype.onLoad = function(callback) {
    if (this.loaded_) {
      callback();
    } else {
      this.loadCallbacks_.push(callback);
    }
  };
  goog.Dependency.prototype.loaded = function() {
    this.loaded_ = true;
    var callbacks = this.loadCallbacks_;
    this.loadCallbacks_ = [];
    for (var i = 0; i < callbacks.length; i++) {
      callbacks[i]();
    }
  };
  goog.Dependency.defer_ = false;
  goog.Dependency.callbackMap_ = {};
  goog.Dependency.registerCallback_ = function(callback) {
    var key = Math.random().toString(32);
    goog.Dependency.callbackMap_[key] = callback;
    return key;
  };
  goog.Dependency.unregisterCallback_ = function(key) {
    delete goog.Dependency.callbackMap_[key];
  };
  goog.Dependency.callback_ = function(key, var_args) {
    if (key in goog.Dependency.callbackMap_) {
      var callback = goog.Dependency.callbackMap_[key];
      var args = [];
      for (var i = 1; i < arguments.length; i++) {
        args.push(arguments[i]);
      }
      callback.apply(undefined, args);
    } else {
      var errorMessage = "Callback key " + key + " does not exist (was base.js loaded more than once?).";
      throw Error(errorMessage);
    }
  };
  goog.Dependency.prototype.load = function(controller) {
    if (goog.global.CLOSURE_IMPORT_SCRIPT) {
      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {
        controller.loaded();
      } else {
        controller.pause();
      }
      return;
    }
    if (!goog.inHtmlDocument_()) {
      goog.logToConsole_("Cannot use default debug loader outside of HTML documents.");
      if (this.relativePath == "deps.js") {
        goog.logToConsole_("Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, " + "or setting CLOSURE_NO_DEPS to true.");
        controller.loaded();
      } else {
        controller.pause();
      }
      return;
    }
    var doc = goog.global.document;
    if (doc.readyState == "complete" && !goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
      var isDeps = /\bdeps.js$/.test(this.path);
      if (isDeps) {
        controller.loaded();
        return;
      } else {
        throw Error('Cannot write "' + this.path + '" after document load');
      }
    }
    var nonce = goog.getScriptNonce_();
    if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && goog.isDocumentLoading_()) {
      var key;
      var callback = function(script) {
        if (script.readyState && script.readyState != "complete") {
          script.onload = callback;
          return;
        }
        goog.Dependency.unregisterCallback_(key);
        controller.loaded();
      };
      key = goog.Dependency.registerCallback_(callback);
      var defer = goog.Dependency.defer_ ? " defer" : "";
      var nonceAttr = nonce ? ' nonce\x3d"' + nonce + '"' : "";
      var script = '\x3cscript src\x3d"' + this.path + '"' + nonceAttr + defer + ' id\x3d"script-' + key + '"\x3e\x3c/script\x3e';
      script += "\x3cscript" + nonceAttr + "\x3e";
      if (goog.Dependency.defer_) {
        script += "document.getElementById('script-" + key + "').onload \x3d function() {\n" + "  goog.Dependency.callback_('" + key + "', this);\n" + "};\n";
      } else {
        script += "goog.Dependency.callback_('" + key + "', document.getElementById('script-" + key + "'));";
      }
      script += "\x3c/script\x3e";
      doc.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(script) : script);
    } else {
      var scriptEl = doc.createElement("script");
      scriptEl.defer = goog.Dependency.defer_;
      scriptEl.async = false;
      if (nonce) {
        scriptEl.nonce = nonce;
      }
      if (goog.DebugLoader_.IS_OLD_IE_) {
        controller.pause();
        scriptEl.onreadystatechange = function() {
          if (scriptEl.readyState == "loaded" || scriptEl.readyState == "complete") {
            controller.loaded();
            controller.resume();
          }
        };
      } else {
        scriptEl.onload = function() {
          scriptEl.onload = null;
          controller.loaded();
        };
      }
      scriptEl.src = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path) : this.path;
      doc.head.appendChild(scriptEl);
    }
  };
  goog.Es6ModuleDependency = function(path, relativePath, provides, requires, loadFlags) {
    goog.Es6ModuleDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
  };
  goog.inherits(goog.Es6ModuleDependency, goog.Dependency);
  goog.Es6ModuleDependency.prototype.load = function(controller) {
    if (goog.global.CLOSURE_IMPORT_SCRIPT) {
      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {
        controller.loaded();
      } else {
        controller.pause();
      }
      return;
    }
    if (!goog.inHtmlDocument_()) {
      goog.logToConsole_("Cannot use default debug loader outside of HTML documents.");
      controller.pause();
      return;
    }
    var doc = goog.global.document;
    var dep = this;
    function write(src, contents) {
      var nonceAttr = "";
      var nonce = goog.getScriptNonce_();
      if (nonce) {
        nonceAttr = ' nonce\x3d"' + nonce + '"';
      }
      if (contents) {
        var script = '\x3cscript type\x3d"module" crossorigin' + nonceAttr + "\x3e" + contents + "\x3c/" + "script\x3e";
        doc.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(script) : script);
      } else {
        var script = '\x3cscript type\x3d"module" crossorigin src\x3d"' + src + '"' + nonceAttr + "\x3e\x3c/" + "script\x3e";
        doc.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(script) : script);
      }
    }
    function append(src, contents) {
      var scriptEl = doc.createElement("script");
      scriptEl.defer = true;
      scriptEl.async = false;
      scriptEl.type = "module";
      scriptEl.setAttribute("crossorigin", true);
      var nonce = goog.getScriptNonce_();
      if (nonce) {
        scriptEl.nonce = nonce;
      }
      if (contents) {
        scriptEl.text = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScript(contents) : contents;
      } else {
        scriptEl.src = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScriptURL(src) : src;
      }
      doc.head.appendChild(scriptEl);
    }
    var create;
    if (goog.isDocumentLoading_()) {
      create = write;
      goog.Dependency.defer_ = true;
    } else {
      create = append;
    }
    var beforeKey = goog.Dependency.registerCallback_(function() {
      goog.Dependency.unregisterCallback_(beforeKey);
      controller.setModuleState(goog.ModuleType.ES6);
    });
    create(undefined, 'goog.Dependency.callback_("' + beforeKey + '")');
    create(this.path, undefined);
    var registerKey = goog.Dependency.registerCallback_(function(exports) {
      goog.Dependency.unregisterCallback_(registerKey);
      controller.registerEs6ModuleExports(dep.path, exports, goog.moduleLoaderState_.moduleName);
    });
    create(undefined, 'import * as m from "' + this.path + '"; goog.Dependency.callback_("' + registerKey + '", m)');
    var afterKey = goog.Dependency.registerCallback_(function() {
      goog.Dependency.unregisterCallback_(afterKey);
      controller.clearModuleState();
      controller.loaded();
    });
    create(undefined, 'goog.Dependency.callback_("' + afterKey + '")');
  };
  goog.TransformedDependency = function(path, relativePath, provides, requires, loadFlags) {
    goog.TransformedDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
    this.contents_ = null;
    this.lazyFetch_ = !goog.inHtmlDocument_() || !("noModule" in goog.global.document.createElement("script"));
  };
  goog.inherits(goog.TransformedDependency, goog.Dependency);
  goog.TransformedDependency.prototype.load = function(controller) {
    var dep = this;
    function fetch() {
      dep.contents_ = goog.loadFileSync_(dep.path);
      if (dep.contents_) {
        dep.contents_ = dep.transform(dep.contents_);
        if (dep.contents_) {
          dep.contents_ += "\n//# sourceURL\x3d" + dep.path;
        }
      }
    }
    if (goog.global.CLOSURE_IMPORT_SCRIPT) {
      fetch();
      if (this.contents_ && goog.global.CLOSURE_IMPORT_SCRIPT("", this.contents_)) {
        this.contents_ = null;
        controller.loaded();
      } else {
        controller.pause();
      }
      return;
    }
    var isEs6 = this.loadFlags["module"] == goog.ModuleType.ES6;
    if (!this.lazyFetch_) {
      fetch();
    }
    function load() {
      if (dep.lazyFetch_) {
        fetch();
      }
      if (!dep.contents_) {
        return;
      }
      if (isEs6) {
        controller.setModuleState(goog.ModuleType.ES6);
      }
      var namespace;
      try {
        var contents = dep.contents_;
        dep.contents_ = null;
        goog.globalEval(goog.CLOSURE_EVAL_PREFILTER_.createScript(contents));
        if (isEs6) {
          namespace = goog.moduleLoaderState_.moduleName;
        }
      } finally {
        if (isEs6) {
          controller.clearModuleState();
        }
      }
      if (isEs6) {
        goog.global["$jscomp"]["require"]["ensure"]([dep.getPathName()], function() {
          controller.registerEs6ModuleExports(dep.path, goog.global["$jscomp"]["require"](dep.getPathName()), namespace);
        });
      }
      controller.loaded();
    }
    function fetchInOwnScriptThenLoad() {
      var doc = goog.global.document;
      var key = goog.Dependency.registerCallback_(function() {
        goog.Dependency.unregisterCallback_(key);
        load();
      });
      var nonce = goog.getScriptNonce_();
      var nonceAttr = nonce ? ' nonce\x3d"' + nonce + '"' : "";
      var script = "\x3cscript" + nonceAttr + "\x3e" + goog.protectScriptTag_('goog.Dependency.callback_("' + key + '");') + "\x3c/" + "script\x3e";
      doc.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(script) : script);
    }
    var anythingElsePending = controller.pending().length > 1;
    var useOldIeWorkAround = anythingElsePending && goog.DebugLoader_.IS_OLD_IE_;
    var needsAsyncLoading = goog.Dependency.defer_ && (anythingElsePending || goog.isDocumentLoading_());
    if (useOldIeWorkAround || needsAsyncLoading) {
      controller.defer(function() {
        load();
      });
      return;
    }
    var doc = goog.global.document;
    var isInternetExplorerOrEdge = goog.inHtmlDocument_() && ("ActiveXObject" in goog.global || goog.isEdge_());
    if (isEs6 && goog.inHtmlDocument_() && goog.isDocumentLoading_() && !isInternetExplorerOrEdge) {
      goog.Dependency.defer_ = true;
      controller.pause();
      var oldCallback = doc.onreadystatechange;
      doc.onreadystatechange = function() {
        if (doc.readyState == "interactive") {
          doc.onreadystatechange = oldCallback;
          load();
          controller.resume();
        }
        if (typeof oldCallback === "function") {
          oldCallback.apply(undefined, arguments);
        }
      };
    } else {
      if (goog.DebugLoader_.IS_OLD_IE_ || !goog.inHtmlDocument_() || !goog.isDocumentLoading_()) {
        load();
      } else {
        fetchInOwnScriptThenLoad();
      }
    }
  };
  goog.TransformedDependency.prototype.transform = function(contents) {
  };
  goog.TranspiledDependency = function(path, relativePath, provides, requires, loadFlags, transpiler) {
    goog.TranspiledDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
    this.transpiler = transpiler;
  };
  goog.inherits(goog.TranspiledDependency, goog.TransformedDependency);
  goog.TranspiledDependency.prototype.transform = function(contents) {
    return this.transpiler.transpile(contents, this.getPathName());
  };
  goog.PreTranspiledEs6ModuleDependency = function(path, relativePath, provides, requires, loadFlags) {
    goog.PreTranspiledEs6ModuleDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
  };
  goog.inherits(goog.PreTranspiledEs6ModuleDependency, goog.TransformedDependency);
  goog.PreTranspiledEs6ModuleDependency.prototype.transform = function(contents) {
    return contents;
  };
  goog.GoogModuleDependency = function(path, relativePath, provides, requires, loadFlags, needsTranspile, transpiler) {
    goog.GoogModuleDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
    this.needsTranspile_ = needsTranspile;
    this.transpiler_ = transpiler;
  };
  goog.inherits(goog.GoogModuleDependency, goog.TransformedDependency);
  goog.GoogModuleDependency.prototype.transform = function(contents) {
    if (this.needsTranspile_) {
      contents = this.transpiler_.transpile(contents, this.getPathName());
    }
    if (!goog.LOAD_MODULE_USING_EVAL || goog.global.JSON === undefined) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + contents + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + this.path + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(contents + "\n//# sourceURL\x3d" + this.path + "\n") + ");";
    }
  };
  goog.DebugLoader_.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document["all"]);
  goog.DebugLoader_.prototype.addDependency = function(relPath, provides, requires, opt_loadFlags) {
    provides = provides || [];
    relPath = relPath.replace(/\\/g, "/");
    var path = goog.normalizePath_(goog.basePath + relPath);
    if (!opt_loadFlags || typeof opt_loadFlags === "boolean") {
      opt_loadFlags = opt_loadFlags ? {"module":goog.ModuleType.GOOG} : {};
    }
    var dep = this.factory_.createDependency(path, relPath, provides, requires, opt_loadFlags, goog.transpiler_.needsTranspile(opt_loadFlags["lang"] || "es3", opt_loadFlags["module"]));
    this.dependencies_[path] = dep;
    for (var i = 0; i < provides.length; i++) {
      this.idToPath_[provides[i]] = path;
    }
    this.idToPath_[relPath] = path;
  };
  goog.DependencyFactory = function(transpiler) {
    this.transpiler = transpiler;
  };
  goog.DependencyFactory.prototype.createDependency = function(path, relativePath, provides, requires, loadFlags, needsTranspile) {
    if (loadFlags["module"] == goog.ModuleType.GOOG) {
      return new goog.GoogModuleDependency(path, relativePath, provides, requires, loadFlags, needsTranspile, this.transpiler);
    } else if (needsTranspile) {
      return new goog.TranspiledDependency(path, relativePath, provides, requires, loadFlags, this.transpiler);
    } else {
      if (loadFlags["module"] == goog.ModuleType.ES6) {
        if (goog.TRANSPILE == "never" && goog.ASSUME_ES_MODULES_TRANSPILED) {
          return new goog.PreTranspiledEs6ModuleDependency(path, relativePath, provides, requires, loadFlags);
        } else {
          return new goog.Es6ModuleDependency(path, relativePath, provides, requires, loadFlags);
        }
      } else {
        return new goog.Dependency(path, relativePath, provides, requires, loadFlags);
      }
    }
  };
  goog.debugLoader_ = new goog.DebugLoader_();
  goog.loadClosureDeps = function() {
    goog.debugLoader_.loadClosureDeps();
  };
  goog.setDependencyFactory = function(factory) {
    goog.debugLoader_.setDependencyFactory(factory);
  };
  goog.TRUSTED_TYPES_POLICY_ = goog.TRUSTED_TYPES_POLICY_NAME ? goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#base") : null;
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.debugLoader_.loadClosureDeps();
  }
  goog.bootstrap = function(namespaces, callback) {
    goog.debugLoader_.bootstrap(namespaces, callback);
  };
}
if (!COMPILED) {
  var isChrome87 = false;
  try {
    isChrome87 = eval(goog.global.trustedTypes.emptyScript) !== goog.global.trustedTypes.emptyScript;
  } catch (err) {
  }
  goog.CLOSURE_EVAL_PREFILTER_ = goog.global.trustedTypes && isChrome87 && goog.createTrustedTypesPolicy("goog#base#devonly#eval") || {createScript:goog.identity_};
}

var SHADOW_ENV = function() {
  var loadedFiles = {};

  var env = {};

  var doc = goog.global.document;

  if (!doc) {
    throw new Error("browser bootstrap used in incorrect target");
  }

  var scriptBase = goog.global.window.location.origin;
  if (CLOSURE_BASE_PATH[0] == '/') {
    scriptBase = scriptBase + CLOSURE_BASE_PATH;
  } else {
    // FIXME: need to handle relative paths
    scriptBase = CLOSURE_BASE_PATH;
  }


  env.scriptBase = scriptBase;

  var wentAsync = false;

  var canDocumentWrite = function() {
    return !wentAsync && doc.readyState == "loading";
  };

  var reportError = function(path, e) {
    // chrome displays e.stack in a usable way while firefox is just a garbled mess
    if (e.constructor.toString().indexOf("function cljs$core$ExceptionInfo") === 0 && navigator.appVersion.indexOf("Chrome") != -1) {
      console.error(e);
      console.error(e.stack);
    } else {
      console.error(e);
    }
    console.warn("The above error occurred when loading \"" + path + "\". Any additional errors after that one may be the result of that failure. In general your code cannot be trusted to execute properly after such a failure. Make sure to fix the first one before looking at others.");
  };

  var asyncLoad = (function() {
    var loadOrder = [];
    var loadState = {};

    function loadPending() {
      for (var i = 0, len = loadOrder.length; i < len; i++) {
        var uri = loadOrder[i];
        var state = loadState[uri];

        if (typeof state === "string") {
          loadState[uri] = true;
          if (state != "") {
            var code = state + "\n//# sourceURL=" + uri + "\n";
            try {
              goog.globalEval(code);
            } catch (e) {
              reportError(uri, e);
            }
          }
        } else if (state === true) {
          continue;
        } else {
          break;
        }
      }
    }

    // ie11 doesn't have fetch, use xhr instead
    // FIXME: not sure if fetch provides any benefit over xhr
    if (typeof window.fetch === "undefined") {
      return function asyncXhr(uri) {
        loadOrder.push(uri);
        loadState[uri] = false;
        var req = new XMLHttpRequest();
        req.onload = function(e) {
          loadState[uri] = req.responseText;
          loadPending();
        };
        req.open("GET", uri);
        req.send();
      }
    } else {
      function responseText(response) {
        // FIXME: check status
        return response.text();
      }

      function evalFetch(uri) {
        return function(code) {
          loadState[uri] = code;
          loadPending();
        };
      }

      return function asyncFetch(uri) {
        if (loadState[uri] == undefined) {
          loadState[uri] = false;
          loadOrder.push(uri);
          fetch(uri)
            .then(responseText)
            .then(evalFetch(uri));
        }
      };
    }
  })();

  env.load = function(opts, paths) {
    var docWrite = opts.forceAsync ? false : canDocumentWrite();

    paths.forEach(function(path) {
      if (!loadedFiles[path]) {
        loadedFiles[path] = true;

        var uri = scriptBase + path;

        if (docWrite) {
          document.write(
            "<script src='" + uri + "' type='text/javascript'></script>"
          );
        } else {
          // once async always async
          wentAsync = true;
          asyncLoad(uri);
        }
      }
    });
  };

  env.isLoaded = function(path) {
    return loadedFiles[path] || false; // false is better than undefined
  };

  env.setLoaded = function(path) {
    loadedFiles[path] = true;
  };

  env.evalLoad = function(path, sourceMap, code) {
    loadedFiles[path] = true;
    code += ("\n//# sourceURL=" + scriptBase + path);
    if (sourceMap) {
      code += ("\n//# sourceMappingURL=" + path + ".map");
    }
    try {
      goog.globalEval(code);
    } catch (e) {
      reportError(path, e);
    }
  }

  return env;
}.call(this);


goog.global["$CLJS"] = goog.global;



SHADOW_ENV.evalLoad("goog.debug.error.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.debug.Error\x22);\n  goog.module.declareLegacyNamespace();\n  function DebugError(msg \x3d undefined, cause \x3d undefined) {\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, DebugError);\n    } else {\n      const stack \x3d (new Error()).stack;\n      if (stack) {\n        this.stack \x3d stack;\n      }\n    }\n    if (msg) {\n      this.message \x3d String(msg);\n    }\n    if (cause !\x3d\x3d undefined) {\n      this.cause \x3d cause;\n    }\n    this.reportErrorToServer \x3d true;\n  }\n  goog.inherits(DebugError, Error);\n  DebugError.prototype.name \x3d \x22CustomError\x22;\n  exports \x3d DebugError;\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.dom.nodetype.js", true , "goog.provide(\x22goog.dom.NodeType\x22);\ngoog.dom.NodeType \x3d {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};\n");
SHADOW_ENV.evalLoad("goog.asserts.asserts.js", true , "goog.provide(\x22goog.asserts\x22);\ngoog.provide(\x22goog.asserts.AssertionError\x22);\ngoog.require(\x22goog.debug.Error\x22);\ngoog.require(\x22goog.dom.NodeType\x22);\ngoog.asserts.ENABLE_ASSERTS \x3d goog.define(\x22goog.asserts.ENABLE_ASSERTS\x22, goog.DEBUG);\ngoog.asserts.AssertionError \x3d function(messagePattern, messageArgs) {\n  goog.debug.Error.call(this, goog.asserts.subs_(messagePattern, messageArgs));\n  this.messagePattern \x3d messagePattern;\n};\ngoog.inherits(goog.asserts.AssertionError, goog.debug.Error);\ngoog.asserts.AssertionError.prototype.name \x3d \x22AssertionError\x22;\ngoog.asserts.DEFAULT_ERROR_HANDLER \x3d function(e) {\n  throw e;\n};\ngoog.asserts.errorHandler_ \x3d goog.asserts.DEFAULT_ERROR_HANDLER;\ngoog.asserts.subs_ \x3d function(pattern, subs) {\n  var splitParts \x3d pattern.split(\x22%s\x22);\n  var returnString \x3d \x22\x22;\n  var subLast \x3d splitParts.length - 1;\n  for (var i \x3d 0; i \x3c subLast; i++) {\n    var sub \x3d i \x3c subs.length ? subs[i] : \x22%s\x22;\n    returnString +\x3d splitParts[i] + sub;\n  }\n  return returnString + splitParts[subLast];\n};\ngoog.asserts.doAssertFailure_ \x3d function(defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  var message \x3d \x22Assertion failed\x22;\n  if (givenMessage) {\n    message +\x3d \x22: \x22 + givenMessage;\n    var args \x3d givenArgs;\n  } else if (defaultMessage) {\n    message +\x3d \x22: \x22 + defaultMessage;\n    args \x3d defaultArgs;\n  }\n  var e \x3d new goog.asserts.AssertionError(\x22\x22 + message, args || []);\n  goog.asserts.errorHandler_(e);\n};\ngoog.asserts.setErrorHandler \x3d function(errorHandler) {\n  if (goog.asserts.ENABLE_ASSERTS) {\n    goog.asserts.errorHandler_ \x3d errorHandler;\n  }\n};\ngoog.asserts.assert \x3d function(condition, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 !condition) {\n    goog.asserts.doAssertFailure_(\x22\x22, null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\ngoog.asserts.assertExists \x3d function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 value \x3d\x3d null) {\n    goog.asserts.doAssertFailure_(\x22Expected to exist: %s.\x22, [value], opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return value;\n};\ngoog.asserts.fail \x3d function(opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS) {\n    goog.asserts.errorHandler_(new goog.asserts.AssertionError(\x22Failure\x22 + (opt_message ? \x22: \x22 + opt_message : \x22\x22), Array.prototype.slice.call(arguments, 1)));\n  }\n};\ngoog.asserts.assertNumber \x3d function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 typeof value !\x3d\x3d \x22number\x22) {\n    goog.asserts.doAssertFailure_(\x22Expected number but got %s: %s.\x22, [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return value;\n};\ngoog.asserts.assertString \x3d function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 typeof value !\x3d\x3d \x22string\x22) {\n    goog.asserts.doAssertFailure_(\x22Expected string but got %s: %s.\x22, [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return value;\n};\ngoog.asserts.assertFunction \x3d function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 typeof value !\x3d\x3d \x22function\x22) {\n    goog.asserts.doAssertFailure_(\x22Expected function but got %s: %s.\x22, [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return value;\n};\ngoog.asserts.assertObject \x3d function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 !goog.isObject(value)) {\n    goog.asserts.doAssertFailure_(\x22Expected object but got %s: %s.\x22, [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return value;\n};\ngoog.asserts.assertArray \x3d function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 !Array.isArray(value)) {\n    goog.asserts.doAssertFailure_(\x22Expected array but got %s: %s.\x22, [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return value;\n};\ngoog.asserts.assertBoolean \x3d function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 typeof value !\x3d\x3d \x22boolean\x22) {\n    goog.asserts.doAssertFailure_(\x22Expected boolean but got %s: %s.\x22, [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return value;\n};\ngoog.asserts.assertElement \x3d function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 (!goog.isObject(value) || value.nodeType !\x3d goog.dom.NodeType.ELEMENT)) {\n    goog.asserts.doAssertFailure_(\x22Expected Element but got %s: %s.\x22, [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return value;\n};\ngoog.asserts.assertInstanceof \x3d function(value, type, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 !(value instanceof type)) {\n    goog.asserts.doAssertFailure_(\x22Expected instanceof %s but got %s.\x22, [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\ngoog.asserts.assertFinite \x3d function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 (typeof value !\x3d \x22number\x22 || !isFinite(value))) {\n    goog.asserts.doAssertFailure_(\x22Expected %s to be a finite number but it is not.\x22, [value], opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return value;\n};\ngoog.asserts.getType_ \x3d function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || \x22unknown type name\x22;\n  } else if (value instanceof Object) {\n    return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);\n  } else {\n    return value \x3d\x3d\x3d null ? \x22null\x22 : typeof value;\n  }\n};\n");
SHADOW_ENV.evalLoad("goog.reflect.reflect.js", true , "goog.provide(\x22goog.reflect\x22);\ngoog.reflect.object \x3d function(type, object) {\n  return object;\n};\ngoog.reflect.objectProperty \x3d function(prop, object) {\n  return prop;\n};\ngoog.reflect.sinkValue \x3d function(x) {\n  goog.reflect.sinkValue[\x22 \x22](x);\n  return x;\n};\ngoog.reflect.sinkValue[\x22 \x22] \x3d goog.nullFunction;\ngoog.reflect.canAccessProperty \x3d function(obj, prop) {\n  try {\n    goog.reflect.sinkValue(obj[prop]);\n    return true;\n  } catch (e) {\n  }\n  return false;\n};\ngoog.reflect.cache \x3d function(cacheObj, key, valueFn, opt_keyFn) {\n  const storedKey \x3d opt_keyFn ? opt_keyFn(key) : key;\n  if (Object.prototype.hasOwnProperty.call(cacheObj, storedKey)) {\n    return cacheObj[storedKey];\n  }\n  return cacheObj[storedKey] \x3d valueFn(key);\n};\n");
SHADOW_ENV.evalLoad("goog.math.long.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.math.Long\x22);\n  goog.module.declareLegacyNamespace();\n  const asserts \x3d goog.require(\x22goog.asserts\x22);\n  const reflect \x3d goog.require(\x22goog.reflect\x22);\n  class Long {\n    constructor(low, high) {\n      this.low_ \x3d low | 0;\n      this.high_ \x3d high | 0;\n    }\n    toInt() {\n      return this.low_;\n    }\n    toNumber() {\n      return this.high_ * TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();\n    }\n    isSafeInteger() {\n      var top11Bits \x3d this.high_ \x3e\x3e 21;\n      return top11Bits \x3d\x3d 0 || top11Bits \x3d\x3d -1 \x26\x26 !(this.low_ \x3d\x3d 0 \x26\x26 this.high_ \x3d\x3d (4292870144 | 0));\n    }\n    toString(opt_radix) {\n      var radix \x3d opt_radix || 10;\n      if (radix \x3c 2 || 36 \x3c radix) {\n        throw new Error(\x22radix out of range: \x22 + radix);\n      }\n      if (this.isSafeInteger()) {\n        var asNumber \x3d this.toNumber();\n        return radix \x3d\x3d 10 ? \x22\x22 + asNumber : asNumber.toString(radix);\n      }\n      var safeDigits \x3d 14 - (radix \x3e\x3e 2);\n      var radixPowSafeDigits \x3d Math.pow(radix, safeDigits);\n      var radixToPower \x3d Long.fromBits(radixPowSafeDigits, radixPowSafeDigits / TWO_PWR_32_DBL_);\n      var remDiv \x3d this.div(radixToPower);\n      var val \x3d Math.abs(this.subtract(remDiv.multiply(radixToPower)).toNumber());\n      var digits \x3d radix \x3d\x3d 10 ? \x22\x22 + val : val.toString(radix);\n      if (digits.length \x3c safeDigits) {\n        digits \x3d \x220000000000000\x22.substr(digits.length - safeDigits) + digits;\n      }\n      val \x3d remDiv.toNumber();\n      return (radix \x3d\x3d 10 ? val : val.toString(radix)) + digits;\n    }\n    getHighBits() {\n      return this.high_;\n    }\n    getLowBits() {\n      return this.low_;\n    }\n    getLowBitsUnsigned() {\n      return this.low_ \x3e\x3e\x3e 0;\n    }\n    getNumBitsAbs() {\n      if (this.isNegative()) {\n        if (this.equals(Long.getMinValue())) {\n          return 64;\n        } else {\n          return this.negate().getNumBitsAbs();\n        }\n      } else {\n        var val \x3d this.high_ !\x3d 0 ? this.high_ : this.low_;\n        for (var bit \x3d 31; bit \x3e 0; bit--) {\n          if ((val \x26 1 \x3c\x3c bit) !\x3d 0) {\n            break;\n          }\n        }\n        return this.high_ !\x3d 0 ? bit + 33 : bit + 1;\n      }\n    }\n    isZero() {\n      return this.low_ \x3d\x3d 0 \x26\x26 this.high_ \x3d\x3d 0;\n    }\n    isNegative() {\n      return this.high_ \x3c 0;\n    }\n    isOdd() {\n      return (this.low_ \x26 1) \x3d\x3d 1;\n    }\n    hashCode() {\n      return this.getLowBits() ^ this.getHighBits();\n    }\n    equals(other) {\n      return this.low_ \x3d\x3d other.low_ \x26\x26 this.high_ \x3d\x3d other.high_;\n    }\n    notEquals(other) {\n      return !this.equals(other);\n    }\n    lessThan(other) {\n      return this.compare(other) \x3c 0;\n    }\n    lessThanOrEqual(other) {\n      return this.compare(other) \x3c\x3d 0;\n    }\n    greaterThan(other) {\n      return this.compare(other) \x3e 0;\n    }\n    greaterThanOrEqual(other) {\n      return this.compare(other) \x3e\x3d 0;\n    }\n    compare(other) {\n      if (this.high_ \x3d\x3d other.high_) {\n        if (this.low_ \x3d\x3d other.low_) {\n          return 0;\n        }\n        return this.getLowBitsUnsigned() \x3e other.getLowBitsUnsigned() ? 1 : -1;\n      }\n      return this.high_ \x3e other.high_ ? 1 : -1;\n    }\n    negate() {\n      var negLow \x3d ~this.low_ + 1 | 0;\n      var overflowFromLow \x3d !negLow;\n      var negHigh \x3d ~this.high_ + overflowFromLow | 0;\n      return Long.fromBits(negLow, negHigh);\n    }\n    add(other) {\n      var a48 \x3d this.high_ \x3e\x3e\x3e 16;\n      var a32 \x3d this.high_ \x26 65535;\n      var a16 \x3d this.low_ \x3e\x3e\x3e 16;\n      var a00 \x3d this.low_ \x26 65535;\n      var b48 \x3d other.high_ \x3e\x3e\x3e 16;\n      var b32 \x3d other.high_ \x26 65535;\n      var b16 \x3d other.low_ \x3e\x3e\x3e 16;\n      var b00 \x3d other.low_ \x26 65535;\n      var c48 \x3d 0, c32 \x3d 0, c16 \x3d 0, c00 \x3d 0;\n      c00 +\x3d a00 + b00;\n      c16 +\x3d c00 \x3e\x3e\x3e 16;\n      c00 \x26\x3d 65535;\n      c16 +\x3d a16 + b16;\n      c32 +\x3d c16 \x3e\x3e\x3e 16;\n      c16 \x26\x3d 65535;\n      c32 +\x3d a32 + b32;\n      c48 +\x3d c32 \x3e\x3e\x3e 16;\n      c32 \x26\x3d 65535;\n      c48 +\x3d a48 + b48;\n      c48 \x26\x3d 65535;\n      return Long.fromBits(c16 \x3c\x3c 16 | c00, c48 \x3c\x3c 16 | c32);\n    }\n    subtract(other) {\n      return this.add(other.negate());\n    }\n    multiply(other) {\n      if (this.isZero()) {\n        return this;\n      }\n      if (other.isZero()) {\n        return other;\n      }\n      var a48 \x3d this.high_ \x3e\x3e\x3e 16;\n      var a32 \x3d this.high_ \x26 65535;\n      var a16 \x3d this.low_ \x3e\x3e\x3e 16;\n      var a00 \x3d this.low_ \x26 65535;\n      var b48 \x3d other.high_ \x3e\x3e\x3e 16;\n      var b32 \x3d other.high_ \x26 65535;\n      var b16 \x3d other.low_ \x3e\x3e\x3e 16;\n      var b00 \x3d other.low_ \x26 65535;\n      var c48 \x3d 0, c32 \x3d 0, c16 \x3d 0, c00 \x3d 0;\n      c00 +\x3d a00 * b00;\n      c16 +\x3d c00 \x3e\x3e\x3e 16;\n      c00 \x26\x3d 65535;\n      c16 +\x3d a16 * b00;\n      c32 +\x3d c16 \x3e\x3e\x3e 16;\n      c16 \x26\x3d 65535;\n      c16 +\x3d a00 * b16;\n      c32 +\x3d c16 \x3e\x3e\x3e 16;\n      c16 \x26\x3d 65535;\n      c32 +\x3d a32 * b00;\n      c48 +\x3d c32 \x3e\x3e\x3e 16;\n      c32 \x26\x3d 65535;\n      c32 +\x3d a16 * b16;\n      c48 +\x3d c32 \x3e\x3e\x3e 16;\n      c32 \x26\x3d 65535;\n      c32 +\x3d a00 * b32;\n      c48 +\x3d c32 \x3e\x3e\x3e 16;\n      c32 \x26\x3d 65535;\n      c48 +\x3d a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n      c48 \x26\x3d 65535;\n      return Long.fromBits(c16 \x3c\x3c 16 | c00, c48 \x3c\x3c 16 | c32);\n    }\n    div(other) {\n      if (other.isZero()) {\n        throw new Error(\x22division by zero\x22);\n      }\n      if (this.isNegative()) {\n        if (this.equals(Long.getMinValue())) {\n          if (other.equals(Long.getOne()) || other.equals(Long.getNegOne())) {\n            return Long.getMinValue();\n          }\n          if (other.equals(Long.getMinValue())) {\n            return Long.getOne();\n          }\n          var halfThis \x3d this.shiftRight(1);\n          var approx \x3d halfThis.div(other).shiftLeft(1);\n          if (approx.equals(Long.getZero())) {\n            return other.isNegative() ? Long.getOne() : Long.getNegOne();\n          }\n          var rem \x3d this.subtract(other.multiply(approx));\n          var result \x3d approx.add(rem.div(other));\n          return result;\n        }\n        if (other.isNegative()) {\n          return this.negate().div(other.negate());\n        }\n        return this.negate().div(other).negate();\n      }\n      if (this.isZero()) {\n        return Long.getZero();\n      }\n      if (other.isNegative()) {\n        if (other.equals(Long.getMinValue())) {\n          return Long.getZero();\n        }\n        return this.div(other.negate()).negate();\n      }\n      var res \x3d Long.getZero();\n      var rem \x3d this;\n      while (rem.greaterThanOrEqual(other)) {\n        var approx \x3d Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n        var log2 \x3d Math.ceil(Math.log(approx) / Math.LN2);\n        var delta \x3d log2 \x3c\x3d 48 ? 1 : Math.pow(2, log2 - 48);\n        var approxRes \x3d Long.fromNumber(approx);\n        var approxRem \x3d approxRes.multiply(other);\n        while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n          approx -\x3d delta;\n          approxRes \x3d Long.fromNumber(approx);\n          approxRem \x3d approxRes.multiply(other);\n        }\n        if (approxRes.isZero()) {\n          approxRes \x3d Long.getOne();\n        }\n        res \x3d res.add(approxRes);\n        rem \x3d rem.subtract(approxRem);\n      }\n      return res;\n    }\n    modulo(other) {\n      return this.subtract(this.div(other).multiply(other));\n    }\n    not() {\n      return Long.fromBits(~this.low_, ~this.high_);\n    }\n    and(other) {\n      return Long.fromBits(this.low_ \x26 other.low_, this.high_ \x26 other.high_);\n    }\n    or(other) {\n      return Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);\n    }\n    xor(other) {\n      return Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);\n    }\n    shiftLeft(numBits) {\n      numBits \x26\x3d 63;\n      if (numBits \x3d\x3d 0) {\n        return this;\n      } else {\n        var low \x3d this.low_;\n        if (numBits \x3c 32) {\n          var high \x3d this.high_;\n          return Long.fromBits(low \x3c\x3c numBits, high \x3c\x3c numBits | low \x3e\x3e\x3e 32 - numBits);\n        } else {\n          return Long.fromBits(0, low \x3c\x3c numBits - 32);\n        }\n      }\n    }\n    shiftRight(numBits) {\n      numBits \x26\x3d 63;\n      if (numBits \x3d\x3d 0) {\n        return this;\n      } else {\n        var high \x3d this.high_;\n        if (numBits \x3c 32) {\n          var low \x3d this.low_;\n          return Long.fromBits(low \x3e\x3e\x3e numBits | high \x3c\x3c 32 - numBits, high \x3e\x3e numBits);\n        } else {\n          return Long.fromBits(high \x3e\x3e numBits - 32, high \x3e\x3d 0 ? 0 : -1);\n        }\n      }\n    }\n    shiftRightUnsigned(numBits) {\n      numBits \x26\x3d 63;\n      if (numBits \x3d\x3d 0) {\n        return this;\n      } else {\n        var high \x3d this.high_;\n        if (numBits \x3c 32) {\n          var low \x3d this.low_;\n          return Long.fromBits(low \x3e\x3e\x3e numBits | high \x3c\x3c 32 - numBits, high \x3e\x3e\x3e numBits);\n        } else if (numBits \x3d\x3d 32) {\n          return Long.fromBits(high, 0);\n        } else {\n          return Long.fromBits(high \x3e\x3e\x3e numBits - 32, 0);\n        }\n      }\n    }\n    static fromInt(value) {\n      var intValue \x3d value | 0;\n      asserts.assert(value \x3d\x3d\x3d intValue, \x22value should be a 32-bit integer\x22);\n      if (-128 \x3c\x3d intValue \x26\x26 intValue \x3c 128) {\n        return getCachedIntValue_(intValue);\n      } else {\n        return new Long(intValue, intValue \x3c 0 ? -1 : 0);\n      }\n    }\n    static fromNumber(value) {\n      if (value \x3e 0) {\n        if (value \x3e\x3d TWO_PWR_63_DBL_) {\n          return Long.getMaxValue();\n        }\n        return new Long(value, value / TWO_PWR_32_DBL_);\n      } else if (value \x3c 0) {\n        if (value \x3c\x3d -TWO_PWR_63_DBL_) {\n          return Long.getMinValue();\n        }\n        return (new Long(-value, -value / TWO_PWR_32_DBL_)).negate();\n      } else {\n        return Long.getZero();\n      }\n    }\n    static fromBits(lowBits, highBits) {\n      return new Long(lowBits, highBits);\n    }\n    static fromString(str, opt_radix) {\n      if (str.charAt(0) \x3d\x3d \x22-\x22) {\n        return Long.fromString(str.substring(1), opt_radix).negate();\n      }\n      var numberValue \x3d parseInt(str, opt_radix || 10);\n      if (numberValue \x3c\x3d MAX_SAFE_INTEGER_) {\n        return new Long(numberValue % TWO_PWR_32_DBL_ | 0, numberValue / TWO_PWR_32_DBL_ | 0);\n      }\n      if (str.length \x3d\x3d 0) {\n        throw new Error(\x22number format error: empty string\x22);\n      }\n      if (str.indexOf(\x22-\x22) \x3e\x3d 0) {\n        throw new Error(\x27number format error: interior \x22-\x22 character: \x27 + str);\n      }\n      var radix \x3d opt_radix || 10;\n      if (radix \x3c 2 || 36 \x3c radix) {\n        throw new Error(\x22radix out of range: \x22 + radix);\n      }\n      var radixToPower \x3d Long.fromNumber(Math.pow(radix, 8));\n      var result \x3d Long.getZero();\n      for (var i \x3d 0; i \x3c str.length; i +\x3d 8) {\n        var size \x3d Math.min(8, str.length - i);\n        var value \x3d parseInt(str.substring(i, i + size), radix);\n        if (size \x3c 8) {\n          var power \x3d Long.fromNumber(Math.pow(radix, size));\n          result \x3d result.multiply(power).add(Long.fromNumber(value));\n        } else {\n          result \x3d result.multiply(radixToPower);\n          result \x3d result.add(Long.fromNumber(value));\n        }\n      }\n      return result;\n    }\n    static isStringInRange(str, opt_radix) {\n      var radix \x3d opt_radix || 10;\n      if (radix \x3c 2 || 36 \x3c radix) {\n        throw new Error(\x22radix out of range: \x22 + radix);\n      }\n      var extremeValue \x3d str.charAt(0) \x3d\x3d \x22-\x22 ? MIN_VALUE_FOR_RADIX_[radix] : MAX_VALUE_FOR_RADIX_[radix];\n      if (str.length \x3c extremeValue.length) {\n        return true;\n      } else if (str.length \x3d\x3d extremeValue.length \x26\x26 str \x3c\x3d extremeValue) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    static getZero() {\n      return ZERO_;\n    }\n    static getOne() {\n      return ONE_;\n    }\n    static getNegOne() {\n      return NEG_ONE_;\n    }\n    static getMaxValue() {\n      return MAX_VALUE_;\n    }\n    static getMinValue() {\n      return MIN_VALUE_;\n    }\n    static getTwoPwr24() {\n      return TWO_PWR_24_;\n    }\n  }\n  exports \x3d Long;\n  const IntCache_ \x3d {};\n  function getCachedIntValue_(value) {\n    return reflect.cache(IntCache_, value, function(val) {\n      return new Long(val, val \x3c 0 ? -1 : 0);\n    });\n  }\n  const MAX_VALUE_FOR_RADIX_ \x3d [\x22\x22, \x22\x22, \x22111111111111111111111111111111111111111111111111111111111111111\x22, \x222021110011022210012102010021220101220221\x22, \x2213333333333333333333333333333333\x22, \x221104332401304422434310311212\x22, \x221540241003031030222122211\x22, \x2222341010611245052052300\x22, \x22777777777777777777777\x22, \x2267404283172107811827\x22, \x229223372036854775807\x22, \x221728002635214590697\x22, \x2241a792678515120367\x22, \x2210b269549075433c37\x22, \x224340724c6c71dc7a7\x22, \x22160e2ad3246366807\x22, \x227fffffffffffffff\x22, \x2233d3d8307b214008\x22, \x2216agh595df825fa7\x22, \n  \x22ba643dci0ffeehh\x22, \x225cbfjia3fh26ja7\x22, \x222heiciiie82dh97\x22, \x221adaibb21dckfa7\x22, \x22i6k448cf4192c2\x22, \x22acd772jnc9l0l7\x22, \x2264ie1focnn5g77\x22, \x223igoecjbmca687\x22, \x2227c48l5b37oaop\x22, \x221bk39f3ah3dmq7\x22, \x22q1se8f0m04isb\x22, \x22hajppbc1fc207\x22, \x22bm03i95hia437\x22, \x227vvvvvvvvvvvv\x22, \x225hg4ck9jd4u37\x22, \x223tdtk1v8j6tpp\x22, \x222pijmikexrxp7\x22, \x221y2p0ij32e8e7\x22];\n  const MIN_VALUE_FOR_RADIX_ \x3d [\x22\x22, \x22\x22, \x22-1000000000000000000000000000000000000000000000000000000000000000\x22, \x22-2021110011022210012102010021220101220222\x22, \x22-20000000000000000000000000000000\x22, \x22-1104332401304422434310311213\x22, \x22-1540241003031030222122212\x22, \x22-22341010611245052052301\x22, \x22-1000000000000000000000\x22, \x22-67404283172107811828\x22, \x22-9223372036854775808\x22, \x22-1728002635214590698\x22, \x22-41a792678515120368\x22, \x22-10b269549075433c38\x22, \x22-4340724c6c71dc7a8\x22, \x22-160e2ad3246366808\x22, \x22-8000000000000000\x22, \x22-33d3d8307b214009\x22, \n  \x22-16agh595df825fa8\x22, \x22-ba643dci0ffeehi\x22, \x22-5cbfjia3fh26ja8\x22, \x22-2heiciiie82dh98\x22, \x22-1adaibb21dckfa8\x22, \x22-i6k448cf4192c3\x22, \x22-acd772jnc9l0l8\x22, \x22-64ie1focnn5g78\x22, \x22-3igoecjbmca688\x22, \x22-27c48l5b37oaoq\x22, \x22-1bk39f3ah3dmq8\x22, \x22-q1se8f0m04isc\x22, \x22-hajppbc1fc208\x22, \x22-bm03i95hia438\x22, \x22-8000000000000\x22, \x22-5hg4ck9jd4u38\x22, \x22-3tdtk1v8j6tpq\x22, \x22-2pijmikexrxp8\x22, \x22-1y2p0ij32e8e8\x22];\n  const MAX_SAFE_INTEGER_ \x3d 9007199254740991;\n  const TWO_PWR_32_DBL_ \x3d 4294967296;\n  const TWO_PWR_63_DBL_ \x3d 0x7fffffffffffffff;\n  const ZERO_ \x3d Long.fromBits(0, 0);\n  const ONE_ \x3d Long.fromBits(1, 0);\n  const NEG_ONE_ \x3d Long.fromBits(-1, -1);\n  const MAX_VALUE_ \x3d Long.fromBits(4294967295, 2147483647);\n  const MIN_VALUE_ \x3d Long.fromBits(0, 2147483648);\n  const TWO_PWR_24_ \x3d Long.fromBits(1 \x3c\x3c 24, 0);\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.math.integer.js", true , "goog.provide(\x22goog.math.Integer\x22);\ngoog.require(\x22goog.reflect\x22);\ngoog.math.Integer \x3d function(bits, sign) {\n  this.sign_ \x3d sign;\n  var localBits \x3d [];\n  var top \x3d true;\n  for (var i \x3d bits.length - 1; i \x3e\x3d 0; i--) {\n    var val \x3d bits[i] | 0;\n    if (!top || val !\x3d sign) {\n      localBits[i] \x3d val;\n      top \x3d false;\n    }\n  }\n  this.bits_ \x3d localBits;\n};\ngoog.math.Integer.IntCache_ \x3d {};\ngoog.math.Integer.fromInt \x3d function(value) {\n  if (-128 \x3c\x3d value \x26\x26 value \x3c 128) {\n    return goog.reflect.cache(goog.math.Integer.IntCache_, value, function(val) {\n      return new goog.math.Integer([val | 0], val \x3c 0 ? -1 : 0);\n    });\n  }\n  return new goog.math.Integer([value | 0], value \x3c 0 ? -1 : 0);\n};\ngoog.math.Integer.fromNumber \x3d function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return goog.math.Integer.ZERO;\n  } else if (value \x3c 0) {\n    return goog.math.Integer.fromNumber(-value).negate();\n  } else {\n    var bits \x3d [];\n    var pow \x3d 1;\n    for (var i \x3d 0; value \x3e\x3d pow; i++) {\n      bits[i] \x3d value / pow | 0;\n      pow *\x3d goog.math.Integer.TWO_PWR_32_DBL_;\n    }\n    return new goog.math.Integer(bits, 0);\n  }\n};\ngoog.math.Integer.fromBits \x3d function(bits) {\n  var high \x3d bits[bits.length - 1];\n  return new goog.math.Integer(bits, high \x26 1 \x3c\x3c 31 ? -1 : 0);\n};\ngoog.math.Integer.fromString \x3d function(str, opt_radix) {\n  if (str.length \x3d\x3d 0) {\n    throw new Error(\x22number format error: empty string\x22);\n  }\n  var radix \x3d opt_radix || 10;\n  if (radix \x3c 2 || 36 \x3c radix) {\n    throw new Error(\x22radix out of range: \x22 + radix);\n  }\n  if (str.charAt(0) \x3d\x3d \x22-\x22) {\n    return goog.math.Integer.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf(\x22-\x22) \x3e\x3d 0) {\n    throw new Error(\x27number format error: interior \x22-\x22 character\x27);\n  }\n  var radixToPower \x3d goog.math.Integer.fromNumber(Math.pow(radix, 8));\n  var result \x3d goog.math.Integer.ZERO;\n  for (var i \x3d 0; i \x3c str.length; i +\x3d 8) {\n    var size \x3d Math.min(8, str.length - i);\n    var value \x3d parseInt(str.substring(i, i + size), radix);\n    if (size \x3c 8) {\n      var power \x3d goog.math.Integer.fromNumber(Math.pow(radix, size));\n      result \x3d result.multiply(power).add(goog.math.Integer.fromNumber(value));\n    } else {\n      result \x3d result.multiply(radixToPower);\n      result \x3d result.add(goog.math.Integer.fromNumber(value));\n    }\n  }\n  return result;\n};\ngoog.math.Integer.TWO_PWR_32_DBL_ \x3d (1 \x3c\x3c 16) * (1 \x3c\x3c 16);\ngoog.math.Integer.ZERO \x3d goog.math.Integer.fromInt(0);\ngoog.math.Integer.ONE \x3d goog.math.Integer.fromInt(1);\ngoog.math.Integer.TWO_PWR_24_ \x3d goog.math.Integer.fromInt(1 \x3c\x3c 24);\ngoog.math.Integer.prototype.toInt \x3d function() {\n  return this.bits_.length \x3e 0 ? this.bits_[0] : this.sign_;\n};\ngoog.math.Integer.prototype.toNumber \x3d function() {\n  if (this.isNegative()) {\n    return -this.negate().toNumber();\n  } else {\n    var val \x3d 0;\n    var pow \x3d 1;\n    for (var i \x3d 0; i \x3c this.bits_.length; i++) {\n      val +\x3d this.getBitsUnsigned(i) * pow;\n      pow *\x3d goog.math.Integer.TWO_PWR_32_DBL_;\n    }\n    return val;\n  }\n};\ngoog.math.Integer.prototype.toString \x3d function(opt_radix) {\n  var radix \x3d opt_radix || 10;\n  if (radix \x3c 2 || 36 \x3c radix) {\n    throw new Error(\x22radix out of range: \x22 + radix);\n  }\n  if (this.isZero()) {\n    return \x220\x22;\n  } else if (this.isNegative()) {\n    return \x22-\x22 + this.negate().toString(radix);\n  }\n  var radixToPower \x3d goog.math.Integer.fromNumber(Math.pow(radix, 6));\n  var rem \x3d this;\n  var result \x3d \x22\x22;\n  while (true) {\n    var remDiv \x3d rem.divide(radixToPower);\n    var intval \x3d rem.subtract(remDiv.multiply(radixToPower)).toInt() \x3e\x3e\x3e 0;\n    var digits \x3d intval.toString(radix);\n    rem \x3d remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length \x3c 6) {\n        digits \x3d \x220\x22 + digits;\n      }\n      result \x3d \x22\x22 + digits + result;\n    }\n  }\n};\ngoog.math.Integer.prototype.getBits \x3d function(index) {\n  if (index \x3c 0) {\n    return 0;\n  } else if (index \x3c this.bits_.length) {\n    return this.bits_[index];\n  } else {\n    return this.sign_;\n  }\n};\ngoog.math.Integer.prototype.getBitsUnsigned \x3d function(index) {\n  var val \x3d this.getBits(index);\n  return val \x3e\x3d 0 ? val : goog.math.Integer.TWO_PWR_32_DBL_ + val;\n};\ngoog.math.Integer.prototype.getSign \x3d function() {\n  return this.sign_;\n};\ngoog.math.Integer.prototype.isZero \x3d function() {\n  if (this.sign_ !\x3d 0) {\n    return false;\n  }\n  for (var i \x3d 0; i \x3c this.bits_.length; i++) {\n    if (this.bits_[i] !\x3d 0) {\n      return false;\n    }\n  }\n  return true;\n};\ngoog.math.Integer.prototype.isNegative \x3d function() {\n  return this.sign_ \x3d\x3d -1;\n};\ngoog.math.Integer.prototype.isOdd \x3d function() {\n  return this.bits_.length \x3d\x3d 0 \x26\x26 this.sign_ \x3d\x3d -1 || this.bits_.length \x3e 0 \x26\x26 (this.bits_[0] \x26 1) !\x3d 0;\n};\ngoog.math.Integer.prototype.equals \x3d function(other) {\n  if (this.sign_ !\x3d other.sign_) {\n    return false;\n  }\n  var len \x3d Math.max(this.bits_.length, other.bits_.length);\n  for (var i \x3d 0; i \x3c len; i++) {\n    if (this.getBits(i) !\x3d other.getBits(i)) {\n      return false;\n    }\n  }\n  return true;\n};\ngoog.math.Integer.prototype.notEquals \x3d function(other) {\n  return !this.equals(other);\n};\ngoog.math.Integer.prototype.greaterThan \x3d function(other) {\n  return this.compare(other) \x3e 0;\n};\ngoog.math.Integer.prototype.greaterThanOrEqual \x3d function(other) {\n  return this.compare(other) \x3e\x3d 0;\n};\ngoog.math.Integer.prototype.lessThan \x3d function(other) {\n  return this.compare(other) \x3c 0;\n};\ngoog.math.Integer.prototype.lessThanOrEqual \x3d function(other) {\n  return this.compare(other) \x3c\x3d 0;\n};\ngoog.math.Integer.prototype.compare \x3d function(other) {\n  var diff \x3d this.subtract(other);\n  if (diff.isNegative()) {\n    return -1;\n  } else if (diff.isZero()) {\n    return 0;\n  } else {\n    return +1;\n  }\n};\ngoog.math.Integer.prototype.shorten \x3d function(numBits) {\n  var arr_index \x3d numBits - 1 \x3e\x3e 5;\n  var bit_index \x3d (numBits - 1) % 32;\n  var bits \x3d [];\n  for (var i \x3d 0; i \x3c arr_index; i++) {\n    bits[i] \x3d this.getBits(i);\n  }\n  var sigBits \x3d bit_index \x3d\x3d 31 ? 4294967295 : (1 \x3c\x3c bit_index + 1) - 1;\n  var val \x3d this.getBits(arr_index) \x26 sigBits;\n  if (val \x26 1 \x3c\x3c bit_index) {\n    val |\x3d 4294967295 - sigBits;\n    bits[arr_index] \x3d val;\n    return new goog.math.Integer(bits, -1);\n  } else {\n    bits[arr_index] \x3d val;\n    return new goog.math.Integer(bits, 0);\n  }\n};\ngoog.math.Integer.prototype.negate \x3d function() {\n  return this.not().add(goog.math.Integer.ONE);\n};\ngoog.math.Integer.prototype.abs \x3d function() {\n  return this.isNegative() ? this.negate() : this;\n};\ngoog.math.Integer.prototype.add \x3d function(other) {\n  var len \x3d Math.max(this.bits_.length, other.bits_.length);\n  var arr \x3d [];\n  var carry \x3d 0;\n  for (var i \x3d 0; i \x3c\x3d len; i++) {\n    var a1 \x3d this.getBits(i) \x3e\x3e\x3e 16;\n    var a0 \x3d this.getBits(i) \x26 65535;\n    var b1 \x3d other.getBits(i) \x3e\x3e\x3e 16;\n    var b0 \x3d other.getBits(i) \x26 65535;\n    var c0 \x3d carry + a0 + b0;\n    var c1 \x3d (c0 \x3e\x3e\x3e 16) + a1 + b1;\n    carry \x3d c1 \x3e\x3e\x3e 16;\n    c0 \x26\x3d 65535;\n    c1 \x26\x3d 65535;\n    arr[i] \x3d c1 \x3c\x3c 16 | c0;\n  }\n  return goog.math.Integer.fromBits(arr);\n};\ngoog.math.Integer.prototype.subtract \x3d function(other) {\n  return this.add(other.negate());\n};\ngoog.math.Integer.prototype.multiply \x3d function(other) {\n  if (this.isZero()) {\n    return goog.math.Integer.ZERO;\n  } else if (other.isZero()) {\n    return goog.math.Integer.ZERO;\n  }\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate().multiply(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n  if (this.lessThan(goog.math.Integer.TWO_PWR_24_) \x26\x26 other.lessThan(goog.math.Integer.TWO_PWR_24_)) {\n    return goog.math.Integer.fromNumber(this.toNumber() * other.toNumber());\n  }\n  var len \x3d this.bits_.length + other.bits_.length;\n  var arr \x3d [];\n  for (var i \x3d 0; i \x3c 2 * len; i++) {\n    arr[i] \x3d 0;\n  }\n  for (var i \x3d 0; i \x3c this.bits_.length; i++) {\n    for (var j \x3d 0; j \x3c other.bits_.length; j++) {\n      var a1 \x3d this.getBits(i) \x3e\x3e\x3e 16;\n      var a0 \x3d this.getBits(i) \x26 65535;\n      var b1 \x3d other.getBits(j) \x3e\x3e\x3e 16;\n      var b0 \x3d other.getBits(j) \x26 65535;\n      arr[2 * i + 2 * j] +\x3d a0 * b0;\n      goog.math.Integer.carry16_(arr, 2 * i + 2 * j);\n      arr[2 * i + 2 * j + 1] +\x3d a1 * b0;\n      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);\n      arr[2 * i + 2 * j + 1] +\x3d a0 * b1;\n      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);\n      arr[2 * i + 2 * j + 2] +\x3d a1 * b1;\n      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 2);\n    }\n  }\n  for (var i \x3d 0; i \x3c len; i++) {\n    arr[i] \x3d arr[2 * i + 1] \x3c\x3c 16 | arr[2 * i];\n  }\n  for (var i \x3d len; i \x3c 2 * len; i++) {\n    arr[i] \x3d 0;\n  }\n  return new goog.math.Integer(arr, 0);\n};\ngoog.math.Integer.carry16_ \x3d function(bits, index) {\n  while ((bits[index] \x26 65535) !\x3d bits[index]) {\n    bits[index + 1] +\x3d bits[index] \x3e\x3e\x3e 16;\n    bits[index] \x26\x3d 65535;\n    index++;\n  }\n};\ngoog.math.Integer.prototype.slowDivide_ \x3d function(other) {\n  if (this.isNegative() || other.isNegative()) {\n    throw new Error(\x22slowDivide_ only works with positive integers.\x22);\n  }\n  var twoPower \x3d goog.math.Integer.ONE;\n  var multiple \x3d other;\n  while (multiple.lessThanOrEqual(this)) {\n    twoPower \x3d twoPower.shiftLeft(1);\n    multiple \x3d multiple.shiftLeft(1);\n  }\n  var res \x3d twoPower.shiftRight(1);\n  var total \x3d multiple.shiftRight(1);\n  var total2;\n  multiple \x3d multiple.shiftRight(2);\n  twoPower \x3d twoPower.shiftRight(2);\n  while (!multiple.isZero()) {\n    total2 \x3d total.add(multiple);\n    if (total2.lessThanOrEqual(this)) {\n      res \x3d res.add(twoPower);\n      total \x3d total2;\n    }\n    multiple \x3d multiple.shiftRight(1);\n    twoPower \x3d twoPower.shiftRight(1);\n  }\n  var remainder \x3d this.subtract(res.multiply(other));\n  return new goog.math.Integer.DivisionResult(res, remainder);\n};\ngoog.math.Integer.prototype.divide \x3d function(other) {\n  return this.divideAndRemainder(other).quotient;\n};\ngoog.math.Integer.DivisionResult \x3d function(quotient, remainder) {\n  this.quotient \x3d quotient;\n  this.remainder \x3d remainder;\n};\ngoog.math.Integer.prototype.divideAndRemainder \x3d function(other) {\n  if (other.isZero()) {\n    throw new Error(\x22division by zero\x22);\n  } else if (this.isZero()) {\n    return new goog.math.Integer.DivisionResult(goog.math.Integer.ZERO, goog.math.Integer.ZERO);\n  }\n  if (this.isNegative()) {\n    var result \x3d this.negate().divideAndRemainder(other);\n    return new goog.math.Integer.DivisionResult(result.quotient.negate(), result.remainder.negate());\n  } else if (other.isNegative()) {\n    var result \x3d this.divideAndRemainder(other.negate());\n    return new goog.math.Integer.DivisionResult(result.quotient.negate(), result.remainder);\n  }\n  if (this.bits_.length \x3e 30) {\n    return this.slowDivide_(other);\n  }\n  var res \x3d goog.math.Integer.ZERO;\n  var rem \x3d this;\n  while (rem.greaterThanOrEqual(other)) {\n    var approx \x3d Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n    var log2 \x3d Math.ceil(Math.log(approx) / Math.LN2);\n    var delta \x3d log2 \x3c\x3d 48 ? 1 : Math.pow(2, log2 - 48);\n    var approxRes \x3d goog.math.Integer.fromNumber(approx);\n    var approxRem \x3d approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -\x3d delta;\n      approxRes \x3d goog.math.Integer.fromNumber(approx);\n      approxRem \x3d approxRes.multiply(other);\n    }\n    if (approxRes.isZero()) {\n      approxRes \x3d goog.math.Integer.ONE;\n    }\n    res \x3d res.add(approxRes);\n    rem \x3d rem.subtract(approxRem);\n  }\n  return new goog.math.Integer.DivisionResult(res, rem);\n};\ngoog.math.Integer.prototype.modulo \x3d function(other) {\n  return this.divideAndRemainder(other).remainder;\n};\ngoog.math.Integer.prototype.not \x3d function() {\n  var len \x3d this.bits_.length;\n  var arr \x3d [];\n  for (var i \x3d 0; i \x3c len; i++) {\n    arr[i] \x3d ~this.bits_[i];\n  }\n  return new goog.math.Integer(arr, ~this.sign_);\n};\ngoog.math.Integer.prototype.and \x3d function(other) {\n  var len \x3d Math.max(this.bits_.length, other.bits_.length);\n  var arr \x3d [];\n  for (var i \x3d 0; i \x3c len; i++) {\n    arr[i] \x3d this.getBits(i) \x26 other.getBits(i);\n  }\n  return new goog.math.Integer(arr, this.sign_ \x26 other.sign_);\n};\ngoog.math.Integer.prototype.or \x3d function(other) {\n  var len \x3d Math.max(this.bits_.length, other.bits_.length);\n  var arr \x3d [];\n  for (var i \x3d 0; i \x3c len; i++) {\n    arr[i] \x3d this.getBits(i) | other.getBits(i);\n  }\n  return new goog.math.Integer(arr, this.sign_ | other.sign_);\n};\ngoog.math.Integer.prototype.xor \x3d function(other) {\n  var len \x3d Math.max(this.bits_.length, other.bits_.length);\n  var arr \x3d [];\n  for (var i \x3d 0; i \x3c len; i++) {\n    arr[i] \x3d this.getBits(i) ^ other.getBits(i);\n  }\n  return new goog.math.Integer(arr, this.sign_ ^ other.sign_);\n};\ngoog.math.Integer.prototype.shiftLeft \x3d function(numBits) {\n  var arr_delta \x3d numBits \x3e\x3e 5;\n  var bit_delta \x3d numBits % 32;\n  var len \x3d this.bits_.length + arr_delta + (bit_delta \x3e 0 ? 1 : 0);\n  var arr \x3d [];\n  for (var i \x3d 0; i \x3c len; i++) {\n    if (bit_delta \x3e 0) {\n      arr[i] \x3d this.getBits(i - arr_delta) \x3c\x3c bit_delta | this.getBits(i - arr_delta - 1) \x3e\x3e\x3e 32 - bit_delta;\n    } else {\n      arr[i] \x3d this.getBits(i - arr_delta);\n    }\n  }\n  return new goog.math.Integer(arr, this.sign_);\n};\ngoog.math.Integer.prototype.shiftRight \x3d function(numBits) {\n  var arr_delta \x3d numBits \x3e\x3e 5;\n  var bit_delta \x3d numBits % 32;\n  var len \x3d this.bits_.length - arr_delta;\n  var arr \x3d [];\n  for (var i \x3d 0; i \x3c len; i++) {\n    if (bit_delta \x3e 0) {\n      arr[i] \x3d this.getBits(i + arr_delta) \x3e\x3e\x3e bit_delta | this.getBits(i + arr_delta + 1) \x3c\x3c 32 - bit_delta;\n    } else {\n      arr[i] \x3d this.getBits(i + arr_delta);\n    }\n  }\n  return new goog.math.Integer(arr, this.sign_);\n};\n");
SHADOW_ENV.evalLoad("goog.dom.asserts.js", true , "goog.provide(\x22goog.dom.asserts\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.dom.asserts.assertIsLocation \x3d function(o) {\n  if (goog.asserts.ENABLE_ASSERTS) {\n    var win \x3d goog.dom.asserts.getWindow_(o);\n    if (win) {\n      if (!o || !(o instanceof win.Location) \x26\x26 o instanceof win.Element) {\n        goog.asserts.fail(\x22Argument is not a Location (or a non-Element mock); got: %s\x22, goog.dom.asserts.debugStringForType_(o));\n      }\n    }\n  }\n  return o;\n};\ngoog.dom.asserts.assertIsElementType_ \x3d function(o, typename) {\n  if (goog.asserts.ENABLE_ASSERTS) {\n    var win \x3d goog.dom.asserts.getWindow_(o);\n    if (win \x26\x26 typeof win[typename] !\x3d \x22undefined\x22) {\n      if (!o || !(o instanceof win[typename]) \x26\x26 (o instanceof win.Location || o instanceof win.Element)) {\n        goog.asserts.fail(\x22Argument is not a %s (or a non-Element, non-Location mock); \x22 + \x22got: %s\x22, typename, goog.dom.asserts.debugStringForType_(o));\n      }\n    }\n  }\n  return o;\n};\ngoog.dom.asserts.assertIsHTMLAnchorElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLAnchorElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLButtonElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLButtonElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLLinkElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLLinkElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLImageElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLImageElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLAudioElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLAudioElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLVideoElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLVideoElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLInputElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLInputElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLTextAreaElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLTextAreaElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLCanvasElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLCanvasElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLEmbedElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLEmbedElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLFormElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLFormElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLFrameElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLFrameElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLIFrameElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLIFrameElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLObjectElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLObjectElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLScriptElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLScriptElement\x22);\n};\ngoog.dom.asserts.debugStringForType_ \x3d function(value) {\n  if (goog.isObject(value)) {\n    try {\n      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);\n    } catch (e) {\n      return \x22\\x3cobject could not be stringified\\x3e\x22;\n    }\n  } else {\n    return value \x3d\x3d\x3d undefined ? \x22undefined\x22 : value \x3d\x3d\x3d null ? \x22null\x22 : typeof value;\n  }\n};\ngoog.dom.asserts.getWindow_ \x3d function(o) {\n  try {\n    var doc \x3d o \x26\x26 o.ownerDocument;\n    var win \x3d doc \x26\x26 (doc.defaultView || doc.parentWindow);\n    win \x3d win || goog.global;\n    if (win.Element \x26\x26 win.Location) {\n      return win;\n    }\n  } catch (ex) {\n  }\n  return null;\n};\n");
SHADOW_ENV.evalLoad("goog.functions.functions.js", true , "goog.provide(\x22goog.functions\x22);\ngoog.functions.constant \x3d function(retValue) {\n  return function() {\n    return retValue;\n  };\n};\ngoog.functions.FALSE \x3d function() {\n  return false;\n};\ngoog.functions.TRUE \x3d function() {\n  return true;\n};\ngoog.functions.NULL \x3d function() {\n  return null;\n};\ngoog.functions.UNDEFINED \x3d function() {\n  return undefined;\n};\ngoog.functions.EMPTY \x3d goog.functions.UNDEFINED;\ngoog.functions.identity \x3d function(opt_returnValue, var_args) {\n  return opt_returnValue;\n};\ngoog.functions.error \x3d function(message) {\n  return function() {\n    throw new Error(message);\n  };\n};\ngoog.functions.fail \x3d function(err) {\n  return function() {\n    throw err;\n  };\n};\ngoog.functions.lock \x3d function(f, opt_numArgs) {\n  opt_numArgs \x3d opt_numArgs || 0;\n  return function() {\n    const self \x3d this;\n    return f.apply(self, Array.prototype.slice.call(arguments, 0, opt_numArgs));\n  };\n};\ngoog.functions.nth \x3d function(n) {\n  return function() {\n    return arguments[n];\n  };\n};\ngoog.functions.partialRight \x3d function(fn, var_args) {\n  const rightArgs \x3d Array.prototype.slice.call(arguments, 1);\n  return function() {\n    let self \x3d this;\n    if (self \x3d\x3d\x3d goog.global) {\n      self \x3d undefined;\n    }\n    const newArgs \x3d Array.prototype.slice.call(arguments);\n    newArgs.push.apply(newArgs, rightArgs);\n    return fn.apply(self, newArgs);\n  };\n};\ngoog.functions.withReturnValue \x3d function(f, retValue) {\n  return goog.functions.sequence(f, goog.functions.constant(retValue));\n};\ngoog.functions.equalTo \x3d function(value, opt_useLooseComparison) {\n  return function(other) {\n    return opt_useLooseComparison ? value \x3d\x3d other : value \x3d\x3d\x3d other;\n  };\n};\ngoog.functions.compose \x3d function(fn, var_args) {\n  const functions \x3d arguments;\n  const length \x3d functions.length;\n  return function() {\n    const self \x3d this;\n    let result;\n    if (length) {\n      result \x3d functions[length - 1].apply(self, arguments);\n    }\n    for (let i \x3d length - 2; i \x3e\x3d 0; i--) {\n      result \x3d functions[i].call(self, result);\n    }\n    return result;\n  };\n};\ngoog.functions.sequence \x3d function(var_args) {\n  const functions \x3d arguments;\n  const length \x3d functions.length;\n  return function() {\n    const self \x3d this;\n    let result;\n    for (let i \x3d 0; i \x3c length; i++) {\n      result \x3d functions[i].apply(self, arguments);\n    }\n    return result;\n  };\n};\ngoog.functions.and \x3d function(var_args) {\n  const functions \x3d arguments;\n  const length \x3d functions.length;\n  return function() {\n    const self \x3d this;\n    for (let i \x3d 0; i \x3c length; i++) {\n      if (!functions[i].apply(self, arguments)) {\n        return false;\n      }\n    }\n    return true;\n  };\n};\ngoog.functions.or \x3d function(var_args) {\n  const functions \x3d arguments;\n  const length \x3d functions.length;\n  return function() {\n    const self \x3d this;\n    for (let i \x3d 0; i \x3c length; i++) {\n      if (functions[i].apply(self, arguments)) {\n        return true;\n      }\n    }\n    return false;\n  };\n};\ngoog.functions.not \x3d function(f) {\n  return function() {\n    const self \x3d this;\n    return !f.apply(self, arguments);\n  };\n};\ngoog.functions.create \x3d function(constructor, var_args) {\n  const temp \x3d function() {\n  };\n  temp.prototype \x3d constructor.prototype;\n  const obj \x3d new temp();\n  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));\n  return obj;\n};\ngoog.functions.CACHE_RETURN_VALUE \x3d goog.define(\x22goog.functions.CACHE_RETURN_VALUE\x22, true);\ngoog.functions.cacheReturnValue \x3d function(fn) {\n  let called \x3d false;\n  let value;\n  return function() {\n    if (!goog.functions.CACHE_RETURN_VALUE) {\n      return fn();\n    }\n    if (!called) {\n      value \x3d fn();\n      called \x3d true;\n    }\n    return value;\n  };\n};\ngoog.functions.once \x3d function(f) {\n  let inner \x3d f;\n  return function() {\n    if (inner) {\n      const tmp \x3d inner;\n      inner \x3d null;\n      tmp();\n    }\n  };\n};\ngoog.functions.debounce \x3d function(f, interval, opt_scope) {\n  let timeout \x3d 0;\n  return function(var_args) {\n    goog.global.clearTimeout(timeout);\n    const args \x3d arguments;\n    timeout \x3d goog.global.setTimeout(function() {\n      f.apply(opt_scope, args);\n    }, interval);\n  };\n};\ngoog.functions.throttle \x3d function(f, interval, opt_scope) {\n  let timeout \x3d 0;\n  let shouldFire \x3d false;\n  let storedArgs \x3d [];\n  const handleTimeout \x3d function() {\n    timeout \x3d 0;\n    if (shouldFire) {\n      shouldFire \x3d false;\n      fire();\n    }\n  };\n  const fire \x3d function() {\n    timeout \x3d goog.global.setTimeout(handleTimeout, interval);\n    let args \x3d storedArgs;\n    storedArgs \x3d [];\n    f.apply(opt_scope, args);\n  };\n  return function(var_args) {\n    storedArgs \x3d arguments;\n    if (!timeout) {\n      fire();\n    } else {\n      shouldFire \x3d true;\n    }\n  };\n};\ngoog.functions.rateLimit \x3d function(f, interval, opt_scope) {\n  let timeout \x3d 0;\n  const handleTimeout \x3d function() {\n    timeout \x3d 0;\n  };\n  return function(var_args) {\n    if (!timeout) {\n      timeout \x3d goog.global.setTimeout(handleTimeout, interval);\n      f.apply(opt_scope, arguments);\n    }\n  };\n};\ngoog.functions.isFunction \x3d val \x3d\x3e {\n  return typeof val \x3d\x3d\x3d \x22function\x22;\n};\n");
SHADOW_ENV.evalLoad("goog.string.typedstring.js", true , "goog.provide(\x22goog.string.TypedString\x22);\ngoog.string.TypedString \x3d function() {\n};\ngoog.string.TypedString.prototype.implementsGoogStringTypedString;\ngoog.string.TypedString.prototype.getTypedStringValue;\n");
SHADOW_ENV.evalLoad("goog.string.const.js", true , "goog.provide(\x22goog.string.Const\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.string.TypedString\x22);\ngoog.string.Const \x3d function(opt_token, opt_content) {\n  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ \x3d opt_token \x3d\x3d\x3d goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ \x26\x26 opt_content || \x22\x22;\n  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ \x3d goog.string.Const.TYPE_MARKER_;\n};\ngoog.string.Const.prototype.implementsGoogStringTypedString \x3d true;\ngoog.string.Const.prototype.getTypedStringValue \x3d function() {\n  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;\n};\nif (goog.DEBUG) {\n  goog.string.Const.prototype.toString \x3d function() {\n    return \x22Const{\x22 + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + \x22}\x22;\n  };\n}\ngoog.string.Const.unwrap \x3d function(stringConst) {\n  if (stringConst instanceof goog.string.Const \x26\x26 stringConst.constructor \x3d\x3d\x3d goog.string.Const \x26\x26 stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ \x3d\x3d\x3d goog.string.Const.TYPE_MARKER_) {\n    return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;\n  } else {\n    goog.asserts.fail(\x22expected object of type Const, got \x27\x22 + stringConst + \x22\x27\x22);\n    return \x22type_error:Const\x22;\n  }\n};\ngoog.string.Const.from \x3d function(s) {\n  return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_, s);\n};\ngoog.string.Const.TYPE_MARKER_ \x3d {};\ngoog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ \x3d {};\ngoog.string.Const.EMPTY \x3d goog.string.Const.from(\x22\x22);\n");
SHADOW_ENV.evalLoad("goog.i18n.bidi.js", true , "goog.provide(\x22goog.i18n.bidi\x22);\ngoog.provide(\x22goog.i18n.bidi.Dir\x22);\ngoog.provide(\x22goog.i18n.bidi.DirectionalString\x22);\ngoog.provide(\x22goog.i18n.bidi.Format\x22);\ngoog.i18n.bidi.FORCE_RTL \x3d goog.define(\x22goog.i18n.bidi.FORCE_RTL\x22, false);\ngoog.i18n.bidi.IS_RTL \x3d goog.i18n.bidi.FORCE_RTL || (goog.LOCALE.substring(0, 2).toLowerCase() \x3d\x3d \x22ar\x22 || goog.LOCALE.substring(0, 2).toLowerCase() \x3d\x3d \x22fa\x22 || goog.LOCALE.substring(0, 2).toLowerCase() \x3d\x3d \x22he\x22 || goog.LOCALE.substring(0, 2).toLowerCase() \x3d\x3d \x22iw\x22 || goog.LOCALE.substring(0, 2).toLowerCase() \x3d\x3d \x22ps\x22 || goog.LOCALE.substring(0, 2).toLowerCase() \x3d\x3d \x22sd\x22 || goog.LOCALE.substring(0, 2).toLowerCase() \x3d\x3d \x22ug\x22 || goog.LOCALE.substring(0, 2).toLowerCase() \x3d\x3d \x22ur\x22 || goog.LOCALE.substring(0, \n2).toLowerCase() \x3d\x3d \x22yi\x22) \x26\x26 (goog.LOCALE.length \x3d\x3d 2 || goog.LOCALE.substring(2, 3) \x3d\x3d \x22-\x22 || goog.LOCALE.substring(2, 3) \x3d\x3d \x22_\x22) || goog.LOCALE.length \x3e\x3d 3 \x26\x26 goog.LOCALE.substring(0, 3).toLowerCase() \x3d\x3d \x22ckb\x22 \x26\x26 (goog.LOCALE.length \x3d\x3d 3 || goog.LOCALE.substring(3, 4) \x3d\x3d \x22-\x22 || goog.LOCALE.substring(3, 4) \x3d\x3d \x22_\x22) || goog.LOCALE.length \x3e\x3d 7 \x26\x26 ((goog.LOCALE.substring(2, 3) \x3d\x3d \x22-\x22 || goog.LOCALE.substring(2, 3) \x3d\x3d \x22_\x22) \x26\x26 (goog.LOCALE.substring(3, 7).toLowerCase() \x3d\x3d \x22adlm\x22 || goog.LOCALE.substring(3, \n7).toLowerCase() \x3d\x3d \x22arab\x22 || goog.LOCALE.substring(3, 7).toLowerCase() \x3d\x3d \x22hebr\x22 || goog.LOCALE.substring(3, 7).toLowerCase() \x3d\x3d \x22nkoo\x22 || goog.LOCALE.substring(3, 7).toLowerCase() \x3d\x3d \x22rohg\x22 || goog.LOCALE.substring(3, 7).toLowerCase() \x3d\x3d \x22thaa\x22)) || goog.LOCALE.length \x3e\x3d 8 \x26\x26 ((goog.LOCALE.substring(3, 4) \x3d\x3d \x22-\x22 || goog.LOCALE.substring(3, 4) \x3d\x3d \x22_\x22) \x26\x26 (goog.LOCALE.substring(4, 8).toLowerCase() \x3d\x3d \x22adlm\x22 || goog.LOCALE.substring(4, 8).toLowerCase() \x3d\x3d \x22arab\x22 || goog.LOCALE.substring(4, 8).toLowerCase() \x3d\x3d \n\x22hebr\x22 || goog.LOCALE.substring(4, 8).toLowerCase() \x3d\x3d \x22nkoo\x22 || goog.LOCALE.substring(4, 8).toLowerCase() \x3d\x3d \x22rohg\x22 || goog.LOCALE.substring(4, 8).toLowerCase() \x3d\x3d \x22thaa\x22));\ngoog.i18n.bidi.Format \x3d {LRE:\x22\u202a\x22, RLE:\x22\u202b\x22, PDF:\x22\u202c\x22, LRM:\x22\u200e\x22, RLM:\x22\u200f\x22};\ngoog.i18n.bidi.Dir \x3d {LTR:1, RTL:-1, NEUTRAL:0};\ngoog.i18n.bidi.RIGHT \x3d \x22right\x22;\ngoog.i18n.bidi.LEFT \x3d \x22left\x22;\ngoog.i18n.bidi.I18N_RIGHT \x3d goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;\ngoog.i18n.bidi.I18N_LEFT \x3d goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;\ngoog.i18n.bidi.toDir \x3d function(givenDir, opt_noNeutral) {\n  if (typeof givenDir \x3d\x3d \x22number\x22) {\n    return givenDir \x3e 0 ? goog.i18n.bidi.Dir.LTR : givenDir \x3c 0 ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL;\n  } else if (givenDir \x3d\x3d null) {\n    return null;\n  } else {\n    return givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;\n  }\n};\ngoog.i18n.bidi.ltrChars_ \x3d \x22A-Za-z\xc0-\xd6\xd8-\xf6\xf8-\u02b8\u0300-\u0590\u0900-\u1fff\x22 + \x22\u200e\u2c00-\\ud801\\ud804-\\ud839\\ud83c-\\udbff\x22 + \x22\uf900-\ufb1c\ufe00-\ufe6f\ufefd-\uffff\x22;\ngoog.i18n.bidi.rtlChars_ \x3d \x22\u0591-\u06ef\u06fa-\u08ff\u200f\\ud802-\\ud803\\ud83a-\\ud83b\x22 + \x22\ufb1d-\ufdff\ufe70-\ufefc\x22;\ngoog.i18n.bidi.htmlSkipReg_ \x3d /\x3c[^\x3e]*\x3e|\x26[^;]+;/g;\ngoog.i18n.bidi.stripHtmlIfNeeded_ \x3d function(str, opt_isStripNeeded) {\n  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, \x22\x22) : str;\n};\ngoog.i18n.bidi.rtlCharReg_ \x3d new RegExp(\x22[\x22 + goog.i18n.bidi.rtlChars_ + \x22]\x22);\ngoog.i18n.bidi.ltrCharReg_ \x3d new RegExp(\x22[\x22 + goog.i18n.bidi.ltrChars_ + \x22]\x22);\ngoog.i18n.bidi.hasAnyRtl \x3d function(str, opt_isHtml) {\n  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\ngoog.i18n.bidi.hasRtlChar \x3d goog.i18n.bidi.hasAnyRtl;\ngoog.i18n.bidi.hasAnyLtr \x3d function(str, opt_isHtml) {\n  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\ngoog.i18n.bidi.ltrRe_ \x3d new RegExp(\x22^[\x22 + goog.i18n.bidi.ltrChars_ + \x22]\x22);\ngoog.i18n.bidi.rtlRe_ \x3d new RegExp(\x22^[\x22 + goog.i18n.bidi.rtlChars_ + \x22]\x22);\ngoog.i18n.bidi.isRtlChar \x3d function(str) {\n  return goog.i18n.bidi.rtlRe_.test(str);\n};\ngoog.i18n.bidi.isLtrChar \x3d function(str) {\n  return goog.i18n.bidi.ltrRe_.test(str);\n};\ngoog.i18n.bidi.isNeutralChar \x3d function(str) {\n  return !goog.i18n.bidi.isLtrChar(str) \x26\x26 !goog.i18n.bidi.isRtlChar(str);\n};\ngoog.i18n.bidi.ltrDirCheckRe_ \x3d new RegExp(\x22^[^\x22 + goog.i18n.bidi.rtlChars_ + \x22]*[\x22 + goog.i18n.bidi.ltrChars_ + \x22]\x22);\ngoog.i18n.bidi.rtlDirCheckRe_ \x3d new RegExp(\x22^[^\x22 + goog.i18n.bidi.ltrChars_ + \x22]*[\x22 + goog.i18n.bidi.rtlChars_ + \x22]\x22);\ngoog.i18n.bidi.startsWithRtl \x3d function(str, opt_isHtml) {\n  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\ngoog.i18n.bidi.isRtlText \x3d goog.i18n.bidi.startsWithRtl;\ngoog.i18n.bidi.startsWithLtr \x3d function(str, opt_isHtml) {\n  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\ngoog.i18n.bidi.isLtrText \x3d goog.i18n.bidi.startsWithLtr;\ngoog.i18n.bidi.isRequiredLtrRe_ \x3d /^http:\\/\\/.*/;\ngoog.i18n.bidi.isNeutralText \x3d function(str, opt_isHtml) {\n  str \x3d goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);\n  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) \x26\x26 !goog.i18n.bidi.hasAnyRtl(str);\n};\ngoog.i18n.bidi.ltrExitDirCheckRe_ \x3d new RegExp(\x22[\x22 + goog.i18n.bidi.ltrChars_ + \x22]\x22 + \x22[^\x22 + goog.i18n.bidi.rtlChars_ + \x22]*$\x22);\ngoog.i18n.bidi.rtlExitDirCheckRe_ \x3d new RegExp(\x22[\x22 + goog.i18n.bidi.rtlChars_ + \x22]\x22 + \x22[^\x22 + goog.i18n.bidi.ltrChars_ + \x22]*$\x22);\ngoog.i18n.bidi.endsWithLtr \x3d function(str, opt_isHtml) {\n  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\ngoog.i18n.bidi.isLtrExitText \x3d goog.i18n.bidi.endsWithLtr;\ngoog.i18n.bidi.endsWithRtl \x3d function(str, opt_isHtml) {\n  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\ngoog.i18n.bidi.isRtlExitText \x3d goog.i18n.bidi.endsWithRtl;\ngoog.i18n.bidi.rtlLocalesRe_ \x3d new RegExp(\x22^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|\x22 + \x22.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))\x22 + \x22(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)\x22, \x22i\x22);\ngoog.i18n.bidi.isRtlLanguage \x3d function(lang) {\n  return goog.i18n.bidi.rtlLocalesRe_.test(lang);\n};\ngoog.i18n.bidi.bracketGuardTextRe_ \x3d /(\\(.*?\\)+)|(\\[.*?\\]+)|(\\{.*?\\}+)|(\x3c.*?\x3e+)/g;\ngoog.i18n.bidi.guardBracketInText \x3d function(s, opt_isRtlContext) {\n  const useRtl \x3d opt_isRtlContext \x3d\x3d\x3d undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;\n  const mark \x3d useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;\n  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + \x22$\\x26\x22 + mark);\n};\ngoog.i18n.bidi.enforceRtlInHtml \x3d function(html) {\n  if (html.charAt(0) \x3d\x3d \x22\\x3c\x22) {\n    return html.replace(/\x3c\\w+/, \x22$\\x26 dir\\x3drtl\x22);\n  }\n  return \x22\\n\\x3cspan dir\\x3drtl\\x3e\x22 + html + \x22\\x3c/span\\x3e\x22;\n};\ngoog.i18n.bidi.enforceRtlInText \x3d function(text) {\n  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;\n};\ngoog.i18n.bidi.enforceLtrInHtml \x3d function(html) {\n  if (html.charAt(0) \x3d\x3d \x22\\x3c\x22) {\n    return html.replace(/\x3c\\w+/, \x22$\\x26 dir\\x3dltr\x22);\n  }\n  return \x22\\n\\x3cspan dir\\x3dltr\\x3e\x22 + html + \x22\\x3c/span\\x3e\x22;\n};\ngoog.i18n.bidi.enforceLtrInText \x3d function(text) {\n  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;\n};\ngoog.i18n.bidi.dimensionsRe_ \x3d /:\\s*([.\\d][.\\w]*)\\s+([.\\d][.\\w]*)\\s+([.\\d][.\\w]*)\\s+([.\\d][.\\w]*)/g;\ngoog.i18n.bidi.leftRe_ \x3d /left/gi;\ngoog.i18n.bidi.rightRe_ \x3d /right/gi;\ngoog.i18n.bidi.tempRe_ \x3d /%%%%/g;\ngoog.i18n.bidi.mirrorCSS \x3d function(cssStr) {\n  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, \x22:$1 $4 $3 $2\x22).replace(goog.i18n.bidi.leftRe_, \x22%%%%\x22).replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);\n};\ngoog.i18n.bidi.doubleQuoteSubstituteRe_ \x3d /([\\u0591-\\u05f2])\x22/g;\ngoog.i18n.bidi.singleQuoteSubstituteRe_ \x3d /([\\u0591-\\u05f2])\x27/g;\ngoog.i18n.bidi.normalizeHebrewQuote \x3d function(str) {\n  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, \x22$1\u05f4\x22).replace(goog.i18n.bidi.singleQuoteSubstituteRe_, \x22$1\u05f3\x22);\n};\ngoog.i18n.bidi.wordSeparatorRe_ \x3d /\\s+/;\ngoog.i18n.bidi.hasNumeralsRe_ \x3d /[\\d\\u06f0-\\u06f9]/;\ngoog.i18n.bidi.rtlDetectionThreshold_ \x3d 0.40;\ngoog.i18n.bidi.estimateDirection \x3d function(str, opt_isHtml) {\n  let rtlCount \x3d 0;\n  let totalCount \x3d 0;\n  let hasWeaklyLtr \x3d false;\n  const tokens \x3d goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_);\n  for (let i \x3d 0; i \x3c tokens.length; i++) {\n    const token \x3d tokens[i];\n    if (goog.i18n.bidi.startsWithRtl(token)) {\n      rtlCount++;\n      totalCount++;\n    } else if (goog.i18n.bidi.isRequiredLtrRe_.test(token)) {\n      hasWeaklyLtr \x3d true;\n    } else if (goog.i18n.bidi.hasAnyLtr(token)) {\n      totalCount++;\n    } else if (goog.i18n.bidi.hasNumeralsRe_.test(token)) {\n      hasWeaklyLtr \x3d true;\n    }\n  }\n  return totalCount \x3d\x3d 0 ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount \x3e goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;\n};\ngoog.i18n.bidi.detectRtlDirectionality \x3d function(str, opt_isHtml) {\n  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) \x3d\x3d goog.i18n.bidi.Dir.RTL;\n};\ngoog.i18n.bidi.setElementDirAndAlign \x3d function(element, dir) {\n  if (element) {\n    const htmlElement \x3d element;\n    dir \x3d goog.i18n.bidi.toDir(dir);\n    if (dir) {\n      htmlElement.style.textAlign \x3d dir \x3d\x3d goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;\n      htmlElement.dir \x3d dir \x3d\x3d goog.i18n.bidi.Dir.RTL ? \x22rtl\x22 : \x22ltr\x22;\n    }\n  }\n};\ngoog.i18n.bidi.setElementDirByTextDirectionality \x3d function(element, text) {\n  const htmlElement \x3d element;\n  switch(goog.i18n.bidi.estimateDirection(text)) {\n    case goog.i18n.bidi.Dir.LTR:\n      if (htmlElement.dir !\x3d\x3d \x22ltr\x22) {\n        htmlElement.dir \x3d \x22ltr\x22;\n      }\n      break;\n    case goog.i18n.bidi.Dir.RTL:\n      if (htmlElement.dir !\x3d\x3d \x22rtl\x22) {\n        htmlElement.dir \x3d \x22rtl\x22;\n      }\n      break;\n    default:\n      htmlElement.removeAttribute(\x22dir\x22);\n  }\n};\ngoog.i18n.bidi.DirectionalString \x3d function() {\n};\ngoog.i18n.bidi.DirectionalString.prototype.implementsGoogI18nBidiDirectionalString;\ngoog.i18n.bidi.DirectionalString.prototype.getDirection;\n");
SHADOW_ENV.evalLoad("goog.html.trustedtypes.js", true , "goog.provide(\x22goog.html.trustedtypes\x22);\ngoog.html.trustedtypes.cachedPolicy_;\ngoog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse \x3d function() {\n  if (!goog.TRUSTED_TYPES_POLICY_NAME) {\n    return null;\n  }\n  if (goog.html.trustedtypes.cachedPolicy_ \x3d\x3d\x3d undefined) {\n    goog.html.trustedtypes.cachedPolicy_ \x3d goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + \x22#html\x22);\n  }\n  return goog.html.trustedtypes.cachedPolicy_;\n};\n");
SHADOW_ENV.evalLoad("goog.html.safescript.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.html.SafeScript\x22);\n  goog.module.declareLegacyNamespace();\n  const Const \x3d goog.require(\x22goog.string.Const\x22);\n  const TypedString \x3d goog.require(\x22goog.string.TypedString\x22);\n  const trustedtypes \x3d goog.require(\x22goog.html.trustedtypes\x22);\n  const {fail} \x3d goog.require(\x22goog.asserts\x22);\n  const CONSTRUCTOR_TOKEN_PRIVATE \x3d {};\n  class SafeScript {\n    constructor(value, token) {\n      this.privateDoNotAccessOrElseSafeScriptWrappedValue_ \x3d token \x3d\x3d\x3d CONSTRUCTOR_TOKEN_PRIVATE ? value : \x22\x22;\n      this.implementsGoogStringTypedString \x3d true;\n    }\n    static fromConstant(script) {\n      const scriptString \x3d Const.unwrap(script);\n      if (scriptString.length \x3d\x3d\x3d 0) {\n        return SafeScript.EMPTY;\n      }\n      return SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(scriptString);\n    }\n    static fromJson(val) {\n      return SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(SafeScript.stringify_(val));\n    }\n    getTypedStringValue() {\n      return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString();\n    }\n    static unwrap(safeScript) {\n      return SafeScript.unwrapTrustedScript(safeScript).toString();\n    }\n    static unwrapTrustedScript(safeScript) {\n      if (safeScript instanceof SafeScript \x26\x26 safeScript.constructor \x3d\x3d\x3d SafeScript) {\n        return safeScript.privateDoNotAccessOrElseSafeScriptWrappedValue_;\n      } else {\n        fail(\x22expected object of type SafeScript, got \x27\x22 + safeScript + \x22\x27 of type \x22 + goog.typeOf(safeScript));\n        return \x22type_error:SafeScript\x22;\n      }\n    }\n    static stringify_(val) {\n      const json \x3d JSON.stringify(val);\n      return json.replace(/\x3c/g, \x22\\\\x3c\x22);\n    }\n    static createSafeScriptSecurityPrivateDoNotAccessOrElse(script) {\n      const policy \x3d trustedtypes.getPolicyPrivateDoNotAccessOrElse();\n      const trustedScript \x3d policy ? policy.createScript(script) : script;\n      return new SafeScript(trustedScript, CONSTRUCTOR_TOKEN_PRIVATE);\n    }\n  }\n  SafeScript.prototype.toString \x3d function() {\n    return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString();\n  };\n  SafeScript.EMPTY \x3d {valueOf:function() {\n    return SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(\x22\x22);\n  },}.valueOf();\n  exports \x3d SafeScript;\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.fs.url.js", true , "goog.provide(\x22goog.fs.url\x22);\ngoog.fs.url.createObjectUrl \x3d function(obj) {\n  return goog.fs.url.getUrlObject_().createObjectURL(obj);\n};\ngoog.fs.url.revokeObjectUrl \x3d function(url) {\n  goog.fs.url.getUrlObject_().revokeObjectURL(url);\n};\ngoog.fs.url.UrlObject_ \x3d function() {\n};\ngoog.fs.url.UrlObject_.prototype.createObjectURL \x3d function(arg) {\n};\ngoog.fs.url.UrlObject_.prototype.revokeObjectURL \x3d function(s) {\n};\ngoog.fs.url.getUrlObject_ \x3d function() {\n  const urlObject \x3d goog.fs.url.findUrlObject_();\n  if (urlObject !\x3d null) {\n    return urlObject;\n  } else {\n    throw new Error(\x22This browser doesn\x27t seem to support blob URLs\x22);\n  }\n};\ngoog.fs.url.findUrlObject_ \x3d function() {\n  if (goog.global.URL !\x3d\x3d undefined \x26\x26 goog.global.URL.createObjectURL !\x3d\x3d undefined) {\n    return goog.global.URL;\n  } else if (goog.global.createObjectURL !\x3d\x3d undefined) {\n    return goog.global;\n  } else {\n    return null;\n  }\n};\ngoog.fs.url.browserSupportsObjectUrls \x3d function() {\n  return goog.fs.url.findUrlObject_() !\x3d null;\n};\n");
SHADOW_ENV.evalLoad("goog.fs.blob.js", true , "goog.provide(\x22goog.fs.blob\x22);\ngoog.fs.blob.getBlob \x3d function(var_args) {\n  const BlobBuilder \x3d goog.global.BlobBuilder || goog.global.WebKitBlobBuilder;\n  if (BlobBuilder !\x3d\x3d undefined) {\n    const bb \x3d new BlobBuilder();\n    for (let i \x3d 0; i \x3c arguments.length; i++) {\n      bb.append(arguments[i]);\n    }\n    return bb.getBlob();\n  } else {\n    return goog.fs.blob.getBlobWithProperties(Array.prototype.slice.call(arguments));\n  }\n};\ngoog.fs.blob.getBlobWithProperties \x3d function(parts, opt_type, opt_endings) {\n  const BlobBuilder \x3d goog.global.BlobBuilder || goog.global.WebKitBlobBuilder;\n  if (BlobBuilder !\x3d\x3d undefined) {\n    const bb \x3d new BlobBuilder();\n    for (let i \x3d 0; i \x3c parts.length; i++) {\n      bb.append(parts[i], opt_endings);\n    }\n    return bb.getBlob(opt_type);\n  } else if (goog.global.Blob !\x3d\x3d undefined) {\n    const properties \x3d {};\n    if (opt_type) {\n      properties[\x22type\x22] \x3d opt_type;\n    }\n    if (opt_endings) {\n      properties[\x22endings\x22] \x3d opt_endings;\n    }\n    return new Blob(parts, properties);\n  } else {\n    throw new Error(\x22This browser doesn\x27t seem to support creating Blobs\x22);\n  }\n};\n");
SHADOW_ENV.evalLoad("goog.html.trustedresourceurl.js", true , "goog.provide(\x22goog.html.TrustedResourceUrl\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.fs.blob\x22);\ngoog.require(\x22goog.fs.url\x22);\ngoog.require(\x22goog.html.SafeScript\x22);\ngoog.require(\x22goog.html.trustedtypes\x22);\ngoog.require(\x22goog.i18n.bidi.Dir\x22);\ngoog.require(\x22goog.i18n.bidi.DirectionalString\x22);\ngoog.require(\x22goog.string.Const\x22);\ngoog.require(\x22goog.string.TypedString\x22);\ngoog.html.TrustedResourceUrl \x3d class {\n  constructor(value, token) {\n    this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ \x3d token \x3d\x3d\x3d goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ ? value : \x22\x22;\n  }\n};\ngoog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString \x3d true;\ngoog.html.TrustedResourceUrl.prototype.getTypedStringValue \x3d function() {\n  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString();\n};\ngoog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString \x3d true;\ngoog.html.TrustedResourceUrl.prototype.getDirection \x3d function() {\n  return goog.i18n.bidi.Dir.LTR;\n};\ngoog.html.TrustedResourceUrl.prototype.cloneWithParams \x3d function(searchParams, opt_hashParams) {\n  var url \x3d goog.html.TrustedResourceUrl.unwrap(this);\n  var parts \x3d goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(url);\n  var urlBase \x3d parts[1];\n  var urlSearch \x3d parts[2] || \x22\x22;\n  var urlHash \x3d parts[3] || \x22\x22;\n  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(urlBase + goog.html.TrustedResourceUrl.stringifyParams_(\x22?\x22, urlSearch, searchParams) + goog.html.TrustedResourceUrl.stringifyParams_(\x22#\x22, urlHash, opt_hashParams));\n};\ngoog.html.TrustedResourceUrl.prototype.toString \x3d function() {\n  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + \x22\x22;\n};\ngoog.html.TrustedResourceUrl.unwrap \x3d function(trustedResourceUrl) {\n  return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(trustedResourceUrl).toString();\n};\ngoog.html.TrustedResourceUrl.unwrapTrustedScriptURL \x3d function(trustedResourceUrl) {\n  if (trustedResourceUrl instanceof goog.html.TrustedResourceUrl \x26\x26 trustedResourceUrl.constructor \x3d\x3d\x3d goog.html.TrustedResourceUrl) {\n    return trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;\n  } else {\n    goog.asserts.fail(\x22expected object of type TrustedResourceUrl, got \x27\x22 + trustedResourceUrl + \x22\x27 of type \x22 + goog.typeOf(trustedResourceUrl));\n    return \x22type_error:TrustedResourceUrl\x22;\n  }\n};\ngoog.html.TrustedResourceUrl.format \x3d function(format, args) {\n  var formatStr \x3d goog.string.Const.unwrap(format);\n  if (!goog.html.TrustedResourceUrl.BASE_URL_.test(formatStr)) {\n    throw new Error(\x22Invalid TrustedResourceUrl format: \x22 + formatStr);\n  }\n  var result \x3d formatStr.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_, function(match, id) {\n    if (!Object.prototype.hasOwnProperty.call(args, id)) {\n      throw new Error(\x27Found marker, \x22\x27 + id + \x27\x22, in format string, \x22\x27 + formatStr + \x27\x22, but no valid label mapping found \x27 + \x22in args: \x22 + JSON.stringify(args));\n    }\n    var arg \x3d args[id];\n    if (arg instanceof goog.string.Const) {\n      return goog.string.Const.unwrap(arg);\n    } else {\n      return encodeURIComponent(String(arg));\n    }\n  });\n  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(result);\n};\ngoog.html.TrustedResourceUrl.FORMAT_MARKER_ \x3d /%{(\\w+)}/g;\ngoog.html.TrustedResourceUrl.BASE_URL_ \x3d new RegExp(\x22^((https:)?//[0-9a-z.:[\\\\]-]+/\x22 + \x22|/[^/\\\\\\\\]\x22 + \x22|[^:/\\\\\\\\%]+/\x22 + \x22|[^:/\\\\\\\\%]*[?#]\x22 + \x22|about:blank#\x22 + \x22)\x22, \x22i\x22);\ngoog.html.TrustedResourceUrl.URL_PARAM_PARSER_ \x3d /^([^?#]*)(\\?[^#]*)?(#[\\s\\S]*)?/;\ngoog.html.TrustedResourceUrl.formatWithParams \x3d function(format, args, searchParams, opt_hashParams) {\n  var url \x3d goog.html.TrustedResourceUrl.format(format, args);\n  return url.cloneWithParams(searchParams, opt_hashParams);\n};\ngoog.html.TrustedResourceUrl.fromConstant \x3d function(url) {\n  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));\n};\ngoog.html.TrustedResourceUrl.fromConstants \x3d function(parts) {\n  var unwrapped \x3d \x22\x22;\n  for (var i \x3d 0; i \x3c parts.length; i++) {\n    unwrapped +\x3d goog.string.Const.unwrap(parts[i]);\n  }\n  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(unwrapped);\n};\ngoog.html.TrustedResourceUrl.fromSafeScript \x3d function(safeScript) {\n  var blob \x3d goog.fs.blob.getBlobWithProperties([goog.html.SafeScript.unwrap(safeScript)], \x22text/javascript\x22);\n  var url \x3d goog.fs.url.createObjectUrl(blob);\n  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);\n};\ngoog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ \x3d {};\ngoog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse \x3d function(url) {\n  const policy \x3d goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();\n  var value \x3d policy ? policy.createScriptURL(url) : url;\n  return new goog.html.TrustedResourceUrl(value, goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_);\n};\ngoog.html.TrustedResourceUrl.stringifyParams_ \x3d function(prefix, currentString, params) {\n  if (params \x3d\x3d null) {\n    return currentString;\n  }\n  if (typeof params \x3d\x3d\x3d \x22string\x22) {\n    return params ? prefix + encodeURIComponent(params) : \x22\x22;\n  }\n  for (var key in params) {\n    if (Object.prototype.hasOwnProperty.call(params, key)) {\n      var value \x3d params[key];\n      var outputValues \x3d Array.isArray(value) ? value : [value];\n      for (var i \x3d 0; i \x3c outputValues.length; i++) {\n        var outputValue \x3d outputValues[i];\n        if (outputValue !\x3d null) {\n          if (!currentString) {\n            currentString \x3d prefix;\n          }\n          currentString +\x3d (currentString.length \x3e prefix.length ? \x22\\x26\x22 : \x22\x22) + encodeURIComponent(key) + \x22\\x3d\x22 + encodeURIComponent(String(outputValue));\n        }\n      }\n    }\n  }\n  return currentString;\n};\n");
SHADOW_ENV.evalLoad("goog.string.internal.js", true , "goog.provide(\x22goog.string.internal\x22);\ngoog.string.internal.startsWith \x3d function(str, prefix) {\n  return str.lastIndexOf(prefix, 0) \x3d\x3d 0;\n};\ngoog.string.internal.endsWith \x3d function(str, suffix) {\n  const l \x3d str.length - suffix.length;\n  return l \x3e\x3d 0 \x26\x26 str.indexOf(suffix, l) \x3d\x3d l;\n};\ngoog.string.internal.caseInsensitiveStartsWith \x3d function(str, prefix) {\n  return goog.string.internal.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) \x3d\x3d 0;\n};\ngoog.string.internal.caseInsensitiveEndsWith \x3d function(str, suffix) {\n  return goog.string.internal.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) \x3d\x3d 0;\n};\ngoog.string.internal.caseInsensitiveEquals \x3d function(str1, str2) {\n  return str1.toLowerCase() \x3d\x3d str2.toLowerCase();\n};\ngoog.string.internal.isEmptyOrWhitespace \x3d function(str) {\n  return /^[\\s\\xa0]*$/.test(str);\n};\ngoog.string.internal.trim \x3d goog.TRUSTED_SITE \x26\x26 String.prototype.trim ? function(str) {\n  return str.trim();\n} : function(str) {\n  return /^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(str)[1];\n};\ngoog.string.internal.caseInsensitiveCompare \x3d function(str1, str2) {\n  const test1 \x3d String(str1).toLowerCase();\n  const test2 \x3d String(str2).toLowerCase();\n  if (test1 \x3c test2) {\n    return -1;\n  } else if (test1 \x3d\x3d test2) {\n    return 0;\n  } else {\n    return 1;\n  }\n};\ngoog.string.internal.newLineToBr \x3d function(str, opt_xml) {\n  return str.replace(/(\\r\\n|\\r|\\n)/g, opt_xml ? \x22\\x3cbr /\\x3e\x22 : \x22\\x3cbr\\x3e\x22);\n};\ngoog.string.internal.htmlEscape \x3d function(str, opt_isLikelyToContainHtmlChars) {\n  if (opt_isLikelyToContainHtmlChars) {\n    str \x3d str.replace(goog.string.internal.AMP_RE_, \x22\\x26amp;\x22).replace(goog.string.internal.LT_RE_, \x22\\x26lt;\x22).replace(goog.string.internal.GT_RE_, \x22\\x26gt;\x22).replace(goog.string.internal.QUOT_RE_, \x22\\x26quot;\x22).replace(goog.string.internal.SINGLE_QUOTE_RE_, \x22\\x26#39;\x22).replace(goog.string.internal.NULL_RE_, \x22\\x26#0;\x22);\n    return str;\n  } else {\n    if (!goog.string.internal.ALL_RE_.test(str)) {\n      return str;\n    }\n    if (str.indexOf(\x22\\x26\x22) !\x3d -1) {\n      str \x3d str.replace(goog.string.internal.AMP_RE_, \x22\\x26amp;\x22);\n    }\n    if (str.indexOf(\x22\\x3c\x22) !\x3d -1) {\n      str \x3d str.replace(goog.string.internal.LT_RE_, \x22\\x26lt;\x22);\n    }\n    if (str.indexOf(\x22\\x3e\x22) !\x3d -1) {\n      str \x3d str.replace(goog.string.internal.GT_RE_, \x22\\x26gt;\x22);\n    }\n    if (str.indexOf(\x27\x22\x27) !\x3d -1) {\n      str \x3d str.replace(goog.string.internal.QUOT_RE_, \x22\\x26quot;\x22);\n    }\n    if (str.indexOf(\x22\x27\x22) !\x3d -1) {\n      str \x3d str.replace(goog.string.internal.SINGLE_QUOTE_RE_, \x22\\x26#39;\x22);\n    }\n    if (str.indexOf(\x22\\x00\x22) !\x3d -1) {\n      str \x3d str.replace(goog.string.internal.NULL_RE_, \x22\\x26#0;\x22);\n    }\n    return str;\n  }\n};\ngoog.string.internal.AMP_RE_ \x3d /\x26/g;\ngoog.string.internal.LT_RE_ \x3d /\x3c/g;\ngoog.string.internal.GT_RE_ \x3d /\x3e/g;\ngoog.string.internal.QUOT_RE_ \x3d /\x22/g;\ngoog.string.internal.SINGLE_QUOTE_RE_ \x3d /\x27/g;\ngoog.string.internal.NULL_RE_ \x3d /\\x00/g;\ngoog.string.internal.ALL_RE_ \x3d /[\\x00\x26\x3c\x3e\x22\x27]/;\ngoog.string.internal.whitespaceEscape \x3d function(str, opt_xml) {\n  return goog.string.internal.newLineToBr(str.replace(/  /g, \x22 \\x26#160;\x22), opt_xml);\n};\ngoog.string.internal.contains \x3d function(str, subString) {\n  return str.indexOf(subString) !\x3d -1;\n};\ngoog.string.internal.caseInsensitiveContains \x3d function(str, subString) {\n  return goog.string.internal.contains(str.toLowerCase(), subString.toLowerCase());\n};\ngoog.string.internal.compareVersions \x3d function(version1, version2) {\n  let order \x3d 0;\n  const v1Subs \x3d goog.string.internal.trim(String(version1)).split(\x22.\x22);\n  const v2Subs \x3d goog.string.internal.trim(String(version2)).split(\x22.\x22);\n  const subCount \x3d Math.max(v1Subs.length, v2Subs.length);\n  for (let subIdx \x3d 0; order \x3d\x3d 0 \x26\x26 subIdx \x3c subCount; subIdx++) {\n    let v1Sub \x3d v1Subs[subIdx] || \x22\x22;\n    let v2Sub \x3d v2Subs[subIdx] || \x22\x22;\n    do {\n      const v1Comp \x3d /(\\d*)(\\D*)(.*)/.exec(v1Sub) || [\x22\x22, \x22\x22, \x22\x22, \x22\x22];\n      const v2Comp \x3d /(\\d*)(\\D*)(.*)/.exec(v2Sub) || [\x22\x22, \x22\x22, \x22\x22, \x22\x22];\n      if (v1Comp[0].length \x3d\x3d 0 \x26\x26 v2Comp[0].length \x3d\x3d 0) {\n        break;\n      }\n      const v1CompNum \x3d v1Comp[1].length \x3d\x3d 0 ? 0 : parseInt(v1Comp[1], 10);\n      const v2CompNum \x3d v2Comp[1].length \x3d\x3d 0 ? 0 : parseInt(v2Comp[1], 10);\n      order \x3d goog.string.internal.compareElements_(v1CompNum, v2CompNum) || goog.string.internal.compareElements_(v1Comp[2].length \x3d\x3d 0, v2Comp[2].length \x3d\x3d 0) || goog.string.internal.compareElements_(v1Comp[2], v2Comp[2]);\n      v1Sub \x3d v1Comp[3];\n      v2Sub \x3d v2Comp[3];\n    } while (order \x3d\x3d 0);\n  }\n  return order;\n};\ngoog.string.internal.compareElements_ \x3d function(left, right) {\n  if (left \x3c right) {\n    return -1;\n  } else if (left \x3e right) {\n    return 1;\n  }\n  return 0;\n};\n");
SHADOW_ENV.evalLoad("goog.html.safeurl.js", true , "goog.provide(\x22goog.html.SafeUrl\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.fs.url\x22);\ngoog.require(\x22goog.html.TrustedResourceUrl\x22);\ngoog.require(\x22goog.i18n.bidi.Dir\x22);\ngoog.require(\x22goog.i18n.bidi.DirectionalString\x22);\ngoog.require(\x22goog.string.Const\x22);\ngoog.require(\x22goog.string.TypedString\x22);\ngoog.require(\x22goog.string.internal\x22);\ngoog.html.SafeUrl \x3d class {\n  constructor(value, token) {\n    this.privateDoNotAccessOrElseSafeUrlWrappedValue_ \x3d token \x3d\x3d\x3d goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ ? value : \x22\x22;\n  }\n};\ngoog.html.SafeUrl.INNOCUOUS_STRING \x3d \x22about:invalid#zClosurez\x22;\ngoog.html.SafeUrl.prototype.implementsGoogStringTypedString \x3d true;\ngoog.html.SafeUrl.prototype.getTypedStringValue \x3d function() {\n  return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString();\n};\ngoog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString \x3d true;\ngoog.html.SafeUrl.prototype.getDirection \x3d function() {\n  return goog.i18n.bidi.Dir.LTR;\n};\ngoog.html.SafeUrl.prototype.toString \x3d function() {\n  return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString();\n};\ngoog.html.SafeUrl.unwrap \x3d function(safeUrl) {\n  if (safeUrl instanceof goog.html.SafeUrl \x26\x26 safeUrl.constructor \x3d\x3d\x3d goog.html.SafeUrl) {\n    return safeUrl.privateDoNotAccessOrElseSafeUrlWrappedValue_;\n  } else {\n    goog.asserts.fail(\x22expected object of type SafeUrl, got \x27\x22 + safeUrl + \x22\x27 of type \x22 + goog.typeOf(safeUrl));\n    return \x22type_error:SafeUrl\x22;\n  }\n};\ngoog.html.SafeUrl.fromConstant \x3d function(url) {\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));\n};\ngoog.html.SAFE_MIME_TYPE_PATTERN_ \x3d new RegExp(\x22^(?:audio/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)|\x22 + \x22font/\\\\w+|\x22 + \x22image/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|\x22 + \x22video/(?:mpeg|mp4|ogg|webm|quicktime|x-matroska))\x22 + \x27(?:;\\\\w+\\x3d(?:\\\\w+|\x22[\\\\w;,\\x3d ]+\x22))*$\x27, \x22i\x22);\ngoog.html.SafeUrl.isSafeMimeType \x3d function(mimeType) {\n  return goog.html.SAFE_MIME_TYPE_PATTERN_.test(mimeType);\n};\ngoog.html.SafeUrl.fromBlob \x3d function(blob) {\n  var url \x3d goog.html.SafeUrl.isSafeMimeType(blob.type) ? goog.fs.url.createObjectUrl(blob) : goog.html.SafeUrl.INNOCUOUS_STRING;\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\ngoog.html.SafeUrl.revokeObjectUrl \x3d function(safeUrl) {\n  var url \x3d safeUrl.getTypedStringValue();\n  if (url !\x3d\x3d goog.html.SafeUrl.INNOCUOUS_STRING) {\n    goog.fs.url.revokeObjectUrl(url);\n  }\n};\ngoog.html.SafeUrl.fromMediaSource \x3d function(mediaSource) {\n  goog.asserts.assert(\x22MediaSource\x22 in goog.global, \x22No support for MediaSource\x22);\n  const url \x3d mediaSource instanceof MediaSource ? goog.fs.url.createObjectUrl(mediaSource) : goog.html.SafeUrl.INNOCUOUS_STRING;\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\ngoog.html.DATA_URL_PATTERN_ \x3d /^data:(.*);base64,[a-z0-9+\\/]+\x3d*$/i;\ngoog.html.SafeUrl.tryFromDataUrl \x3d function(dataUrl) {\n  dataUrl \x3d String(dataUrl);\n  var filteredDataUrl \x3d dataUrl.replace(/(%0A|%0D)/g, \x22\x22);\n  var match \x3d filteredDataUrl.match(goog.html.DATA_URL_PATTERN_);\n  var valid \x3d match \x26\x26 goog.html.SafeUrl.isSafeMimeType(match[1]);\n  if (valid) {\n    return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(filteredDataUrl);\n  }\n  return null;\n};\ngoog.html.SafeUrl.fromDataUrl \x3d function(dataUrl) {\n  return goog.html.SafeUrl.tryFromDataUrl(dataUrl) || goog.html.SafeUrl.INNOCUOUS_URL;\n};\ngoog.html.SafeUrl.fromTelUrl \x3d function(telUrl) {\n  if (!goog.string.internal.caseInsensitiveStartsWith(telUrl, \x22tel:\x22)) {\n    telUrl \x3d goog.html.SafeUrl.INNOCUOUS_STRING;\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(telUrl);\n};\ngoog.html.SIP_URL_PATTERN_ \x3d new RegExp(\x22^sip[s]?:[+a-z0-9_.!$%\\x26\x27*\\\\/\\x3d^`{|}~-]+@([a-z0-9-]+\\\\.)+[a-z0-9]{2,63}$\x22, \x22i\x22);\ngoog.html.SafeUrl.fromSipUrl \x3d function(sipUrl) {\n  if (!goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(sipUrl))) {\n    sipUrl \x3d goog.html.SafeUrl.INNOCUOUS_STRING;\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(sipUrl);\n};\ngoog.html.SafeUrl.fromFacebookMessengerUrl \x3d function(facebookMessengerUrl) {\n  if (!goog.string.internal.caseInsensitiveStartsWith(facebookMessengerUrl, \x22fb-messenger://share\x22)) {\n    facebookMessengerUrl \x3d goog.html.SafeUrl.INNOCUOUS_STRING;\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(facebookMessengerUrl);\n};\ngoog.html.SafeUrl.fromWhatsAppUrl \x3d function(whatsAppUrl) {\n  if (!goog.string.internal.caseInsensitiveStartsWith(whatsAppUrl, \x22whatsapp://send\x22)) {\n    whatsAppUrl \x3d goog.html.SafeUrl.INNOCUOUS_STRING;\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(whatsAppUrl);\n};\ngoog.html.SafeUrl.fromSmsUrl \x3d function(smsUrl) {\n  if (!goog.string.internal.caseInsensitiveStartsWith(smsUrl, \x22sms:\x22) || !goog.html.SafeUrl.isSmsUrlBodyValid_(smsUrl)) {\n    smsUrl \x3d goog.html.SafeUrl.INNOCUOUS_STRING;\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(smsUrl);\n};\ngoog.html.SafeUrl.isSmsUrlBodyValid_ \x3d function(smsUrl) {\n  var hash \x3d smsUrl.indexOf(\x22#\x22);\n  if (hash \x3e 0) {\n    smsUrl \x3d smsUrl.substring(0, hash);\n  }\n  var bodyParams \x3d smsUrl.match(/[?\x26]body\x3d/gi);\n  if (!bodyParams) {\n    return true;\n  }\n  if (bodyParams.length \x3e 1) {\n    return false;\n  }\n  var bodyValue \x3d smsUrl.match(/[?\x26]body\x3d([^\x26]*)/)[1];\n  if (!bodyValue) {\n    return true;\n  }\n  try {\n    decodeURIComponent(bodyValue);\n  } catch (error) {\n    return false;\n  }\n  return /^(?:[a-z0-9\\-_.~]|%[0-9a-f]{2})+$/i.test(bodyValue);\n};\ngoog.html.SafeUrl.fromSshUrl \x3d function(sshUrl) {\n  if (!goog.string.internal.caseInsensitiveStartsWith(sshUrl, \x22ssh://\x22)) {\n    sshUrl \x3d goog.html.SafeUrl.INNOCUOUS_STRING;\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(sshUrl);\n};\ngoog.html.SafeUrl.sanitizeChromeExtensionUrl \x3d function(url, extensionId) {\n  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\\/\\/([^\\/]+)\\//, url, extensionId);\n};\ngoog.html.SafeUrl.sanitizeFirefoxExtensionUrl \x3d function(url, extensionId) {\n  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\\/\\/([^\\/]+)\\//, url, extensionId);\n};\ngoog.html.SafeUrl.sanitizeEdgeExtensionUrl \x3d function(url, extensionId) {\n  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\\/\\/([^\\/]+)\\//, url, extensionId);\n};\ngoog.html.SafeUrl.sanitizeExtensionUrl_ \x3d function(scheme, url, extensionId) {\n  var matches \x3d scheme.exec(url);\n  if (!matches) {\n    url \x3d goog.html.SafeUrl.INNOCUOUS_STRING;\n  } else {\n    var extractedExtensionId \x3d matches[1];\n    var acceptedExtensionIds;\n    if (extensionId instanceof goog.string.Const) {\n      acceptedExtensionIds \x3d [goog.string.Const.unwrap(extensionId)];\n    } else {\n      acceptedExtensionIds \x3d extensionId.map(function unwrap(x) {\n        return goog.string.Const.unwrap(x);\n      });\n    }\n    if (acceptedExtensionIds.indexOf(extractedExtensionId) \x3d\x3d -1) {\n      url \x3d goog.html.SafeUrl.INNOCUOUS_STRING;\n    }\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\ngoog.html.SafeUrl.fromTrustedResourceUrl \x3d function(trustedResourceUrl) {\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(trustedResourceUrl));\n};\ngoog.html.SAFE_URL_PATTERN_ \x3d /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;\ngoog.html.SafeUrl.SAFE_URL_PATTERN \x3d goog.html.SAFE_URL_PATTERN_;\ngoog.html.SafeUrl.trySanitize \x3d function(url) {\n  if (url instanceof goog.html.SafeUrl) {\n    return url;\n  }\n  if (typeof url \x3d\x3d \x22object\x22 \x26\x26 url.implementsGoogStringTypedString) {\n    url \x3d url.getTypedStringValue();\n  } else {\n    url \x3d String(url);\n  }\n  if (!goog.html.SAFE_URL_PATTERN_.test(url)) {\n    return goog.html.SafeUrl.tryFromDataUrl(url);\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\ngoog.html.SafeUrl.sanitize \x3d function(url) {\n  return goog.html.SafeUrl.trySanitize(url) || goog.html.SafeUrl.INNOCUOUS_URL;\n};\ngoog.html.SafeUrl.sanitizeAssertUnchanged \x3d function(url, opt_allowDataUrl) {\n  if (url instanceof goog.html.SafeUrl) {\n    return url;\n  } else if (typeof url \x3d\x3d \x22object\x22 \x26\x26 url.implementsGoogStringTypedString) {\n    url \x3d url.getTypedStringValue();\n  } else {\n    url \x3d String(url);\n  }\n  if (opt_allowDataUrl \x26\x26 /^data:/i.test(url)) {\n    var safeUrl \x3d goog.html.SafeUrl.fromDataUrl(url);\n    if (safeUrl.getTypedStringValue() \x3d\x3d url) {\n      return safeUrl;\n    }\n  }\n  if (!goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(url), \x22%s does not match the safe URL pattern\x22, url)) {\n    url \x3d goog.html.SafeUrl.INNOCUOUS_STRING;\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\ngoog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ \x3d {};\ngoog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse \x3d function(url) {\n  return new goog.html.SafeUrl(url, goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_);\n};\ngoog.html.SafeUrl.INNOCUOUS_URL \x3d goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.SafeUrl.INNOCUOUS_STRING);\ngoog.html.SafeUrl.ABOUT_BLANK \x3d goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(\x22about:blank\x22);\n");
SHADOW_ENV.evalLoad("goog.html.safestyle.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.html.SafeStyle\x22);\n  goog.module.declareLegacyNamespace();\n  const Const \x3d goog.require(\x22goog.string.Const\x22);\n  const SafeUrl \x3d goog.require(\x22goog.html.SafeUrl\x22);\n  const TypedString \x3d goog.require(\x22goog.string.TypedString\x22);\n  const {AssertionError, assert, fail} \x3d goog.require(\x22goog.asserts\x22);\n  const {contains, endsWith} \x3d goog.require(\x22goog.string.internal\x22);\n  const CONSTRUCTOR_TOKEN_PRIVATE \x3d {};\n  class SafeStyle {\n    constructor(value, token) {\n      this.privateDoNotAccessOrElseSafeStyleWrappedValue_ \x3d token \x3d\x3d\x3d CONSTRUCTOR_TOKEN_PRIVATE ? value : \x22\x22;\n      this.implementsGoogStringTypedString \x3d true;\n    }\n    static fromConstant(style) {\n      const styleString \x3d Const.unwrap(style);\n      if (styleString.length \x3d\x3d\x3d 0) {\n        return SafeStyle.EMPTY;\n      }\n      assert(endsWith(styleString, \x22;\x22), `Last character of style string is not \x27;\x27: ${styleString}`);\n      assert(contains(styleString, \x22:\x22), \x22Style string must contain at least one \x27:\x27, to \x22 + \x27specify a \x22name: value\x22 pair: \x27 + styleString);\n      return SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);\n    }\n    getTypedStringValue() {\n      return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;\n    }\n    toString() {\n      return this.privateDoNotAccessOrElseSafeStyleWrappedValue_.toString();\n    }\n    static unwrap(safeStyle) {\n      if (safeStyle instanceof SafeStyle \x26\x26 safeStyle.constructor \x3d\x3d\x3d SafeStyle) {\n        return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;\n      } else {\n        fail(`expected object of type SafeStyle, got \x27${safeStyle}` + \x22\x27 of type \x22 + goog.typeOf(safeStyle));\n        return \x22type_error:SafeStyle\x22;\n      }\n    }\n    static createSafeStyleSecurityPrivateDoNotAccessOrElse(style) {\n      return new SafeStyle(style, CONSTRUCTOR_TOKEN_PRIVATE);\n    }\n    static create(map) {\n      let style \x3d \x22\x22;\n      for (let name in map) {\n        if (Object.prototype.hasOwnProperty.call(map, name)) {\n          if (!/^[-_a-zA-Z0-9]+$/.test(name)) {\n            throw new Error(`Name allows only [-_a-zA-Z0-9], got: ${name}`);\n          }\n          let value \x3d map[name];\n          if (value \x3d\x3d null) {\n            continue;\n          }\n          if (Array.isArray(value)) {\n            value \x3d value.map(sanitizePropertyValue).join(\x22 \x22);\n          } else {\n            value \x3d sanitizePropertyValue(value);\n          }\n          style +\x3d `${name}:${value};`;\n        }\n      }\n      if (!style) {\n        return SafeStyle.EMPTY;\n      }\n      return SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);\n    }\n    static concat(var_args) {\n      let style \x3d \x22\x22;\n      const addArgument \x3d argument \x3d\x3e {\n        if (Array.isArray(argument)) {\n          argument.forEach(addArgument);\n        } else {\n          style +\x3d SafeStyle.unwrap(argument);\n        }\n      };\n      Array.prototype.forEach.call(arguments, addArgument);\n      if (!style) {\n        return SafeStyle.EMPTY;\n      }\n      return SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);\n    }\n  }\n  SafeStyle.EMPTY \x3d SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(\x22\x22);\n  SafeStyle.INNOCUOUS_STRING \x3d \x22zClosurez\x22;\n  SafeStyle.PropertyValue;\n  SafeStyle.PropertyMap;\n  function sanitizePropertyValue(value) {\n    if (value instanceof SafeUrl) {\n      const url \x3d SafeUrl.unwrap(value);\n      return \x27url(\x22\x27 + url.replace(/\x3c/g, \x22%3c\x22).replace(/[\\\\\x22]/g, \x22\\\\$\\x26\x22) + \x27\x22)\x27;\n    }\n    const result \x3d value instanceof Const ? Const.unwrap(value) : sanitizePropertyValueString(String(value));\n    if (/[{;}]/.test(result)) {\n      throw new AssertionError(\x22Value does not allow [{;}], got: %s.\x22, [result]);\n    }\n    return result;\n  }\n  function sanitizePropertyValueString(value) {\n    const valueWithoutFunctions \x3d value.replace(FUNCTIONS_RE, \x22$1\x22).replace(FUNCTIONS_RE, \x22$1\x22).replace(URL_RE, \x22url\x22);\n    if (!VALUE_RE.test(valueWithoutFunctions)) {\n      fail(`String value allows only ${VALUE_ALLOWED_CHARS}` + \x22 and simple functions, got: \x22 + value);\n      return SafeStyle.INNOCUOUS_STRING;\n    } else if (COMMENT_RE.test(value)) {\n      fail(`String value disallows comments, got: ${value}`);\n      return SafeStyle.INNOCUOUS_STRING;\n    } else if (!hasBalancedQuotes(value)) {\n      fail(`String value requires balanced quotes, got: ${value}`);\n      return SafeStyle.INNOCUOUS_STRING;\n    } else if (!hasBalancedSquareBrackets(value)) {\n      fail(\x22String value requires balanced square brackets and one\x22 + \x22 identifier per pair of brackets, got: \x22 + value);\n      return SafeStyle.INNOCUOUS_STRING;\n    }\n    return sanitizeUrl(value);\n  }\n  function hasBalancedQuotes(value) {\n    let outsideSingle \x3d true;\n    let outsideDouble \x3d true;\n    for (let i \x3d 0; i \x3c value.length; i++) {\n      const c \x3d value.charAt(i);\n      if (c \x3d\x3d \x22\x27\x22 \x26\x26 outsideDouble) {\n        outsideSingle \x3d !outsideSingle;\n      } else if (c \x3d\x3d \x27\x22\x27 \x26\x26 outsideSingle) {\n        outsideDouble \x3d !outsideDouble;\n      }\n    }\n    return outsideSingle \x26\x26 outsideDouble;\n  }\n  function hasBalancedSquareBrackets(value) {\n    let outside \x3d true;\n    const tokenRe \x3d /^[-_a-zA-Z0-9]$/;\n    for (let i \x3d 0; i \x3c value.length; i++) {\n      const c \x3d value.charAt(i);\n      if (c \x3d\x3d \x22]\x22) {\n        if (outside) {\n          return false;\n        }\n        outside \x3d true;\n      } else if (c \x3d\x3d \x22[\x22) {\n        if (!outside) {\n          return false;\n        }\n        outside \x3d false;\n      } else if (!outside \x26\x26 !tokenRe.test(c)) {\n        return false;\n      }\n    }\n    return outside;\n  }\n  const VALUE_ALLOWED_CHARS \x3d \x22[-,.\\\x22\x27%_!# a-zA-Z0-9\\\\[\\\\]]\x22;\n  const VALUE_RE \x3d new RegExp(`^${VALUE_ALLOWED_CHARS}+\\$`);\n  const URL_RE \x3d new RegExp(\x22\\\\b(url\\\\([ \\t\\n]*)(\x22 + \x22\x27[ -\\x26(-\\\\[\\\\]-~]*\x27\x22 + \x27|\x22[ !#-\\\\[\\\\]-~]*\x22\x27 + \x22|[!#-\\x26*-\\\\[\\\\]-~]*\x22 + \x22)([ \\t\\n]*\\\\))\x22, \x22g\x22);\n  const ALLOWED_FUNCTIONS \x3d [\x22calc\x22, \x22cubic-bezier\x22, \x22fit-content\x22, \x22hsl\x22, \x22hsla\x22, \x22linear-gradient\x22, \x22matrix\x22, \x22minmax\x22, \x22repeat\x22, \x22rgb\x22, \x22rgba\x22, \x22(rotate|scale|translate)(X|Y|Z|3d)?\x22, \x22var\x22,];\n  const FUNCTIONS_RE \x3d new RegExp(\x22\\\\b(\x22 + ALLOWED_FUNCTIONS.join(\x22|\x22) + \x22)\x22 + \x22\\\\([-+*/0-9a-z.%#\\\\[\\\\], ]+\\\\)\x22, \x22g\x22);\n  const COMMENT_RE \x3d /\\/\\*/;\n  function sanitizeUrl(value) {\n    return value.replace(URL_RE, (match, before, url, after) \x3d\x3e {\n      let quote \x3d \x22\x22;\n      url \x3d url.replace(/^([\x27\x22])(.*)\\1$/, (match, start, inside) \x3d\x3e {\n        quote \x3d start;\n        return inside;\n      });\n      const sanitized \x3d SafeUrl.sanitize(url).getTypedStringValue();\n      return before + quote + sanitized + quote + after;\n    });\n  }\n  exports \x3d SafeStyle;\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.object.object.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.object\x22);\n  goog.module.declareLegacyNamespace();\n  function forEach(obj, f, opt_obj) {\n    for (const key in obj) {\n      f.call(opt_obj, obj[key], key, obj);\n    }\n  }\n  function filter(obj, f, opt_obj) {\n    const res \x3d {};\n    for (const key in obj) {\n      if (f.call(opt_obj, obj[key], key, obj)) {\n        res[key] \x3d obj[key];\n      }\n    }\n    return res;\n  }\n  function map(obj, f, opt_obj) {\n    const res \x3d {};\n    for (const key in obj) {\n      res[key] \x3d f.call(opt_obj, obj[key], key, obj);\n    }\n    return res;\n  }\n  function some(obj, f, opt_obj) {\n    for (const key in obj) {\n      if (f.call(opt_obj, obj[key], key, obj)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function every(obj, f, opt_obj) {\n    for (const key in obj) {\n      if (!f.call(opt_obj, obj[key], key, obj)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function getCount(obj) {\n    let rv \x3d 0;\n    for (const key in obj) {\n      rv++;\n    }\n    return rv;\n  }\n  function getAnyKey(obj) {\n    for (const key in obj) {\n      return key;\n    }\n  }\n  function getAnyValue(obj) {\n    for (const key in obj) {\n      return obj[key];\n    }\n  }\n  function contains(obj, val) {\n    return containsValue(obj, val);\n  }\n  function getValues(obj) {\n    const res \x3d [];\n    let i \x3d 0;\n    for (const key in obj) {\n      res[i++] \x3d obj[key];\n    }\n    return res;\n  }\n  function getKeys(obj) {\n    const res \x3d [];\n    let i \x3d 0;\n    for (const key in obj) {\n      res[i++] \x3d key;\n    }\n    return res;\n  }\n  function getValueByKeys(obj, var_args) {\n    const isArrayLike \x3d goog.isArrayLike(var_args);\n    const keys \x3d isArrayLike ? var_args : arguments;\n    for (let i \x3d isArrayLike ? 0 : 1; i \x3c keys.length; i++) {\n      if (obj \x3d\x3d null) {\n        return undefined;\n      }\n      obj \x3d obj[keys[i]];\n    }\n    return obj;\n  }\n  function containsKey(obj, key) {\n    return obj !\x3d\x3d null \x26\x26 key in obj;\n  }\n  function containsValue(obj, val) {\n    for (const key in obj) {\n      if (obj[key] \x3d\x3d val) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function findKey(obj, f, thisObj \x3d undefined) {\n    for (const key in obj) {\n      if (f.call(thisObj, obj[key], key, obj)) {\n        return key;\n      }\n    }\n    return undefined;\n  }\n  function findValue(obj, f, thisObj \x3d undefined) {\n    const key \x3d findKey(obj, f, thisObj);\n    return key \x26\x26 obj[key];\n  }\n  function isEmpty(obj) {\n    for (const key in obj) {\n      return false;\n    }\n    return true;\n  }\n  function clear(obj) {\n    for (const i in obj) {\n      delete obj[i];\n    }\n  }\n  function remove(obj, key) {\n    let rv;\n    if (rv \x3d key in obj) {\n      delete obj[key];\n    }\n    return rv;\n  }\n  function add(obj, key, val) {\n    if (obj !\x3d\x3d null \x26\x26 key in obj) {\n      throw new Error(`The object already contains the key \x22${key}\x22`);\n    }\n    set(obj, key, val);\n  }\n  function get(obj, key, val \x3d undefined) {\n    if (obj !\x3d\x3d null \x26\x26 key in obj) {\n      return obj[key];\n    }\n    return val;\n  }\n  function set(obj, key, value) {\n    obj[key] \x3d value;\n  }\n  function setIfUndefined(obj, key, value) {\n    return key in obj ? obj[key] : obj[key] \x3d value;\n  }\n  function setWithReturnValueIfNotSet(obj, key, f) {\n    if (key in obj) {\n      return obj[key];\n    }\n    const val \x3d f();\n    obj[key] \x3d val;\n    return val;\n  }\n  function equals(a, b) {\n    for (const k in a) {\n      if (!(k in b) || a[k] !\x3d\x3d b[k]) {\n        return false;\n      }\n    }\n    for (const k in b) {\n      if (!(k in a)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function clone(obj) {\n    const res \x3d {};\n    for (const key in obj) {\n      res[key] \x3d obj[key];\n    }\n    return res;\n  }\n  function unsafeClone(obj) {\n    if (!obj || typeof obj !\x3d\x3d \x22object\x22) {\n      return obj;\n    }\n    if (typeof obj.clone \x3d\x3d\x3d \x22function\x22) {\n      return obj.clone();\n    }\n    if (typeof Map !\x3d\x3d \x22undefined\x22 \x26\x26 obj instanceof Map) {\n      return new Map(obj);\n    } else if (typeof Set !\x3d\x3d \x22undefined\x22 \x26\x26 obj instanceof Set) {\n      return new Set(obj);\n    }\n    const clone \x3d Array.isArray(obj) ? [] : typeof ArrayBuffer \x3d\x3d\x3d \x22function\x22 \x26\x26 typeof ArrayBuffer.isView \x3d\x3d\x3d \x22function\x22 \x26\x26 ArrayBuffer.isView(obj) \x26\x26 !(obj instanceof DataView) ? new obj.constructor(obj.length) : {};\n    for (const key in obj) {\n      clone[key] \x3d unsafeClone(obj[key]);\n    }\n    return clone;\n  }\n  function transpose(obj) {\n    const transposed \x3d {};\n    for (const key in obj) {\n      transposed[obj[key]] \x3d key;\n    }\n    return transposed;\n  }\n  const PROTOTYPE_FIELDS \x3d [\x22constructor\x22, \x22hasOwnProperty\x22, \x22isPrototypeOf\x22, \x22propertyIsEnumerable\x22, \x22toLocaleString\x22, \x22toString\x22, \x22valueOf\x22,];\n  function extend(target, var_args) {\n    let key;\n    let source;\n    for (let i \x3d 1; i \x3c arguments.length; i++) {\n      source \x3d arguments[i];\n      for (key in source) {\n        target[key] \x3d source[key];\n      }\n      for (let j \x3d 0; j \x3c PROTOTYPE_FIELDS.length; j++) {\n        key \x3d PROTOTYPE_FIELDS[j];\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] \x3d source[key];\n        }\n      }\n    }\n  }\n  function create(var_args) {\n    const argLength \x3d arguments.length;\n    if (argLength \x3d\x3d 1 \x26\x26 Array.isArray(arguments[0])) {\n      return create.apply(null, arguments[0]);\n    }\n    if (argLength % 2) {\n      throw new Error(\x22Uneven number of arguments\x22);\n    }\n    const rv \x3d {};\n    for (let i \x3d 0; i \x3c argLength; i +\x3d 2) {\n      rv[arguments[i]] \x3d arguments[i + 1];\n    }\n    return rv;\n  }\n  function createSet(var_args) {\n    const argLength \x3d arguments.length;\n    if (argLength \x3d\x3d 1 \x26\x26 Array.isArray(arguments[0])) {\n      return createSet.apply(null, arguments[0]);\n    }\n    const rv \x3d {};\n    for (let i \x3d 0; i \x3c argLength; i++) {\n      rv[arguments[i]] \x3d true;\n    }\n    return rv;\n  }\n  function createImmutableView(obj) {\n    let result \x3d obj;\n    if (Object.isFrozen \x26\x26 !Object.isFrozen(obj)) {\n      result \x3d Object.create(obj);\n      Object.freeze(result);\n    }\n    return result;\n  }\n  function isImmutableView(obj) {\n    return !!Object.isFrozen \x26\x26 Object.isFrozen(obj);\n  }\n  function getAllPropertyNames(obj, includeObjectPrototype \x3d undefined, includeFunctionPrototype \x3d undefined) {\n    if (!obj) {\n      return [];\n    }\n    if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {\n      return getKeys(obj);\n    }\n    const visitedSet \x3d {};\n    let proto \x3d obj;\n    while (proto \x26\x26 (proto !\x3d\x3d Object.prototype || !!includeObjectPrototype) \x26\x26 (proto !\x3d\x3d Function.prototype || !!includeFunctionPrototype)) {\n      const names \x3d Object.getOwnPropertyNames(proto);\n      for (let i \x3d 0; i \x3c names.length; i++) {\n        visitedSet[names[i]] \x3d true;\n      }\n      proto \x3d Object.getPrototypeOf(proto);\n    }\n    return getKeys(visitedSet);\n  }\n  function getSuperClass(constructor) {\n    const proto \x3d Object.getPrototypeOf(constructor.prototype);\n    return proto \x26\x26 proto.constructor;\n  }\n  exports \x3d {add, clear, clone, contains, containsKey, containsValue, create, createImmutableView, createSet, equals, every, extend, filter, findKey, findValue, forEach, get, getAllPropertyNames, getAnyKey, getAnyValue, getCount, getKeys, getSuperClass, getValueByKeys, getValues, isEmpty, isImmutableView, map, remove, set, setIfUndefined, setWithReturnValueIfNotSet, some, transpose, unsafeClone,};\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.html.safestylesheet.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.html.SafeStyleSheet\x22);\n  goog.module.declareLegacyNamespace();\n  const Const \x3d goog.require(\x22goog.string.Const\x22);\n  const SafeStyle \x3d goog.require(\x22goog.html.SafeStyle\x22);\n  const TypedString \x3d goog.require(\x22goog.string.TypedString\x22);\n  const googObject \x3d goog.require(\x22goog.object\x22);\n  const {assert, fail} \x3d goog.require(\x22goog.asserts\x22);\n  const {contains} \x3d goog.require(\x22goog.string.internal\x22);\n  const CONSTRUCTOR_TOKEN_PRIVATE \x3d {};\n  class SafeStyleSheet {\n    constructor(value, token) {\n      this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ \x3d token \x3d\x3d\x3d CONSTRUCTOR_TOKEN_PRIVATE ? value : \x22\x22;\n      this.implementsGoogStringTypedString \x3d true;\n    }\n    static createRule(selector, style) {\n      if (contains(selector, \x22\\x3c\x22)) {\n        throw new Error(`Selector does not allow \x27\x3c\x27, got: ${selector}`);\n      }\n      const selectorToCheck \x3d selector.replace(/(\x27|\x22)((?!\\1)[^\\r\\n\\f\\\\]|\\\\[\\s\\S])*\\1/g, \x22\x22);\n      if (!/^[-_a-zA-Z0-9#.:* ,\x3e+~[\\]()\x3d^$|]+$/.test(selectorToCheck)) {\n        throw new Error(\x22Selector allows only [-_a-zA-Z0-9#.:* ,\\x3e+~[\\\\]()\\x3d^$|] and \x22 + \x22strings, got: \x22 + selector);\n      }\n      if (!SafeStyleSheet.hasBalancedBrackets_(selectorToCheck)) {\n        throw new Error(\x22() and [] in selector must be balanced, got: \x22 + selector);\n      }\n      if (!(style instanceof SafeStyle)) {\n        style \x3d SafeStyle.create(style);\n      }\n      const styleSheet \x3d `${selector}{` + SafeStyle.unwrap(style).replace(/\x3c/g, \x22\\\\3C \x22) + \x22}\x22;\n      return SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);\n    }\n    static hasBalancedBrackets_(s) {\n      const brackets \x3d {\x22(\x22:\x22)\x22, \x22[\x22:\x22]\x22};\n      const expectedBrackets \x3d [];\n      for (let i \x3d 0; i \x3c s.length; i++) {\n        const ch \x3d s[i];\n        if (brackets[ch]) {\n          expectedBrackets.push(brackets[ch]);\n        } else if (googObject.contains(brackets, ch)) {\n          if (expectedBrackets.pop() !\x3d ch) {\n            return false;\n          }\n        }\n      }\n      return expectedBrackets.length \x3d\x3d 0;\n    }\n    static concat(var_args) {\n      let result \x3d \x22\x22;\n      const addArgument \x3d argument \x3d\x3e {\n        if (Array.isArray(argument)) {\n          argument.forEach(addArgument);\n        } else {\n          result +\x3d SafeStyleSheet.unwrap(argument);\n        }\n      };\n      Array.prototype.forEach.call(arguments, addArgument);\n      return SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(result);\n    }\n    static fromConstant(styleSheet) {\n      const styleSheetString \x3d Const.unwrap(styleSheet);\n      if (styleSheetString.length \x3d\x3d\x3d 0) {\n        return SafeStyleSheet.EMPTY;\n      }\n      assert(!contains(styleSheetString, \x22\\x3c\x22), `Forbidden \x27\x3c\x27 character in style sheet string: ${styleSheetString}`);\n      return SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheetString);\n    }\n    getTypedStringValue() {\n      return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;\n    }\n    static unwrap(safeStyleSheet) {\n      if (safeStyleSheet instanceof SafeStyleSheet \x26\x26 safeStyleSheet.constructor \x3d\x3d\x3d SafeStyleSheet) {\n        return safeStyleSheet.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;\n      } else {\n        fail(\x22expected object of type SafeStyleSheet, got \x27\x22 + safeStyleSheet + \x22\x27 of type \x22 + goog.typeOf(safeStyleSheet));\n        return \x22type_error:SafeStyleSheet\x22;\n      }\n    }\n    static createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet) {\n      return new SafeStyleSheet(styleSheet, CONSTRUCTOR_TOKEN_PRIVATE);\n    }\n  }\n  SafeStyleSheet.prototype.toString \x3d function() {\n    return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_.toString();\n  };\n  SafeStyleSheet.EMPTY \x3d SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(\x22\x22);\n  exports \x3d SafeStyleSheet;\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.dom.htmlelement.js", true , "goog.provide(\x22goog.dom.HtmlElement\x22);\ngoog.dom.HtmlElement \x3d function() {\n};\n");
SHADOW_ENV.evalLoad("goog.dom.tagname.js", true , "goog.provide(\x22goog.dom.TagName\x22);\ngoog.require(\x22goog.dom.HtmlElement\x22);\ngoog.dom.TagName \x3d class {\n  static cast(name, type) {\n    return name;\n  }\n  constructor() {\n    this.googDomTagName_doNotImplementThisTypeOrElse_;\n    this.ensureTypeScriptRemembersTypeT_;\n  }\n  toString() {\n  }\n};\ngoog.dom.TagName.A \x3d \x22A\x22;\ngoog.dom.TagName.ABBR \x3d \x22ABBR\x22;\ngoog.dom.TagName.ACRONYM \x3d \x22ACRONYM\x22;\ngoog.dom.TagName.ADDRESS \x3d \x22ADDRESS\x22;\ngoog.dom.TagName.APPLET \x3d \x22APPLET\x22;\ngoog.dom.TagName.AREA \x3d \x22AREA\x22;\ngoog.dom.TagName.ARTICLE \x3d \x22ARTICLE\x22;\ngoog.dom.TagName.ASIDE \x3d \x22ASIDE\x22;\ngoog.dom.TagName.AUDIO \x3d \x22AUDIO\x22;\ngoog.dom.TagName.B \x3d \x22B\x22;\ngoog.dom.TagName.BASE \x3d \x22BASE\x22;\ngoog.dom.TagName.BASEFONT \x3d \x22BASEFONT\x22;\ngoog.dom.TagName.BDI \x3d \x22BDI\x22;\ngoog.dom.TagName.BDO \x3d \x22BDO\x22;\ngoog.dom.TagName.BIG \x3d \x22BIG\x22;\ngoog.dom.TagName.BLOCKQUOTE \x3d \x22BLOCKQUOTE\x22;\ngoog.dom.TagName.BODY \x3d \x22BODY\x22;\ngoog.dom.TagName.BR \x3d \x22BR\x22;\ngoog.dom.TagName.BUTTON \x3d \x22BUTTON\x22;\ngoog.dom.TagName.CANVAS \x3d \x22CANVAS\x22;\ngoog.dom.TagName.CAPTION \x3d \x22CAPTION\x22;\ngoog.dom.TagName.CENTER \x3d \x22CENTER\x22;\ngoog.dom.TagName.CITE \x3d \x22CITE\x22;\ngoog.dom.TagName.CODE \x3d \x22CODE\x22;\ngoog.dom.TagName.COL \x3d \x22COL\x22;\ngoog.dom.TagName.COLGROUP \x3d \x22COLGROUP\x22;\ngoog.dom.TagName.COMMAND \x3d \x22COMMAND\x22;\ngoog.dom.TagName.DATA \x3d \x22DATA\x22;\ngoog.dom.TagName.DATALIST \x3d \x22DATALIST\x22;\ngoog.dom.TagName.DD \x3d \x22DD\x22;\ngoog.dom.TagName.DEL \x3d \x22DEL\x22;\ngoog.dom.TagName.DETAILS \x3d \x22DETAILS\x22;\ngoog.dom.TagName.DFN \x3d \x22DFN\x22;\ngoog.dom.TagName.DIALOG \x3d \x22DIALOG\x22;\ngoog.dom.TagName.DIR \x3d \x22DIR\x22;\ngoog.dom.TagName.DIV \x3d \x22DIV\x22;\ngoog.dom.TagName.DL \x3d \x22DL\x22;\ngoog.dom.TagName.DT \x3d \x22DT\x22;\ngoog.dom.TagName.EM \x3d \x22EM\x22;\ngoog.dom.TagName.EMBED \x3d \x22EMBED\x22;\ngoog.dom.TagName.FIELDSET \x3d \x22FIELDSET\x22;\ngoog.dom.TagName.FIGCAPTION \x3d \x22FIGCAPTION\x22;\ngoog.dom.TagName.FIGURE \x3d \x22FIGURE\x22;\ngoog.dom.TagName.FONT \x3d \x22FONT\x22;\ngoog.dom.TagName.FOOTER \x3d \x22FOOTER\x22;\ngoog.dom.TagName.FORM \x3d \x22FORM\x22;\ngoog.dom.TagName.FRAME \x3d \x22FRAME\x22;\ngoog.dom.TagName.FRAMESET \x3d \x22FRAMESET\x22;\ngoog.dom.TagName.H1 \x3d \x22H1\x22;\ngoog.dom.TagName.H2 \x3d \x22H2\x22;\ngoog.dom.TagName.H3 \x3d \x22H3\x22;\ngoog.dom.TagName.H4 \x3d \x22H4\x22;\ngoog.dom.TagName.H5 \x3d \x22H5\x22;\ngoog.dom.TagName.H6 \x3d \x22H6\x22;\ngoog.dom.TagName.HEAD \x3d \x22HEAD\x22;\ngoog.dom.TagName.HEADER \x3d \x22HEADER\x22;\ngoog.dom.TagName.HGROUP \x3d \x22HGROUP\x22;\ngoog.dom.TagName.HR \x3d \x22HR\x22;\ngoog.dom.TagName.HTML \x3d \x22HTML\x22;\ngoog.dom.TagName.I \x3d \x22I\x22;\ngoog.dom.TagName.IFRAME \x3d \x22IFRAME\x22;\ngoog.dom.TagName.IMG \x3d \x22IMG\x22;\ngoog.dom.TagName.INPUT \x3d \x22INPUT\x22;\ngoog.dom.TagName.INS \x3d \x22INS\x22;\ngoog.dom.TagName.ISINDEX \x3d \x22ISINDEX\x22;\ngoog.dom.TagName.KBD \x3d \x22KBD\x22;\ngoog.dom.TagName.KEYGEN \x3d \x22KEYGEN\x22;\ngoog.dom.TagName.LABEL \x3d \x22LABEL\x22;\ngoog.dom.TagName.LEGEND \x3d \x22LEGEND\x22;\ngoog.dom.TagName.LI \x3d \x22LI\x22;\ngoog.dom.TagName.LINK \x3d \x22LINK\x22;\ngoog.dom.TagName.MAIN \x3d \x22MAIN\x22;\ngoog.dom.TagName.MAP \x3d \x22MAP\x22;\ngoog.dom.TagName.MARK \x3d \x22MARK\x22;\ngoog.dom.TagName.MATH \x3d \x22MATH\x22;\ngoog.dom.TagName.MENU \x3d \x22MENU\x22;\ngoog.dom.TagName.MENUITEM \x3d \x22MENUITEM\x22;\ngoog.dom.TagName.META \x3d \x22META\x22;\ngoog.dom.TagName.METER \x3d \x22METER\x22;\ngoog.dom.TagName.NAV \x3d \x22NAV\x22;\ngoog.dom.TagName.NOFRAMES \x3d \x22NOFRAMES\x22;\ngoog.dom.TagName.NOSCRIPT \x3d \x22NOSCRIPT\x22;\ngoog.dom.TagName.OBJECT \x3d \x22OBJECT\x22;\ngoog.dom.TagName.OL \x3d \x22OL\x22;\ngoog.dom.TagName.OPTGROUP \x3d \x22OPTGROUP\x22;\ngoog.dom.TagName.OPTION \x3d \x22OPTION\x22;\ngoog.dom.TagName.OUTPUT \x3d \x22OUTPUT\x22;\ngoog.dom.TagName.P \x3d \x22P\x22;\ngoog.dom.TagName.PARAM \x3d \x22PARAM\x22;\ngoog.dom.TagName.PICTURE \x3d \x22PICTURE\x22;\ngoog.dom.TagName.PRE \x3d \x22PRE\x22;\ngoog.dom.TagName.PROGRESS \x3d \x22PROGRESS\x22;\ngoog.dom.TagName.Q \x3d \x22Q\x22;\ngoog.dom.TagName.RP \x3d \x22RP\x22;\ngoog.dom.TagName.RT \x3d \x22RT\x22;\ngoog.dom.TagName.RTC \x3d \x22RTC\x22;\ngoog.dom.TagName.RUBY \x3d \x22RUBY\x22;\ngoog.dom.TagName.S \x3d \x22S\x22;\ngoog.dom.TagName.SAMP \x3d \x22SAMP\x22;\ngoog.dom.TagName.SCRIPT \x3d \x22SCRIPT\x22;\ngoog.dom.TagName.SECTION \x3d \x22SECTION\x22;\ngoog.dom.TagName.SELECT \x3d \x22SELECT\x22;\ngoog.dom.TagName.SMALL \x3d \x22SMALL\x22;\ngoog.dom.TagName.SOURCE \x3d \x22SOURCE\x22;\ngoog.dom.TagName.SPAN \x3d \x22SPAN\x22;\ngoog.dom.TagName.STRIKE \x3d \x22STRIKE\x22;\ngoog.dom.TagName.STRONG \x3d \x22STRONG\x22;\ngoog.dom.TagName.STYLE \x3d \x22STYLE\x22;\ngoog.dom.TagName.SUB \x3d \x22SUB\x22;\ngoog.dom.TagName.SUMMARY \x3d \x22SUMMARY\x22;\ngoog.dom.TagName.SUP \x3d \x22SUP\x22;\ngoog.dom.TagName.SVG \x3d \x22SVG\x22;\ngoog.dom.TagName.TABLE \x3d \x22TABLE\x22;\ngoog.dom.TagName.TBODY \x3d \x22TBODY\x22;\ngoog.dom.TagName.TD \x3d \x22TD\x22;\ngoog.dom.TagName.TEMPLATE \x3d \x22TEMPLATE\x22;\ngoog.dom.TagName.TEXTAREA \x3d \x22TEXTAREA\x22;\ngoog.dom.TagName.TFOOT \x3d \x22TFOOT\x22;\ngoog.dom.TagName.TH \x3d \x22TH\x22;\ngoog.dom.TagName.THEAD \x3d \x22THEAD\x22;\ngoog.dom.TagName.TIME \x3d \x22TIME\x22;\ngoog.dom.TagName.TITLE \x3d \x22TITLE\x22;\ngoog.dom.TagName.TR \x3d \x22TR\x22;\ngoog.dom.TagName.TRACK \x3d \x22TRACK\x22;\ngoog.dom.TagName.TT \x3d \x22TT\x22;\ngoog.dom.TagName.U \x3d \x22U\x22;\ngoog.dom.TagName.UL \x3d \x22UL\x22;\ngoog.dom.TagName.VAR \x3d \x22VAR\x22;\ngoog.dom.TagName.VIDEO \x3d \x22VIDEO\x22;\ngoog.dom.TagName.WBR \x3d \x22WBR\x22;\n");
SHADOW_ENV.evalLoad("goog.array.array.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.array\x22);\n  goog.module.declareLegacyNamespace();\n  const asserts \x3d goog.require(\x22goog.asserts\x22);\n  goog.NATIVE_ARRAY_PROTOTYPES \x3d goog.define(\x22goog.NATIVE_ARRAY_PROTOTYPES\x22, goog.TRUSTED_SITE);\n  const ASSUME_NATIVE_FUNCTIONS \x3d goog.define(\x22goog.array.ASSUME_NATIVE_FUNCTIONS\x22, goog.FEATURESET_YEAR \x3e 2012);\n  exports.ASSUME_NATIVE_FUNCTIONS \x3d ASSUME_NATIVE_FUNCTIONS;\n  function peek(array) {\n    return array[array.length - 1];\n  }\n  exports.peek \x3d peek;\n  exports.last \x3d peek;\n  const indexOf \x3d goog.NATIVE_ARRAY_PROTOTYPES \x26\x26 (ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(arr, obj, opt_fromIndex) {\n    asserts.assert(arr.length !\x3d null);\n    return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);\n  } : function(arr, obj, opt_fromIndex) {\n    const fromIndex \x3d opt_fromIndex \x3d\x3d null ? 0 : opt_fromIndex \x3c 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;\n    if (typeof arr \x3d\x3d\x3d \x22string\x22) {\n      if (typeof obj !\x3d\x3d \x22string\x22 || obj.length !\x3d 1) {\n        return -1;\n      }\n      return arr.indexOf(obj, fromIndex);\n    }\n    for (let i \x3d fromIndex; i \x3c arr.length; i++) {\n      if (i in arr \x26\x26 arr[i] \x3d\x3d\x3d obj) {\n        return i;\n      }\n    }\n    return -1;\n  };\n  exports.indexOf \x3d indexOf;\n  const lastIndexOf \x3d goog.NATIVE_ARRAY_PROTOTYPES \x26\x26 (ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(arr, obj, opt_fromIndex) {\n    asserts.assert(arr.length !\x3d null);\n    const fromIndex \x3d opt_fromIndex \x3d\x3d null ? arr.length - 1 : opt_fromIndex;\n    return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);\n  } : function(arr, obj, opt_fromIndex) {\n    let fromIndex \x3d opt_fromIndex \x3d\x3d null ? arr.length - 1 : opt_fromIndex;\n    if (fromIndex \x3c 0) {\n      fromIndex \x3d Math.max(0, arr.length + fromIndex);\n    }\n    if (typeof arr \x3d\x3d\x3d \x22string\x22) {\n      if (typeof obj !\x3d\x3d \x22string\x22 || obj.length !\x3d 1) {\n        return -1;\n      }\n      return arr.lastIndexOf(obj, fromIndex);\n    }\n    for (let i \x3d fromIndex; i \x3e\x3d 0; i--) {\n      if (i in arr \x26\x26 arr[i] \x3d\x3d\x3d obj) {\n        return i;\n      }\n    }\n    return -1;\n  };\n  exports.lastIndexOf \x3d lastIndexOf;\n  const forEach \x3d goog.NATIVE_ARRAY_PROTOTYPES \x26\x26 (ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(arr, f, opt_obj) {\n    asserts.assert(arr.length !\x3d null);\n    Array.prototype.forEach.call(arr, f, opt_obj);\n  } : function(arr, f, opt_obj) {\n    const l \x3d arr.length;\n    const arr2 \x3d typeof arr \x3d\x3d\x3d \x22string\x22 ? arr.split(\x22\x22) : arr;\n    for (let i \x3d 0; i \x3c l; i++) {\n      if (i in arr2) {\n        f.call(opt_obj, arr2[i], i, arr);\n      }\n    }\n  };\n  exports.forEach \x3d forEach;\n  function forEachRight(arr, f, opt_obj) {\n    const l \x3d arr.length;\n    const arr2 \x3d typeof arr \x3d\x3d\x3d \x22string\x22 ? arr.split(\x22\x22) : arr;\n    for (let i \x3d l - 1; i \x3e\x3d 0; --i) {\n      if (i in arr2) {\n        f.call(opt_obj, arr2[i], i, arr);\n      }\n    }\n  }\n  exports.forEachRight \x3d forEachRight;\n  const filter \x3d goog.NATIVE_ARRAY_PROTOTYPES \x26\x26 (ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(arr, f, opt_obj) {\n    asserts.assert(arr.length !\x3d null);\n    return Array.prototype.filter.call(arr, f, opt_obj);\n  } : function(arr, f, opt_obj) {\n    const l \x3d arr.length;\n    const res \x3d [];\n    let resLength \x3d 0;\n    const arr2 \x3d typeof arr \x3d\x3d\x3d \x22string\x22 ? arr.split(\x22\x22) : arr;\n    for (let i \x3d 0; i \x3c l; i++) {\n      if (i in arr2) {\n        const val \x3d arr2[i];\n        if (f.call(opt_obj, val, i, arr)) {\n          res[resLength++] \x3d val;\n        }\n      }\n    }\n    return res;\n  };\n  exports.filter \x3d filter;\n  const map \x3d goog.NATIVE_ARRAY_PROTOTYPES \x26\x26 (ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(arr, f, opt_obj) {\n    asserts.assert(arr.length !\x3d null);\n    return Array.prototype.map.call(arr, f, opt_obj);\n  } : function(arr, f, opt_obj) {\n    const l \x3d arr.length;\n    const res \x3d new Array(l);\n    const arr2 \x3d typeof arr \x3d\x3d\x3d \x22string\x22 ? arr.split(\x22\x22) : arr;\n    for (let i \x3d 0; i \x3c l; i++) {\n      if (i in arr2) {\n        res[i] \x3d f.call(opt_obj, arr2[i], i, arr);\n      }\n    }\n    return res;\n  };\n  exports.map \x3d map;\n  const reduce \x3d goog.NATIVE_ARRAY_PROTOTYPES \x26\x26 (ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(arr, f, val, opt_obj) {\n    asserts.assert(arr.length !\x3d null);\n    if (opt_obj) {\n      f \x3d goog.bind(f, opt_obj);\n    }\n    return Array.prototype.reduce.call(arr, f, val);\n  } : function(arr, f, val, opt_obj) {\n    let rval \x3d val;\n    forEach(arr, function(val, index) {\n      rval \x3d f.call(opt_obj, rval, val, index, arr);\n    });\n    return rval;\n  };\n  exports.reduce \x3d reduce;\n  const reduceRight \x3d goog.NATIVE_ARRAY_PROTOTYPES \x26\x26 (ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(arr, f, val, opt_obj) {\n    asserts.assert(arr.length !\x3d null);\n    asserts.assert(f !\x3d null);\n    if (opt_obj) {\n      f \x3d goog.bind(f, opt_obj);\n    }\n    return Array.prototype.reduceRight.call(arr, f, val);\n  } : function(arr, f, val, opt_obj) {\n    let rval \x3d val;\n    forEachRight(arr, function(val, index) {\n      rval \x3d f.call(opt_obj, rval, val, index, arr);\n    });\n    return rval;\n  };\n  exports.reduceRight \x3d reduceRight;\n  const some \x3d goog.NATIVE_ARRAY_PROTOTYPES \x26\x26 (ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(arr, f, opt_obj) {\n    asserts.assert(arr.length !\x3d null);\n    return Array.prototype.some.call(arr, f, opt_obj);\n  } : function(arr, f, opt_obj) {\n    const l \x3d arr.length;\n    const arr2 \x3d typeof arr \x3d\x3d\x3d \x22string\x22 ? arr.split(\x22\x22) : arr;\n    for (let i \x3d 0; i \x3c l; i++) {\n      if (i in arr2 \x26\x26 f.call(opt_obj, arr2[i], i, arr)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  exports.some \x3d some;\n  const every \x3d goog.NATIVE_ARRAY_PROTOTYPES \x26\x26 (ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(arr, f, opt_obj) {\n    asserts.assert(arr.length !\x3d null);\n    return Array.prototype.every.call(arr, f, opt_obj);\n  } : function(arr, f, opt_obj) {\n    const l \x3d arr.length;\n    const arr2 \x3d typeof arr \x3d\x3d\x3d \x22string\x22 ? arr.split(\x22\x22) : arr;\n    for (let i \x3d 0; i \x3c l; i++) {\n      if (i in arr2 \x26\x26 !f.call(opt_obj, arr2[i], i, arr)) {\n        return false;\n      }\n    }\n    return true;\n  };\n  exports.every \x3d every;\n  function count(arr, f, opt_obj) {\n    let count \x3d 0;\n    forEach(arr, function(element, index, arr) {\n      if (f.call(opt_obj, element, index, arr)) {\n        ++count;\n      }\n    }, opt_obj);\n    return count;\n  }\n  exports.count \x3d count;\n  function find(arr, f, opt_obj) {\n    const i \x3d findIndex(arr, f, opt_obj);\n    return i \x3c 0 ? null : typeof arr \x3d\x3d\x3d \x22string\x22 ? arr.charAt(i) : arr[i];\n  }\n  exports.find \x3d find;\n  function findIndex(arr, f, opt_obj) {\n    const l \x3d arr.length;\n    const arr2 \x3d typeof arr \x3d\x3d\x3d \x22string\x22 ? arr.split(\x22\x22) : arr;\n    for (let i \x3d 0; i \x3c l; i++) {\n      if (i in arr2 \x26\x26 f.call(opt_obj, arr2[i], i, arr)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  exports.findIndex \x3d findIndex;\n  function findRight(arr, f, opt_obj) {\n    const i \x3d findIndexRight(arr, f, opt_obj);\n    return i \x3c 0 ? null : typeof arr \x3d\x3d\x3d \x22string\x22 ? arr.charAt(i) : arr[i];\n  }\n  exports.findRight \x3d findRight;\n  function findIndexRight(arr, f, opt_obj) {\n    const l \x3d arr.length;\n    const arr2 \x3d typeof arr \x3d\x3d\x3d \x22string\x22 ? arr.split(\x22\x22) : arr;\n    for (let i \x3d l - 1; i \x3e\x3d 0; i--) {\n      if (i in arr2 \x26\x26 f.call(opt_obj, arr2[i], i, arr)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  exports.findIndexRight \x3d findIndexRight;\n  function contains(arr, obj) {\n    return indexOf(arr, obj) \x3e\x3d 0;\n  }\n  exports.contains \x3d contains;\n  function isEmpty(arr) {\n    return arr.length \x3d\x3d 0;\n  }\n  exports.isEmpty \x3d isEmpty;\n  function clear(arr) {\n    if (!Array.isArray(arr)) {\n      for (let i \x3d arr.length - 1; i \x3e\x3d 0; i--) {\n        delete arr[i];\n      }\n    }\n    arr.length \x3d 0;\n  }\n  exports.clear \x3d clear;\n  function insert(arr, obj) {\n    if (!contains(arr, obj)) {\n      arr.push(obj);\n    }\n  }\n  exports.insert \x3d insert;\n  function insertAt(arr, obj, opt_i) {\n    splice(arr, opt_i, 0, obj);\n  }\n  exports.insertAt \x3d insertAt;\n  function insertArrayAt(arr, elementsToAdd, opt_i) {\n    goog.partial(splice, arr, opt_i, 0).apply(null, elementsToAdd);\n  }\n  exports.insertArrayAt \x3d insertArrayAt;\n  function insertBefore(arr, obj, opt_obj2) {\n    let i;\n    if (arguments.length \x3d\x3d 2 || (i \x3d indexOf(arr, opt_obj2)) \x3c 0) {\n      arr.push(obj);\n    } else {\n      insertAt(arr, obj, i);\n    }\n  }\n  exports.insertBefore \x3d insertBefore;\n  function remove(arr, obj) {\n    const i \x3d indexOf(arr, obj);\n    let rv;\n    if (rv \x3d i \x3e\x3d 0) {\n      removeAt(arr, i);\n    }\n    return rv;\n  }\n  exports.remove \x3d remove;\n  function removeLast(arr, obj) {\n    const i \x3d lastIndexOf(arr, obj);\n    if (i \x3e\x3d 0) {\n      removeAt(arr, i);\n      return true;\n    }\n    return false;\n  }\n  exports.removeLast \x3d removeLast;\n  function removeAt(arr, i) {\n    asserts.assert(arr.length !\x3d null);\n    return Array.prototype.splice.call(arr, i, 1).length \x3d\x3d 1;\n  }\n  exports.removeAt \x3d removeAt;\n  function removeIf(arr, f, opt_obj) {\n    const i \x3d findIndex(arr, f, opt_obj);\n    if (i \x3e\x3d 0) {\n      removeAt(arr, i);\n      return true;\n    }\n    return false;\n  }\n  exports.removeIf \x3d removeIf;\n  function removeAllIf(arr, f, opt_obj) {\n    let removedCount \x3d 0;\n    forEachRight(arr, function(val, index) {\n      if (f.call(opt_obj, val, index, arr)) {\n        if (removeAt(arr, index)) {\n          removedCount++;\n        }\n      }\n    });\n    return removedCount;\n  }\n  exports.removeAllIf \x3d removeAllIf;\n  function concat(var_args) {\n    return Array.prototype.concat.apply([], arguments);\n  }\n  exports.concat \x3d concat;\n  function join(var_args) {\n    return Array.prototype.concat.apply([], arguments);\n  }\n  exports.join \x3d join;\n  function toArray(object) {\n    const length \x3d object.length;\n    if (length \x3e 0) {\n      const rv \x3d new Array(length);\n      for (let i \x3d 0; i \x3c length; i++) {\n        rv[i] \x3d object[i];\n      }\n      return rv;\n    }\n    return [];\n  }\n  exports.toArray \x3d toArray;\n  const clone \x3d toArray;\n  exports.clone \x3d clone;\n  function extend(arr1, var_args) {\n    for (let i \x3d 1; i \x3c arguments.length; i++) {\n      const arr2 \x3d arguments[i];\n      if (goog.isArrayLike(arr2)) {\n        const len1 \x3d arr1.length || 0;\n        const len2 \x3d arr2.length || 0;\n        arr1.length \x3d len1 + len2;\n        for (let j \x3d 0; j \x3c len2; j++) {\n          arr1[len1 + j] \x3d arr2[j];\n        }\n      } else {\n        arr1.push(arr2);\n      }\n    }\n  }\n  exports.extend \x3d extend;\n  function splice(arr, index, howMany, var_args) {\n    asserts.assert(arr.length !\x3d null);\n    return Array.prototype.splice.apply(arr, slice(arguments, 1));\n  }\n  exports.splice \x3d splice;\n  function slice(arr, start, opt_end) {\n    asserts.assert(arr.length !\x3d null);\n    if (arguments.length \x3c\x3d 2) {\n      return Array.prototype.slice.call(arr, start);\n    } else {\n      return Array.prototype.slice.call(arr, start, opt_end);\n    }\n  }\n  exports.slice \x3d slice;\n  function removeDuplicates(arr, opt_rv, opt_hashFn) {\n    const returnArray \x3d opt_rv || arr;\n    const defaultHashFn \x3d function(item) {\n      return goog.isObject(item) ? \x22o\x22 + goog.getUid(item) : (typeof item).charAt(0) + item;\n    };\n    const hashFn \x3d opt_hashFn || defaultHashFn;\n    let cursorInsert \x3d 0;\n    let cursorRead \x3d 0;\n    const seen \x3d {};\n    while (cursorRead \x3c arr.length) {\n      const current \x3d arr[cursorRead++];\n      const key \x3d hashFn(current);\n      if (!Object.prototype.hasOwnProperty.call(seen, key)) {\n        seen[key] \x3d true;\n        returnArray[cursorInsert++] \x3d current;\n      }\n    }\n    returnArray.length \x3d cursorInsert;\n  }\n  exports.removeDuplicates \x3d removeDuplicates;\n  function binarySearch(arr, target, opt_compareFn) {\n    return binarySearch_(arr, opt_compareFn || defaultCompare, false, target);\n  }\n  exports.binarySearch \x3d binarySearch;\n  function binarySelect(arr, evaluator, opt_obj) {\n    return binarySearch_(arr, evaluator, true, undefined, opt_obj);\n  }\n  exports.binarySelect \x3d binarySelect;\n  function binarySearch_(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {\n    let left \x3d 0;\n    let right \x3d arr.length;\n    let found;\n    while (left \x3c right) {\n      const middle \x3d left + (right - left \x3e\x3e\x3e 1);\n      let compareResult;\n      if (isEvaluator) {\n        compareResult \x3d compareFn.call(opt_selfObj, arr[middle], middle, arr);\n      } else {\n        compareResult \x3d compareFn(opt_target, arr[middle]);\n      }\n      if (compareResult \x3e 0) {\n        left \x3d middle + 1;\n      } else {\n        right \x3d middle;\n        found \x3d !compareResult;\n      }\n    }\n    return found ? left : -left - 1;\n  }\n  function sort(arr, opt_compareFn) {\n    arr.sort(opt_compareFn || defaultCompare);\n  }\n  exports.sort \x3d sort;\n  function stableSort(arr, opt_compareFn) {\n    const compArr \x3d new Array(arr.length);\n    for (let i \x3d 0; i \x3c arr.length; i++) {\n      compArr[i] \x3d {index:i, value:arr[i]};\n    }\n    const valueCompareFn \x3d opt_compareFn || defaultCompare;\n    function stableCompareFn(obj1, obj2) {\n      return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;\n    }\n    sort(compArr, stableCompareFn);\n    for (let i \x3d 0; i \x3c arr.length; i++) {\n      arr[i] \x3d compArr[i].value;\n    }\n  }\n  exports.stableSort \x3d stableSort;\n  function sortByKey(arr, keyFn, opt_compareFn) {\n    const keyCompareFn \x3d opt_compareFn || defaultCompare;\n    sort(arr, function(a, b) {\n      return keyCompareFn(keyFn(a), keyFn(b));\n    });\n  }\n  exports.sortByKey \x3d sortByKey;\n  function sortObjectsByKey(arr, key, opt_compareFn) {\n    sortByKey(arr, function(obj) {\n      return obj[key];\n    }, opt_compareFn);\n  }\n  exports.sortObjectsByKey \x3d sortObjectsByKey;\n  function isSorted(arr, opt_compareFn, opt_strict) {\n    const compare \x3d opt_compareFn || defaultCompare;\n    for (let i \x3d 1; i \x3c arr.length; i++) {\n      const compareResult \x3d compare(arr[i - 1], arr[i]);\n      if (compareResult \x3e 0 || compareResult \x3d\x3d 0 \x26\x26 opt_strict) {\n        return false;\n      }\n    }\n    return true;\n  }\n  exports.isSorted \x3d isSorted;\n  function equals(arr1, arr2, opt_equalsFn) {\n    if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length !\x3d arr2.length) {\n      return false;\n    }\n    const l \x3d arr1.length;\n    const equalsFn \x3d opt_equalsFn || defaultCompareEquality;\n    for (let i \x3d 0; i \x3c l; i++) {\n      if (!equalsFn(arr1[i], arr2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  exports.equals \x3d equals;\n  function compare3(arr1, arr2, opt_compareFn) {\n    const compare \x3d opt_compareFn || defaultCompare;\n    const l \x3d Math.min(arr1.length, arr2.length);\n    for (let i \x3d 0; i \x3c l; i++) {\n      const result \x3d compare(arr1[i], arr2[i]);\n      if (result !\x3d 0) {\n        return result;\n      }\n    }\n    return defaultCompare(arr1.length, arr2.length);\n  }\n  exports.compare3 \x3d compare3;\n  function defaultCompare(a, b) {\n    return a \x3e b ? 1 : a \x3c b ? -1 : 0;\n  }\n  exports.defaultCompare \x3d defaultCompare;\n  function inverseDefaultCompare(a, b) {\n    return -defaultCompare(a, b);\n  }\n  exports.inverseDefaultCompare \x3d inverseDefaultCompare;\n  function defaultCompareEquality(a, b) {\n    return a \x3d\x3d\x3d b;\n  }\n  exports.defaultCompareEquality \x3d defaultCompareEquality;\n  function binaryInsert(array, value, opt_compareFn) {\n    const index \x3d binarySearch(array, value, opt_compareFn);\n    if (index \x3c 0) {\n      insertAt(array, value, -(index + 1));\n      return true;\n    }\n    return false;\n  }\n  exports.binaryInsert \x3d binaryInsert;\n  function binaryRemove(array, value, opt_compareFn) {\n    const index \x3d binarySearch(array, value, opt_compareFn);\n    return index \x3e\x3d 0 ? removeAt(array, index) : false;\n  }\n  exports.binaryRemove \x3d binaryRemove;\n  function bucket(array, sorter, opt_obj) {\n    const buckets \x3d {};\n    for (let i \x3d 0; i \x3c array.length; i++) {\n      const value \x3d array[i];\n      const key \x3d sorter.call(opt_obj, value, i, array);\n      if (key !\x3d\x3d undefined) {\n        const bucket \x3d buckets[key] || (buckets[key] \x3d []);\n        bucket.push(value);\n      }\n    }\n    return buckets;\n  }\n  exports.bucket \x3d bucket;\n  function bucketToMap(array, sorter) {\n    const buckets \x3d new Map();\n    for (let i \x3d 0; i \x3c array.length; i++) {\n      const value \x3d array[i];\n      const key \x3d sorter(value, i, array);\n      if (key !\x3d\x3d undefined) {\n        let bucket \x3d buckets.get(key);\n        if (!bucket) {\n          bucket \x3d [];\n          buckets.set(key, bucket);\n        }\n        bucket.push(value);\n      }\n    }\n    return buckets;\n  }\n  exports.bucketToMap \x3d bucketToMap;\n  function toObject(arr, keyFunc, opt_obj) {\n    const ret \x3d {};\n    forEach(arr, function(element, index) {\n      ret[keyFunc.call(opt_obj, element, index, arr)] \x3d element;\n    });\n    return ret;\n  }\n  exports.toObject \x3d toObject;\n  function toMap(arr, keyFunc) {\n    const map \x3d new Map();\n    for (let i \x3d 0; i \x3c arr.length; i++) {\n      const element \x3d arr[i];\n      map.set(keyFunc(element, i, arr), element);\n    }\n    return map;\n  }\n  exports.toMap \x3d toMap;\n  function range(startOrEnd, opt_end, opt_step) {\n    const array \x3d [];\n    let start \x3d 0;\n    let end \x3d startOrEnd;\n    const step \x3d opt_step || 1;\n    if (opt_end !\x3d\x3d undefined) {\n      start \x3d startOrEnd;\n      end \x3d opt_end;\n    }\n    if (step * (end - start) \x3c 0) {\n      return [];\n    }\n    if (step \x3e 0) {\n      for (let i \x3d start; i \x3c end; i +\x3d step) {\n        array.push(i);\n      }\n    } else {\n      for (let i \x3d start; i \x3e end; i +\x3d step) {\n        array.push(i);\n      }\n    }\n    return array;\n  }\n  exports.range \x3d range;\n  function repeat(value, n) {\n    const array \x3d [];\n    for (let i \x3d 0; i \x3c n; i++) {\n      array[i] \x3d value;\n    }\n    return array;\n  }\n  exports.repeat \x3d repeat;\n  function flatten(var_args) {\n    const CHUNK_SIZE \x3d 8192;\n    const result \x3d [];\n    for (let i \x3d 0; i \x3c arguments.length; i++) {\n      const element \x3d arguments[i];\n      if (Array.isArray(element)) {\n        for (let c \x3d 0; c \x3c element.length; c +\x3d CHUNK_SIZE) {\n          const chunk \x3d slice(element, c, c + CHUNK_SIZE);\n          const recurseResult \x3d flatten.apply(null, chunk);\n          for (let r \x3d 0; r \x3c recurseResult.length; r++) {\n            result.push(recurseResult[r]);\n          }\n        }\n      } else {\n        result.push(element);\n      }\n    }\n    return result;\n  }\n  exports.flatten \x3d flatten;\n  function rotate(array, n) {\n    asserts.assert(array.length !\x3d null);\n    if (array.length) {\n      n %\x3d array.length;\n      if (n \x3e 0) {\n        Array.prototype.unshift.apply(array, array.splice(-n, n));\n      } else if (n \x3c 0) {\n        Array.prototype.push.apply(array, array.splice(0, -n));\n      }\n    }\n    return array;\n  }\n  exports.rotate \x3d rotate;\n  function moveItem(arr, fromIndex, toIndex) {\n    asserts.assert(fromIndex \x3e\x3d 0 \x26\x26 fromIndex \x3c arr.length);\n    asserts.assert(toIndex \x3e\x3d 0 \x26\x26 toIndex \x3c arr.length);\n    const removedItems \x3d Array.prototype.splice.call(arr, fromIndex, 1);\n    Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);\n  }\n  exports.moveItem \x3d moveItem;\n  function zip(var_args) {\n    if (!arguments.length) {\n      return [];\n    }\n    const result \x3d [];\n    let minLen \x3d arguments[0].length;\n    for (let i \x3d 1; i \x3c arguments.length; i++) {\n      if (arguments[i].length \x3c minLen) {\n        minLen \x3d arguments[i].length;\n      }\n    }\n    for (let i \x3d 0; i \x3c minLen; i++) {\n      const value \x3d [];\n      for (let j \x3d 0; j \x3c arguments.length; j++) {\n        value.push(arguments[j][i]);\n      }\n      result.push(value);\n    }\n    return result;\n  }\n  exports.zip \x3d zip;\n  function shuffle(arr, opt_randFn) {\n    const randFn \x3d opt_randFn || Math.random;\n    for (let i \x3d arr.length - 1; i \x3e 0; i--) {\n      const j \x3d Math.floor(randFn() * (i + 1));\n      const tmp \x3d arr[i];\n      arr[i] \x3d arr[j];\n      arr[j] \x3d tmp;\n    }\n  }\n  exports.shuffle \x3d shuffle;\n  function copyByIndex(arr, index_arr) {\n    const result \x3d [];\n    forEach(index_arr, function(index) {\n      result.push(arr[index]);\n    });\n    return result;\n  }\n  exports.copyByIndex \x3d copyByIndex;\n  function concatMap(arr, f, opt_obj) {\n    return concat.apply([], map(arr, f, opt_obj));\n  }\n  exports.concatMap \x3d concatMap;\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.labs.useragent.useragent.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.labs.userAgent\x22);\n  const USE_CLIENT_HINTS_OVERRIDE \x3d goog.define(\x22goog.labs.userAgent.USE_CLIENT_HINTS_OVERRIDE\x22, \x22\x22);\n  const USE_CLIENT_HINTS \x3d goog.define(\x22goog.labs.userAgent.USE_CLIENT_HINTS\x22, false);\n  exports.USE_CLIENT_HINTS \x3d (() \x3d\x3e {\n    const override \x3d USE_CLIENT_HINTS_OVERRIDE ? goog.getObjectByName(USE_CLIENT_HINTS_OVERRIDE) : null;\n    return override !\x3d null ? override : USE_CLIENT_HINTS;\n  })();\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.labs.useragent.util.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.labs.userAgent.util\x22);\n  goog.module.declareLegacyNamespace();\n  const {USE_CLIENT_HINTS} \x3d goog.require(\x22goog.labs.userAgent\x22);\n  const {caseInsensitiveContains, contains} \x3d goog.require(\x22goog.string.internal\x22);\n  const ASSUME_CLIENT_HINTS_SUPPORT \x3d false;\n  function getNativeUserAgentString() {\n    const navigator \x3d getNavigator();\n    if (navigator) {\n      const userAgent \x3d navigator.userAgent;\n      if (userAgent) {\n        return userAgent;\n      }\n    }\n    return \x22\x22;\n  }\n  function getNativeUserAgentData() {\n    if (!USE_CLIENT_HINTS) {\n      return null;\n    }\n    const navigator \x3d getNavigator();\n    if (navigator) {\n      return navigator.userAgentData || null;\n    }\n    return null;\n  }\n  function getNavigator() {\n    return goog.global.navigator;\n  }\n  let userAgentInternal \x3d getNativeUserAgentString();\n  let userAgentDataInternal \x3d getNativeUserAgentData();\n  function setUserAgent(userAgent \x3d undefined) {\n    userAgentInternal \x3d typeof userAgent \x3d\x3d\x3d \x22string\x22 ? userAgent : getNativeUserAgentString();\n  }\n  function getUserAgent() {\n    return userAgentInternal;\n  }\n  function setUserAgentData(userAgentData) {\n    userAgentDataInternal \x3d userAgentData;\n  }\n  function resetUserAgentData() {\n    userAgentDataInternal \x3d getNativeUserAgentData();\n  }\n  function getUserAgentData() {\n    return userAgentDataInternal;\n  }\n  function matchUserAgentDataBrand(str) {\n    const data \x3d getUserAgentData();\n    if (!data) {\n      return false;\n    }\n    return data.brands.some(({brand}) \x3d\x3e brand \x26\x26 contains(brand, str));\n  }\n  function matchUserAgent(str) {\n    const userAgent \x3d getUserAgent();\n    return contains(userAgent, str);\n  }\n  function matchUserAgentIgnoreCase(str) {\n    const userAgent \x3d getUserAgent();\n    return caseInsensitiveContains(userAgent, str);\n  }\n  function extractVersionTuples(userAgent) {\n    const versionRegExp \x3d new RegExp(\x22(\\\\w[\\\\w ]+)\x22 + \x22/\x22 + \x22([^\\\\s]+)\x22 + \x22\\\\s*\x22 + \x22(?:\\\\((.*?)\\\\))?\x22, \x22g\x22);\n    const data \x3d [];\n    let match;\n    while (match \x3d versionRegExp.exec(userAgent)) {\n      data.push([match[1], match[2], match[3] || undefined]);\n    }\n    return data;\n  }\n  exports \x3d {ASSUME_CLIENT_HINTS_SUPPORT, extractVersionTuples, getNativeUserAgentString, getUserAgent, getUserAgentData, matchUserAgent, matchUserAgentDataBrand, matchUserAgentIgnoreCase, resetUserAgentData, setUserAgent, setUserAgentData,};\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.labs.useragent.browser.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.labs.userAgent.browser\x22);\n  goog.module.declareLegacyNamespace();\n  const googArray \x3d goog.require(\x22goog.array\x22);\n  const googObject \x3d goog.require(\x22goog.object\x22);\n  const util \x3d goog.require(\x22goog.labs.userAgent.util\x22);\n  const {compareVersions} \x3d goog.require(\x22goog.string.internal\x22);\n  function useUserAgentBrand() {\n    const userAgentData \x3d util.getUserAgentData();\n    return !!userAgentData \x26\x26 userAgentData.brands.length \x3e 0;\n  }\n  function matchOpera() {\n    if (util.ASSUME_CLIENT_HINTS_SUPPORT || util.getUserAgentData()) {\n      return false;\n    }\n    return util.matchUserAgent(\x22Opera\x22);\n  }\n  function matchIE() {\n    if (util.ASSUME_CLIENT_HINTS_SUPPORT || util.getUserAgentData()) {\n      return false;\n    }\n    return util.matchUserAgent(\x22Trident\x22) || util.matchUserAgent(\x22MSIE\x22);\n  }\n  function matchEdgeHtml() {\n    if (util.ASSUME_CLIENT_HINTS_SUPPORT || util.getUserAgentData()) {\n      return false;\n    }\n    return util.matchUserAgent(\x22Edge\x22);\n  }\n  function matchEdgeChromium() {\n    if (useUserAgentBrand()) {\n      return util.matchUserAgentDataBrand(\x22Edge\x22);\n    }\n    return util.matchUserAgent(\x22Edg/\x22);\n  }\n  function matchOperaChromium() {\n    if (useUserAgentBrand()) {\n      return util.matchUserAgentDataBrand(\x22Opera\x22);\n    }\n    return util.matchUserAgent(\x22OPR\x22);\n  }\n  function matchFirefox() {\n    if (useUserAgentBrand()) {\n      return util.matchUserAgentDataBrand(\x22Firefox\x22);\n    }\n    return util.matchUserAgent(\x22Firefox\x22) || util.matchUserAgent(\x22FxiOS\x22);\n  }\n  function matchSafari() {\n    if (useUserAgentBrand()) {\n      return util.matchUserAgentDataBrand(\x22Safari\x22);\n    }\n    return util.matchUserAgent(\x22Safari\x22) \x26\x26 !(matchChrome() || matchCoast() || matchOpera() || matchEdgeHtml() || matchEdgeChromium() || matchOperaChromium() || matchFirefox() || isSilk() || util.matchUserAgent(\x22Android\x22));\n  }\n  function matchCoast() {\n    if (util.ASSUME_CLIENT_HINTS_SUPPORT || util.getUserAgentData()) {\n      return false;\n    }\n    return util.matchUserAgent(\x22Coast\x22);\n  }\n  function matchIosWebview() {\n    return (util.matchUserAgent(\x22iPad\x22) || util.matchUserAgent(\x22iPhone\x22)) \x26\x26 !matchSafari() \x26\x26 !matchChrome() \x26\x26 !matchCoast() \x26\x26 !matchFirefox() \x26\x26 util.matchUserAgent(\x22AppleWebKit\x22);\n  }\n  function matchChrome() {\n    if (useUserAgentBrand()) {\n      return util.matchUserAgentDataBrand(\x22Chromium\x22);\n    }\n    return (util.matchUserAgent(\x22Chrome\x22) || util.matchUserAgent(\x22CriOS\x22)) \x26\x26 !matchEdgeHtml();\n  }\n  function matchAndroidBrowser() {\n    return util.matchUserAgent(\x22Android\x22) \x26\x26 !(isChrome() || isFirefox() || isOpera() || isSilk());\n  }\n  const isOpera \x3d matchOpera;\n  const isIE \x3d matchIE;\n  const isEdge \x3d matchEdgeHtml;\n  const isEdgeChromium \x3d matchEdgeChromium;\n  const isOperaChromium \x3d matchOperaChromium;\n  const isFirefox \x3d matchFirefox;\n  const isSafari \x3d matchSafari;\n  const isCoast \x3d matchCoast;\n  const isIosWebview \x3d matchIosWebview;\n  const isChrome \x3d matchChrome;\n  const isAndroidBrowser \x3d matchAndroidBrowser;\n  function isSilk() {\n    if (useUserAgentBrand()) {\n      return util.matchUserAgentDataBrand(\x22Silk\x22);\n    }\n    return util.matchUserAgent(\x22Silk\x22);\n  }\n  function getVersion() {\n    const userAgentString \x3d util.getUserAgent();\n    if (isIE()) {\n      return getIEVersion(userAgentString);\n    }\n    const versionTuples \x3d util.extractVersionTuples(userAgentString);\n    const versionMap \x3d {};\n    versionTuples.forEach(tuple \x3d\x3e {\n      const key \x3d tuple[0];\n      const value \x3d tuple[1];\n      versionMap[key] \x3d value;\n    });\n    const versionMapHasKey \x3d goog.partial(googObject.containsKey, versionMap);\n    function lookUpValueWithKeys(keys) {\n      const key \x3d googArray.find(keys, versionMapHasKey);\n      return versionMap[key] || \x22\x22;\n    }\n    if (isOpera()) {\n      return lookUpValueWithKeys([\x22Version\x22, \x22Opera\x22]);\n    }\n    if (isEdge()) {\n      return lookUpValueWithKeys([\x22Edge\x22]);\n    }\n    if (isEdgeChromium()) {\n      return lookUpValueWithKeys([\x22Edg\x22]);\n    }\n    if (isChrome()) {\n      return lookUpValueWithKeys([\x22Chrome\x22, \x22CriOS\x22, \x22HeadlessChrome\x22]);\n    }\n    const tuple \x3d versionTuples[2];\n    return tuple \x26\x26 tuple[1] || \x22\x22;\n  }\n  function isVersionOrHigher(version) {\n    return compareVersions(getVersion(), version) \x3e\x3d 0;\n  }\n  function getIEVersion(userAgent) {\n    const rv \x3d /rv: *([\\d\\.]*)/.exec(userAgent);\n    if (rv \x26\x26 rv[1]) {\n      return rv[1];\n    }\n    let version \x3d \x22\x22;\n    const msie \x3d /MSIE +([\\d\\.]+)/.exec(userAgent);\n    if (msie \x26\x26 msie[1]) {\n      const tridentVersion \x3d /Trident\\/(\\d.\\d)/.exec(userAgent);\n      if (msie[1] \x3d\x3d \x227.0\x22) {\n        if (tridentVersion \x26\x26 tridentVersion[1]) {\n          switch(tridentVersion[1]) {\n            case \x224.0\x22:\n              version \x3d \x228.0\x22;\n              break;\n            case \x225.0\x22:\n              version \x3d \x229.0\x22;\n              break;\n            case \x226.0\x22:\n              version \x3d \x2210.0\x22;\n              break;\n            case \x227.0\x22:\n              version \x3d \x2211.0\x22;\n              break;\n          }\n        } else {\n          version \x3d \x227.0\x22;\n        }\n      } else {\n        version \x3d msie[1];\n      }\n    }\n    return version;\n  }\n  exports \x3d {getVersion, isAndroidBrowser, isChrome, isCoast, isEdge, isEdgeChromium, isFirefox, isIE, isIosWebview, isOpera, isOperaChromium, isSafari, isSilk, isVersionOrHigher,};\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.dom.tags.js", true , "goog.provide(\x22goog.dom.tags\x22);\ngoog.require(\x22goog.object\x22);\ngoog.dom.tags.VOID_TAGS_ \x3d goog.object.createSet(\x22area\x22, \x22base\x22, \x22br\x22, \x22col\x22, \x22command\x22, \x22embed\x22, \x22hr\x22, \x22img\x22, \x22input\x22, \x22keygen\x22, \x22link\x22, \x22meta\x22, \x22param\x22, \x22source\x22, \x22track\x22, \x22wbr\x22);\ngoog.dom.tags.isVoidTag \x3d function(tagName) {\n  return goog.dom.tags.VOID_TAGS_[tagName] \x3d\x3d\x3d true;\n};\n");
SHADOW_ENV.evalLoad("goog.html.safehtml.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.html.SafeHtml\x22);\n  goog.module.declareLegacyNamespace();\n  const Const \x3d goog.require(\x22goog.string.Const\x22);\n  const Dir \x3d goog.require(\x22goog.i18n.bidi.Dir\x22);\n  const DirectionalString \x3d goog.require(\x22goog.i18n.bidi.DirectionalString\x22);\n  const SafeScript \x3d goog.require(\x22goog.html.SafeScript\x22);\n  const SafeStyle \x3d goog.require(\x22goog.html.SafeStyle\x22);\n  const SafeStyleSheet \x3d goog.require(\x22goog.html.SafeStyleSheet\x22);\n  const SafeUrl \x3d goog.require(\x22goog.html.SafeUrl\x22);\n  const TagName \x3d goog.require(\x22goog.dom.TagName\x22);\n  const TrustedResourceUrl \x3d goog.require(\x22goog.html.TrustedResourceUrl\x22);\n  const TypedString \x3d goog.require(\x22goog.string.TypedString\x22);\n  const asserts \x3d goog.require(\x22goog.asserts\x22);\n  const browser \x3d goog.require(\x22goog.labs.userAgent.browser\x22);\n  const googArray \x3d goog.require(\x22goog.array\x22);\n  const googObject \x3d goog.require(\x22goog.object\x22);\n  const internal \x3d goog.require(\x22goog.string.internal\x22);\n  const tags \x3d goog.require(\x22goog.dom.tags\x22);\n  const trustedtypes \x3d goog.require(\x22goog.html.trustedtypes\x22);\n  const CONSTRUCTOR_TOKEN_PRIVATE \x3d {};\n  class SafeHtml {\n    constructor(value, dir, token) {\n      this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ \x3d token \x3d\x3d\x3d CONSTRUCTOR_TOKEN_PRIVATE ? value : \x22\x22;\n      this.dir_ \x3d dir;\n      this.implementsGoogI18nBidiDirectionalString \x3d true;\n      this.implementsGoogStringTypedString \x3d true;\n    }\n    getDirection() {\n      return this.dir_;\n    }\n    getTypedStringValue() {\n      return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();\n    }\n    toString() {\n      return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();\n    }\n    static unwrap(safeHtml) {\n      return SafeHtml.unwrapTrustedHTML(safeHtml).toString();\n    }\n    static unwrapTrustedHTML(safeHtml) {\n      if (safeHtml instanceof SafeHtml \x26\x26 safeHtml.constructor \x3d\x3d\x3d SafeHtml) {\n        return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;\n      } else {\n        asserts.fail(`expected object of type SafeHtml, got \x27${safeHtml}\x27 of type ` + goog.typeOf(safeHtml));\n        return \x22type_error:SafeHtml\x22;\n      }\n    }\n    static htmlEscape(textOrHtml) {\n      if (textOrHtml instanceof SafeHtml) {\n        return textOrHtml;\n      }\n      const textIsObject \x3d typeof textOrHtml \x3d\x3d \x22object\x22;\n      let dir \x3d null;\n      if (textIsObject \x26\x26 textOrHtml.implementsGoogI18nBidiDirectionalString) {\n        dir \x3d textOrHtml.getDirection();\n      }\n      let textAsString;\n      if (textIsObject \x26\x26 textOrHtml.implementsGoogStringTypedString) {\n        textAsString \x3d textOrHtml.getTypedStringValue();\n      } else {\n        textAsString \x3d String(textOrHtml);\n      }\n      return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(internal.htmlEscape(textAsString), dir);\n    }\n    static htmlEscapePreservingNewlines(textOrHtml) {\n      if (textOrHtml instanceof SafeHtml) {\n        return textOrHtml;\n      }\n      const html \x3d SafeHtml.htmlEscape(textOrHtml);\n      return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(internal.newLineToBr(SafeHtml.unwrap(html)), html.getDirection());\n    }\n    static htmlEscapePreservingNewlinesAndSpaces(textOrHtml) {\n      if (textOrHtml instanceof SafeHtml) {\n        return textOrHtml;\n      }\n      const html \x3d SafeHtml.htmlEscape(textOrHtml);\n      return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(internal.whitespaceEscape(SafeHtml.unwrap(html)), html.getDirection());\n    }\n    static comment(text) {\n      return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\x22\\x3c!--\x22 + internal.htmlEscape(text) + \x22--\\x3e\x22, null);\n    }\n    static create(tagName, attributes \x3d undefined, content \x3d undefined) {\n      SafeHtml.verifyTagName(String(tagName));\n      return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(tagName), attributes, content);\n    }\n    static verifyTagName(tagName) {\n      if (!VALID_NAMES_IN_TAG.test(tagName)) {\n        throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? `Invalid tag name \x3c${tagName}\x3e.` : \x22\x22);\n      }\n      if (tagName.toUpperCase() in NOT_ALLOWED_TAG_NAMES) {\n        throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? `Tag name \x3c${tagName}\x3e is not allowed for SafeHtml.` : \x22\x22);\n      }\n    }\n    static createIframe(src \x3d undefined, srcdoc \x3d undefined, attributes \x3d undefined, content \x3d undefined) {\n      if (src) {\n        TrustedResourceUrl.unwrap(src);\n      }\n      const fixedAttributes \x3d {};\n      fixedAttributes[\x22src\x22] \x3d src || null;\n      fixedAttributes[\x22srcdoc\x22] \x3d srcdoc \x26\x26 SafeHtml.unwrap(srcdoc);\n      const defaultAttributes \x3d {\x22sandbox\x22:\x22\x22};\n      const combinedAttrs \x3d SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, attributes);\n      return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\x22iframe\x22, combinedAttrs, content);\n    }\n    static createSandboxIframe(src \x3d undefined, srcdoc \x3d undefined, attributes \x3d undefined, content \x3d undefined) {\n      if (!SafeHtml.canUseSandboxIframe()) {\n        throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? \x22The browser does not support sandboxed iframes.\x22 : \x22\x22);\n      }\n      const fixedAttributes \x3d {};\n      if (src) {\n        fixedAttributes[\x22src\x22] \x3d SafeUrl.unwrap(SafeUrl.sanitize(src));\n      } else {\n        fixedAttributes[\x22src\x22] \x3d null;\n      }\n      fixedAttributes[\x22srcdoc\x22] \x3d srcdoc || null;\n      fixedAttributes[\x22sandbox\x22] \x3d \x22\x22;\n      const combinedAttrs \x3d SafeHtml.combineAttributes(fixedAttributes, {}, attributes);\n      return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\x22iframe\x22, combinedAttrs, content);\n    }\n    static canUseSandboxIframe() {\n      return goog.global[\x22HTMLIFrameElement\x22] \x26\x26 \x22sandbox\x22 in goog.global[\x22HTMLIFrameElement\x22].prototype;\n    }\n    static createScriptSrc(src, attributes \x3d undefined) {\n      TrustedResourceUrl.unwrap(src);\n      const fixedAttributes \x3d {\x22src\x22:src};\n      const defaultAttributes \x3d {};\n      const combinedAttrs \x3d SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, attributes);\n      return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\x22script\x22, combinedAttrs);\n    }\n    static createScript(script, attributes \x3d undefined) {\n      for (let attr in attributes) {\n        if (Object.prototype.hasOwnProperty.call(attributes, attr)) {\n          const attrLower \x3d attr.toLowerCase();\n          if (attrLower \x3d\x3d \x22language\x22 || attrLower \x3d\x3d \x22src\x22 || attrLower \x3d\x3d \x22text\x22 || attrLower \x3d\x3d \x22type\x22) {\n            throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? `Cannot set \x22${attrLower}\x22 attribute` : \x22\x22);\n          }\n        }\n      }\n      let content \x3d \x22\x22;\n      script \x3d googArray.concat(script);\n      for (let i \x3d 0; i \x3c script.length; i++) {\n        content +\x3d SafeScript.unwrap(script[i]);\n      }\n      const htmlContent \x3d SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, Dir.NEUTRAL);\n      return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\x22script\x22, attributes, htmlContent);\n    }\n    static createStyle(styleSheet, attributes \x3d undefined) {\n      const fixedAttributes \x3d {\x22type\x22:\x22text/css\x22};\n      const defaultAttributes \x3d {};\n      const combinedAttrs \x3d SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, attributes);\n      let content \x3d \x22\x22;\n      styleSheet \x3d googArray.concat(styleSheet);\n      for (let i \x3d 0; i \x3c styleSheet.length; i++) {\n        content +\x3d SafeStyleSheet.unwrap(styleSheet[i]);\n      }\n      const htmlContent \x3d SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, Dir.NEUTRAL);\n      return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\x22style\x22, combinedAttrs, htmlContent);\n    }\n    static createMetaRefresh(url, secs \x3d undefined) {\n      let unwrappedUrl \x3d SafeUrl.unwrap(SafeUrl.sanitize(url));\n      if (browser.isIE() || browser.isEdge()) {\n        if (internal.contains(unwrappedUrl, \x22;\x22)) {\n          unwrappedUrl \x3d \x22\x27\x22 + unwrappedUrl.replace(/\x27/g, \x22%27\x22) + \x22\x27\x22;\n        }\n      }\n      const attributes \x3d {\x22http-equiv\x22:\x22refresh\x22, \x22content\x22:(secs || 0) + \x22; url\\x3d\x22 + unwrappedUrl,};\n      return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\x22meta\x22, attributes);\n    }\n    static createWithDir(dir, tagName, attributes \x3d undefined, content \x3d undefined) {\n      const html \x3d SafeHtml.create(tagName, attributes, content);\n      html.dir_ \x3d dir;\n      return html;\n    }\n    static join(separator, parts) {\n      const separatorHtml \x3d SafeHtml.htmlEscape(separator);\n      let dir \x3d separatorHtml.getDirection();\n      const content \x3d [];\n      const addArgument \x3d argument \x3d\x3e {\n        if (Array.isArray(argument)) {\n          argument.forEach(addArgument);\n        } else {\n          const html \x3d SafeHtml.htmlEscape(argument);\n          content.push(SafeHtml.unwrap(html));\n          const htmlDir \x3d html.getDirection();\n          if (dir \x3d\x3d Dir.NEUTRAL) {\n            dir \x3d htmlDir;\n          } else if (htmlDir !\x3d Dir.NEUTRAL \x26\x26 dir !\x3d htmlDir) {\n            dir \x3d null;\n          }\n        }\n      };\n      parts.forEach(addArgument);\n      return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content.join(SafeHtml.unwrap(separatorHtml)), dir);\n    }\n    static concat(var_args) {\n      return SafeHtml.join(SafeHtml.EMPTY, Array.prototype.slice.call(arguments));\n    }\n    static concatWithDir(dir, var_args) {\n      const html \x3d SafeHtml.concat(Array.prototype.slice.call(arguments, 1));\n      html.dir_ \x3d dir;\n      return html;\n    }\n    static createSafeHtmlSecurityPrivateDoNotAccessOrElse(html, dir) {\n      const policy \x3d trustedtypes.getPolicyPrivateDoNotAccessOrElse();\n      const trustedHtml \x3d policy ? policy.createHTML(html) : html;\n      return new SafeHtml(trustedHtml, dir, CONSTRUCTOR_TOKEN_PRIVATE);\n    }\n    static createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(tagName, attributes \x3d undefined, content \x3d undefined) {\n      let dir \x3d null;\n      let result \x3d `\x3c${tagName}`;\n      result +\x3d SafeHtml.stringifyAttributes(tagName, attributes);\n      if (content \x3d\x3d null) {\n        content \x3d [];\n      } else if (!Array.isArray(content)) {\n        content \x3d [content];\n      }\n      if (tags.isVoidTag(tagName.toLowerCase())) {\n        asserts.assert(!content.length, `Void tag \x3c${tagName}\x3e does not allow content.`);\n        result +\x3d \x22\\x3e\x22;\n      } else {\n        const html \x3d SafeHtml.concat(content);\n        result +\x3d \x22\\x3e\x22 + SafeHtml.unwrap(html) + \x22\\x3c/\x22 + tagName + \x22\\x3e\x22;\n        dir \x3d html.getDirection();\n      }\n      const dirAttribute \x3d attributes \x26\x26 attributes[\x22dir\x22];\n      if (dirAttribute) {\n        if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {\n          dir \x3d Dir.NEUTRAL;\n        } else {\n          dir \x3d null;\n        }\n      }\n      return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);\n    }\n    static stringifyAttributes(tagName, attributes \x3d undefined) {\n      let result \x3d \x22\x22;\n      if (attributes) {\n        for (let name in attributes) {\n          if (Object.prototype.hasOwnProperty.call(attributes, name)) {\n            if (!VALID_NAMES_IN_TAG.test(name)) {\n              throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? `Invalid attribute name \x22${name}\x22.` : \x22\x22);\n            }\n            const value \x3d attributes[name];\n            if (value \x3d\x3d null) {\n              continue;\n            }\n            result +\x3d \x22 \x22 + getAttrNameAndValue(tagName, name, value);\n          }\n        }\n      }\n      return result;\n    }\n    static combineAttributes(fixedAttributes, defaultAttributes, attributes \x3d undefined) {\n      const combinedAttributes \x3d {};\n      for (const name in fixedAttributes) {\n        if (Object.prototype.hasOwnProperty.call(fixedAttributes, name)) {\n          asserts.assert(name.toLowerCase() \x3d\x3d name, \x22Must be lower case\x22);\n          combinedAttributes[name] \x3d fixedAttributes[name];\n        }\n      }\n      for (const name in defaultAttributes) {\n        if (Object.prototype.hasOwnProperty.call(defaultAttributes, name)) {\n          asserts.assert(name.toLowerCase() \x3d\x3d name, \x22Must be lower case\x22);\n          combinedAttributes[name] \x3d defaultAttributes[name];\n        }\n      }\n      if (attributes) {\n        for (const name in attributes) {\n          if (Object.prototype.hasOwnProperty.call(attributes, name)) {\n            const nameLower \x3d name.toLowerCase();\n            if (nameLower in fixedAttributes) {\n              throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? `Cannot override \x22${nameLower}\x22 attribute, got \x22` + name + \x27\x22 with value \x22\x27 + attributes[name] + \x27\x22\x27 : \x22\x22);\n            }\n            if (nameLower in defaultAttributes) {\n              delete combinedAttributes[nameLower];\n            }\n            combinedAttributes[name] \x3d attributes[name];\n          }\n        }\n      }\n      return combinedAttributes;\n    }\n  }\n  SafeHtml.ENABLE_ERROR_MESSAGES \x3d goog.define(\x22goog.html.SafeHtml.ENABLE_ERROR_MESSAGES\x22, goog.DEBUG);\n  SafeHtml.SUPPORT_STYLE_ATTRIBUTE \x3d goog.define(\x22goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE\x22, true);\n  SafeHtml.TextOrHtml_;\n  SafeHtml.from \x3d SafeHtml.htmlEscape;\n  const VALID_NAMES_IN_TAG \x3d /^[a-zA-Z0-9-]+$/;\n  const URL_ATTRIBUTES \x3d googObject.createSet(\x22action\x22, \x22cite\x22, \x22data\x22, \x22formaction\x22, \x22href\x22, \x22manifest\x22, \x22poster\x22, \x22src\x22);\n  const NOT_ALLOWED_TAG_NAMES \x3d googObject.createSet(TagName.APPLET, TagName.BASE, TagName.EMBED, TagName.IFRAME, TagName.LINK, TagName.MATH, TagName.META, TagName.OBJECT, TagName.SCRIPT, TagName.STYLE, TagName.SVG, TagName.TEMPLATE);\n  SafeHtml.AttributeValue;\n  function getAttrNameAndValue(tagName, name, value) {\n    if (value instanceof Const) {\n      value \x3d Const.unwrap(value);\n    } else if (name.toLowerCase() \x3d\x3d \x22style\x22) {\n      if (SafeHtml.SUPPORT_STYLE_ATTRIBUTE) {\n        value \x3d getStyleValue(value);\n      } else {\n        throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? \x27Attribute \x22style\x22 not supported.\x27 : \x22\x22);\n      }\n    } else if (/^on/i.test(name)) {\n      throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? `Attribute \x22${name}` + \x27\x22 requires goog.string.Const value, \x22\x27 + value + \x27\x22 given.\x27 : \x22\x22);\n    } else if (name.toLowerCase() in URL_ATTRIBUTES) {\n      if (value instanceof TrustedResourceUrl) {\n        value \x3d TrustedResourceUrl.unwrap(value);\n      } else if (value instanceof SafeUrl) {\n        value \x3d SafeUrl.unwrap(value);\n      } else if (typeof value \x3d\x3d\x3d \x22string\x22) {\n        value \x3d SafeUrl.sanitize(value).getTypedStringValue();\n      } else {\n        throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? `Attribute \x22${name}\x22 on tag \x22${tagName}` + \x27\x22 requires goog.html.SafeUrl, goog.string.Const, or\x27 + \x27 string, value \x22\x27 + value + \x27\x22 given.\x27 : \x22\x22);\n      }\n    }\n    if (value.implementsGoogStringTypedString) {\n      value \x3d value.getTypedStringValue();\n    }\n    asserts.assert(typeof value \x3d\x3d\x3d \x22string\x22 || typeof value \x3d\x3d\x3d \x22number\x22, \x22String or number value expected, got \x22 + typeof value + \x22 with value: \x22 + value);\n    return `${name}\x3d\x22` + internal.htmlEscape(String(value)) + \x27\x22\x27;\n  }\n  function getStyleValue(value) {\n    if (!goog.isObject(value)) {\n      throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? \x27The \x22style\x22 attribute requires goog.html.SafeStyle or map \x27 + \x22of style properties, \x22 + typeof value + \x22 given: \x22 + value : \x22\x22);\n    }\n    if (!(value instanceof SafeStyle)) {\n      value \x3d SafeStyle.create(value);\n    }\n    return SafeStyle.unwrap(value);\n  }\n  SafeHtml.DOCTYPE_HTML \x3d {valueOf:function() {\n    return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\x22\\x3c!DOCTYPE html\\x3e\x22, Dir.NEUTRAL);\n  },}.valueOf();\n  SafeHtml.EMPTY \x3d new SafeHtml(goog.global.trustedTypes \x26\x26 goog.global.trustedTypes.emptyHTML || \x22\x22, Dir.NEUTRAL, CONSTRUCTOR_TOKEN_PRIVATE);\n  SafeHtml.BR \x3d {valueOf:function() {\n    return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\x22\\x3cbr\\x3e\x22, Dir.NEUTRAL);\n  },}.valueOf();\n  exports \x3d SafeHtml;\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.html.uncheckedconversions.js", true , "goog.provide(\x22goog.html.uncheckedconversions\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.html.SafeHtml\x22);\ngoog.require(\x22goog.html.SafeScript\x22);\ngoog.require(\x22goog.html.SafeStyle\x22);\ngoog.require(\x22goog.html.SafeStyleSheet\x22);\ngoog.require(\x22goog.html.SafeUrl\x22);\ngoog.require(\x22goog.html.TrustedResourceUrl\x22);\ngoog.require(\x22goog.string.Const\x22);\ngoog.require(\x22goog.string.internal\x22);\ngoog.requireType(\x22goog.i18n.bidi.Dir\x22);\ngoog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract \x3d function(justification, html, opt_dir) {\n  goog.asserts.assertString(goog.string.Const.unwrap(justification), \x22must provide justification\x22);\n  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), \x22must provide non-empty justification\x22);\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(html, opt_dir || null);\n};\ngoog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract \x3d function(justification, script) {\n  goog.asserts.assertString(goog.string.Const.unwrap(justification), \x22must provide justification\x22);\n  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), \x22must provide non-empty justification\x22);\n  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(script);\n};\ngoog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract \x3d function(justification, style) {\n  goog.asserts.assertString(goog.string.Const.unwrap(justification), \x22must provide justification\x22);\n  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), \x22must provide non-empty justification\x22);\n  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);\n};\ngoog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract \x3d function(justification, styleSheet) {\n  goog.asserts.assertString(goog.string.Const.unwrap(justification), \x22must provide justification\x22);\n  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), \x22must provide non-empty justification\x22);\n  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);\n};\ngoog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract \x3d function(justification, url) {\n  goog.asserts.assertString(goog.string.Const.unwrap(justification), \x22must provide justification\x22);\n  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), \x22must provide non-empty justification\x22);\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\ngoog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract \x3d function(justification, url) {\n  goog.asserts.assertString(goog.string.Const.unwrap(justification), \x22must provide justification\x22);\n  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), \x22must provide non-empty justification\x22);\n  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);\n};\n");
SHADOW_ENV.evalLoad("goog.dom.safe.js", true , "goog.provide(\x22goog.dom.safe\x22);\ngoog.provide(\x22goog.dom.safe.InsertAdjacentHtmlPosition\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.dom.asserts\x22);\ngoog.require(\x22goog.functions\x22);\ngoog.require(\x22goog.html.SafeHtml\x22);\ngoog.require(\x22goog.html.SafeScript\x22);\ngoog.require(\x22goog.html.SafeStyle\x22);\ngoog.require(\x22goog.html.SafeUrl\x22);\ngoog.require(\x22goog.html.TrustedResourceUrl\x22);\ngoog.require(\x22goog.html.uncheckedconversions\x22);\ngoog.require(\x22goog.string.Const\x22);\ngoog.require(\x22goog.string.internal\x22);\ngoog.dom.safe.InsertAdjacentHtmlPosition \x3d {AFTERBEGIN:\x22afterbegin\x22, AFTEREND:\x22afterend\x22, BEFOREBEGIN:\x22beforebegin\x22, BEFOREEND:\x22beforeend\x22};\ngoog.dom.safe.insertAdjacentHtml \x3d function(node, position, html) {\n  node.insertAdjacentHTML(position, goog.html.SafeHtml.unwrapTrustedHTML(html));\n};\ngoog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_ \x3d {\x22MATH\x22:true, \x22SCRIPT\x22:true, \x22STYLE\x22:true, \x22SVG\x22:true, \x22TEMPLATE\x22:true};\ngoog.dom.safe.isInnerHtmlCleanupRecursive_ \x3d goog.functions.cacheReturnValue(function() {\n  if (goog.DEBUG \x26\x26 typeof document \x3d\x3d\x3d \x22undefined\x22) {\n    return false;\n  }\n  var div \x3d document.createElement(\x22div\x22);\n  var childDiv \x3d document.createElement(\x22div\x22);\n  childDiv.appendChild(document.createElement(\x22div\x22));\n  div.appendChild(childDiv);\n  if (goog.DEBUG \x26\x26 !div.firstChild) {\n    return false;\n  }\n  var innerChild \x3d div.firstChild.firstChild;\n  div.innerHTML \x3d goog.html.SafeHtml.unwrapTrustedHTML(goog.html.SafeHtml.EMPTY);\n  return !innerChild.parentElement;\n});\ngoog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse \x3d function(elem, html) {\n  if (goog.dom.safe.isInnerHtmlCleanupRecursive_()) {\n    while (elem.lastChild) {\n      elem.removeChild(elem.lastChild);\n    }\n  }\n  elem.innerHTML \x3d goog.html.SafeHtml.unwrapTrustedHTML(html);\n};\ngoog.dom.safe.setInnerHtml \x3d function(elem, html) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 elem.tagName) {\n    var tagName \x3d elem.tagName.toUpperCase();\n    if (goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[tagName]) {\n      throw new Error(\x22goog.dom.safe.setInnerHtml cannot be used to set content of \x22 + elem.tagName + \x22.\x22);\n    }\n  }\n  goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(elem, html);\n};\ngoog.dom.safe.setInnerHtmlFromConstant \x3d function(element, constHtml) {\n  goog.dom.safe.setInnerHtml(element, goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from(\x22Constant HTML to be immediatelly used.\x22), goog.string.Const.unwrap(constHtml)));\n};\ngoog.dom.safe.setOuterHtml \x3d function(elem, html) {\n  elem.outerHTML \x3d goog.html.SafeHtml.unwrapTrustedHTML(html);\n};\ngoog.dom.safe.setFormElementAction \x3d function(form, url) {\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl \x3d url;\n  } else {\n    safeUrl \x3d goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  goog.dom.asserts.assertIsHTMLFormElement(form).action \x3d goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.setButtonFormAction \x3d function(button, url) {\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl \x3d url;\n  } else {\n    safeUrl \x3d goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  goog.dom.asserts.assertIsHTMLButtonElement(button).formAction \x3d goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.setInputFormAction \x3d function(input, url) {\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl \x3d url;\n  } else {\n    safeUrl \x3d goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  goog.dom.asserts.assertIsHTMLInputElement(input).formAction \x3d goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.setStyle \x3d function(elem, style) {\n  elem.style.cssText \x3d goog.html.SafeStyle.unwrap(style);\n};\ngoog.dom.safe.documentWrite \x3d function(doc, html) {\n  doc.write(goog.html.SafeHtml.unwrapTrustedHTML(html));\n};\ngoog.dom.safe.setAnchorHref \x3d function(anchor, url) {\n  goog.dom.asserts.assertIsHTMLAnchorElement(anchor);\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl \x3d url;\n  } else {\n    safeUrl \x3d goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  anchor.href \x3d goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.setImageSrc \x3d function(imageElement, url) {\n  goog.dom.asserts.assertIsHTMLImageElement(imageElement);\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl \x3d url;\n  } else {\n    var allowDataUrl \x3d /^data:image\\//i.test(url);\n    safeUrl \x3d goog.html.SafeUrl.sanitizeAssertUnchanged(url, allowDataUrl);\n  }\n  imageElement.src \x3d goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.setAudioSrc \x3d function(audioElement, url) {\n  goog.dom.asserts.assertIsHTMLAudioElement(audioElement);\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl \x3d url;\n  } else {\n    var allowDataUrl \x3d /^data:audio\\//i.test(url);\n    safeUrl \x3d goog.html.SafeUrl.sanitizeAssertUnchanged(url, allowDataUrl);\n  }\n  audioElement.src \x3d goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.setVideoSrc \x3d function(videoElement, url) {\n  goog.dom.asserts.assertIsHTMLVideoElement(videoElement);\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl \x3d url;\n  } else {\n    var allowDataUrl \x3d /^data:video\\//i.test(url);\n    safeUrl \x3d goog.html.SafeUrl.sanitizeAssertUnchanged(url, allowDataUrl);\n  }\n  videoElement.src \x3d goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.setEmbedSrc \x3d function(embed, url) {\n  goog.dom.asserts.assertIsHTMLEmbedElement(embed);\n  embed.src \x3d goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(url);\n};\ngoog.dom.safe.setFrameSrc \x3d function(frame, url) {\n  goog.dom.asserts.assertIsHTMLFrameElement(frame);\n  frame.src \x3d goog.html.TrustedResourceUrl.unwrap(url);\n};\ngoog.dom.safe.setIframeSrc \x3d function(iframe, url) {\n  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);\n  iframe.src \x3d goog.html.TrustedResourceUrl.unwrap(url);\n};\ngoog.dom.safe.setIframeSrcdoc \x3d function(iframe, html) {\n  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);\n  iframe.srcdoc \x3d goog.html.SafeHtml.unwrapTrustedHTML(html);\n};\ngoog.dom.safe.setLinkHrefAndRel \x3d function(link, url, rel) {\n  goog.dom.asserts.assertIsHTMLLinkElement(link);\n  link.rel \x3d rel;\n  if (goog.string.internal.caseInsensitiveContains(rel, \x22stylesheet\x22)) {\n    goog.asserts.assert(url instanceof goog.html.TrustedResourceUrl, \x27URL must be TrustedResourceUrl because \x22rel\x22 contains \x22stylesheet\x22\x27);\n    link.href \x3d goog.html.TrustedResourceUrl.unwrap(url);\n    const win \x3d link.ownerDocument \x26\x26 link.ownerDocument.defaultView;\n    const nonce \x3d goog.dom.safe.getStyleNonce(win);\n    if (nonce) {\n      link.setAttribute(\x22nonce\x22, nonce);\n    }\n  } else if (url instanceof goog.html.TrustedResourceUrl) {\n    link.href \x3d goog.html.TrustedResourceUrl.unwrap(url);\n  } else if (url instanceof goog.html.SafeUrl) {\n    link.href \x3d goog.html.SafeUrl.unwrap(url);\n  } else {\n    link.href \x3d goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitizeAssertUnchanged(url));\n  }\n};\ngoog.dom.safe.setObjectData \x3d function(object, url) {\n  goog.dom.asserts.assertIsHTMLObjectElement(object);\n  object.data \x3d goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(url);\n};\ngoog.dom.safe.setScriptSrc \x3d function(script, url) {\n  goog.dom.asserts.assertIsHTMLScriptElement(script);\n  script.src \x3d goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(url);\n  goog.dom.safe.setNonceForScriptElement_(script);\n};\ngoog.dom.safe.setScriptContent \x3d function(script, content) {\n  goog.dom.asserts.assertIsHTMLScriptElement(script);\n  script.textContent \x3d goog.html.SafeScript.unwrapTrustedScript(content);\n  goog.dom.safe.setNonceForScriptElement_(script);\n};\ngoog.dom.safe.setNonceForScriptElement_ \x3d function(script) {\n  var win \x3d script.ownerDocument \x26\x26 script.ownerDocument.defaultView;\n  const nonce \x3d goog.dom.safe.getScriptNonce(win);\n  if (nonce) {\n    script.setAttribute(\x22nonce\x22, nonce);\n  }\n};\ngoog.dom.safe.setLocationHref \x3d function(loc, url) {\n  goog.dom.asserts.assertIsLocation(loc);\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl \x3d url;\n  } else {\n    safeUrl \x3d goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  loc.href \x3d goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.assignLocation \x3d function(loc, url) {\n  goog.dom.asserts.assertIsLocation(loc);\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl \x3d url;\n  } else {\n    safeUrl \x3d goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  loc.assign(goog.html.SafeUrl.unwrap(safeUrl));\n};\ngoog.dom.safe.replaceLocation \x3d function(loc, url) {\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl \x3d url;\n  } else {\n    safeUrl \x3d goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  loc.replace(goog.html.SafeUrl.unwrap(safeUrl));\n};\ngoog.dom.safe.openInWindow \x3d function(url, opt_openerWin, opt_name, opt_specs) {\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl \x3d url;\n  } else {\n    safeUrl \x3d goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  var win \x3d opt_openerWin || goog.global;\n  var name \x3d opt_name instanceof goog.string.Const ? goog.string.Const.unwrap(opt_name) : opt_name || \x22\x22;\n  if (opt_specs !\x3d\x3d undefined) {\n    return win.open(goog.html.SafeUrl.unwrap(safeUrl), name, opt_specs);\n  } else {\n    return win.open(goog.html.SafeUrl.unwrap(safeUrl), name);\n  }\n};\ngoog.dom.safe.parseFromStringHtml \x3d function(parser, html) {\n  return goog.dom.safe.parseFromString(parser, html, \x22text/html\x22);\n};\ngoog.dom.safe.parseFromString \x3d function(parser, content, type) {\n  return parser.parseFromString(goog.html.SafeHtml.unwrapTrustedHTML(content), type);\n};\ngoog.dom.safe.createImageFromBlob \x3d function(blob) {\n  if (!/^image\\/.*/g.test(blob.type)) {\n    throw new Error(\x22goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.\x22);\n  }\n  var objectUrl \x3d goog.global.URL.createObjectURL(blob);\n  var image \x3d new goog.global.Image();\n  image.onload \x3d function() {\n    goog.global.URL.revokeObjectURL(objectUrl);\n  };\n  goog.dom.safe.setImageSrc(image, goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from(\x22Image blob URL.\x22), objectUrl));\n  return image;\n};\ngoog.dom.safe.createContextualFragment \x3d function(range, html) {\n  return range.createContextualFragment(goog.html.SafeHtml.unwrapTrustedHTML(html));\n};\ngoog.dom.safe.getScriptNonce \x3d function(opt_window) {\n  return goog.dom.safe.getNonce_(\x22script[nonce]\x22, opt_window);\n};\ngoog.dom.safe.getStyleNonce \x3d function(opt_window) {\n  return goog.dom.safe.getNonce_(\x27style[nonce],link[rel\\x3d\x22stylesheet\x22][nonce]\x27, opt_window);\n};\ngoog.dom.safe.NONCE_PATTERN_ \x3d /^[\\w+/_-]+[\x3d]{0,2}$/;\ngoog.dom.safe.getNonce_ \x3d function(selector, win) {\n  const doc \x3d (win || goog.global).document;\n  if (!doc.querySelector) {\n    return \x22\x22;\n  }\n  let el \x3d doc.querySelector(selector);\n  if (el) {\n    const nonce \x3d el[\x22nonce\x22] || el.getAttribute(\x22nonce\x22);\n    if (nonce \x26\x26 goog.dom.safe.NONCE_PATTERN_.test(nonce)) {\n      return nonce;\n    }\n  }\n  return \x22\x22;\n};\n");
SHADOW_ENV.evalLoad("goog.string.string.js", true , "goog.provide(\x22goog.string\x22);\ngoog.provide(\x22goog.string.Unicode\x22);\ngoog.require(\x22goog.dom.safe\x22);\ngoog.require(\x22goog.html.uncheckedconversions\x22);\ngoog.require(\x22goog.string.Const\x22);\ngoog.require(\x22goog.string.internal\x22);\ngoog.string.DETECT_DOUBLE_ESCAPING \x3d goog.define(\x22goog.string.DETECT_DOUBLE_ESCAPING\x22, false);\ngoog.string.FORCE_NON_DOM_HTML_UNESCAPING \x3d goog.define(\x22goog.string.FORCE_NON_DOM_HTML_UNESCAPING\x22, false);\ngoog.string.Unicode \x3d {NBSP:\x22\xa0\x22};\ngoog.string.startsWith \x3d goog.string.internal.startsWith;\ngoog.string.endsWith \x3d goog.string.internal.endsWith;\ngoog.string.caseInsensitiveStartsWith \x3d goog.string.internal.caseInsensitiveStartsWith;\ngoog.string.caseInsensitiveEndsWith \x3d goog.string.internal.caseInsensitiveEndsWith;\ngoog.string.caseInsensitiveEquals \x3d goog.string.internal.caseInsensitiveEquals;\ngoog.string.subs \x3d function(str, var_args) {\n  const splitParts \x3d str.split(\x22%s\x22);\n  let returnString \x3d \x22\x22;\n  const subsArguments \x3d Array.prototype.slice.call(arguments, 1);\n  while (subsArguments.length \x26\x26 splitParts.length \x3e 1) {\n    returnString +\x3d splitParts.shift() + subsArguments.shift();\n  }\n  return returnString + splitParts.join(\x22%s\x22);\n};\ngoog.string.collapseWhitespace \x3d function(str) {\n  return str.replace(/[\\s\\xa0]+/g, \x22 \x22).replace(/^\\s+|\\s+$/g, \x22\x22);\n};\ngoog.string.isEmptyOrWhitespace \x3d goog.string.internal.isEmptyOrWhitespace;\ngoog.string.isEmptyString \x3d function(str) {\n  return str.length \x3d\x3d 0;\n};\ngoog.string.isEmpty \x3d goog.string.isEmptyOrWhitespace;\ngoog.string.isEmptyOrWhitespaceSafe \x3d function(str) {\n  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));\n};\ngoog.string.isEmptySafe \x3d goog.string.isEmptyOrWhitespaceSafe;\ngoog.string.isBreakingWhitespace \x3d function(str) {\n  return !/[^\\t\\n\\r ]/.test(str);\n};\ngoog.string.isAlpha \x3d function(str) {\n  return !/[^a-zA-Z]/.test(str);\n};\ngoog.string.isNumeric \x3d function(str) {\n  return !/[^0-9]/.test(str);\n};\ngoog.string.isAlphaNumeric \x3d function(str) {\n  return !/[^a-zA-Z0-9]/.test(str);\n};\ngoog.string.isSpace \x3d function(ch) {\n  return ch \x3d\x3d \x22 \x22;\n};\ngoog.string.isUnicodeChar \x3d function(ch) {\n  return ch.length \x3d\x3d 1 \x26\x26 ch \x3e\x3d \x22 \x22 \x26\x26 ch \x3c\x3d \x22~\x22 || ch \x3e\x3d \x22\x80\x22 \x26\x26 ch \x3c\x3d \x22\ufffd\x22;\n};\ngoog.string.stripNewlines \x3d function(str) {\n  return str.replace(/(\\r\\n|\\r|\\n)+/g, \x22 \x22);\n};\ngoog.string.canonicalizeNewlines \x3d function(str) {\n  return str.replace(/(\\r\\n|\\r|\\n)/g, \x22\\n\x22);\n};\ngoog.string.normalizeWhitespace \x3d function(str) {\n  return str.replace(/\\xa0|\\s/g, \x22 \x22);\n};\ngoog.string.normalizeSpaces \x3d function(str) {\n  return str.replace(/\\xa0|[ \\t]+/g, \x22 \x22);\n};\ngoog.string.collapseBreakingSpaces \x3d function(str) {\n  return str.replace(/[\\t\\r\\n ]+/g, \x22 \x22).replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g, \x22\x22);\n};\ngoog.string.trim \x3d goog.string.internal.trim;\ngoog.string.trimLeft \x3d function(str) {\n  return str.replace(/^[\\s\\xa0]+/, \x22\x22);\n};\ngoog.string.trimRight \x3d function(str) {\n  return str.replace(/[\\s\\xa0]+$/, \x22\x22);\n};\ngoog.string.caseInsensitiveCompare \x3d goog.string.internal.caseInsensitiveCompare;\ngoog.string.numberAwareCompare_ \x3d function(str1, str2, tokenizerRegExp) {\n  if (str1 \x3d\x3d str2) {\n    return 0;\n  }\n  if (!str1) {\n    return -1;\n  }\n  if (!str2) {\n    return 1;\n  }\n  const tokens1 \x3d str1.toLowerCase().match(tokenizerRegExp);\n  const tokens2 \x3d str2.toLowerCase().match(tokenizerRegExp);\n  const count \x3d Math.min(tokens1.length, tokens2.length);\n  for (let i \x3d 0; i \x3c count; i++) {\n    const a \x3d tokens1[i];\n    const b \x3d tokens2[i];\n    if (a !\x3d b) {\n      const num1 \x3d parseInt(a, 10);\n      if (!isNaN(num1)) {\n        const num2 \x3d parseInt(b, 10);\n        if (!isNaN(num2) \x26\x26 num1 - num2) {\n          return num1 - num2;\n        }\n      }\n      return a \x3c b ? -1 : 1;\n    }\n  }\n  if (tokens1.length !\x3d tokens2.length) {\n    return tokens1.length - tokens2.length;\n  }\n  return str1 \x3c str2 ? -1 : 1;\n};\ngoog.string.intAwareCompare \x3d function(str1, str2) {\n  return goog.string.numberAwareCompare_(str1, str2, /\\d+|\\D+/g);\n};\ngoog.string.floatAwareCompare \x3d function(str1, str2) {\n  return goog.string.numberAwareCompare_(str1, str2, /\\d+|\\.\\d+|\\D+/g);\n};\ngoog.string.numerateCompare \x3d goog.string.floatAwareCompare;\ngoog.string.urlEncode \x3d function(str) {\n  return encodeURIComponent(String(str));\n};\ngoog.string.urlDecode \x3d function(str) {\n  return decodeURIComponent(str.replace(/\\+/g, \x22 \x22));\n};\ngoog.string.newLineToBr \x3d goog.string.internal.newLineToBr;\ngoog.string.htmlEscape \x3d function(str, opt_isLikelyToContainHtmlChars) {\n  str \x3d goog.string.internal.htmlEscape(str, opt_isLikelyToContainHtmlChars);\n  if (goog.string.DETECT_DOUBLE_ESCAPING) {\n    str \x3d str.replace(goog.string.E_RE_, \x22\\x26#101;\x22);\n  }\n  return str;\n};\ngoog.string.E_RE_ \x3d /e/g;\ngoog.string.unescapeEntities \x3d function(str) {\n  if (goog.string.contains(str, \x22\\x26\x22)) {\n    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING \x26\x26 \x22document\x22 in goog.global) {\n      return goog.string.unescapeEntitiesUsingDom_(str);\n    } else {\n      return goog.string.unescapePureXmlEntities_(str);\n    }\n  }\n  return str;\n};\ngoog.string.unescapeEntitiesWithDocument \x3d function(str, document) {\n  if (goog.string.contains(str, \x22\\x26\x22)) {\n    return goog.string.unescapeEntitiesUsingDom_(str, document);\n  }\n  return str;\n};\ngoog.string.unescapeEntitiesUsingDom_ \x3d function(str, opt_document) {\n  const seen \x3d {\x22\\x26amp;\x22:\x22\\x26\x22, \x22\\x26lt;\x22:\x22\\x3c\x22, \x22\\x26gt;\x22:\x22\\x3e\x22, \x22\\x26quot;\x22:\x27\x22\x27};\n  let div;\n  if (opt_document) {\n    div \x3d opt_document.createElement(\x22div\x22);\n  } else {\n    div \x3d goog.global.document.createElement(\x22div\x22);\n  }\n  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {\n    let value \x3d seen[s];\n    if (value) {\n      return value;\n    }\n    if (entity.charAt(0) \x3d\x3d \x22#\x22) {\n      const n \x3d Number(\x220\x22 + entity.substr(1));\n      if (!isNaN(n)) {\n        value \x3d String.fromCharCode(n);\n      }\n    }\n    if (!value) {\n      goog.dom.safe.setInnerHtml(div, goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from(\x22Single HTML entity.\x22), s + \x22 \x22));\n      value \x3d div.firstChild.nodeValue.slice(0, -1);\n    }\n    return seen[s] \x3d value;\n  });\n};\ngoog.string.unescapePureXmlEntities_ \x3d function(str) {\n  return str.replace(/\x26([^;]+);/g, function(s, entity) {\n    switch(entity) {\n      case \x22amp\x22:\n        return \x22\\x26\x22;\n      case \x22lt\x22:\n        return \x22\\x3c\x22;\n      case \x22gt\x22:\n        return \x22\\x3e\x22;\n      case \x22quot\x22:\n        return \x27\x22\x27;\n      default:\n        if (entity.charAt(0) \x3d\x3d \x22#\x22) {\n          const n \x3d Number(\x220\x22 + entity.substr(1));\n          if (!isNaN(n)) {\n            return String.fromCharCode(n);\n          }\n        }\n        return s;\n    }\n  });\n};\ngoog.string.HTML_ENTITY_PATTERN_ \x3d /\x26([^;\\s\x3c\x26]+);?/g;\ngoog.string.whitespaceEscape \x3d function(str, opt_xml) {\n  return goog.string.newLineToBr(str.replace(/  /g, \x22 \\x26#160;\x22), opt_xml);\n};\ngoog.string.preserveSpaces \x3d function(str) {\n  return str.replace(/(^|[\\n ]) /g, \x22$1\x22 + goog.string.Unicode.NBSP);\n};\ngoog.string.stripQuotes \x3d function(str, quoteChars) {\n  const length \x3d quoteChars.length;\n  for (let i \x3d 0; i \x3c length; i++) {\n    const quoteChar \x3d length \x3d\x3d 1 ? quoteChars : quoteChars.charAt(i);\n    if (str.charAt(0) \x3d\x3d quoteChar \x26\x26 str.charAt(str.length - 1) \x3d\x3d quoteChar) {\n      return str.substring(1, str.length - 1);\n    }\n  }\n  return str;\n};\ngoog.string.truncate \x3d function(str, chars, opt_protectEscapedCharacters) {\n  if (opt_protectEscapedCharacters) {\n    str \x3d goog.string.unescapeEntities(str);\n  }\n  if (str.length \x3e chars) {\n    str \x3d str.substring(0, chars - 3) + \x22...\x22;\n  }\n  if (opt_protectEscapedCharacters) {\n    str \x3d goog.string.htmlEscape(str);\n  }\n  return str;\n};\ngoog.string.truncateMiddle \x3d function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {\n  if (opt_protectEscapedCharacters) {\n    str \x3d goog.string.unescapeEntities(str);\n  }\n  if (opt_trailingChars \x26\x26 str.length \x3e chars) {\n    if (opt_trailingChars \x3e chars) {\n      opt_trailingChars \x3d chars;\n    }\n    const endPoint \x3d str.length - opt_trailingChars;\n    const startPoint \x3d chars - opt_trailingChars;\n    str \x3d str.substring(0, startPoint) + \x22...\x22 + str.substring(endPoint);\n  } else if (str.length \x3e chars) {\n    let half \x3d Math.floor(chars / 2);\n    const endPos \x3d str.length - half;\n    half +\x3d chars % 2;\n    str \x3d str.substring(0, half) + \x22...\x22 + str.substring(endPos);\n  }\n  if (opt_protectEscapedCharacters) {\n    str \x3d goog.string.htmlEscape(str);\n  }\n  return str;\n};\ngoog.string.specialEscapeChars_ \x3d {\x22\\x00\x22:\x22\\\\0\x22, \x22\\b\x22:\x22\\\\b\x22, \x22\\f\x22:\x22\\\\f\x22, \x22\\n\x22:\x22\\\\n\x22, \x22\\r\x22:\x22\\\\r\x22, \x22\\t\x22:\x22\\\\t\x22, \x22\\v\x22:\x22\\\\x0B\x22, \x27\x22\x27:\x27\\\\\x22\x27, \x22\\\\\x22:\x22\\\\\\\\\x22, \x22\\x3c\x22:\x22\\\\u003C\x22};\ngoog.string.jsEscapeCache_ \x3d {\x22\x27\x22:\x22\\\\\x27\x22};\ngoog.string.quote \x3d function(s) {\n  s \x3d String(s);\n  const sb \x3d [\x27\x22\x27];\n  for (let i \x3d 0; i \x3c s.length; i++) {\n    const ch \x3d s.charAt(i);\n    const cc \x3d ch.charCodeAt(0);\n    sb[i + 1] \x3d goog.string.specialEscapeChars_[ch] || (cc \x3e 31 \x26\x26 cc \x3c 127 ? ch : goog.string.escapeChar(ch));\n  }\n  sb.push(\x27\x22\x27);\n  return sb.join(\x22\x22);\n};\ngoog.string.escapeString \x3d function(str) {\n  const sb \x3d [];\n  for (let i \x3d 0; i \x3c str.length; i++) {\n    sb[i] \x3d goog.string.escapeChar(str.charAt(i));\n  }\n  return sb.join(\x22\x22);\n};\ngoog.string.escapeChar \x3d function(c) {\n  if (c in goog.string.jsEscapeCache_) {\n    return goog.string.jsEscapeCache_[c];\n  }\n  if (c in goog.string.specialEscapeChars_) {\n    return goog.string.jsEscapeCache_[c] \x3d goog.string.specialEscapeChars_[c];\n  }\n  let rv \x3d c;\n  const cc \x3d c.charCodeAt(0);\n  if (cc \x3e 31 \x26\x26 cc \x3c 127) {\n    rv \x3d c;\n  } else {\n    if (cc \x3c 256) {\n      rv \x3d \x22\\\\x\x22;\n      if (cc \x3c 16 || cc \x3e 256) {\n        rv +\x3d \x220\x22;\n      }\n    } else {\n      rv \x3d \x22\\\\u\x22;\n      if (cc \x3c 4096) {\n        rv +\x3d \x220\x22;\n      }\n    }\n    rv +\x3d cc.toString(16).toUpperCase();\n  }\n  return goog.string.jsEscapeCache_[c] \x3d rv;\n};\ngoog.string.contains \x3d goog.string.internal.contains;\ngoog.string.caseInsensitiveContains \x3d goog.string.internal.caseInsensitiveContains;\ngoog.string.countOf \x3d function(s, ss) {\n  return s \x26\x26 ss ? s.split(ss).length - 1 : 0;\n};\ngoog.string.removeAt \x3d function(s, index, stringLength) {\n  let resultStr \x3d s;\n  if (index \x3e\x3d 0 \x26\x26 index \x3c s.length \x26\x26 stringLength \x3e 0) {\n    resultStr \x3d s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);\n  }\n  return resultStr;\n};\ngoog.string.remove \x3d function(str, substr) {\n  return str.replace(substr, \x22\x22);\n};\ngoog.string.removeAll \x3d function(s, ss) {\n  const re \x3d new RegExp(goog.string.regExpEscape(ss), \x22g\x22);\n  return s.replace(re, \x22\x22);\n};\ngoog.string.replaceAll \x3d function(s, ss, replacement) {\n  const re \x3d new RegExp(goog.string.regExpEscape(ss), \x22g\x22);\n  return s.replace(re, replacement.replace(/\\$/g, \x22$$$$\x22));\n};\ngoog.string.regExpEscape \x3d function(s) {\n  return String(s).replace(/([-()\\[\\]{}+?*.$\\^|,:#\x3c!\\\\])/g, \x22\\\\$1\x22).replace(/\\x08/g, \x22\\\\x08\x22);\n};\ngoog.string.repeat \x3d String.prototype.repeat ? function(string, length) {\n  return string.repeat(length);\n} : function(string, length) {\n  return (new Array(length + 1)).join(string);\n};\ngoog.string.padNumber \x3d function(num, length, opt_precision) {\n  let s \x3d opt_precision !\x3d\x3d undefined ? num.toFixed(opt_precision) : String(num);\n  let index \x3d s.indexOf(\x22.\x22);\n  if (index \x3d\x3d\x3d -1) {\n    index \x3d s.length;\n  }\n  const sign \x3d s[0] \x3d\x3d\x3d \x22-\x22 ? \x22-\x22 : \x22\x22;\n  if (sign) {\n    s \x3d s.substring(1);\n  }\n  return sign + goog.string.repeat(\x220\x22, Math.max(0, length - index)) + s;\n};\ngoog.string.makeSafe \x3d function(obj) {\n  return obj \x3d\x3d null ? \x22\x22 : String(obj);\n};\ngoog.string.buildString \x3d function(var_args) {\n  return Array.prototype.join.call(arguments, \x22\x22);\n};\ngoog.string.getRandomString \x3d function() {\n  const x \x3d 2147483648;\n  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);\n};\ngoog.string.compareVersions \x3d goog.string.internal.compareVersions;\ngoog.string.hashCode \x3d function(str) {\n  let result \x3d 0;\n  for (let i \x3d 0; i \x3c str.length; ++i) {\n    result \x3d 31 * result + str.charCodeAt(i) \x3e\x3e\x3e 0;\n  }\n  return result;\n};\ngoog.string.uniqueStringCounter_ \x3d Math.random() * 2147483648 | 0;\ngoog.string.createUniqueString \x3d function() {\n  return \x22goog_\x22 + goog.string.uniqueStringCounter_++;\n};\ngoog.string.toNumber \x3d function(str) {\n  const num \x3d Number(str);\n  if (num \x3d\x3d 0 \x26\x26 goog.string.isEmptyOrWhitespace(str)) {\n    return NaN;\n  }\n  return num;\n};\ngoog.string.isLowerCamelCase \x3d function(str) {\n  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);\n};\ngoog.string.isUpperCamelCase \x3d function(str) {\n  return /^([A-Z][a-z]*)+$/.test(str);\n};\ngoog.string.toCamelCase \x3d function(str) {\n  return String(str).replace(/\\-([a-z])/g, function(all, match) {\n    return match.toUpperCase();\n  });\n};\ngoog.string.toSelectorCase \x3d function(str) {\n  return String(str).replace(/([A-Z])/g, \x22-$1\x22).toLowerCase();\n};\ngoog.string.toTitleCase \x3d function(str, opt_delimiters) {\n  let delimiters \x3d typeof opt_delimiters \x3d\x3d\x3d \x22string\x22 ? goog.string.regExpEscape(opt_delimiters) : \x22\\\\s\x22;\n  delimiters \x3d delimiters ? \x22|[\x22 + delimiters + \x22]+\x22 : \x22\x22;\n  const regexp \x3d new RegExp(\x22(^\x22 + delimiters + \x22)([a-z])\x22, \x22g\x22);\n  return str.replace(regexp, function(all, p1, p2) {\n    return p1 + p2.toUpperCase();\n  });\n};\ngoog.string.capitalize \x3d function(str) {\n  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();\n};\ngoog.string.parseInt \x3d function(value) {\n  if (isFinite(value)) {\n    value \x3d String(value);\n  }\n  if (typeof value \x3d\x3d\x3d \x22string\x22) {\n    return /^\\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);\n  }\n  return NaN;\n};\ngoog.string.splitLimit \x3d function(str, separator, limit) {\n  const parts \x3d str.split(separator);\n  const returnVal \x3d [];\n  while (limit \x3e 0 \x26\x26 parts.length) {\n    returnVal.push(parts.shift());\n    limit--;\n  }\n  if (parts.length) {\n    returnVal.push(parts.join(separator));\n  }\n  return returnVal;\n};\ngoog.string.lastComponent \x3d function(str, separators) {\n  if (!separators) {\n    return str;\n  } else if (typeof separators \x3d\x3d \x22string\x22) {\n    separators \x3d [separators];\n  }\n  let lastSeparatorIndex \x3d -1;\n  for (let i \x3d 0; i \x3c separators.length; i++) {\n    if (separators[i] \x3d\x3d \x22\x22) {\n      continue;\n    }\n    const currentSeparatorIndex \x3d str.lastIndexOf(separators[i]);\n    if (currentSeparatorIndex \x3e lastSeparatorIndex) {\n      lastSeparatorIndex \x3d currentSeparatorIndex;\n    }\n  }\n  if (lastSeparatorIndex \x3d\x3d -1) {\n    return str;\n  }\n  return str.slice(lastSeparatorIndex + 1);\n};\ngoog.string.editDistance \x3d function(a, b) {\n  const v0 \x3d [];\n  const v1 \x3d [];\n  if (a \x3d\x3d b) {\n    return 0;\n  }\n  if (!a.length || !b.length) {\n    return Math.max(a.length, b.length);\n  }\n  for (let i \x3d 0; i \x3c b.length + 1; i++) {\n    v0[i] \x3d i;\n  }\n  for (let i \x3d 0; i \x3c a.length; i++) {\n    v1[0] \x3d i + 1;\n    for (let j \x3d 0; j \x3c b.length; j++) {\n      const cost \x3d Number(a[i] !\x3d b[j]);\n      v1[j + 1] \x3d Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);\n    }\n    for (let j \x3d 0; j \x3c v0.length; j++) {\n      v0[j] \x3d v1[j];\n    }\n  }\n  return v1[b.length];\n};\n");
SHADOW_ENV.evalLoad("goog.collections.maps.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.collections.maps\x22);\n  goog.module.declareLegacyNamespace();\n  class MapLike {\n    constructor() {\n      this.size;\n    }\n    set(key, val) {\n    }\n    get(key) {\n    }\n    keys() {\n    }\n    values() {\n    }\n    has(key) {\n    }\n  }\n  exports.MapLike \x3d MapLike;\n  function setAll(map, entries) {\n    if (!entries) {\n      return;\n    }\n    for (const [k, v] of entries) {\n      map.set(k, v);\n    }\n  }\n  exports.setAll \x3d setAll;\n  function hasValue(map, val, valueEqualityFn \x3d defaultEqualityFn) {\n    for (const v of map.values()) {\n      if (valueEqualityFn(v, val)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  exports.hasValue \x3d hasValue;\n  const defaultEqualityFn \x3d (a, b) \x3d\x3e a \x3d\x3d\x3d b;\n  function equals(map, otherMap, valueEqualityFn \x3d defaultEqualityFn) {\n    if (map \x3d\x3d\x3d otherMap) {\n      return true;\n    }\n    if (map.size !\x3d\x3d otherMap.size) {\n      return false;\n    }\n    for (const key of map.keys()) {\n      if (!otherMap.has(key)) {\n        return false;\n      }\n      if (!valueEqualityFn(map.get(key), otherMap.get(key))) {\n        return false;\n      }\n    }\n    return true;\n  }\n  exports.equals \x3d equals;\n  function transpose(map) {\n    const transposed \x3d new Map();\n    for (const key of map.keys()) {\n      const val \x3d map.get(key);\n      transposed.set(val, key);\n    }\n    return transposed;\n  }\n  exports.transpose \x3d transpose;\n  function toObject(map) {\n    const obj \x3d {};\n    for (const key of map.keys()) {\n      obj[key] \x3d map.get(key);\n    }\n    return obj;\n  }\n  exports.toObject \x3d toObject;\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.structs.structs.js", true , "goog.provide(\x22goog.structs\x22);\ngoog.require(\x22goog.array\x22);\ngoog.require(\x22goog.object\x22);\ngoog.structs.getCount \x3d function(col) {\n  if (col.getCount \x26\x26 typeof col.getCount \x3d\x3d \x22function\x22) {\n    return col.getCount();\n  }\n  if (goog.isArrayLike(col) || typeof col \x3d\x3d\x3d \x22string\x22) {\n    return col.length;\n  }\n  return goog.object.getCount(col);\n};\ngoog.structs.getValues \x3d function(col) {\n  if (col.getValues \x26\x26 typeof col.getValues \x3d\x3d \x22function\x22) {\n    return col.getValues();\n  }\n  if (typeof Map !\x3d\x3d \x22undefined\x22 \x26\x26 col instanceof Map || typeof Set !\x3d\x3d \x22undefined\x22 \x26\x26 col instanceof Set) {\n    return Array.from(col.values());\n  }\n  if (typeof col \x3d\x3d\x3d \x22string\x22) {\n    return col.split(\x22\x22);\n  }\n  if (goog.isArrayLike(col)) {\n    var rv \x3d [];\n    var l \x3d col.length;\n    for (var i \x3d 0; i \x3c l; i++) {\n      rv.push(col[i]);\n    }\n    return rv;\n  }\n  return goog.object.getValues(col);\n};\ngoog.structs.getKeys \x3d function(col) {\n  if (col.getKeys \x26\x26 typeof col.getKeys \x3d\x3d \x22function\x22) {\n    return col.getKeys();\n  }\n  if (col.getValues \x26\x26 typeof col.getValues \x3d\x3d \x22function\x22) {\n    return undefined;\n  }\n  if (typeof Map !\x3d\x3d \x22undefined\x22 \x26\x26 col instanceof Map) {\n    return Array.from(col.keys());\n  }\n  if (typeof Set !\x3d\x3d \x22undefined\x22 \x26\x26 col instanceof Set) {\n    return undefined;\n  }\n  if (goog.isArrayLike(col) || typeof col \x3d\x3d\x3d \x22string\x22) {\n    var rv \x3d [];\n    var l \x3d col.length;\n    for (var i \x3d 0; i \x3c l; i++) {\n      rv.push(i);\n    }\n    return rv;\n  }\n  return goog.object.getKeys(col);\n};\ngoog.structs.contains \x3d function(col, val) {\n  if (col.contains \x26\x26 typeof col.contains \x3d\x3d \x22function\x22) {\n    return col.contains(val);\n  }\n  if (col.containsValue \x26\x26 typeof col.containsValue \x3d\x3d \x22function\x22) {\n    return col.containsValue(val);\n  }\n  if (goog.isArrayLike(col) || typeof col \x3d\x3d\x3d \x22string\x22) {\n    return goog.array.contains(col, val);\n  }\n  return goog.object.containsValue(col, val);\n};\ngoog.structs.isEmpty \x3d function(col) {\n  if (col.isEmpty \x26\x26 typeof col.isEmpty \x3d\x3d \x22function\x22) {\n    return col.isEmpty();\n  }\n  if (goog.isArrayLike(col) || typeof col \x3d\x3d\x3d \x22string\x22) {\n    return col.length \x3d\x3d\x3d 0;\n  }\n  return goog.object.isEmpty(col);\n};\ngoog.structs.clear \x3d function(col) {\n  if (col.clear \x26\x26 typeof col.clear \x3d\x3d \x22function\x22) {\n    col.clear();\n  } else if (goog.isArrayLike(col)) {\n    goog.array.clear(col);\n  } else {\n    goog.object.clear(col);\n  }\n};\ngoog.structs.forEach \x3d function(col, f, opt_obj) {\n  if (col.forEach \x26\x26 typeof col.forEach \x3d\x3d \x22function\x22) {\n    col.forEach(f, opt_obj);\n  } else if (goog.isArrayLike(col) || typeof col \x3d\x3d\x3d \x22string\x22) {\n    Array.prototype.forEach.call(col, f, opt_obj);\n  } else {\n    var keys \x3d goog.structs.getKeys(col);\n    var values \x3d goog.structs.getValues(col);\n    var l \x3d values.length;\n    for (var i \x3d 0; i \x3c l; i++) {\n      f.call(opt_obj, values[i], keys \x26\x26 keys[i], col);\n    }\n  }\n};\ngoog.structs.filter \x3d function(col, f, opt_obj) {\n  if (typeof col.filter \x3d\x3d \x22function\x22) {\n    return col.filter(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || typeof col \x3d\x3d\x3d \x22string\x22) {\n    return Array.prototype.filter.call(col, f, opt_obj);\n  }\n  var rv;\n  var keys \x3d goog.structs.getKeys(col);\n  var values \x3d goog.structs.getValues(col);\n  var l \x3d values.length;\n  if (keys) {\n    rv \x3d {};\n    for (var i \x3d 0; i \x3c l; i++) {\n      if (f.call(opt_obj, values[i], keys[i], col)) {\n        rv[keys[i]] \x3d values[i];\n      }\n    }\n  } else {\n    rv \x3d [];\n    for (var i \x3d 0; i \x3c l; i++) {\n      if (f.call(opt_obj, values[i], undefined, col)) {\n        rv.push(values[i]);\n      }\n    }\n  }\n  return rv;\n};\ngoog.structs.map \x3d function(col, f, opt_obj) {\n  if (typeof col.map \x3d\x3d \x22function\x22) {\n    return col.map(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || typeof col \x3d\x3d\x3d \x22string\x22) {\n    return Array.prototype.map.call(col, f, opt_obj);\n  }\n  var rv;\n  var keys \x3d goog.structs.getKeys(col);\n  var values \x3d goog.structs.getValues(col);\n  var l \x3d values.length;\n  if (keys) {\n    rv \x3d {};\n    for (var i \x3d 0; i \x3c l; i++) {\n      rv[keys[i]] \x3d f.call(opt_obj, values[i], keys[i], col);\n    }\n  } else {\n    rv \x3d [];\n    for (var i \x3d 0; i \x3c l; i++) {\n      rv[i] \x3d f.call(opt_obj, values[i], undefined, col);\n    }\n  }\n  return rv;\n};\ngoog.structs.some \x3d function(col, f, opt_obj) {\n  if (typeof col.some \x3d\x3d \x22function\x22) {\n    return col.some(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || typeof col \x3d\x3d\x3d \x22string\x22) {\n    return Array.prototype.some.call(col, f, opt_obj);\n  }\n  var keys \x3d goog.structs.getKeys(col);\n  var values \x3d goog.structs.getValues(col);\n  var l \x3d values.length;\n  for (var i \x3d 0; i \x3c l; i++) {\n    if (f.call(opt_obj, values[i], keys \x26\x26 keys[i], col)) {\n      return true;\n    }\n  }\n  return false;\n};\ngoog.structs.every \x3d function(col, f, opt_obj) {\n  if (typeof col.every \x3d\x3d \x22function\x22) {\n    return col.every(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || typeof col \x3d\x3d\x3d \x22string\x22) {\n    return Array.prototype.every.call(col, f, opt_obj);\n  }\n  var keys \x3d goog.structs.getKeys(col);\n  var values \x3d goog.structs.getValues(col);\n  var l \x3d values.length;\n  for (var i \x3d 0; i \x3c l; i++) {\n    if (!f.call(opt_obj, values[i], keys \x26\x26 keys[i], col)) {\n      return false;\n    }\n  }\n  return true;\n};\n");
SHADOW_ENV.evalLoad("goog.uri.utils.js", true , "goog.provide(\x22goog.uri.utils\x22);\ngoog.provide(\x22goog.uri.utils.ComponentIndex\x22);\ngoog.provide(\x22goog.uri.utils.QueryArray\x22);\ngoog.provide(\x22goog.uri.utils.QueryValue\x22);\ngoog.provide(\x22goog.uri.utils.StandardQueryParam\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.string\x22);\ngoog.uri.utils.CharCode_ \x3d {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};\ngoog.uri.utils.buildFromEncodedParts \x3d function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n  var out \x3d \x22\x22;\n  if (opt_scheme) {\n    out +\x3d opt_scheme + \x22:\x22;\n  }\n  if (opt_domain) {\n    out +\x3d \x22//\x22;\n    if (opt_userInfo) {\n      out +\x3d opt_userInfo + \x22@\x22;\n    }\n    out +\x3d opt_domain;\n    if (opt_port) {\n      out +\x3d \x22:\x22 + opt_port;\n    }\n  }\n  if (opt_path) {\n    out +\x3d opt_path;\n  }\n  if (opt_queryData) {\n    out +\x3d \x22?\x22 + opt_queryData;\n  }\n  if (opt_fragment) {\n    out +\x3d \x22#\x22 + opt_fragment;\n  }\n  return out;\n};\ngoog.uri.utils.splitRe_ \x3d new RegExp(\x22^\x22 + \x22(?:\x22 + \x22([^:/?#.]+)\x22 + \x22:)?\x22 + \x22(?://\x22 + \x22(?:([^\\\\\\\\/?#]*)@)?\x22 + \x22([^\\\\\\\\/?#]*?)\x22 + \x22(?::([0-9]+))?\x22 + \x22(?\\x3d[\\\\\\\\/?#]|$)\x22 + \x22)?\x22 + \x22([^?#]+)?\x22 + \x22(?:\\\\?([^#]*))?\x22 + \x22(?:#([\\\\s\\\\S]*))?\x22 + \x22$\x22);\ngoog.uri.utils.ComponentIndex \x3d {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};\ngoog.uri.utils.urlPackageSupportLoggingHandler_ \x3d null;\ngoog.uri.utils.setUrlPackageSupportLoggingHandler \x3d function(handler) {\n  goog.uri.utils.urlPackageSupportLoggingHandler_ \x3d handler;\n};\ngoog.uri.utils.split \x3d function(uri) {\n  var result \x3d uri.match(goog.uri.utils.splitRe_);\n  if (goog.uri.utils.urlPackageSupportLoggingHandler_ \x26\x26 [\x22http\x22, \x22https\x22, \x22ws\x22, \x22wss\x22, \x22ftp\x22].indexOf(result[goog.uri.utils.ComponentIndex.SCHEME]) \x3e\x3d 0) {\n    goog.uri.utils.urlPackageSupportLoggingHandler_(uri);\n  }\n  return result;\n};\ngoog.uri.utils.decodeIfPossible_ \x3d function(uri, opt_preserveReserved) {\n  if (!uri) {\n    return uri;\n  }\n  return opt_preserveReserved ? decodeURI(uri) : decodeURIComponent(uri);\n};\ngoog.uri.utils.getComponentByIndex_ \x3d function(componentIndex, uri) {\n  return goog.uri.utils.split(uri)[componentIndex] || null;\n};\ngoog.uri.utils.getScheme \x3d function(uri) {\n  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);\n};\ngoog.uri.utils.getEffectiveScheme \x3d function(uri) {\n  var scheme \x3d goog.uri.utils.getScheme(uri);\n  if (!scheme \x26\x26 goog.global.self \x26\x26 goog.global.self.location) {\n    var protocol \x3d goog.global.self.location.protocol;\n    scheme \x3d protocol.substr(0, protocol.length - 1);\n  }\n  return scheme ? scheme.toLowerCase() : \x22\x22;\n};\ngoog.uri.utils.getUserInfoEncoded \x3d function(uri) {\n  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);\n};\ngoog.uri.utils.getUserInfo \x3d function(uri) {\n  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));\n};\ngoog.uri.utils.getDomainEncoded \x3d function(uri) {\n  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);\n};\ngoog.uri.utils.getDomain \x3d function(uri) {\n  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri), true);\n};\ngoog.uri.utils.getPort \x3d function(uri) {\n  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;\n};\ngoog.uri.utils.getPathEncoded \x3d function(uri) {\n  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);\n};\ngoog.uri.utils.getPath \x3d function(uri) {\n  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri), true);\n};\ngoog.uri.utils.getQueryData \x3d function(uri) {\n  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);\n};\ngoog.uri.utils.getFragmentEncoded \x3d function(uri) {\n  var hashIndex \x3d uri.indexOf(\x22#\x22);\n  return hashIndex \x3c 0 ? null : uri.substr(hashIndex + 1);\n};\ngoog.uri.utils.setFragmentEncoded \x3d function(uri, fragment) {\n  return goog.uri.utils.removeFragment(uri) + (fragment ? \x22#\x22 + fragment : \x22\x22);\n};\ngoog.uri.utils.getFragment \x3d function(uri) {\n  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));\n};\ngoog.uri.utils.getHost \x3d function(uri) {\n  var pieces \x3d goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);\n};\ngoog.uri.utils.getOrigin \x3d function(uri) {\n  var pieces \x3d goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], null, pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);\n};\ngoog.uri.utils.getPathAndAfter \x3d function(uri) {\n  var pieces \x3d goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);\n};\ngoog.uri.utils.removeFragment \x3d function(uri) {\n  var hashIndex \x3d uri.indexOf(\x22#\x22);\n  return hashIndex \x3c 0 ? uri : uri.substr(0, hashIndex);\n};\ngoog.uri.utils.haveSameDomain \x3d function(uri1, uri2) {\n  var pieces1 \x3d goog.uri.utils.split(uri1);\n  var pieces2 \x3d goog.uri.utils.split(uri2);\n  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] \x3d\x3d pieces2[goog.uri.utils.ComponentIndex.DOMAIN] \x26\x26 pieces1[goog.uri.utils.ComponentIndex.SCHEME] \x3d\x3d pieces2[goog.uri.utils.ComponentIndex.SCHEME] \x26\x26 pieces1[goog.uri.utils.ComponentIndex.PORT] \x3d\x3d pieces2[goog.uri.utils.ComponentIndex.PORT];\n};\ngoog.uri.utils.assertNoFragmentsOrQueries_ \x3d function(uri) {\n  goog.asserts.assert(uri.indexOf(\x22#\x22) \x3c 0 \x26\x26 uri.indexOf(\x22?\x22) \x3c 0, \x22goog.uri.utils: Fragment or query identifiers are not supported: [%s]\x22, uri);\n};\ngoog.uri.utils.QueryValue;\ngoog.uri.utils.QueryArray;\ngoog.uri.utils.parseQueryData \x3d function(encodedQuery, callback) {\n  if (!encodedQuery) {\n    return;\n  }\n  var pairs \x3d encodedQuery.split(\x22\\x26\x22);\n  for (var i \x3d 0; i \x3c pairs.length; i++) {\n    var indexOfEquals \x3d pairs[i].indexOf(\x22\\x3d\x22);\n    var name \x3d null;\n    var value \x3d null;\n    if (indexOfEquals \x3e\x3d 0) {\n      name \x3d pairs[i].substring(0, indexOfEquals);\n      value \x3d pairs[i].substring(indexOfEquals + 1);\n    } else {\n      name \x3d pairs[i];\n    }\n    callback(name, value ? goog.string.urlDecode(value) : \x22\x22);\n  }\n};\ngoog.uri.utils.splitQueryData_ \x3d function(uri) {\n  var hashIndex \x3d uri.indexOf(\x22#\x22);\n  if (hashIndex \x3c 0) {\n    hashIndex \x3d uri.length;\n  }\n  var questionIndex \x3d uri.indexOf(\x22?\x22);\n  var queryData;\n  if (questionIndex \x3c 0 || questionIndex \x3e hashIndex) {\n    questionIndex \x3d hashIndex;\n    queryData \x3d \x22\x22;\n  } else {\n    queryData \x3d uri.substring(questionIndex + 1, hashIndex);\n  }\n  return [uri.substr(0, questionIndex), queryData, uri.substr(hashIndex)];\n};\ngoog.uri.utils.joinQueryData_ \x3d function(parts) {\n  return parts[0] + (parts[1] ? \x22?\x22 + parts[1] : \x22\x22) + parts[2];\n};\ngoog.uri.utils.appendQueryData_ \x3d function(queryData, newData) {\n  if (!newData) {\n    return queryData;\n  }\n  return queryData ? queryData + \x22\\x26\x22 + newData : newData;\n};\ngoog.uri.utils.appendQueryDataToUri_ \x3d function(uri, queryData) {\n  if (!queryData) {\n    return uri;\n  }\n  var parts \x3d goog.uri.utils.splitQueryData_(uri);\n  parts[1] \x3d goog.uri.utils.appendQueryData_(parts[1], queryData);\n  return goog.uri.utils.joinQueryData_(parts);\n};\ngoog.uri.utils.appendKeyValuePairs_ \x3d function(key, value, pairs) {\n  goog.asserts.assertString(key);\n  if (Array.isArray(value)) {\n    goog.asserts.assertArray(value);\n    for (var j \x3d 0; j \x3c value.length; j++) {\n      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);\n    }\n  } else if (value !\x3d null) {\n    pairs.push(key + (value \x3d\x3d\x3d \x22\x22 ? \x22\x22 : \x22\\x3d\x22 + goog.string.urlEncode(value)));\n  }\n};\ngoog.uri.utils.buildQueryData \x3d function(keysAndValues, opt_startIndex) {\n  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 \x3d\x3d 0, \x22goog.uri.utils: Key/value lists must be even in length.\x22);\n  var params \x3d [];\n  for (var i \x3d opt_startIndex || 0; i \x3c keysAndValues.length; i +\x3d 2) {\n    var key \x3d keysAndValues[i];\n    goog.uri.utils.appendKeyValuePairs_(key, keysAndValues[i + 1], params);\n  }\n  return params.join(\x22\\x26\x22);\n};\ngoog.uri.utils.buildQueryDataFromMap \x3d function(map) {\n  var params \x3d [];\n  for (var key in map) {\n    goog.uri.utils.appendKeyValuePairs_(key, map[key], params);\n  }\n  return params.join(\x22\\x26\x22);\n};\ngoog.uri.utils.appendParams \x3d function(uri, var_args) {\n  var queryData \x3d arguments.length \x3d\x3d 2 ? goog.uri.utils.buildQueryData(arguments[1], 0) : goog.uri.utils.buildQueryData(arguments, 1);\n  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);\n};\ngoog.uri.utils.appendParamsFromMap \x3d function(uri, map) {\n  var queryData \x3d goog.uri.utils.buildQueryDataFromMap(map);\n  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);\n};\ngoog.uri.utils.appendParam \x3d function(uri, key, opt_value) {\n  var value \x3d opt_value !\x3d null ? \x22\\x3d\x22 + goog.string.urlEncode(opt_value) : \x22\x22;\n  return goog.uri.utils.appendQueryDataToUri_(uri, key + value);\n};\ngoog.uri.utils.findParam_ \x3d function(uri, startIndex, keyEncoded, hashOrEndIndex) {\n  var index \x3d startIndex;\n  var keyLength \x3d keyEncoded.length;\n  while ((index \x3d uri.indexOf(keyEncoded, index)) \x3e\x3d 0 \x26\x26 index \x3c hashOrEndIndex) {\n    var precedingChar \x3d uri.charCodeAt(index - 1);\n    if (precedingChar \x3d\x3d goog.uri.utils.CharCode_.AMPERSAND || precedingChar \x3d\x3d goog.uri.utils.CharCode_.QUESTION) {\n      var followingChar \x3d uri.charCodeAt(index + keyLength);\n      if (!followingChar || followingChar \x3d\x3d goog.uri.utils.CharCode_.EQUAL || followingChar \x3d\x3d goog.uri.utils.CharCode_.AMPERSAND || followingChar \x3d\x3d goog.uri.utils.CharCode_.HASH) {\n        return index;\n      }\n    }\n    index +\x3d keyLength + 1;\n  }\n  return -1;\n};\ngoog.uri.utils.hashOrEndRe_ \x3d /#|$/;\ngoog.uri.utils.hasParam \x3d function(uri, keyEncoded) {\n  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) \x3e\x3d 0;\n};\ngoog.uri.utils.getParamValue \x3d function(uri, keyEncoded) {\n  var hashOrEndIndex \x3d uri.search(goog.uri.utils.hashOrEndRe_);\n  var foundIndex \x3d goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);\n  if (foundIndex \x3c 0) {\n    return null;\n  } else {\n    var endPosition \x3d uri.indexOf(\x22\\x26\x22, foundIndex);\n    if (endPosition \x3c 0 || endPosition \x3e hashOrEndIndex) {\n      endPosition \x3d hashOrEndIndex;\n    }\n    foundIndex +\x3d keyEncoded.length + 1;\n    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));\n  }\n};\ngoog.uri.utils.getParamValues \x3d function(uri, keyEncoded) {\n  var hashOrEndIndex \x3d uri.search(goog.uri.utils.hashOrEndRe_);\n  var position \x3d 0;\n  var foundIndex;\n  var result \x3d [];\n  while ((foundIndex \x3d goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) \x3e\x3d 0) {\n    position \x3d uri.indexOf(\x22\\x26\x22, foundIndex);\n    if (position \x3c 0 || position \x3e hashOrEndIndex) {\n      position \x3d hashOrEndIndex;\n    }\n    foundIndex +\x3d keyEncoded.length + 1;\n    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));\n  }\n  return result;\n};\ngoog.uri.utils.trailingQueryPunctuationRe_ \x3d /[?\x26]($|#)/;\ngoog.uri.utils.removeParam \x3d function(uri, keyEncoded) {\n  var hashOrEndIndex \x3d uri.search(goog.uri.utils.hashOrEndRe_);\n  var position \x3d 0;\n  var foundIndex;\n  var buffer \x3d [];\n  while ((foundIndex \x3d goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) \x3e\x3d 0) {\n    buffer.push(uri.substring(position, foundIndex));\n    position \x3d Math.min(uri.indexOf(\x22\\x26\x22, foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);\n  }\n  buffer.push(uri.substr(position));\n  return buffer.join(\x22\x22).replace(goog.uri.utils.trailingQueryPunctuationRe_, \x22$1\x22);\n};\ngoog.uri.utils.setParam \x3d function(uri, keyEncoded, value) {\n  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);\n};\ngoog.uri.utils.setParamsFromMap \x3d function(uri, params) {\n  var parts \x3d goog.uri.utils.splitQueryData_(uri);\n  var queryData \x3d parts[1];\n  var buffer \x3d [];\n  if (queryData) {\n    queryData.split(\x22\\x26\x22).forEach(function(pair) {\n      var indexOfEquals \x3d pair.indexOf(\x22\\x3d\x22);\n      var name \x3d indexOfEquals \x3e\x3d 0 ? pair.substr(0, indexOfEquals) : pair;\n      if (!params.hasOwnProperty(name)) {\n        buffer.push(pair);\n      }\n    });\n  }\n  parts[1] \x3d goog.uri.utils.appendQueryData_(buffer.join(\x22\\x26\x22), goog.uri.utils.buildQueryDataFromMap(params));\n  return goog.uri.utils.joinQueryData_(parts);\n};\ngoog.uri.utils.appendPath \x3d function(baseUri, path) {\n  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);\n  if (goog.string.endsWith(baseUri, \x22/\x22)) {\n    baseUri \x3d baseUri.substr(0, baseUri.length - 1);\n  }\n  if (goog.string.startsWith(path, \x22/\x22)) {\n    path \x3d path.substr(1);\n  }\n  return \x22\x22 + baseUri + \x22/\x22 + path;\n};\ngoog.uri.utils.setPath \x3d function(uri, path) {\n  if (!goog.string.startsWith(path, \x22/\x22)) {\n    path \x3d \x22/\x22 + path;\n  }\n  var parts \x3d goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);\n};\ngoog.uri.utils.StandardQueryParam \x3d {RANDOM:\x22zx\x22};\ngoog.uri.utils.makeUnique \x3d function(uri) {\n  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());\n};\n");
SHADOW_ENV.evalLoad("goog.uri.uri.js", true , "goog.provide(\x22goog.Uri\x22);\ngoog.provide(\x22goog.Uri.QueryData\x22);\ngoog.require(\x22goog.array\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.collections.maps\x22);\ngoog.require(\x22goog.string\x22);\ngoog.require(\x22goog.structs\x22);\ngoog.require(\x22goog.uri.utils\x22);\ngoog.require(\x22goog.uri.utils.ComponentIndex\x22);\ngoog.require(\x22goog.uri.utils.StandardQueryParam\x22);\ngoog.Uri \x3d function(opt_uri, opt_ignoreCase) {\n  this.scheme_ \x3d \x22\x22;\n  this.userInfo_ \x3d \x22\x22;\n  this.domain_ \x3d \x22\x22;\n  this.port_ \x3d null;\n  this.path_ \x3d \x22\x22;\n  this.fragment_ \x3d \x22\x22;\n  this.isReadOnly_ \x3d false;\n  this.ignoreCase_ \x3d false;\n  this.queryData_;\n  var m;\n  if (opt_uri instanceof goog.Uri) {\n    this.ignoreCase_ \x3d opt_ignoreCase !\x3d\x3d undefined ? opt_ignoreCase : opt_uri.getIgnoreCase();\n    this.setScheme(opt_uri.getScheme());\n    this.setUserInfo(opt_uri.getUserInfo());\n    this.setDomain(opt_uri.getDomain());\n    this.setPort(opt_uri.getPort());\n    this.setPath(opt_uri.getPath());\n    this.setQueryData(opt_uri.getQueryData().clone());\n    this.setFragment(opt_uri.getFragment());\n  } else if (opt_uri \x26\x26 (m \x3d goog.uri.utils.split(String(opt_uri)))) {\n    this.ignoreCase_ \x3d !!opt_ignoreCase;\n    this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || \x22\x22, true);\n    this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || \x22\x22, true);\n    this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || \x22\x22, true);\n    this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);\n    this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || \x22\x22, true);\n    this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || \x22\x22, true);\n    this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || \x22\x22, true);\n  } else {\n    this.ignoreCase_ \x3d !!opt_ignoreCase;\n    this.queryData_ \x3d new goog.Uri.QueryData(null, this.ignoreCase_);\n  }\n};\ngoog.Uri.RANDOM_PARAM \x3d goog.uri.utils.StandardQueryParam.RANDOM;\ngoog.Uri.prototype.toString \x3d function() {\n  var out \x3d [];\n  var scheme \x3d this.getScheme();\n  if (scheme) {\n    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), \x22:\x22);\n  }\n  var domain \x3d this.getDomain();\n  if (domain || scheme \x3d\x3d \x22file\x22) {\n    out.push(\x22//\x22);\n    var userInfo \x3d this.getUserInfo();\n    if (userInfo) {\n      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), \x22@\x22);\n    }\n    out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));\n    var port \x3d this.getPort();\n    if (port !\x3d null) {\n      out.push(\x22:\x22, String(port));\n    }\n  }\n  var path \x3d this.getPath();\n  if (path) {\n    if (this.hasDomain() \x26\x26 path.charAt(0) !\x3d \x22/\x22) {\n      out.push(\x22/\x22);\n    }\n    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) \x3d\x3d \x22/\x22 ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_, true));\n  }\n  var query \x3d this.getEncodedQuery();\n  if (query) {\n    out.push(\x22?\x22, query);\n  }\n  var fragment \x3d this.getFragment();\n  if (fragment) {\n    out.push(\x22#\x22, goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));\n  }\n  return out.join(\x22\x22);\n};\ngoog.Uri.prototype.resolve \x3d function(relativeUri) {\n  var absoluteUri \x3d this.clone();\n  var overridden \x3d relativeUri.hasScheme();\n  if (overridden) {\n    absoluteUri.setScheme(relativeUri.getScheme());\n  } else {\n    overridden \x3d relativeUri.hasUserInfo();\n  }\n  if (overridden) {\n    absoluteUri.setUserInfo(relativeUri.getUserInfo());\n  } else {\n    overridden \x3d relativeUri.hasDomain();\n  }\n  if (overridden) {\n    absoluteUri.setDomain(relativeUri.getDomain());\n  } else {\n    overridden \x3d relativeUri.hasPort();\n  }\n  var path \x3d relativeUri.getPath();\n  if (overridden) {\n    absoluteUri.setPort(relativeUri.getPort());\n  } else {\n    overridden \x3d relativeUri.hasPath();\n    if (overridden) {\n      if (path.charAt(0) !\x3d \x22/\x22) {\n        if (this.hasDomain() \x26\x26 !this.hasPath()) {\n          path \x3d \x22/\x22 + path;\n        } else {\n          var lastSlashIndex \x3d absoluteUri.getPath().lastIndexOf(\x22/\x22);\n          if (lastSlashIndex !\x3d -1) {\n            path \x3d absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;\n          }\n        }\n      }\n      path \x3d goog.Uri.removeDotSegments(path);\n    }\n  }\n  if (overridden) {\n    absoluteUri.setPath(path);\n  } else {\n    overridden \x3d relativeUri.hasQuery();\n  }\n  if (overridden) {\n    absoluteUri.setQueryData(relativeUri.getQueryData().clone());\n  } else {\n    overridden \x3d relativeUri.hasFragment();\n  }\n  if (overridden) {\n    absoluteUri.setFragment(relativeUri.getFragment());\n  }\n  return absoluteUri;\n};\ngoog.Uri.prototype.clone \x3d function() {\n  return new goog.Uri(this);\n};\ngoog.Uri.prototype.getScheme \x3d function() {\n  return this.scheme_;\n};\ngoog.Uri.prototype.setScheme \x3d function(newScheme, opt_decode) {\n  this.enforceReadOnly();\n  this.scheme_ \x3d opt_decode ? goog.Uri.decodeOrEmpty_(newScheme, true) : newScheme;\n  if (this.scheme_) {\n    this.scheme_ \x3d this.scheme_.replace(/:$/, \x22\x22);\n  }\n  return this;\n};\ngoog.Uri.prototype.hasScheme \x3d function() {\n  return !!this.scheme_;\n};\ngoog.Uri.prototype.getUserInfo \x3d function() {\n  return this.userInfo_;\n};\ngoog.Uri.prototype.setUserInfo \x3d function(newUserInfo, opt_decode) {\n  this.enforceReadOnly();\n  this.userInfo_ \x3d opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;\n  return this;\n};\ngoog.Uri.prototype.hasUserInfo \x3d function() {\n  return !!this.userInfo_;\n};\ngoog.Uri.prototype.getDomain \x3d function() {\n  return this.domain_;\n};\ngoog.Uri.prototype.setDomain \x3d function(newDomain, opt_decode) {\n  this.enforceReadOnly();\n  this.domain_ \x3d opt_decode ? goog.Uri.decodeOrEmpty_(newDomain, true) : newDomain;\n  return this;\n};\ngoog.Uri.prototype.hasDomain \x3d function() {\n  return !!this.domain_;\n};\ngoog.Uri.prototype.getPort \x3d function() {\n  return this.port_;\n};\ngoog.Uri.prototype.setPort \x3d function(newPort) {\n  this.enforceReadOnly();\n  if (newPort) {\n    newPort \x3d Number(newPort);\n    if (isNaN(newPort) || newPort \x3c 0) {\n      throw new Error(\x22Bad port number \x22 + newPort);\n    }\n    this.port_ \x3d newPort;\n  } else {\n    this.port_ \x3d null;\n  }\n  return this;\n};\ngoog.Uri.prototype.hasPort \x3d function() {\n  return this.port_ !\x3d null;\n};\ngoog.Uri.prototype.getPath \x3d function() {\n  return this.path_;\n};\ngoog.Uri.prototype.setPath \x3d function(newPath, opt_decode) {\n  this.enforceReadOnly();\n  this.path_ \x3d opt_decode ? goog.Uri.decodeOrEmpty_(newPath, true) : newPath;\n  return this;\n};\ngoog.Uri.prototype.hasPath \x3d function() {\n  return !!this.path_;\n};\ngoog.Uri.prototype.hasQuery \x3d function() {\n  return this.queryData_.toString() !\x3d\x3d \x22\x22;\n};\ngoog.Uri.prototype.setQueryData \x3d function(queryData, opt_decode) {\n  this.enforceReadOnly();\n  if (queryData instanceof goog.Uri.QueryData) {\n    this.queryData_ \x3d queryData;\n    this.queryData_.setIgnoreCase(this.ignoreCase_);\n  } else {\n    if (!opt_decode) {\n      queryData \x3d goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);\n    }\n    this.queryData_ \x3d new goog.Uri.QueryData(queryData, this.ignoreCase_);\n  }\n  return this;\n};\ngoog.Uri.prototype.setQuery \x3d function(newQuery, opt_decode) {\n  return this.setQueryData(newQuery, opt_decode);\n};\ngoog.Uri.prototype.getEncodedQuery \x3d function() {\n  return this.queryData_.toString();\n};\ngoog.Uri.prototype.getDecodedQuery \x3d function() {\n  return this.queryData_.toDecodedString();\n};\ngoog.Uri.prototype.getQueryData \x3d function() {\n  return this.queryData_;\n};\ngoog.Uri.prototype.getQuery \x3d function() {\n  return this.getEncodedQuery();\n};\ngoog.Uri.prototype.setParameterValue \x3d function(key, value) {\n  this.enforceReadOnly();\n  this.queryData_.set(key, value);\n  return this;\n};\ngoog.Uri.prototype.setParameterValues \x3d function(key, values) {\n  this.enforceReadOnly();\n  if (!Array.isArray(values)) {\n    values \x3d [String(values)];\n  }\n  this.queryData_.setValues(key, values);\n  return this;\n};\ngoog.Uri.prototype.getParameterValues \x3d function(name) {\n  return this.queryData_.getValues(name);\n};\ngoog.Uri.prototype.getParameterValue \x3d function(paramName) {\n  return this.queryData_.get(paramName);\n};\ngoog.Uri.prototype.getFragment \x3d function() {\n  return this.fragment_;\n};\ngoog.Uri.prototype.setFragment \x3d function(newFragment, opt_decode) {\n  this.enforceReadOnly();\n  this.fragment_ \x3d opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;\n  return this;\n};\ngoog.Uri.prototype.hasFragment \x3d function() {\n  return !!this.fragment_;\n};\ngoog.Uri.prototype.hasSameDomainAs \x3d function(uri2) {\n  return (!this.hasDomain() \x26\x26 !uri2.hasDomain() || this.getDomain() \x3d\x3d uri2.getDomain()) \x26\x26 (!this.hasPort() \x26\x26 !uri2.hasPort() || this.getPort() \x3d\x3d uri2.getPort());\n};\ngoog.Uri.prototype.makeUnique \x3d function() {\n  this.enforceReadOnly();\n  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());\n  return this;\n};\ngoog.Uri.prototype.removeParameter \x3d function(key) {\n  this.enforceReadOnly();\n  this.queryData_.remove(key);\n  return this;\n};\ngoog.Uri.prototype.setReadOnly \x3d function(isReadOnly) {\n  this.isReadOnly_ \x3d isReadOnly;\n  return this;\n};\ngoog.Uri.prototype.isReadOnly \x3d function() {\n  return this.isReadOnly_;\n};\ngoog.Uri.prototype.enforceReadOnly \x3d function() {\n  if (this.isReadOnly_) {\n    throw new Error(\x22Tried to modify a read-only Uri\x22);\n  }\n};\ngoog.Uri.prototype.setIgnoreCase \x3d function(ignoreCase) {\n  this.ignoreCase_ \x3d ignoreCase;\n  if (this.queryData_) {\n    this.queryData_.setIgnoreCase(ignoreCase);\n  }\n  return this;\n};\ngoog.Uri.prototype.getIgnoreCase \x3d function() {\n  return this.ignoreCase_;\n};\ngoog.Uri.parse \x3d function(uri, opt_ignoreCase) {\n  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);\n};\ngoog.Uri.create \x3d function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {\n  var uri \x3d new goog.Uri(null, opt_ignoreCase);\n  opt_scheme \x26\x26 uri.setScheme(opt_scheme);\n  opt_userInfo \x26\x26 uri.setUserInfo(opt_userInfo);\n  opt_domain \x26\x26 uri.setDomain(opt_domain);\n  opt_port \x26\x26 uri.setPort(opt_port);\n  opt_path \x26\x26 uri.setPath(opt_path);\n  opt_query \x26\x26 uri.setQueryData(opt_query);\n  opt_fragment \x26\x26 uri.setFragment(opt_fragment);\n  return uri;\n};\ngoog.Uri.resolve \x3d function(base, rel) {\n  if (!(base instanceof goog.Uri)) {\n    base \x3d goog.Uri.parse(base);\n  }\n  if (!(rel instanceof goog.Uri)) {\n    rel \x3d goog.Uri.parse(rel);\n  }\n  return base.resolve(rel);\n};\ngoog.Uri.removeDotSegments \x3d function(path) {\n  if (path \x3d\x3d \x22..\x22 || path \x3d\x3d \x22.\x22) {\n    return \x22\x22;\n  } else if (!goog.string.contains(path, \x22./\x22) \x26\x26 !goog.string.contains(path, \x22/.\x22)) {\n    return path;\n  } else {\n    var leadingSlash \x3d goog.string.startsWith(path, \x22/\x22);\n    var segments \x3d path.split(\x22/\x22);\n    var out \x3d [];\n    for (var pos \x3d 0; pos \x3c segments.length;) {\n      var segment \x3d segments[pos++];\n      if (segment \x3d\x3d \x22.\x22) {\n        if (leadingSlash \x26\x26 pos \x3d\x3d segments.length) {\n          out.push(\x22\x22);\n        }\n      } else if (segment \x3d\x3d \x22..\x22) {\n        if (out.length \x3e 1 || out.length \x3d\x3d 1 \x26\x26 out[0] !\x3d \x22\x22) {\n          out.pop();\n        }\n        if (leadingSlash \x26\x26 pos \x3d\x3d segments.length) {\n          out.push(\x22\x22);\n        }\n      } else {\n        out.push(segment);\n        leadingSlash \x3d true;\n      }\n    }\n    return out.join(\x22/\x22);\n  }\n};\ngoog.Uri.decodeOrEmpty_ \x3d function(val, opt_preserveReserved) {\n  if (!val) {\n    return \x22\x22;\n  }\n  return opt_preserveReserved ? decodeURI(val.replace(/%25/g, \x22%2525\x22)) : decodeURIComponent(val);\n};\ngoog.Uri.encodeSpecialChars_ \x3d function(unescapedPart, extra, opt_removeDoubleEncoding) {\n  if (typeof unescapedPart \x3d\x3d\x3d \x22string\x22) {\n    var encoded \x3d encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);\n    if (opt_removeDoubleEncoding) {\n      encoded \x3d goog.Uri.removeDoubleEncoding_(encoded);\n    }\n    return encoded;\n  }\n  return null;\n};\ngoog.Uri.encodeChar_ \x3d function(ch) {\n  var n \x3d ch.charCodeAt(0);\n  return \x22%\x22 + (n \x3e\x3e 4 \x26 15).toString(16) + (n \x26 15).toString(16);\n};\ngoog.Uri.removeDoubleEncoding_ \x3d function(doubleEncodedString) {\n  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, \x22%$1\x22);\n};\ngoog.Uri.reDisallowedInSchemeOrUserInfo_ \x3d /[#\\/\\?@]/g;\ngoog.Uri.reDisallowedInRelativePath_ \x3d /[#\\?:]/g;\ngoog.Uri.reDisallowedInAbsolutePath_ \x3d /[#\\?]/g;\ngoog.Uri.reDisallowedInQuery_ \x3d /[#\\?@]/g;\ngoog.Uri.reDisallowedInFragment_ \x3d /#/g;\ngoog.Uri.haveSameDomain \x3d function(uri1String, uri2String) {\n  var pieces1 \x3d goog.uri.utils.split(uri1String);\n  var pieces2 \x3d goog.uri.utils.split(uri2String);\n  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] \x3d\x3d pieces2[goog.uri.utils.ComponentIndex.DOMAIN] \x26\x26 pieces1[goog.uri.utils.ComponentIndex.PORT] \x3d\x3d pieces2[goog.uri.utils.ComponentIndex.PORT];\n};\ngoog.Uri.QueryData \x3d function(opt_query, opt_ignoreCase) {\n  this.keyMap_ \x3d null;\n  this.count_ \x3d null;\n  this.encodedQuery_ \x3d opt_query || null;\n  this.ignoreCase_ \x3d !!opt_ignoreCase;\n};\ngoog.Uri.QueryData.prototype.ensureKeyMapInitialized_ \x3d function() {\n  if (!this.keyMap_) {\n    this.keyMap_ \x3d new Map();\n    this.count_ \x3d 0;\n    if (this.encodedQuery_) {\n      var self \x3d this;\n      goog.uri.utils.parseQueryData(this.encodedQuery_, function(name, value) {\n        self.add(goog.string.urlDecode(name), value);\n      });\n    }\n  }\n};\ngoog.Uri.QueryData.createFromMap \x3d function(map, opt_ignoreCase) {\n  var keys \x3d goog.structs.getKeys(map);\n  if (typeof keys \x3d\x3d \x22undefined\x22) {\n    throw new Error(\x22Keys are undefined\x22);\n  }\n  var queryData \x3d new goog.Uri.QueryData(null, opt_ignoreCase);\n  var values \x3d goog.structs.getValues(map);\n  for (var i \x3d 0; i \x3c keys.length; i++) {\n    var key \x3d keys[i];\n    var value \x3d values[i];\n    if (!Array.isArray(value)) {\n      queryData.add(key, value);\n    } else {\n      queryData.setValues(key, value);\n    }\n  }\n  return queryData;\n};\ngoog.Uri.QueryData.createFromKeysValues \x3d function(keys, values, opt_ignoreCase) {\n  if (keys.length !\x3d values.length) {\n    throw new Error(\x22Mismatched lengths for keys/values\x22);\n  }\n  var queryData \x3d new goog.Uri.QueryData(null, opt_ignoreCase);\n  for (var i \x3d 0; i \x3c keys.length; i++) {\n    queryData.add(keys[i], values[i]);\n  }\n  return queryData;\n};\ngoog.Uri.QueryData.prototype.getCount \x3d function() {\n  this.ensureKeyMapInitialized_();\n  return this.count_;\n};\ngoog.Uri.QueryData.prototype.add \x3d function(key, value) {\n  this.ensureKeyMapInitialized_();\n  this.invalidateCache_();\n  key \x3d this.getKeyName_(key);\n  var values \x3d this.keyMap_.get(key);\n  if (!values) {\n    this.keyMap_.set(key, values \x3d []);\n  }\n  values.push(value);\n  this.count_ \x3d goog.asserts.assertNumber(this.count_) + 1;\n  return this;\n};\ngoog.Uri.QueryData.prototype.remove \x3d function(key) {\n  this.ensureKeyMapInitialized_();\n  key \x3d this.getKeyName_(key);\n  if (this.keyMap_.has(key)) {\n    this.invalidateCache_();\n    this.count_ \x3d goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;\n    return this.keyMap_.delete(key);\n  }\n  return false;\n};\ngoog.Uri.QueryData.prototype.clear \x3d function() {\n  this.invalidateCache_();\n  this.keyMap_ \x3d null;\n  this.count_ \x3d 0;\n};\ngoog.Uri.QueryData.prototype.isEmpty \x3d function() {\n  this.ensureKeyMapInitialized_();\n  return this.count_ \x3d\x3d 0;\n};\ngoog.Uri.QueryData.prototype.containsKey \x3d function(key) {\n  this.ensureKeyMapInitialized_();\n  key \x3d this.getKeyName_(key);\n  return this.keyMap_.has(key);\n};\ngoog.Uri.QueryData.prototype.containsValue \x3d function(value) {\n  var vals \x3d this.getValues();\n  return goog.array.contains(vals, value);\n};\ngoog.Uri.QueryData.prototype.forEach \x3d function(f, opt_scope) {\n  this.ensureKeyMapInitialized_();\n  this.keyMap_.forEach(function(values, key) {\n    values.forEach(function(value) {\n      f.call(opt_scope, value, key, this);\n    }, this);\n  }, this);\n};\ngoog.Uri.QueryData.prototype.getKeys \x3d function() {\n  this.ensureKeyMapInitialized_();\n  const vals \x3d Array.from(this.keyMap_.values());\n  const keys \x3d Array.from(this.keyMap_.keys());\n  const rv \x3d [];\n  for (let i \x3d 0; i \x3c keys.length; i++) {\n    const val \x3d vals[i];\n    for (let j \x3d 0; j \x3c val.length; j++) {\n      rv.push(keys[i]);\n    }\n  }\n  return rv;\n};\ngoog.Uri.QueryData.prototype.getValues \x3d function(opt_key) {\n  this.ensureKeyMapInitialized_();\n  let rv \x3d [];\n  if (typeof opt_key \x3d\x3d\x3d \x22string\x22) {\n    if (this.containsKey(opt_key)) {\n      rv \x3d rv.concat(this.keyMap_.get(this.getKeyName_(opt_key)));\n    }\n  } else {\n    const values \x3d Array.from(this.keyMap_.values());\n    for (let i \x3d 0; i \x3c values.length; i++) {\n      rv \x3d rv.concat(values[i]);\n    }\n  }\n  return rv;\n};\ngoog.Uri.QueryData.prototype.set \x3d function(key, value) {\n  this.ensureKeyMapInitialized_();\n  this.invalidateCache_();\n  key \x3d this.getKeyName_(key);\n  if (this.containsKey(key)) {\n    this.count_ \x3d goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;\n  }\n  this.keyMap_.set(key, [value]);\n  this.count_ \x3d goog.asserts.assertNumber(this.count_) + 1;\n  return this;\n};\ngoog.Uri.QueryData.prototype.get \x3d function(key, opt_default) {\n  if (!key) {\n    return opt_default;\n  }\n  var values \x3d this.getValues(key);\n  return values.length \x3e 0 ? String(values[0]) : opt_default;\n};\ngoog.Uri.QueryData.prototype.setValues \x3d function(key, values) {\n  this.remove(key);\n  if (values.length \x3e 0) {\n    this.invalidateCache_();\n    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));\n    this.count_ \x3d goog.asserts.assertNumber(this.count_) + values.length;\n  }\n};\ngoog.Uri.QueryData.prototype.toString \x3d function() {\n  if (this.encodedQuery_) {\n    return this.encodedQuery_;\n  }\n  if (!this.keyMap_) {\n    return \x22\x22;\n  }\n  const sb \x3d [];\n  const keys \x3d Array.from(this.keyMap_.keys());\n  for (var i \x3d 0; i \x3c keys.length; i++) {\n    const key \x3d keys[i];\n    const encodedKey \x3d goog.string.urlEncode(key);\n    const val \x3d this.getValues(key);\n    for (var j \x3d 0; j \x3c val.length; j++) {\n      var param \x3d encodedKey;\n      if (val[j] !\x3d\x3d \x22\x22) {\n        param +\x3d \x22\\x3d\x22 + goog.string.urlEncode(val[j]);\n      }\n      sb.push(param);\n    }\n  }\n  return this.encodedQuery_ \x3d sb.join(\x22\\x26\x22);\n};\ngoog.Uri.QueryData.prototype.toDecodedString \x3d function() {\n  return goog.Uri.decodeOrEmpty_(this.toString());\n};\ngoog.Uri.QueryData.prototype.invalidateCache_ \x3d function() {\n  this.encodedQuery_ \x3d null;\n};\ngoog.Uri.QueryData.prototype.filterKeys \x3d function(keys) {\n  this.ensureKeyMapInitialized_();\n  this.keyMap_.forEach(function(value, key) {\n    if (!goog.array.contains(keys, key)) {\n      this.remove(key);\n    }\n  }, this);\n  return this;\n};\ngoog.Uri.QueryData.prototype.clone \x3d function() {\n  var rv \x3d new goog.Uri.QueryData();\n  rv.encodedQuery_ \x3d this.encodedQuery_;\n  if (this.keyMap_) {\n    rv.keyMap_ \x3d new Map(this.keyMap_);\n    rv.count_ \x3d this.count_;\n  }\n  return rv;\n};\ngoog.Uri.QueryData.prototype.getKeyName_ \x3d function(arg) {\n  var keyName \x3d String(arg);\n  if (this.ignoreCase_) {\n    keyName \x3d keyName.toLowerCase();\n  }\n  return keyName;\n};\ngoog.Uri.QueryData.prototype.setIgnoreCase \x3d function(ignoreCase) {\n  var resetKeys \x3d ignoreCase \x26\x26 !this.ignoreCase_;\n  if (resetKeys) {\n    this.ensureKeyMapInitialized_();\n    this.invalidateCache_();\n    this.keyMap_.forEach(function(value, key) {\n      var lowerCase \x3d key.toLowerCase();\n      if (key !\x3d lowerCase) {\n        this.remove(key);\n        this.setValues(lowerCase, value);\n      }\n    }, this);\n  }\n  this.ignoreCase_ \x3d ignoreCase;\n};\ngoog.Uri.QueryData.prototype.extend \x3d function(var_args) {\n  for (var i \x3d 0; i \x3c arguments.length; i++) {\n    var data \x3d arguments[i];\n    goog.structs.forEach(data, function(value, key) {\n      this.add(key, value);\n    }, this);\n  }\n};\n");
SHADOW_ENV.evalLoad("goog.string.stringbuffer.js", true , "goog.provide(\x22goog.string.StringBuffer\x22);\ngoog.string.StringBuffer \x3d function(opt_a1, var_args) {\n  if (opt_a1 !\x3d null) {\n    this.append.apply(this, arguments);\n  }\n};\ngoog.string.StringBuffer.prototype.buffer_ \x3d \x22\x22;\ngoog.string.StringBuffer.prototype.set \x3d function(s) {\n  this.buffer_ \x3d \x22\x22 + s;\n};\ngoog.string.StringBuffer.prototype.append \x3d function(a1, opt_a2, var_args) {\n  this.buffer_ +\x3d String(a1);\n  if (opt_a2 !\x3d null) {\n    for (let i \x3d 1; i \x3c arguments.length; i++) {\n      this.buffer_ +\x3d arguments[i];\n    }\n  }\n  return this;\n};\ngoog.string.StringBuffer.prototype.clear \x3d function() {\n  this.buffer_ \x3d \x22\x22;\n};\ngoog.string.StringBuffer.prototype.getLength \x3d function() {\n  return this.buffer_.length;\n};\ngoog.string.StringBuffer.prototype.toString \x3d function() {\n  return this.buffer_;\n};\n");
SHADOW_ENV.evalLoad("cljs.core.js", true , "goog.provide(\x27cljs.core\x27);\r\ngoog.scope(function(){\r\n  cljs.core.goog$module$goog$math$Long \x3d goog.module.get(\x27goog.math.Long\x27);\r\n  cljs.core.goog$module$goog$object \x3d goog.module.get(\x27goog.object\x27);\r\n  cljs.core.goog$module$goog$array \x3d goog.module.get(\x27goog.array\x27);\r\n});\r\ncljs.core._STAR_clojurescript_version_STAR_ \x3d \x221.11.4\x22;\r\ncljs.core._STAR_unchecked_if_STAR_ \x3d false;\r\ncljs.core._STAR_unchecked_arrays_STAR_ \x3d false;\r\ncljs.core._STAR_warn_on_infer_STAR_ \x3d false;\r\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core.PROTOCOL_SENTINEL !\x3d\x3d \x27undefined\x27)){\r\n} else {\r\ncljs.core.PROTOCOL_SENTINEL \x3d ({});\r\n}\r\ncljs.core.MODULE_URIS \x3d null;\r\ncljs.core.MODULE_INFOS \x3d null;\r\n/**\r\n * Var bound to the name value of the compiler build :target option.\r\n *   For example, if the compiler build :target is :nodejs, *target* will be bound\r\n *   to \x22nodejs\x22. *target* is a Google Closure define and can be set by compiler\r\n *   :closure-defines option.\r\n * @define {string}\r\n */\r\ncljs.core._STAR_target_STAR_ \x3d goog.define(\x22cljs.core._STAR_target_STAR_\x22,\x22default\x22);\r\n/**\r\n * Manually set the JavaScript global context. Only \x22window\x22, \x22self\x22\r\n *   , and \x22global\x22 supported. \r\n * @define {string}\r\n */\r\ncljs.core._STAR_global_STAR_ \x3d goog.define(\x22cljs.core._STAR_global_STAR_\x22,\x22default\x22);\r\n/**\r\n * Var bound to the current namespace. Only used for bootstrapping.\r\n * @type {*}\r\n */\r\ncljs.core._STAR_ns_STAR_ \x3d null;\r\n/**\r\n * @type {*}\r\n */\r\ncljs.core._STAR_out_STAR_ \x3d null;\r\ncljs.core._STAR_assert_STAR_ \x3d true;\r\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core._STAR_print_fn_STAR_ !\x3d\x3d \x27undefined\x27)){\r\n} else {\r\n/**\r\n * Each runtime environment provides a different way to print output.\r\n *   Whatever function *print-fn* is bound to will be passed any\r\n *   Strings which should be printed.\r\n */\r\ncljs.core._STAR_print_fn_STAR_ \x3d null;\r\n}\r\n/**\r\n * Arranges to have tap functions executed via the supplied f, a\r\n *   function of no arguments. Returns true if successful, false otherwise.\r\n */\r\ncljs.core._STAR_exec_tap_fn_STAR_ \x3d (function cljs$core$_STAR_exec_tap_fn_STAR_(f){\r\nvar and__4251__auto__ \x3d (typeof setTimeout !\x3d\x3d \x27undefined\x27);\r\nif(and__4251__auto__){\r\nvar G__14136 \x3d setTimeout(f,(0));\r\nreturn (cljs.core.boolean$.cljs$core$IFn$_invoke$arity$1 ? cljs.core.boolean$.cljs$core$IFn$_invoke$arity$1(G__14136) : cljs.core.boolean$.call(null,G__14136));\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n});\r\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core._STAR_print_err_fn_STAR_ !\x3d\x3d \x27undefined\x27)){\r\n} else {\r\n/**\r\n * Each runtime environment provides a different way to print error output.\r\n *   Whatever function *print-err-fn* is bound to will be passed any\r\n *   Strings which should be printed.\r\n */\r\ncljs.core._STAR_print_err_fn_STAR_ \x3d null;\r\n}\r\n/**\r\n * Set *print-fn* to f.\r\n */\r\ncljs.core.set_print_fn_BANG_ \x3d (function cljs$core$set_print_fn_BANG_(f){\r\nreturn (cljs.core._STAR_print_fn_STAR_ \x3d f);\r\n});\r\n/**\r\n * Set *print-err-fn* to f.\r\n */\r\ncljs.core.set_print_err_fn_BANG_ \x3d (function cljs$core$set_print_err_fn_BANG_(f){\r\nreturn (cljs.core._STAR_print_err_fn_STAR_ \x3d f);\r\n});\r\n/**\r\n * When set to true, output will be flushed whenever a newline is printed.\r\n * \r\n *   Defaults to true.\r\n */\r\ncljs.core._STAR_flush_on_newline_STAR_ \x3d true;\r\n/**\r\n * When set to logical false will drop newlines from printing calls.\r\n *   This is to work around the implicit newlines emitted by standard JavaScript\r\n *   console objects.\r\n */\r\ncljs.core._STAR_print_newline_STAR_ \x3d true;\r\n/**\r\n * When set to logical false, strings and characters will be printed with\r\n *   non-alphanumeric characters converted to the appropriate escape sequences.\r\n * \r\n *   Defaults to true\r\n */\r\ncljs.core._STAR_print_readably_STAR_ \x3d true;\r\n/**\r\n * If set to logical true, when printing an object, its metadata will also\r\n *   be printed in a form that can be read back by the reader.\r\n * \r\n *   Defaults to false.\r\n */\r\ncljs.core._STAR_print_meta_STAR_ \x3d false;\r\n/**\r\n * When set to logical true, objects will be printed in a way that preserves\r\n *   their type when read in later.\r\n * \r\n *   Defaults to false.\r\n */\r\ncljs.core._STAR_print_dup_STAR_ \x3d false;\r\n/**\r\n * *print-namespace-maps* controls whether the printer will print\r\n *   namespace map literal syntax.\r\n * \r\n *   Defaults to false, but the REPL binds it to true.\r\n */\r\ncljs.core._STAR_print_namespace_maps_STAR_ \x3d false;\r\n/**\r\n * *print-length* controls how many items of each collection the\r\n *   printer will print. If it is bound to logical false, there is no\r\n *   limit. Otherwise, it must be bound to an integer indicating the maximum\r\n *   number of items of each collection to print. If a collection contains\r\n *   more items, the printer will print items up to the limit followed by\r\n *   \x27...\x27 to represent the remaining items. The root binding is nil\r\n *   indicating no limit.\r\n * @type {null|number}\r\n */\r\ncljs.core._STAR_print_length_STAR_ \x3d null;\r\n/**\r\n * *print-level* controls how many levels deep the printer will\r\n *   print nested objects. If it is bound to logical false, there is no\r\n *   limit. Otherwise, it must be bound to an integer indicating the maximum\r\n *   level to print. Each argument to print is at level 0; if an argument is a\r\n *   collection, its items are at level 1; and so on. If an object is a\r\n *   collection and is at a level greater than or equal to the value bound to\r\n *   *print-level*, the printer prints \x27#\x27 to represent it. The root binding\r\n *   is nil indicating no limit.\r\n * @type {null|number}\r\n */\r\ncljs.core._STAR_print_level_STAR_ \x3d null;\r\n/**\r\n * *print-fns-bodies* controls whether functions print their source or\r\n *  only their names.\r\n */\r\ncljs.core._STAR_print_fn_bodies_STAR_ \x3d false;\r\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core._STAR_loaded_libs_STAR_ !\x3d\x3d \x27undefined\x27)){\r\n} else {\r\n/**\r\n * @type {*}\r\n */\r\ncljs.core._STAR_loaded_libs_STAR_ \x3d null;\r\n}\r\ncljs.core.pr_opts \x3d (function cljs$core$pr_opts(){\r\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22flush-on-newline\x22,\x22flush-on-newline\x22,-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,\x22readably\x22,\x22readably\x22,1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,\x22dup\x22,\x22dup\x22,556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,\x22print-length\x22,\x22print-length\x22,1931866356),cljs.core._STAR_print_length_STAR_], null);\r\n});\r\n/**\r\n * Set *print-fn* to console.log\r\n */\r\ncljs.core.enable_console_print_BANG_ \x3d (function cljs$core$enable_console_print_BANG_(){\r\n(cljs.core._STAR_print_newline_STAR_ \x3d false);\r\n\r\ncljs.core.set_print_fn_BANG_((function (){\r\nvar xs \x3d arguments;\r\nreturn console.log.apply(console,cljs.core.goog$module$goog$array.clone(xs));\r\n}));\r\n\r\ncljs.core.set_print_err_fn_BANG_((function (){\r\nvar xs \x3d arguments;\r\nreturn console.error.apply(console,cljs.core.goog$module$goog$array.clone(xs));\r\n}));\r\n\r\nreturn null;\r\n});\r\n/**\r\n * Internal - do not use!\r\n */\r\ncljs.core.truth_ \x3d (function cljs$core$truth_(x){\r\nreturn (x !\x3d null \x26\x26 x !\x3d\x3d false);\r\n});\r\ncljs.core.not_native \x3d null;\r\n\r\n/**\r\n * Tests if 2 arguments are the same object\r\n */\r\ncljs.core.identical_QMARK_ \x3d (function cljs$core$identical_QMARK_(x,y){\r\nreturn (x \x3d\x3d\x3d y);\r\n});\r\n/**\r\n * Returns true if x is nil, false otherwise.\r\n */\r\ncljs.core.nil_QMARK_ \x3d (function cljs$core$nil_QMARK_(x){\r\nreturn (x \x3d\x3d null);\r\n});\r\n/**\r\n * Returns true if x is a JavaScript array.\r\n */\r\ncljs.core.array_QMARK_ \x3d (function cljs$core$array_QMARK_(x){\r\nif((cljs.core._STAR_target_STAR_ \x3d\x3d\x3d \x22nodejs\x22)){\r\nreturn Array.isArray(x);\r\n} else {\r\nreturn (x instanceof Array);\r\n}\r\n});\r\n/**\r\n * Returns true if x is a JavaScript number.\r\n */\r\ncljs.core.number_QMARK_ \x3d (function cljs$core$number_QMARK_(x){\r\nreturn typeof x \x3d\x3d\x3d \x27number\x27;\r\n});\r\n/**\r\n * Returns true if x is logical false, false otherwise.\r\n */\r\ncljs.core.not \x3d (function cljs$core$not(x){\r\nif((x \x3d\x3d null)){\r\nreturn true;\r\n} else {\r\nif(x \x3d\x3d\x3d false){\r\nreturn true;\r\n} else {\r\nreturn false;\r\n\r\n}\r\n}\r\n});\r\n/**\r\n * Returns true if x is not nil, false otherwise.\r\n */\r\ncljs.core.some_QMARK_ \x3d (function cljs$core$some_QMARK_(x){\r\nreturn (!((x \x3d\x3d null)));\r\n});\r\n/**\r\n * Returns true if x\x27s constructor is Object\r\n */\r\ncljs.core.object_QMARK_ \x3d (function cljs$core$object_QMARK_(x){\r\nif((!((x \x3d\x3d null)))){\r\nreturn (x.constructor \x3d\x3d\x3d Object);\r\n} else {\r\nreturn false;\r\n}\r\n});\r\n/**\r\n * Returns true if x is a JavaScript string.\r\n */\r\ncljs.core.string_QMARK_ \x3d (function cljs$core$string_QMARK_(x){\r\nreturn (\x22string\x22 \x3d\x3d\x3d goog.typeOf(x));\r\n});\r\n/**\r\n * Returns true if x is a JavaScript string of length one.\r\n */\r\ncljs.core.char_QMARK_ \x3d (function cljs$core$char_QMARK_(x){\r\nreturn ((typeof x \x3d\x3d\x3d \x27string\x27) \x26\x26 (((1) \x3d\x3d\x3d x.length)));\r\n});\r\n/**\r\n * Returns true if given any argument.\r\n */\r\ncljs.core.any_QMARK_ \x3d (function cljs$core$any_QMARK_(x){\r\nreturn true;\r\n});\r\n/**\r\n * Internal - do not use!\r\n */\r\ncljs.core.native_satisfies_QMARK_ \x3d (function cljs$core$native_satisfies_QMARK_(p,x){\r\nvar x__$1 \x3d (((x \x3d\x3d null))?null:x);\r\nif((p[goog.typeOf(x__$1)])){\r\nreturn true;\r\n} else {\r\nif((p[\x22_\x22])){\r\nreturn true;\r\n} else {\r\nreturn false;\r\n\r\n}\r\n}\r\n});\r\ncljs.core.is_proto_ \x3d (function cljs$core$is_proto_(x){\r\nreturn (x.constructor.prototype \x3d\x3d\x3d x);\r\n});\r\n/**\r\n * When compiled for a command-line target, whatever function\r\n *   *main-cli-fn* is set to will be called with the command-line\r\n *   argv as arguments\r\n */\r\ncljs.core._STAR_main_cli_fn_STAR_ \x3d null;\r\n/**\r\n * A sequence of the supplied command line arguments, or nil if\r\n *   none were supplied\r\n */\r\ncljs.core._STAR_command_line_args_STAR_ \x3d null;\r\n/**\r\n * Return x\x27s constructor.\r\n */\r\ncljs.core.type \x3d (function cljs$core$type(x){\r\nif((x \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn x.constructor;\r\n}\r\n});\r\ncljs.core.missing_protocol \x3d (function cljs$core$missing_protocol(proto,obj){\r\nvar ty \x3d cljs.core.type(obj);\r\nvar ty__$1 \x3d (cljs.core.truth_((function (){var and__4251__auto__ \x3d ty;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn ty.cljs$lang$type;\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())?ty.cljs$lang$ctorStr:goog.typeOf(obj));\r\nreturn (new Error([\x22No protocol method \x22,proto,\x22 defined for type \x22,ty__$1,\x22: \x22,obj].join(\x22\x22)));\r\n});\r\ncljs.core.type__GT_str \x3d (function cljs$core$type__GT_str(ty){\r\nvar temp__5751__auto__ \x3d ty.cljs$lang$ctorStr;\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar s \x3d temp__5751__auto__;\r\nreturn s;\r\n} else {\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);\r\n}\r\n});\r\ncljs.core.load_file \x3d (function cljs$core$load_file(file){\r\nif(cljs.core.truth_(COMPILED)){\r\nreturn null;\r\n} else {\r\nreturn goog.nodeGlobalRequire(file);\r\n}\r\n});\r\nif((((typeof Symbol !\x3d\x3d \x27undefined\x27)) \x26\x26 ((goog.typeOf(Symbol) \x3d\x3d\x3d \x22function\x22)))){\r\ncljs.core.ITER_SYMBOL \x3d Symbol.iterator;\r\n} else {\r\ncljs.core.ITER_SYMBOL \x3d \x22@@iterator\x22;\r\n}\r\n/**\r\n * @enum {string}\r\n */\r\ncljs.core.CHAR_MAP \x3d ({\x22]\x22: \x22_RBRACK_\x22, \x22\x27\x22: \x22_SINGLEQUOTE_\x22, \x22\x3d\x22: \x22_EQ_\x22, \x22\\\x22\x22: \x22_DOUBLEQUOTE_\x22, \x22!\x22: \x22_BANG_\x22, \x22*\x22: \x22_STAR_\x22, \x22%\x22: \x22_PERCENT_\x22, \x22|\x22: \x22_BAR_\x22, \x22~\x22: \x22_TILDE_\x22, \x22/\x22: \x22_SLASH_\x22, \x22\\\\\x22: \x22_BSLASH_\x22, \x22-\x22: \x22_\x22, \x22?\x22: \x22_QMARK_\x22, \x22\x26\x22: \x22_AMPERSAND_\x22, \x22:\x22: \x22_COLON_\x22, \x22\x3c\x22: \x22_LT_\x22, \x22{\x22: \x22_LBRACE_\x22, \x22}\x22: \x22_RBRACE_\x22, \x22[\x22: \x22_LBRACK_\x22, \x22#\x22: \x22_SHARP_\x22, \x22^\x22: \x22_CARET_\x22, \x22+\x22: \x22_PLUS_\x22, \x22@\x22: \x22_CIRCA_\x22, \x22\x3e\x22: \x22_GT_\x22});\r\n/**\r\n * @enum {string}\r\n */\r\ncljs.core.DEMUNGE_MAP \x3d ({\x22_RBRACE_\x22: \x22}\x22, \x22_COLON_\x22: \x22:\x22, \x22_BANG_\x22: \x22!\x22, \x22_QMARK_\x22: \x22?\x22, \x22_BSLASH_\x22: \x22\\\\\\\\\x22, \x22_SLASH_\x22: \x22/\x22, \x22_PERCENT_\x22: \x22%\x22, \x22_PLUS_\x22: \x22+\x22, \x22_SHARP_\x22: \x22#\x22, \x22_LBRACE_\x22: \x22{\x22, \x22_BAR_\x22: \x22|\x22, \x22_LBRACK_\x22: \x22[\x22, \x22_EQ_\x22: \x22\x3d\x22, \x22_\x22: \x22-\x22, \x22_TILDE_\x22: \x22~\x22, \x22_RBRACK_\x22: \x22]\x22, \x22_GT_\x22: \x22\x3e\x22, \x22_SINGLEQUOTE_\x22: \x22\x27\x22, \x22_CIRCA_\x22: \x22@\x22, \x22_AMPERSAND_\x22: \x22\x26\x22, \x22_DOUBLEQUOTE_\x22: \x22\\\\\\\x22\x22, \x22_CARET_\x22: \x22^\x22, \x22_LT_\x22: \x22\x3c\x22, \x22_STAR_\x22: \x22*\x22});\r\ncljs.core.DEMUNGE_PATTERN \x3d null;\r\n/**\r\n * Returns highest resolution time offered by host in milliseconds.\r\n */\r\ncljs.core.system_time \x3d (function cljs$core$system_time(){\r\nif((((typeof performance !\x3d\x3d \x27undefined\x27)) \x26\x26 ((!((performance.now \x3d\x3d null)))))){\r\nreturn performance.now();\r\n} else {\r\nif((((typeof process !\x3d\x3d \x27undefined\x27)) \x26\x26 ((!((process.hrtime \x3d\x3d null)))))){\r\nvar t \x3d process.hrtime();\r\nreturn ((((t[(0)]) * 1.0E9) + (t[(1)])) / 1000000.0);\r\n} else {\r\nreturn (new Date()).getTime();\r\n\r\n}\r\n}\r\n});\r\n/**\r\n * Construct a JavaScript array of the specified dimensions. Accepts ignored\r\n *   type argument for compatibility with Clojure. Note that there is no efficient\r\n *   way to allocate multi-dimensional arrays in JavaScript; as such, this function\r\n *   will run in polynomial time when called with 3 or more arguments.\r\n */\r\ncljs.core.make_array \x3d (function cljs$core$make_array(var_args){\r\nvar G__14141 \x3d arguments.length;\r\nswitch (G__14141) {\r\ncase 1:\r\nreturn cljs.core.make_array.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.make_array.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___16435 \x3d arguments.length;\r\nvar i__4865__auto___16436 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___16436 \x3c len__4864__auto___16435)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___16436]));\r\n\r\nvar G__16437 \x3d (i__4865__auto___16436 + (1));\r\ni__4865__auto___16436 \x3d G__16437;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 \x3d (function (size){\r\nreturn (new Array(size));\r\n}));\r\n\r\n(cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 \x3d (function (type,size){\r\nreturn (new Array(size));\r\n}));\r\n\r\n(cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic \x3d (function (type,size,more_sizes){\r\nvar dims \x3d more_sizes;\r\nvar dimarray \x3d (new Array(size));\r\nvar n__4741__auto___16439 \x3d dimarray.length;\r\nvar i_16440 \x3d (0);\r\nwhile(true){\r\nif((i_16440 \x3c n__4741__auto___16439)){\r\n(dimarray[i_16440] \x3d (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array,null,dims) : cljs.core.apply.call(null,cljs.core.make_array,null,dims)));\r\n\r\nvar G__16441 \x3d (i_16440 + (1));\r\ni_16440 \x3d G__16441;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn dimarray;\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.make_array.cljs$lang$applyTo \x3d (function (seq14138){\r\nvar G__14139 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq14138) : cljs.core.first.call(null,seq14138));\r\nvar seq14138__$1 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq14138) : cljs.core.next.call(null,seq14138));\r\nvar G__14140 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq14138__$1) : cljs.core.first.call(null,seq14138__$1));\r\nvar seq14138__$2 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq14138__$1) : cljs.core.next.call(null,seq14138__$1));\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14139,G__14140,seq14138__$2);\r\n}));\r\n\r\n(cljs.core.make_array.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Returns a javascript array, cloned from the passed in array\r\n */\r\ncljs.core.aclone \x3d (function cljs$core$aclone(arr){\r\nvar len \x3d arr.length;\r\nvar new_arr \x3d (new Array(len));\r\nvar n__4741__auto___16442 \x3d len;\r\nvar i_16443 \x3d (0);\r\nwhile(true){\r\nif((i_16443 \x3c n__4741__auto___16442)){\r\n(new_arr[i_16443] \x3d (arr[i_16443]));\r\n\r\nvar G__16444 \x3d (i_16443 + (1));\r\ni_16443 \x3d G__16444;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn new_arr;\r\n});\r\n/**\r\n * Creates a new javascript array.\r\n * @param {...*} var_args\r\n */\r\ncljs.core.array \x3d (function cljs$core$array(var_args){\r\nvar a \x3d (new Array(arguments.length));\r\nvar i \x3d (0);\r\nwhile(true){\r\nif((i \x3c a.length)){\r\n(a[i] \x3d (arguments[i]));\r\n\r\nvar G__16446 \x3d (i + (1));\r\ni \x3d G__16446;\r\ncontinue;\r\n} else {\r\nreturn a;\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.core.maybe_warn \x3d (function cljs$core$maybe_warn(e){\r\nif(cljs.core.truth_(cljs.core._STAR_print_err_fn_STAR_)){\r\nreturn cljs.core._STAR_print_err_fn_STAR_.call(null,e);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ncljs.core.checked_aget \x3d (function cljs$core$checked_aget(var_args){\r\nvar G__14146 \x3d arguments.length;\r\nswitch (G__14146) {\r\ncase 2:\r\nreturn cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___16448 \x3d arguments.length;\r\nvar i__4865__auto___16449 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___16449 \x3c len__4864__auto___16448)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___16449]));\r\n\r\nvar G__16450 \x3d (i__4865__auto___16449 + (1));\r\ni__4865__auto___16449 \x3d G__16450;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2 \x3d (function (array,idx){\r\ntry{if(cljs.core.truth_((function (){var or__4253__auto__ \x3d cljs.core.array_QMARK_(array);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn goog.isArrayLike(array);\r\n}\r\n})())){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (or (array? array) (goog/isArrayLike array))\x22));\r\n}\r\n\r\nif(typeof idx \x3d\x3d\x3d \x27number\x27){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (number? idx)\x22));\r\n}\r\n\r\nif((!((idx \x3c (0))))){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (not (neg? idx))\x22));\r\n}\r\n\r\nif((idx \x3c array.length)){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (\x3c idx (alength array))\x22));\r\n}\r\n}catch (e14147){var e_16451 \x3d e14147;\r\ncljs.core.maybe_warn(e_16451);\r\n}\r\nreturn (array[idx]);\r\n}));\r\n\r\n(cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic \x3d (function (array,idx,idxs){\r\nvar G__14148 \x3d cljs.core.checked_aget;\r\nvar G__14149 \x3d cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array,idx);\r\nvar G__14150 \x3d idxs;\r\nreturn (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__14148,G__14149,G__14150) : cljs.core.apply.call(null,G__14148,G__14149,G__14150));\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.checked_aget.cljs$lang$applyTo \x3d (function (seq14143){\r\nvar G__14144 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq14143) : cljs.core.first.call(null,seq14143));\r\nvar seq14143__$1 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq14143) : cljs.core.next.call(null,seq14143));\r\nvar G__14145 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq14143__$1) : cljs.core.first.call(null,seq14143__$1));\r\nvar seq14143__$2 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq14143__$1) : cljs.core.next.call(null,seq14143__$1));\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14144,G__14145,seq14143__$2);\r\n}));\r\n\r\n(cljs.core.checked_aget.cljs$lang$maxFixedArity \x3d (2));\r\n\r\ncljs.core.checked_aset \x3d (function cljs$core$checked_aset(var_args){\r\nvar G__14156 \x3d arguments.length;\r\nswitch (G__14156) {\r\ncase 3:\r\nreturn cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___16456 \x3d arguments.length;\r\nvar i__4865__auto___16457 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___16457 \x3c len__4864__auto___16456)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___16457]));\r\n\r\nvar G__16458 \x3d (i__4865__auto___16457 + (1));\r\ni__4865__auto___16457 \x3d G__16458;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((3)),(0),null));\r\nreturn cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3 \x3d (function (array,idx,val){\r\ntry{if(cljs.core.truth_((function (){var or__4253__auto__ \x3d cljs.core.array_QMARK_(array);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn goog.isArrayLike(array);\r\n}\r\n})())){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (or (array? array) (goog/isArrayLike array))\x22));\r\n}\r\n\r\nif(typeof idx \x3d\x3d\x3d \x27number\x27){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (number? idx)\x22));\r\n}\r\n\r\nif((!((idx \x3c (0))))){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (not (neg? idx))\x22));\r\n}\r\n\r\nif((idx \x3c array.length)){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (\x3c idx (alength array))\x22));\r\n}\r\n}catch (e14157){var e_16466 \x3d e14157;\r\ncljs.core.maybe_warn(e_16466);\r\n}\r\nreturn (array[idx] \x3d val);\r\n}));\r\n\r\n(cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic \x3d (function (array,idx,idx2,idxv){\r\nvar G__14158 \x3d cljs.core.checked_aset;\r\nvar G__14159 \x3d cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array,idx);\r\nvar G__14160 \x3d idx2;\r\nvar G__14161 \x3d idxv;\r\nreturn (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__14158,G__14159,G__14160,G__14161) : cljs.core.apply.call(null,G__14158,G__14159,G__14160,G__14161));\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.checked_aset.cljs$lang$applyTo \x3d (function (seq14152){\r\nvar G__14153 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq14152) : cljs.core.first.call(null,seq14152));\r\nvar seq14152__$1 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq14152) : cljs.core.next.call(null,seq14152));\r\nvar G__14154 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq14152__$1) : cljs.core.first.call(null,seq14152__$1));\r\nvar seq14152__$2 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq14152__$1) : cljs.core.next.call(null,seq14152__$1));\r\nvar G__14155 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq14152__$2) : cljs.core.first.call(null,seq14152__$2));\r\nvar seq14152__$3 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq14152__$2) : cljs.core.next.call(null,seq14152__$2));\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14153,G__14154,G__14155,seq14152__$3);\r\n}));\r\n\r\n(cljs.core.checked_aset.cljs$lang$maxFixedArity \x3d (3));\r\n\r\ncljs.core.checked_aget_SINGLEQUOTE_ \x3d (function cljs$core$checked_aget_SINGLEQUOTE_(var_args){\r\nvar G__14166 \x3d arguments.length;\r\nswitch (G__14166) {\r\ncase 2:\r\nreturn cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___16470 \x3d arguments.length;\r\nvar i__4865__auto___16471 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___16471 \x3c len__4864__auto___16470)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___16471]));\r\n\r\nvar G__16472 \x3d (i__4865__auto___16471 + (1));\r\ni__4865__auto___16471 \x3d G__16472;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2 \x3d (function (array,idx){\r\nif(cljs.core.truth_((function (){var or__4253__auto__ \x3d cljs.core.array_QMARK_(array);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn goog.isArrayLike(array);\r\n}\r\n})())){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (or (array? array) (goog/isArrayLike array))\x22));\r\n}\r\n\r\nif(typeof idx \x3d\x3d\x3d \x27number\x27){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (number? idx)\x22));\r\n}\r\n\r\nif((!((idx \x3c (0))))){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (not (neg? idx))\x22));\r\n}\r\n\r\nif((idx \x3c array.length)){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (\x3c idx (alength array))\x22));\r\n}\r\n\r\nreturn (array[idx]);\r\n}));\r\n\r\n(cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (array,idx,idxs){\r\nvar G__14167 \x3d cljs.core.checked_aget_SINGLEQUOTE_;\r\nvar G__14168 \x3d cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array,idx);\r\nvar G__14169 \x3d idxs;\r\nreturn (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__14167,G__14168,G__14169) : cljs.core.apply.call(null,G__14167,G__14168,G__14169));\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$applyTo \x3d (function (seq14163){\r\nvar G__14164 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq14163) : cljs.core.first.call(null,seq14163));\r\nvar seq14163__$1 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq14163) : cljs.core.next.call(null,seq14163));\r\nvar G__14165 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq14163__$1) : cljs.core.first.call(null,seq14163__$1));\r\nvar seq14163__$2 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq14163__$1) : cljs.core.next.call(null,seq14163__$1));\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14164,G__14165,seq14163__$2);\r\n}));\r\n\r\n(cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$maxFixedArity \x3d (2));\r\n\r\ncljs.core.checked_aset_SINGLEQUOTE_ \x3d (function cljs$core$checked_aset_SINGLEQUOTE_(var_args){\r\nvar G__14175 \x3d arguments.length;\r\nswitch (G__14175) {\r\ncase 3:\r\nreturn cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___16479 \x3d arguments.length;\r\nvar i__4865__auto___16480 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___16480 \x3c len__4864__auto___16479)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___16480]));\r\n\r\nvar G__16481 \x3d (i__4865__auto___16480 + (1));\r\ni__4865__auto___16480 \x3d G__16481;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((3)),(0),null));\r\nreturn cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3 \x3d (function (array,idx,val){\r\nif(cljs.core.truth_((function (){var or__4253__auto__ \x3d cljs.core.array_QMARK_(array);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn goog.isArrayLike(array);\r\n}\r\n})())){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (or (array? array) (goog/isArrayLike array))\x22));\r\n}\r\n\r\nif(typeof idx \x3d\x3d\x3d \x27number\x27){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (number? idx)\x22));\r\n}\r\n\r\nif((!((idx \x3c (0))))){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (not (neg? idx))\x22));\r\n}\r\n\r\nif((idx \x3c array.length)){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (\x3c idx (alength array))\x22));\r\n}\r\n\r\nreturn (array[idx] \x3d val);\r\n}));\r\n\r\n(cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (array,idx,idx2,idxv){\r\nvar G__14176 \x3d cljs.core.checked_aset_SINGLEQUOTE_;\r\nvar G__14177 \x3d cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array,idx);\r\nvar G__14178 \x3d idx2;\r\nvar G__14179 \x3d idxv;\r\nreturn (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__14176,G__14177,G__14178,G__14179) : cljs.core.apply.call(null,G__14176,G__14177,G__14178,G__14179));\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$applyTo \x3d (function (seq14171){\r\nvar G__14172 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq14171) : cljs.core.first.call(null,seq14171));\r\nvar seq14171__$1 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq14171) : cljs.core.next.call(null,seq14171));\r\nvar G__14173 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq14171__$1) : cljs.core.first.call(null,seq14171__$1));\r\nvar seq14171__$2 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq14171__$1) : cljs.core.next.call(null,seq14171__$1));\r\nvar G__14174 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq14171__$2) : cljs.core.first.call(null,seq14171__$2));\r\nvar seq14171__$3 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq14171__$2) : cljs.core.next.call(null,seq14171__$2));\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14172,G__14173,G__14174,seq14171__$3);\r\n}));\r\n\r\n(cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$maxFixedArity \x3d (3));\r\n\r\n/**\r\n * Returns the value at the index/indices. Works on JavaScript arrays.\r\n */\r\ncljs.core.aget \x3d (function cljs$core$aget(var_args){\r\nvar G__14184 \x3d arguments.length;\r\nswitch (G__14184) {\r\ncase 2:\r\nreturn cljs.core.aget.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___16483 \x3d arguments.length;\r\nvar i__4865__auto___16484 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___16484 \x3c len__4864__auto___16483)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___16484]));\r\n\r\nvar G__16485 \x3d (i__4865__auto___16484 + (1));\r\ni__4865__auto___16484 \x3d G__16485;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.aget.cljs$core$IFn$_invoke$arity$2 \x3d (function (array,idx){\r\nreturn (array[idx]);\r\n}));\r\n\r\n(cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic \x3d (function (array,idx,idxs){\r\nvar G__14185 \x3d cljs.core.aget;\r\nvar G__14186 \x3d (array[idx]);\r\nvar G__14187 \x3d idxs;\r\nreturn (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__14185,G__14186,G__14187) : cljs.core.apply.call(null,G__14185,G__14186,G__14187));\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.aget.cljs$lang$applyTo \x3d (function (seq14181){\r\nvar G__14182 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq14181) : cljs.core.first.call(null,seq14181));\r\nvar seq14181__$1 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq14181) : cljs.core.next.call(null,seq14181));\r\nvar G__14183 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq14181__$1) : cljs.core.first.call(null,seq14181__$1));\r\nvar seq14181__$2 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq14181__$1) : cljs.core.next.call(null,seq14181__$1));\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14182,G__14183,seq14181__$2);\r\n}));\r\n\r\n(cljs.core.aget.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Sets the value at the index/indices. Works on JavaScript arrays.\r\n *   Returns val.\r\n */\r\ncljs.core.aset \x3d (function cljs$core$aset(var_args){\r\nvar G__14193 \x3d arguments.length;\r\nswitch (G__14193) {\r\ncase 3:\r\nreturn cljs.core.aset.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___16488 \x3d arguments.length;\r\nvar i__4865__auto___16489 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___16489 \x3c len__4864__auto___16488)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___16489]));\r\n\r\nvar G__16490 \x3d (i__4865__auto___16489 + (1));\r\ni__4865__auto___16489 \x3d G__16490;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((3)),(0),null));\r\nreturn cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.aset.cljs$core$IFn$_invoke$arity$3 \x3d (function (array,idx,val){\r\nreturn (array[idx] \x3d val);\r\n}));\r\n\r\n(cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic \x3d (function (array,idx,idx2,idxv){\r\nvar G__14194 \x3d cljs.core.aset;\r\nvar G__14195 \x3d (array[idx]);\r\nvar G__14196 \x3d idx2;\r\nvar G__14197 \x3d idxv;\r\nreturn (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__14194,G__14195,G__14196,G__14197) : cljs.core.apply.call(null,G__14194,G__14195,G__14196,G__14197));\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.aset.cljs$lang$applyTo \x3d (function (seq14189){\r\nvar G__14190 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq14189) : cljs.core.first.call(null,seq14189));\r\nvar seq14189__$1 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq14189) : cljs.core.next.call(null,seq14189));\r\nvar G__14191 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq14189__$1) : cljs.core.first.call(null,seq14189__$1));\r\nvar seq14189__$2 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq14189__$1) : cljs.core.next.call(null,seq14189__$1));\r\nvar G__14192 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq14189__$2) : cljs.core.first.call(null,seq14189__$2));\r\nvar seq14189__$3 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq14189__$2) : cljs.core.next.call(null,seq14189__$2));\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14190,G__14191,G__14192,seq14189__$3);\r\n}));\r\n\r\n(cljs.core.aset.cljs$lang$maxFixedArity \x3d (3));\r\n\r\n/**\r\n * Returns the length of the array. Works on arrays of all types.\r\n */\r\ncljs.core.alength \x3d (function cljs$core$alength(array){\r\nreturn array.length;\r\n});\r\n/**\r\n * Returns an array with components set to the values in aseq. Optional type\r\n *   argument accepted for compatibility with Clojure.\r\n */\r\ncljs.core.into_array \x3d (function cljs$core$into_array(var_args){\r\nvar G__14199 \x3d arguments.length;\r\nswitch (G__14199) {\r\ncase 1:\r\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 \x3d (function (aseq){\r\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);\r\n}));\r\n\r\n(cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 \x3d (function (type,aseq){\r\nvar G__14200 \x3d (function (a,x){\r\na.push(x);\r\n\r\nreturn a;\r\n});\r\nvar G__14201 \x3d [];\r\nvar G__14202 \x3d aseq;\r\nreturn (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__14200,G__14201,G__14202) : cljs.core.reduce.call(null,G__14200,G__14201,G__14202));\r\n}));\r\n\r\n(cljs.core.into_array.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Invoke JavaScript object method via string. Needed when the\r\n *   string is not a valid unquoted property name.\r\n */\r\ncljs.core.js_invoke \x3d (function cljs$core$js_invoke(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___16495 \x3d arguments.length;\r\nvar i__4865__auto___16496 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___16496 \x3c len__4864__auto___16495)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___16496]));\r\n\r\nvar G__16497 \x3d (i__4865__auto___16496 + (1));\r\ni__4865__auto___16496 \x3d G__16497;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((2) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((2)),(0),null)):null);\r\nreturn cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic \x3d (function (obj,s,args){\r\nreturn (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));\r\n}));\r\n\r\n(cljs.core.js_invoke.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/** @this {Function} */\r\n(cljs.core.js_invoke.cljs$lang$applyTo \x3d (function (seq14203){\r\nvar G__14204 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq14203) : cljs.core.first.call(null,seq14203));\r\nvar seq14203__$1 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq14203) : cljs.core.next.call(null,seq14203));\r\nvar G__14205 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq14203__$1) : cljs.core.first.call(null,seq14203__$1));\r\nvar seq14203__$2 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq14203__$1) : cljs.core.next.call(null,seq14203__$1));\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14204,G__14205,seq14203__$2);\r\n}));\r\n\r\n/**\r\n * Returns true if x is an instance of Symbol\r\n */\r\ncljs.core.js_symbol_QMARK_ \x3d (function cljs$core$js_symbol_QMARK_(x){\r\nreturn (((goog.typeOf(x) \x3d\x3d\x3d \x22symbol\x22)) || ((((typeof Symbol !\x3d\x3d \x27undefined\x27)) \x26\x26 ((x instanceof Symbol)))));\r\n});\r\n\r\n/**\r\n * Marker protocol\r\n * @interface\r\n */\r\ncljs.core.Fn \x3d function(){};\r\n\r\n\r\n/**\r\n * Protocol for adding the ability to invoke an object as a function.\r\n *   For example, a vector can also be used to look up a value:\r\n *   ([1 2 3 4] 1) \x3d\x3e 2\r\n * @interface\r\n */\r\ncljs.core.IFn \x3d function(){};\r\n\r\nvar cljs$core$IFn$_invoke$dyn_16499 \x3d (function() {\r\nvar G__16500 \x3d null;\r\nvar G__16500__1 \x3d (function (this$){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null,this$));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null,this$));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\r\n}\r\n}\r\n});\r\nvar G__16500__2 \x3d (function (this$,a){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$,a) : m__4551__auto__.call(null,this$,a));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$,a) : m__4549__auto__.call(null,this$,a));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\r\n}\r\n}\r\n});\r\nvar G__16500__3 \x3d (function (this$,a,b){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(this$,a,b) : m__4551__auto__.call(null,this$,a,b));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(this$,a,b) : m__4549__auto__.call(null,this$,a,b));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\r\n}\r\n}\r\n});\r\nvar G__16500__4 \x3d (function (this$,a,b,c){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$4(this$,a,b,c) : m__4551__auto__.call(null,this$,a,b,c));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$4(this$,a,b,c) : m__4549__auto__.call(null,this$,a,b,c));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\r\n}\r\n}\r\n});\r\nvar G__16500__5 \x3d (function (this$,a,b,c,d){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d) : m__4551__auto__.call(null,this$,a,b,c,d));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d) : m__4549__auto__.call(null,this$,a,b,c,d));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\r\n}\r\n}\r\n});\r\nvar G__16500__6 \x3d (function (this$,a,b,c,d,e){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e) : m__4551__auto__.call(null,this$,a,b,c,d,e));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e) : m__4549__auto__.call(null,this$,a,b,c,d,e));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\r\n}\r\n}\r\n});\r\nvar G__16500__7 \x3d (function (this$,a,b,c,d,e,f){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f) : m__4551__auto__.call(null,this$,a,b,c,d,e,f));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f) : m__4549__auto__.call(null,this$,a,b,c,d,e,f));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\r\n}\r\n}\r\n});\r\nvar G__16500__8 \x3d (function (this$,a,b,c,d,e,f,g){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$8 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g) : m__4551__auto__.call(null,this$,a,b,c,d,e,f,g));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$8 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g) : m__4549__auto__.call(null,this$,a,b,c,d,e,f,g));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\r\n}\r\n}\r\n});\r\nvar G__16500__9 \x3d (function (this$,a,b,c,d,e,f,g,h){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$9 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h) : m__4551__auto__.call(null,this$,a,b,c,d,e,f,g,h));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$9 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h) : m__4549__auto__.call(null,this$,a,b,c,d,e,f,g,h));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\r\n}\r\n}\r\n});\r\nvar G__16500__10 \x3d (function (this$,a,b,c,d,e,f,g,h,i){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$10 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i) : m__4551__auto__.call(null,this$,a,b,c,d,e,f,g,h,i));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$10 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i) : m__4549__auto__.call(null,this$,a,b,c,d,e,f,g,h,i));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\r\n}\r\n}\r\n});\r\nvar G__16500__11 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$11 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j) : m__4551__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$11 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j) : m__4549__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\r\n}\r\n}\r\n});\r\nvar G__16500__12 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$12 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k) : m__4551__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$12 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k) : m__4549__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\r\n}\r\n}\r\n});\r\nvar G__16500__13 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$13 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l) : m__4551__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$13 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l) : m__4549__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\r\n}\r\n}\r\n});\r\nvar G__16500__14 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$14 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m) : m__4551__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$14 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m) : m__4549__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\r\n}\r\n}\r\n});\r\nvar G__16500__15 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$15 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n) : m__4551__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$15 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n) : m__4549__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\r\n}\r\n}\r\n});\r\nvar G__16500__16 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$16 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) : m__4551__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$16 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) : m__4549__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\r\n}\r\n}\r\n});\r\nvar G__16500__17 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$17 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p) : m__4551__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$17 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p) : m__4549__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\r\n}\r\n}\r\n});\r\nvar G__16500__18 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$18 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q) : m__4551__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$18 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q) : m__4549__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\r\n}\r\n}\r\n});\r\nvar G__16500__19 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$19 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r) : m__4551__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$19 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r) : m__4549__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\r\n}\r\n}\r\n});\r\nvar G__16500__20 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$20 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s) : m__4551__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$20 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s) : m__4549__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\r\n}\r\n}\r\n});\r\nvar G__16500__21 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$21 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t) : m__4551__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$21 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t) : m__4549__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\r\n}\r\n}\r\n});\r\nvar G__16500__22 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$22 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest) : m__4551__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$22 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest) : m__4549__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\r\n}\r\n}\r\n});\r\nG__16500 \x3d function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__16500__1.call(this,this$);\r\ncase 2:\r\nreturn G__16500__2.call(this,this$,a);\r\ncase 3:\r\nreturn G__16500__3.call(this,this$,a,b);\r\ncase 4:\r\nreturn G__16500__4.call(this,this$,a,b,c);\r\ncase 5:\r\nreturn G__16500__5.call(this,this$,a,b,c,d);\r\ncase 6:\r\nreturn G__16500__6.call(this,this$,a,b,c,d,e);\r\ncase 7:\r\nreturn G__16500__7.call(this,this$,a,b,c,d,e,f);\r\ncase 8:\r\nreturn G__16500__8.call(this,this$,a,b,c,d,e,f,g);\r\ncase 9:\r\nreturn G__16500__9.call(this,this$,a,b,c,d,e,f,g,h);\r\ncase 10:\r\nreturn G__16500__10.call(this,this$,a,b,c,d,e,f,g,h,i);\r\ncase 11:\r\nreturn G__16500__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);\r\ncase 12:\r\nreturn G__16500__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);\r\ncase 13:\r\nreturn G__16500__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);\r\ncase 14:\r\nreturn G__16500__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);\r\ncase 15:\r\nreturn G__16500__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);\r\ncase 16:\r\nreturn G__16500__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);\r\ncase 17:\r\nreturn G__16500__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);\r\ncase 18:\r\nreturn G__16500__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);\r\ncase 19:\r\nreturn G__16500__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);\r\ncase 20:\r\nreturn G__16500__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);\r\ncase 21:\r\nreturn G__16500__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);\r\ncase 22:\r\nreturn G__16500__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__16500.cljs$core$IFn$_invoke$arity$1 \x3d G__16500__1;\r\nG__16500.cljs$core$IFn$_invoke$arity$2 \x3d G__16500__2;\r\nG__16500.cljs$core$IFn$_invoke$arity$3 \x3d G__16500__3;\r\nG__16500.cljs$core$IFn$_invoke$arity$4 \x3d G__16500__4;\r\nG__16500.cljs$core$IFn$_invoke$arity$5 \x3d G__16500__5;\r\nG__16500.cljs$core$IFn$_invoke$arity$6 \x3d G__16500__6;\r\nG__16500.cljs$core$IFn$_invoke$arity$7 \x3d G__16500__7;\r\nG__16500.cljs$core$IFn$_invoke$arity$8 \x3d G__16500__8;\r\nG__16500.cljs$core$IFn$_invoke$arity$9 \x3d G__16500__9;\r\nG__16500.cljs$core$IFn$_invoke$arity$10 \x3d G__16500__10;\r\nG__16500.cljs$core$IFn$_invoke$arity$11 \x3d G__16500__11;\r\nG__16500.cljs$core$IFn$_invoke$arity$12 \x3d G__16500__12;\r\nG__16500.cljs$core$IFn$_invoke$arity$13 \x3d G__16500__13;\r\nG__16500.cljs$core$IFn$_invoke$arity$14 \x3d G__16500__14;\r\nG__16500.cljs$core$IFn$_invoke$arity$15 \x3d G__16500__15;\r\nG__16500.cljs$core$IFn$_invoke$arity$16 \x3d G__16500__16;\r\nG__16500.cljs$core$IFn$_invoke$arity$17 \x3d G__16500__17;\r\nG__16500.cljs$core$IFn$_invoke$arity$18 \x3d G__16500__18;\r\nG__16500.cljs$core$IFn$_invoke$arity$19 \x3d G__16500__19;\r\nG__16500.cljs$core$IFn$_invoke$arity$20 \x3d G__16500__20;\r\nG__16500.cljs$core$IFn$_invoke$arity$21 \x3d G__16500__21;\r\nG__16500.cljs$core$IFn$_invoke$arity$22 \x3d G__16500__22;\r\nreturn G__16500;\r\n})()\r\n;\r\ncljs.core._invoke \x3d (function cljs$core$_invoke(var_args){\r\nvar G__14207 \x3d arguments.length;\r\nswitch (G__14207) {\r\ncase 1:\r\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ncase 5:\r\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ncase 6:\r\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\r\n\r\nbreak;\r\ncase 7:\r\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$7((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]));\r\n\r\nbreak;\r\ncase 8:\r\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$8((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]));\r\n\r\nbreak;\r\ncase 9:\r\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$9((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]));\r\n\r\nbreak;\r\ncase 10:\r\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$10((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]));\r\n\r\nbreak;\r\ncase 11:\r\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$11((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]));\r\n\r\nbreak;\r\ncase 12:\r\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$12((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]));\r\n\r\nbreak;\r\ncase 13:\r\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$13((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]));\r\n\r\nbreak;\r\ncase 14:\r\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$14((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]));\r\n\r\nbreak;\r\ncase 15:\r\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$15((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]));\r\n\r\nbreak;\r\ncase 16:\r\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$16((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]));\r\n\r\nbreak;\r\ncase 17:\r\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$17((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]));\r\n\r\nbreak;\r\ncase 18:\r\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$18((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]));\r\n\r\nbreak;\r\ncase 19:\r\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$19((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]));\r\n\r\nbreak;\r\ncase 20:\r\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$20((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]));\r\n\r\nbreak;\r\ncase 21:\r\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$21((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]));\r\n\r\nbreak;\r\ncase 22:\r\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$22((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]),(arguments[(21)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 \x3d (function (this$){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$1 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IFn$_invoke$arity$1(this$);\r\n} else {\r\nreturn cljs$core$IFn$_invoke$dyn_16499(this$);\r\n}\r\n}));\r\n\r\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 \x3d (function (this$,a){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$2 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IFn$_invoke$arity$2(this$,a);\r\n} else {\r\nreturn cljs$core$IFn$_invoke$dyn_16499(this$,a);\r\n}\r\n}));\r\n\r\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 \x3d (function (this$,a,b){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$3 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);\r\n} else {\r\nreturn cljs$core$IFn$_invoke$dyn_16499(this$,a,b);\r\n}\r\n}));\r\n\r\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 \x3d (function (this$,a,b,c){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$4 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);\r\n} else {\r\nreturn cljs$core$IFn$_invoke$dyn_16499(this$,a,b,c);\r\n}\r\n}));\r\n\r\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 \x3d (function (this$,a,b,c,d){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$5 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);\r\n} else {\r\nreturn cljs$core$IFn$_invoke$dyn_16499(this$,a,b,c,d);\r\n}\r\n}));\r\n\r\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 \x3d (function (this$,a,b,c,d,e){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$6 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);\r\n} else {\r\nreturn cljs$core$IFn$_invoke$dyn_16499(this$,a,b,c,d,e);\r\n}\r\n}));\r\n\r\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 \x3d (function (this$,a,b,c,d,e,f){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$7 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);\r\n} else {\r\nreturn cljs$core$IFn$_invoke$dyn_16499(this$,a,b,c,d,e,f);\r\n}\r\n}));\r\n\r\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 \x3d (function (this$,a,b,c,d,e,f,g){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$8 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);\r\n} else {\r\nreturn cljs$core$IFn$_invoke$dyn_16499(this$,a,b,c,d,e,f,g);\r\n}\r\n}));\r\n\r\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 \x3d (function (this$,a,b,c,d,e,f,g,h){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$9 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);\r\n} else {\r\nreturn cljs$core$IFn$_invoke$dyn_16499(this$,a,b,c,d,e,f,g,h);\r\n}\r\n}));\r\n\r\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 \x3d (function (this$,a,b,c,d,e,f,g,h,i){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$10 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);\r\n} else {\r\nreturn cljs$core$IFn$_invoke$dyn_16499(this$,a,b,c,d,e,f,g,h,i);\r\n}\r\n}));\r\n\r\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$11 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);\r\n} else {\r\nreturn cljs$core$IFn$_invoke$dyn_16499(this$,a,b,c,d,e,f,g,h,i,j);\r\n}\r\n}));\r\n\r\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$12 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);\r\n} else {\r\nreturn cljs$core$IFn$_invoke$dyn_16499(this$,a,b,c,d,e,f,g,h,i,j,k);\r\n}\r\n}));\r\n\r\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$13 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);\r\n} else {\r\nreturn cljs$core$IFn$_invoke$dyn_16499(this$,a,b,c,d,e,f,g,h,i,j,k,l);\r\n}\r\n}));\r\n\r\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$14 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);\r\n} else {\r\nreturn cljs$core$IFn$_invoke$dyn_16499(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);\r\n}\r\n}));\r\n\r\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$15 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);\r\n} else {\r\nreturn cljs$core$IFn$_invoke$dyn_16499(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);\r\n}\r\n}));\r\n\r\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$16 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);\r\n} else {\r\nreturn cljs$core$IFn$_invoke$dyn_16499(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);\r\n}\r\n}));\r\n\r\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$17 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);\r\n} else {\r\nreturn cljs$core$IFn$_invoke$dyn_16499(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);\r\n}\r\n}));\r\n\r\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$18 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);\r\n} else {\r\nreturn cljs$core$IFn$_invoke$dyn_16499(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);\r\n}\r\n}));\r\n\r\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$19 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);\r\n} else {\r\nreturn cljs$core$IFn$_invoke$dyn_16499(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);\r\n}\r\n}));\r\n\r\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$20 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);\r\n} else {\r\nreturn cljs$core$IFn$_invoke$dyn_16499(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);\r\n}\r\n}));\r\n\r\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$21 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);\r\n} else {\r\nreturn cljs$core$IFn$_invoke$dyn_16499(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);\r\n}\r\n}));\r\n\r\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$22 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);\r\n} else {\r\nreturn cljs$core$IFn$_invoke$dyn_16499(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);\r\n}\r\n}));\r\n\r\n(cljs.core._invoke.cljs$lang$maxFixedArity \x3d 22);\r\n\r\n\r\n\r\n/**\r\n * Protocol for cloning a value.\r\n * @interface\r\n */\r\ncljs.core.ICloneable \x3d function(){};\r\n\r\nvar cljs$core$ICloneable$_clone$dyn_16543 \x3d (function (value){\r\nvar x__4550__auto__ \x3d (((value \x3d\x3d null))?null:value);\r\nvar m__4551__auto__ \x3d (cljs.core._clone[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__4551__auto__.call(null,value));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._clone[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__4549__auto__.call(null,value));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ICloneable.-clone\x22,value);\r\n}\r\n}\r\n});\r\n/**\r\n * Creates a clone of value.\r\n */\r\ncljs.core._clone \x3d (function cljs$core$_clone(value){\r\nif((((!((value \x3d\x3d null)))) \x26\x26 ((!((value.cljs$core$ICloneable$_clone$arity$1 \x3d\x3d null)))))){\r\nreturn value.cljs$core$ICloneable$_clone$arity$1(value);\r\n} else {\r\nreturn cljs$core$ICloneable$_clone$dyn_16543(value);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for adding the ability to count a collection in constant time.\r\n * @interface\r\n */\r\ncljs.core.ICounted \x3d function(){};\r\n\r\nvar cljs$core$ICounted$_count$dyn_16544 \x3d (function (coll){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._count[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null,coll));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._count[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null,coll));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ICounted.-count\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Calculates the count of coll in constant time. Used by cljs.core/count.\r\n */\r\ncljs.core._count \x3d (function cljs$core$_count(coll){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$ICounted$_count$arity$1 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$ICounted$_count$arity$1(coll);\r\n} else {\r\nreturn cljs$core$ICounted$_count$dyn_16544(coll);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for creating an empty collection.\r\n * @interface\r\n */\r\ncljs.core.IEmptyableCollection \x3d function(){};\r\n\r\nvar cljs$core$IEmptyableCollection$_empty$dyn_16545 \x3d (function (coll){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._empty[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null,coll));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._empty[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null,coll));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IEmptyableCollection.-empty\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns an empty collection of the same category as coll. Used\r\n *   by cljs.core/empty.\r\n */\r\ncljs.core._empty \x3d (function cljs$core$_empty(coll){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);\r\n} else {\r\nreturn cljs$core$IEmptyableCollection$_empty$dyn_16545(coll);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for adding to a collection.\r\n * @interface\r\n */\r\ncljs.core.ICollection \x3d function(){};\r\n\r\nvar cljs$core$ICollection$_conj$dyn_16546 \x3d (function (coll,o){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._conj[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(coll,o) : m__4551__auto__.call(null,coll,o));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._conj[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(coll,o) : m__4549__auto__.call(null,coll,o));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ICollection.-conj\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns a new collection of coll with o added to it. The new item\r\n *   should be added to the most efficient place, e.g.\r\n *   (conj [1 2 3 4] 5) \x3d\x3e [1 2 3 4 5]\r\n *   (conj \x27(2 3 4 5) 1) \x3d\x3e \x27(1 2 3 4 5)\r\n */\r\ncljs.core._conj \x3d (function cljs$core$_conj(coll,o){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$ICollection$_conj$arity$2 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$ICollection$_conj$arity$2(coll,o);\r\n} else {\r\nreturn cljs$core$ICollection$_conj$dyn_16546(coll,o);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for collections to provide indexed-based access to their items.\r\n * @interface\r\n */\r\ncljs.core.IIndexed \x3d function(){};\r\n\r\nvar cljs$core$IIndexed$_nth$dyn_16547 \x3d (function() {\r\nvar G__16548 \x3d null;\r\nvar G__16548__2 \x3d (function (coll,n){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._nth[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(coll,n) : m__4551__auto__.call(null,coll,n));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._nth[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(coll,n) : m__4549__auto__.call(null,coll,n));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IIndexed.-nth\x22,coll);\r\n}\r\n}\r\n});\r\nvar G__16548__3 \x3d (function (coll,n,not_found){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._nth[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(coll,n,not_found) : m__4551__auto__.call(null,coll,n,not_found));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._nth[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(coll,n,not_found) : m__4549__auto__.call(null,coll,n,not_found));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IIndexed.-nth\x22,coll);\r\n}\r\n}\r\n});\r\nG__16548 \x3d function(coll,n,not_found){\r\nswitch(arguments.length){\r\ncase 2:\r\nreturn G__16548__2.call(this,coll,n);\r\ncase 3:\r\nreturn G__16548__3.call(this,coll,n,not_found);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__16548.cljs$core$IFn$_invoke$arity$2 \x3d G__16548__2;\r\nG__16548.cljs$core$IFn$_invoke$arity$3 \x3d G__16548__3;\r\nreturn G__16548;\r\n})()\r\n;\r\n/**\r\n * Returns the value at the index n in the collection coll.\r\n *   Returns not-found if index n is out of bounds and not-found is supplied.\r\n */\r\ncljs.core._nth \x3d (function cljs$core$_nth(var_args){\r\nvar G__14234 \x3d arguments.length;\r\nswitch (G__14234) {\r\ncase 2:\r\nreturn cljs.core._nth.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core._nth.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core._nth.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,n){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IIndexed$_nth$arity$2 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$IIndexed$_nth$arity$2(coll,n);\r\n} else {\r\nreturn cljs$core$IIndexed$_nth$dyn_16547(coll,n);\r\n}\r\n}));\r\n\r\n(cljs.core._nth.cljs$core$IFn$_invoke$arity$3 \x3d (function (coll,n,not_found){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IIndexed$_nth$arity$3 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);\r\n} else {\r\nreturn cljs$core$IIndexed$_nth$dyn_16547(coll,n,not_found);\r\n}\r\n}));\r\n\r\n(cljs.core._nth.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n\r\n\r\n/**\r\n * Marker protocol indicating an array sequence.\r\n * @interface\r\n */\r\ncljs.core.ASeq \x3d function(){};\r\n\r\n\r\n/**\r\n * Protocol for collections to provide access to their items as sequences.\r\n * @interface\r\n */\r\ncljs.core.ISeq \x3d function(){};\r\n\r\nvar cljs$core$ISeq$_first$dyn_16550 \x3d (function (coll){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._first[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null,coll));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._first[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null,coll));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ISeq.-first\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the first item in the collection coll. Used by cljs.core/first.\r\n */\r\ncljs.core._first \x3d (function cljs$core$_first(coll){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$ISeq$_first$arity$1 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$ISeq$_first$arity$1(coll);\r\n} else {\r\nreturn cljs$core$ISeq$_first$dyn_16550(coll);\r\n}\r\n});\r\n\r\nvar cljs$core$ISeq$_rest$dyn_16551 \x3d (function (coll){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._rest[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null,coll));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._rest[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null,coll));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ISeq.-rest\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns a new collection of coll without the first item. It should\r\n *   always return a seq, e.g.\r\n *   (rest []) \x3d\x3e ()\r\n *   (rest nil) \x3d\x3e ()\r\n */\r\ncljs.core._rest \x3d (function cljs$core$_rest(coll){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$ISeq$_rest$arity$1 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$ISeq$_rest$arity$1(coll);\r\n} else {\r\nreturn cljs$core$ISeq$_rest$dyn_16551(coll);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for accessing the next items of a collection.\r\n * @interface\r\n */\r\ncljs.core.INext \x3d function(){};\r\n\r\nvar cljs$core$INext$_next$dyn_16552 \x3d (function (coll){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._next[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null,coll));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._next[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null,coll));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22INext.-next\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns a new collection of coll without the first item. In contrast to\r\n *   rest, it should return nil if there are no more items, e.g.\r\n *   (next []) \x3d\x3e nil\r\n *   (next nil) \x3d\x3e nil\r\n */\r\ncljs.core._next \x3d (function cljs$core$_next(coll){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$INext$_next$arity$1 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$INext$_next$arity$1(coll);\r\n} else {\r\nreturn cljs$core$INext$_next$dyn_16552(coll);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for looking up a value in a data structure.\r\n * @interface\r\n */\r\ncljs.core.ILookup \x3d function(){};\r\n\r\nvar cljs$core$ILookup$_lookup$dyn_16553 \x3d (function() {\r\nvar G__16554 \x3d null;\r\nvar G__16554__2 \x3d (function (o,k){\r\nvar x__4550__auto__ \x3d (((o \x3d\x3d null))?null:o);\r\nvar m__4551__auto__ \x3d (cljs.core._lookup[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(o,k) : m__4551__auto__.call(null,o,k));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._lookup[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(o,k) : m__4549__auto__.call(null,o,k));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ILookup.-lookup\x22,o);\r\n}\r\n}\r\n});\r\nvar G__16554__3 \x3d (function (o,k,not_found){\r\nvar x__4550__auto__ \x3d (((o \x3d\x3d null))?null:o);\r\nvar m__4551__auto__ \x3d (cljs.core._lookup[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(o,k,not_found) : m__4551__auto__.call(null,o,k,not_found));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._lookup[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(o,k,not_found) : m__4549__auto__.call(null,o,k,not_found));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ILookup.-lookup\x22,o);\r\n}\r\n}\r\n});\r\nG__16554 \x3d function(o,k,not_found){\r\nswitch(arguments.length){\r\ncase 2:\r\nreturn G__16554__2.call(this,o,k);\r\ncase 3:\r\nreturn G__16554__3.call(this,o,k,not_found);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__16554.cljs$core$IFn$_invoke$arity$2 \x3d G__16554__2;\r\nG__16554.cljs$core$IFn$_invoke$arity$3 \x3d G__16554__3;\r\nreturn G__16554;\r\n})()\r\n;\r\n/**\r\n * Use k to look up a value in o. If not-found is supplied and k is not\r\n *   a valid value that can be used for look up, not-found is returned.\r\n */\r\ncljs.core._lookup \x3d (function cljs$core$_lookup(var_args){\r\nvar G__14236 \x3d arguments.length;\r\nswitch (G__14236) {\r\ncase 2:\r\nreturn cljs.core._lookup.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core._lookup.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 \x3d (function (o,k){\r\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$ILookup$_lookup$arity$2 \x3d\x3d null)))))){\r\nreturn o.cljs$core$ILookup$_lookup$arity$2(o,k);\r\n} else {\r\nreturn cljs$core$ILookup$_lookup$dyn_16553(o,k);\r\n}\r\n}));\r\n\r\n(cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 \x3d (function (o,k,not_found){\r\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$ILookup$_lookup$arity$3 \x3d\x3d null)))))){\r\nreturn o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);\r\n} else {\r\nreturn cljs$core$ILookup$_lookup$dyn_16553(o,k,not_found);\r\n}\r\n}));\r\n\r\n(cljs.core._lookup.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n\r\n\r\n/**\r\n * Protocol for adding associativity to collections.\r\n * @interface\r\n */\r\ncljs.core.IAssociative \x3d function(){};\r\n\r\nvar cljs$core$IAssociative$_contains_key_QMARK_$dyn_16563 \x3d (function (coll,k){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._contains_key_QMARK_[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(coll,k) : m__4551__auto__.call(null,coll,k));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._contains_key_QMARK_[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(coll,k) : m__4549__auto__.call(null,coll,k));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IAssociative.-contains-key?\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns true if k is a key in coll.\r\n */\r\ncljs.core._contains_key_QMARK_ \x3d (function cljs$core$_contains_key_QMARK_(coll,k){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);\r\n} else {\r\nreturn cljs$core$IAssociative$_contains_key_QMARK_$dyn_16563(coll,k);\r\n}\r\n});\r\n\r\nvar cljs$core$IAssociative$_assoc$dyn_16564 \x3d (function (coll,k,v){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._assoc[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(coll,k,v) : m__4551__auto__.call(null,coll,k,v));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._assoc[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(coll,k,v) : m__4549__auto__.call(null,coll,k,v));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IAssociative.-assoc\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns a new collection of coll with a mapping from key k to\r\n *   value v added to it.\r\n */\r\ncljs.core._assoc \x3d (function cljs$core$_assoc(coll,k,v){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IAssociative$_assoc$arity$3 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);\r\n} else {\r\nreturn cljs$core$IAssociative$_assoc$dyn_16564(coll,k,v);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for implementing entry finding in collections.\r\n * @interface\r\n */\r\ncljs.core.IFind \x3d function(){};\r\n\r\nvar cljs$core$IFind$_find$dyn_16570 \x3d (function (coll,k){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._find[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(coll,k) : m__4551__auto__.call(null,coll,k));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._find[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(coll,k) : m__4549__auto__.call(null,coll,k));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IFind.-find\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the map entry for key, or nil if key not present.\r\n */\r\ncljs.core._find \x3d (function cljs$core$_find(coll,k){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IFind$_find$arity$2 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$IFind$_find$arity$2(coll,k);\r\n} else {\r\nreturn cljs$core$IFind$_find$dyn_16570(coll,k);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for adding mapping functionality to collections.\r\n * @interface\r\n */\r\ncljs.core.IMap \x3d function(){};\r\n\r\nvar cljs$core$IMap$_dissoc$dyn_16571 \x3d (function (coll,k){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._dissoc[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(coll,k) : m__4551__auto__.call(null,coll,k));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._dissoc[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(coll,k) : m__4549__auto__.call(null,coll,k));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IMap.-dissoc\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns a new collection of coll without the mapping for key k.\r\n */\r\ncljs.core._dissoc \x3d (function cljs$core$_dissoc(coll,k){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IMap$_dissoc$arity$2 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$IMap$_dissoc$arity$2(coll,k);\r\n} else {\r\nreturn cljs$core$IMap$_dissoc$dyn_16571(coll,k);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for examining a map entry.\r\n * @interface\r\n */\r\ncljs.core.IMapEntry \x3d function(){};\r\n\r\nvar cljs$core$IMapEntry$_key$dyn_16572 \x3d (function (coll){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._key[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null,coll));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._key[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null,coll));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IMapEntry.-key\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the key of the map entry.\r\n */\r\ncljs.core._key \x3d (function cljs$core$_key(coll){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IMapEntry$_key$arity$1 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$IMapEntry$_key$arity$1(coll);\r\n} else {\r\nreturn cljs$core$IMapEntry$_key$dyn_16572(coll);\r\n}\r\n});\r\n\r\nvar cljs$core$IMapEntry$_val$dyn_16573 \x3d (function (coll){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._val[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null,coll));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._val[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null,coll));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IMapEntry.-val\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the value of the map entry.\r\n */\r\ncljs.core._val \x3d (function cljs$core$_val(coll){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IMapEntry$_val$arity$1 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$IMapEntry$_val$arity$1(coll);\r\n} else {\r\nreturn cljs$core$IMapEntry$_val$dyn_16573(coll);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for adding set functionality to a collection.\r\n * @interface\r\n */\r\ncljs.core.ISet \x3d function(){};\r\n\r\nvar cljs$core$ISet$_disjoin$dyn_16579 \x3d (function (coll,v){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._disjoin[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(coll,v) : m__4551__auto__.call(null,coll,v));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._disjoin[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(coll,v) : m__4549__auto__.call(null,coll,v));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ISet.-disjoin\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns a new collection of coll that does not contain v.\r\n */\r\ncljs.core._disjoin \x3d (function cljs$core$_disjoin(coll,v){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$ISet$_disjoin$arity$2 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$ISet$_disjoin$arity$2(coll,v);\r\n} else {\r\nreturn cljs$core$ISet$_disjoin$dyn_16579(coll,v);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for collections to provide access to their items as stacks. The top\r\n *   of the stack should be accessed in the most efficient way for the different\r\n *   data structures.\r\n * @interface\r\n */\r\ncljs.core.IStack \x3d function(){};\r\n\r\nvar cljs$core$IStack$_peek$dyn_16582 \x3d (function (coll){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._peek[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null,coll));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._peek[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null,coll));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IStack.-peek\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the item from the top of the stack. Is used by cljs.core/peek.\r\n */\r\ncljs.core._peek \x3d (function cljs$core$_peek(coll){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IStack$_peek$arity$1 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$IStack$_peek$arity$1(coll);\r\n} else {\r\nreturn cljs$core$IStack$_peek$dyn_16582(coll);\r\n}\r\n});\r\n\r\nvar cljs$core$IStack$_pop$dyn_16583 \x3d (function (coll){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._pop[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null,coll));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._pop[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null,coll));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IStack.-pop\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns a new stack without the item on top of the stack. Is used\r\n *   by cljs.core/pop.\r\n */\r\ncljs.core._pop \x3d (function cljs$core$_pop(coll){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IStack$_pop$arity$1 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$IStack$_pop$arity$1(coll);\r\n} else {\r\nreturn cljs$core$IStack$_pop$dyn_16583(coll);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for adding vector functionality to collections.\r\n * @interface\r\n */\r\ncljs.core.IVector \x3d function(){};\r\n\r\nvar cljs$core$IVector$_assoc_n$dyn_16584 \x3d (function (coll,n,val){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._assoc_n[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(coll,n,val) : m__4551__auto__.call(null,coll,n,val));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._assoc_n[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(coll,n,val) : m__4549__auto__.call(null,coll,n,val));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IVector.-assoc-n\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns a new vector with value val added at position n.\r\n */\r\ncljs.core._assoc_n \x3d (function cljs$core$_assoc_n(coll,n,val){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IVector$_assoc_n$arity$3 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);\r\n} else {\r\nreturn cljs$core$IVector$_assoc_n$dyn_16584(coll,n,val);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for adding dereference functionality to a reference.\r\n * @interface\r\n */\r\ncljs.core.IDeref \x3d function(){};\r\n\r\nvar cljs$core$IDeref$_deref$dyn_16590 \x3d (function (o){\r\nvar x__4550__auto__ \x3d (((o \x3d\x3d null))?null:o);\r\nvar m__4551__auto__ \x3d (cljs.core._deref[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4551__auto__.call(null,o));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._deref[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4549__auto__.call(null,o));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IDeref.-deref\x22,o);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the value of the reference o.\r\n */\r\ncljs.core._deref \x3d (function cljs$core$_deref(o){\r\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$IDeref$_deref$arity$1 \x3d\x3d null)))))){\r\nreturn o.cljs$core$IDeref$_deref$arity$1(o);\r\n} else {\r\nreturn cljs$core$IDeref$_deref$dyn_16590(o);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * @interface\r\n */\r\ncljs.core.IDerefWithTimeout \x3d function(){};\r\n\r\nvar cljs$core$IDerefWithTimeout$_deref_with_timeout$dyn_16600 \x3d (function (o,msec,timeout_val){\r\nvar x__4550__auto__ \x3d (((o \x3d\x3d null))?null:o);\r\nvar m__4551__auto__ \x3d (cljs.core._deref_with_timeout[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(o,msec,timeout_val) : m__4551__auto__.call(null,o,msec,timeout_val));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._deref_with_timeout[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(o,msec,timeout_val) : m__4549__auto__.call(null,o,msec,timeout_val));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IDerefWithTimeout.-deref-with-timeout\x22,o);\r\n}\r\n}\r\n});\r\ncljs.core._deref_with_timeout \x3d (function cljs$core$_deref_with_timeout(o,msec,timeout_val){\r\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 \x3d\x3d null)))))){\r\nreturn o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);\r\n} else {\r\nreturn cljs$core$IDerefWithTimeout$_deref_with_timeout$dyn_16600(o,msec,timeout_val);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for accessing the metadata of an object.\r\n * @interface\r\n */\r\ncljs.core.IMeta \x3d function(){};\r\n\r\nvar cljs$core$IMeta$_meta$dyn_16605 \x3d (function (o){\r\nvar x__4550__auto__ \x3d (((o \x3d\x3d null))?null:o);\r\nvar m__4551__auto__ \x3d (cljs.core._meta[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4551__auto__.call(null,o));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._meta[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4549__auto__.call(null,o));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IMeta.-meta\x22,o);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the metadata of object o.\r\n */\r\ncljs.core._meta \x3d (function cljs$core$_meta(o){\r\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$IMeta$_meta$arity$1 \x3d\x3d null)))))){\r\nreturn o.cljs$core$IMeta$_meta$arity$1(o);\r\n} else {\r\nreturn cljs$core$IMeta$_meta$dyn_16605(o);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for adding metadata to an object.\r\n * @interface\r\n */\r\ncljs.core.IWithMeta \x3d function(){};\r\n\r\nvar cljs$core$IWithMeta$_with_meta$dyn_16606 \x3d (function (o,meta){\r\nvar x__4550__auto__ \x3d (((o \x3d\x3d null))?null:o);\r\nvar m__4551__auto__ \x3d (cljs.core._with_meta[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(o,meta) : m__4551__auto__.call(null,o,meta));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._with_meta[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(o,meta) : m__4549__auto__.call(null,o,meta));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IWithMeta.-with-meta\x22,o);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns a new object with value of o and metadata meta added to it.\r\n */\r\ncljs.core._with_meta \x3d (function cljs$core$_with_meta(o,meta){\r\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$IWithMeta$_with_meta$arity$2 \x3d\x3d null)))))){\r\nreturn o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);\r\n} else {\r\nreturn cljs$core$IWithMeta$_with_meta$dyn_16606(o,meta);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for seq types that can reduce themselves.\r\n *   Called by cljs.core/reduce.\r\n * @interface\r\n */\r\ncljs.core.IReduce \x3d function(){};\r\n\r\nvar cljs$core$IReduce$_reduce$dyn_16607 \x3d (function() {\r\nvar G__16608 \x3d null;\r\nvar G__16608__2 \x3d (function (coll,f){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._reduce[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(coll,f) : m__4551__auto__.call(null,coll,f));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._reduce[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(coll,f) : m__4549__auto__.call(null,coll,f));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IReduce.-reduce\x22,coll);\r\n}\r\n}\r\n});\r\nvar G__16608__3 \x3d (function (coll,f,start){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._reduce[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(coll,f,start) : m__4551__auto__.call(null,coll,f,start));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._reduce[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(coll,f,start) : m__4549__auto__.call(null,coll,f,start));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IReduce.-reduce\x22,coll);\r\n}\r\n}\r\n});\r\nG__16608 \x3d function(coll,f,start){\r\nswitch(arguments.length){\r\ncase 2:\r\nreturn G__16608__2.call(this,coll,f);\r\ncase 3:\r\nreturn G__16608__3.call(this,coll,f,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__16608.cljs$core$IFn$_invoke$arity$2 \x3d G__16608__2;\r\nG__16608.cljs$core$IFn$_invoke$arity$3 \x3d G__16608__3;\r\nreturn G__16608;\r\n})()\r\n;\r\n/**\r\n * f should be a function of 2 arguments. If start is not supplied,\r\n *   returns the result of applying f to the first 2 items in coll, then\r\n *   applying f to that result and the 3rd item, etc.\r\n */\r\ncljs.core._reduce \x3d (function cljs$core$_reduce(var_args){\r\nvar G__14296 \x3d arguments.length;\r\nswitch (G__14296) {\r\ncase 2:\r\nreturn cljs.core._reduce.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core._reduce.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,f){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IReduce$_reduce$arity$2 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$IReduce$_reduce$arity$2(coll,f);\r\n} else {\r\nreturn cljs$core$IReduce$_reduce$dyn_16607(coll,f);\r\n}\r\n}));\r\n\r\n(cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 \x3d (function (coll,f,start){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IReduce$_reduce$arity$3 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);\r\n} else {\r\nreturn cljs$core$IReduce$_reduce$dyn_16607(coll,f,start);\r\n}\r\n}));\r\n\r\n(cljs.core._reduce.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n\r\n\r\n/**\r\n * Protocol for associative types that can reduce themselves\r\n *   via a function of key and val. Called by cljs.core/reduce-kv.\r\n * @interface\r\n */\r\ncljs.core.IKVReduce \x3d function(){};\r\n\r\nvar cljs$core$IKVReduce$_kv_reduce$dyn_16620 \x3d (function (coll,f,init){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._kv_reduce[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(coll,f,init) : m__4551__auto__.call(null,coll,f,init));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._kv_reduce[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(coll,f,init) : m__4549__auto__.call(null,coll,f,init));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IKVReduce.-kv-reduce\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Reduces an associative collection and returns the result. f should be\r\n *   a function that takes three arguments.\r\n */\r\ncljs.core._kv_reduce \x3d (function cljs$core$_kv_reduce(coll,f,init){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);\r\n} else {\r\nreturn cljs$core$IKVReduce$_kv_reduce$dyn_16620(coll,f,init);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for adding value comparison functionality to a type.\r\n * @interface\r\n */\r\ncljs.core.IEquiv \x3d function(){};\r\n\r\nvar cljs$core$IEquiv$_equiv$dyn_16624 \x3d (function (o,other){\r\nvar x__4550__auto__ \x3d (((o \x3d\x3d null))?null:o);\r\nvar m__4551__auto__ \x3d (cljs.core._equiv[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(o,other) : m__4551__auto__.call(null,o,other));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._equiv[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(o,other) : m__4549__auto__.call(null,o,other));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IEquiv.-equiv\x22,o);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns true if o and other are equal, false otherwise.\r\n */\r\ncljs.core._equiv \x3d (function cljs$core$_equiv(o,other){\r\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$IEquiv$_equiv$arity$2 \x3d\x3d null)))))){\r\nreturn o.cljs$core$IEquiv$_equiv$arity$2(o,other);\r\n} else {\r\nreturn cljs$core$IEquiv$_equiv$dyn_16624(o,other);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for adding hashing functionality to a type.\r\n * @interface\r\n */\r\ncljs.core.IHash \x3d function(){};\r\n\r\nvar cljs$core$IHash$_hash$dyn_16626 \x3d (function (o){\r\nvar x__4550__auto__ \x3d (((o \x3d\x3d null))?null:o);\r\nvar m__4551__auto__ \x3d (cljs.core._hash[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4551__auto__.call(null,o));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._hash[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4549__auto__.call(null,o));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IHash.-hash\x22,o);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the hash code of o.\r\n */\r\ncljs.core._hash \x3d (function cljs$core$_hash(o){\r\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$IHash$_hash$arity$1 \x3d\x3d null)))))){\r\nreturn o.cljs$core$IHash$_hash$arity$1(o);\r\n} else {\r\nreturn cljs$core$IHash$_hash$dyn_16626(o);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for adding the ability to a type to be transformed into a sequence.\r\n * @interface\r\n */\r\ncljs.core.ISeqable \x3d function(){};\r\n\r\nvar cljs$core$ISeqable$_seq$dyn_16630 \x3d (function (o){\r\nvar x__4550__auto__ \x3d (((o \x3d\x3d null))?null:o);\r\nvar m__4551__auto__ \x3d (cljs.core._seq[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4551__auto__.call(null,o));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._seq[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4549__auto__.call(null,o));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ISeqable.-seq\x22,o);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns a seq of o, or nil if o is empty.\r\n */\r\ncljs.core._seq \x3d (function cljs$core$_seq(o){\r\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$ISeqable$_seq$arity$1 \x3d\x3d null)))))){\r\nreturn o.cljs$core$ISeqable$_seq$arity$1(o);\r\n} else {\r\nreturn cljs$core$ISeqable$_seq$dyn_16630(o);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Marker interface indicating a persistent collection of sequential items\r\n * @interface\r\n */\r\ncljs.core.ISequential \x3d function(){};\r\n\r\n\r\n/**\r\n * Marker interface indicating a persistent list\r\n * @interface\r\n */\r\ncljs.core.IList \x3d function(){};\r\n\r\n\r\n/**\r\n * Marker interface indicating a record object\r\n * @interface\r\n */\r\ncljs.core.IRecord \x3d function(){};\r\n\r\n\r\n/**\r\n * Protocol for reversing a seq.\r\n * @interface\r\n */\r\ncljs.core.IReversible \x3d function(){};\r\n\r\nvar cljs$core$IReversible$_rseq$dyn_16633 \x3d (function (coll){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._rseq[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null,coll));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._rseq[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null,coll));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IReversible.-rseq\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns a seq of the items in coll in reversed order.\r\n */\r\ncljs.core._rseq \x3d (function cljs$core$_rseq(coll){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IReversible$_rseq$arity$1 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$IReversible$_rseq$arity$1(coll);\r\n} else {\r\nreturn cljs$core$IReversible$_rseq$dyn_16633(coll);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for a collection which can represent their items\r\n *   in a sorted manner. \r\n * @interface\r\n */\r\ncljs.core.ISorted \x3d function(){};\r\n\r\nvar cljs$core$ISorted$_sorted_seq$dyn_16634 \x3d (function (coll,ascending_QMARK_){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._sorted_seq[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(coll,ascending_QMARK_) : m__4551__auto__.call(null,coll,ascending_QMARK_));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._sorted_seq[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(coll,ascending_QMARK_) : m__4549__auto__.call(null,coll,ascending_QMARK_));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ISorted.-sorted-seq\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns a sorted seq from coll in either ascending or descending order.\r\n */\r\ncljs.core._sorted_seq \x3d (function cljs$core$_sorted_seq(coll,ascending_QMARK_){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$ISorted$_sorted_seq$arity$2 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);\r\n} else {\r\nreturn cljs$core$ISorted$_sorted_seq$dyn_16634(coll,ascending_QMARK_);\r\n}\r\n});\r\n\r\nvar cljs$core$ISorted$_sorted_seq_from$dyn_16636 \x3d (function (coll,k,ascending_QMARK_){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._sorted_seq_from[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(coll,k,ascending_QMARK_) : m__4551__auto__.call(null,coll,k,ascending_QMARK_));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._sorted_seq_from[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(coll,k,ascending_QMARK_) : m__4549__auto__.call(null,coll,k,ascending_QMARK_));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ISorted.-sorted-seq-from\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns a sorted seq from coll in either ascending or descending order.\r\n *   If ascending is true, the result should contain all items which are \x3e or \x3e\x3d\r\n *   than k. If ascending is false, the result should contain all items which\r\n *   are \x3c or \x3c\x3d than k, e.g.\r\n *   (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 true) \x3d\x3e (3 4 5)\r\n *   (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 false) \x3d\x3e (3 2 1)\r\n */\r\ncljs.core._sorted_seq_from \x3d (function cljs$core$_sorted_seq_from(coll,k,ascending_QMARK_){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$ISorted$_sorted_seq_from$arity$3 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);\r\n} else {\r\nreturn cljs$core$ISorted$_sorted_seq_from$dyn_16636(coll,k,ascending_QMARK_);\r\n}\r\n});\r\n\r\nvar cljs$core$ISorted$_entry_key$dyn_16637 \x3d (function (coll,entry){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._entry_key[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(coll,entry) : m__4551__auto__.call(null,coll,entry));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._entry_key[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(coll,entry) : m__4549__auto__.call(null,coll,entry));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ISorted.-entry-key\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the key for entry.\r\n */\r\ncljs.core._entry_key \x3d (function cljs$core$_entry_key(coll,entry){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$ISorted$_entry_key$arity$2 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);\r\n} else {\r\nreturn cljs$core$ISorted$_entry_key$dyn_16637(coll,entry);\r\n}\r\n});\r\n\r\nvar cljs$core$ISorted$_comparator$dyn_16638 \x3d (function (coll){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._comparator[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null,coll));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._comparator[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null,coll));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ISorted.-comparator\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the comparator for coll.\r\n */\r\ncljs.core._comparator \x3d (function cljs$core$_comparator(coll){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$ISorted$_comparator$arity$1 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$ISorted$_comparator$arity$1(coll);\r\n} else {\r\nreturn cljs$core$ISorted$_comparator$dyn_16638(coll);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for writing. Currently only implemented by StringBufferWriter.\r\n * @interface\r\n */\r\ncljs.core.IWriter \x3d function(){};\r\n\r\nvar cljs$core$IWriter$_write$dyn_16639 \x3d (function (writer,s){\r\nvar x__4550__auto__ \x3d (((writer \x3d\x3d null))?null:writer);\r\nvar m__4551__auto__ \x3d (cljs.core._write[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(writer,s) : m__4551__auto__.call(null,writer,s));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._write[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(writer,s) : m__4549__auto__.call(null,writer,s));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IWriter.-write\x22,writer);\r\n}\r\n}\r\n});\r\n/**\r\n * Writes s with writer and returns the result.\r\n */\r\ncljs.core._write \x3d (function cljs$core$_write(writer,s){\r\nif((((!((writer \x3d\x3d null)))) \x26\x26 ((!((writer.cljs$core$IWriter$_write$arity$2 \x3d\x3d null)))))){\r\nreturn writer.cljs$core$IWriter$_write$arity$2(writer,s);\r\n} else {\r\nreturn cljs$core$IWriter$_write$dyn_16639(writer,s);\r\n}\r\n});\r\n\r\nvar cljs$core$IWriter$_flush$dyn_16640 \x3d (function (writer){\r\nvar x__4550__auto__ \x3d (((writer \x3d\x3d null))?null:writer);\r\nvar m__4551__auto__ \x3d (cljs.core._flush[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__4551__auto__.call(null,writer));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._flush[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__4549__auto__.call(null,writer));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IWriter.-flush\x22,writer);\r\n}\r\n}\r\n});\r\n/**\r\n * Flush writer.\r\n */\r\ncljs.core._flush \x3d (function cljs$core$_flush(writer){\r\nif((((!((writer \x3d\x3d null)))) \x26\x26 ((!((writer.cljs$core$IWriter$_flush$arity$1 \x3d\x3d null)))))){\r\nreturn writer.cljs$core$IWriter$_flush$arity$1(writer);\r\n} else {\r\nreturn cljs$core$IWriter$_flush$dyn_16640(writer);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * The old IPrintable protocol\x27s implementation consisted of building a giant\r\n * list of strings to concatenate.  This involved lots of concat calls,\r\n * intermediate vectors, and lazy-seqs, and was very slow in some older JS\r\n * engines.  IPrintWithWriter implements printing via the IWriter protocol, so it\r\n * be implemented efficiently in terms of e.g. a StringBuffer append.\r\n * @interface\r\n */\r\ncljs.core.IPrintWithWriter \x3d function(){};\r\n\r\nvar cljs$core$IPrintWithWriter$_pr_writer$dyn_16641 \x3d (function (o,writer,opts){\r\nvar x__4550__auto__ \x3d (((o \x3d\x3d null))?null:o);\r\nvar m__4551__auto__ \x3d (cljs.core._pr_writer[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(o,writer,opts) : m__4551__auto__.call(null,o,writer,opts));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._pr_writer[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(o,writer,opts) : m__4549__auto__.call(null,o,writer,opts));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IPrintWithWriter.-pr-writer\x22,o);\r\n}\r\n}\r\n});\r\ncljs.core._pr_writer \x3d (function cljs$core$_pr_writer(o,writer,opts){\r\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d\x3d null)))))){\r\nreturn o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);\r\n} else {\r\nreturn cljs$core$IPrintWithWriter$_pr_writer$dyn_16641(o,writer,opts);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for types which can have a deferred realization. Currently only\r\n *   implemented by Delay and LazySeq.\r\n * @interface\r\n */\r\ncljs.core.IPending \x3d function(){};\r\n\r\nvar cljs$core$IPending$_realized_QMARK_$dyn_16642 \x3d (function (x){\r\nvar x__4550__auto__ \x3d (((x \x3d\x3d null))?null:x);\r\nvar m__4551__auto__ \x3d (cljs.core._realized_QMARK_[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4551__auto__.call(null,x));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._realized_QMARK_[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4549__auto__.call(null,x));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IPending.-realized?\x22,x);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns true if a value for x has been produced, false otherwise.\r\n */\r\ncljs.core._realized_QMARK_ \x3d (function cljs$core$_realized_QMARK_(x){\r\nif((((!((x \x3d\x3d null)))) \x26\x26 ((!((x.cljs$core$IPending$_realized_QMARK_$arity$1 \x3d\x3d null)))))){\r\nreturn x.cljs$core$IPending$_realized_QMARK_$arity$1(x);\r\n} else {\r\nreturn cljs$core$IPending$_realized_QMARK_$dyn_16642(x);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for types that can be watched. Currently only implemented by Atom.\r\n * @interface\r\n */\r\ncljs.core.IWatchable \x3d function(){};\r\n\r\nvar cljs$core$IWatchable$_notify_watches$dyn_16643 \x3d (function (this$,oldval,newval){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._notify_watches[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(this$,oldval,newval) : m__4551__auto__.call(null,this$,oldval,newval));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._notify_watches[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(this$,oldval,newval) : m__4549__auto__.call(null,this$,oldval,newval));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IWatchable.-notify-watches\x22,this$);\r\n}\r\n}\r\n});\r\n/**\r\n * Calls all watchers with this, oldval and newval.\r\n */\r\ncljs.core._notify_watches \x3d (function cljs$core$_notify_watches(this$,oldval,newval){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IWatchable$_notify_watches$arity$3 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);\r\n} else {\r\nreturn cljs$core$IWatchable$_notify_watches$dyn_16643(this$,oldval,newval);\r\n}\r\n});\r\n\r\nvar cljs$core$IWatchable$_add_watch$dyn_16644 \x3d (function (this$,key,f){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._add_watch[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(this$,key,f) : m__4551__auto__.call(null,this$,key,f));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._add_watch[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(this$,key,f) : m__4549__auto__.call(null,this$,key,f));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IWatchable.-add-watch\x22,this$);\r\n}\r\n}\r\n});\r\n/**\r\n * Adds a watcher function f to this. Keys must be unique per reference,\r\n *   and can be used to remove the watch with -remove-watch.\r\n */\r\ncljs.core._add_watch \x3d (function cljs$core$_add_watch(this$,key,f){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IWatchable$_add_watch$arity$3 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);\r\n} else {\r\nreturn cljs$core$IWatchable$_add_watch$dyn_16644(this$,key,f);\r\n}\r\n});\r\n\r\nvar cljs$core$IWatchable$_remove_watch$dyn_16645 \x3d (function (this$,key){\r\nvar x__4550__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\r\nvar m__4551__auto__ \x3d (cljs.core._remove_watch[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$,key) : m__4551__auto__.call(null,this$,key));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._remove_watch[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$,key) : m__4549__auto__.call(null,this$,key));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IWatchable.-remove-watch\x22,this$);\r\n}\r\n}\r\n});\r\n/**\r\n * Removes watcher that corresponds to key from this.\r\n */\r\ncljs.core._remove_watch \x3d (function cljs$core$_remove_watch(this$,key){\r\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IWatchable$_remove_watch$arity$2 \x3d\x3d null)))))){\r\nreturn this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);\r\n} else {\r\nreturn cljs$core$IWatchable$_remove_watch$dyn_16645(this$,key);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for collections which can transformed to transients.\r\n * @interface\r\n */\r\ncljs.core.IEditableCollection \x3d function(){};\r\n\r\nvar cljs$core$IEditableCollection$_as_transient$dyn_16646 \x3d (function (coll){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._as_transient[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null,coll));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._as_transient[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null,coll));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IEditableCollection.-as-transient\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns a new, transient version of the collection, in constant time.\r\n */\r\ncljs.core._as_transient \x3d (function cljs$core$_as_transient(coll){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IEditableCollection$_as_transient$arity$1 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);\r\n} else {\r\nreturn cljs$core$IEditableCollection$_as_transient$dyn_16646(coll);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for adding basic functionality to transient collections.\r\n * @interface\r\n */\r\ncljs.core.ITransientCollection \x3d function(){};\r\n\r\nvar cljs$core$ITransientCollection$_conj_BANG_$dyn_16680 \x3d (function (tcoll,val){\r\nvar x__4550__auto__ \x3d (((tcoll \x3d\x3d null))?null:tcoll);\r\nvar m__4551__auto__ \x3d (cljs.core._conj_BANG_[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(tcoll,val) : m__4551__auto__.call(null,tcoll,val));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._conj_BANG_[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(tcoll,val) : m__4549__auto__.call(null,tcoll,val));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ITransientCollection.-conj!\x22,tcoll);\r\n}\r\n}\r\n});\r\n/**\r\n * Adds value val to tcoll and returns tcoll.\r\n */\r\ncljs.core._conj_BANG_ \x3d (function cljs$core$_conj_BANG_(tcoll,val){\r\nif((((!((tcoll \x3d\x3d null)))) \x26\x26 ((!((tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 \x3d\x3d null)))))){\r\nreturn tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);\r\n} else {\r\nreturn cljs$core$ITransientCollection$_conj_BANG_$dyn_16680(tcoll,val);\r\n}\r\n});\r\n\r\nvar cljs$core$ITransientCollection$_persistent_BANG_$dyn_16684 \x3d (function (tcoll){\r\nvar x__4550__auto__ \x3d (((tcoll \x3d\x3d null))?null:tcoll);\r\nvar m__4551__auto__ \x3d (cljs.core._persistent_BANG_[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4551__auto__.call(null,tcoll));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._persistent_BANG_[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4549__auto__.call(null,tcoll));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ITransientCollection.-persistent!\x22,tcoll);\r\n}\r\n}\r\n});\r\n/**\r\n * Creates a persistent data structure from tcoll and returns it.\r\n */\r\ncljs.core._persistent_BANG_ \x3d (function cljs$core$_persistent_BANG_(tcoll){\r\nif((((!((tcoll \x3d\x3d null)))) \x26\x26 ((!((tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 \x3d\x3d null)))))){\r\nreturn tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);\r\n} else {\r\nreturn cljs$core$ITransientCollection$_persistent_BANG_$dyn_16684(tcoll);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for adding associativity to transient collections.\r\n * @interface\r\n */\r\ncljs.core.ITransientAssociative \x3d function(){};\r\n\r\nvar cljs$core$ITransientAssociative$_assoc_BANG_$dyn_16685 \x3d (function (tcoll,key,val){\r\nvar x__4550__auto__ \x3d (((tcoll \x3d\x3d null))?null:tcoll);\r\nvar m__4551__auto__ \x3d (cljs.core._assoc_BANG_[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(tcoll,key,val) : m__4551__auto__.call(null,tcoll,key,val));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._assoc_BANG_[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(tcoll,key,val) : m__4549__auto__.call(null,tcoll,key,val));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ITransientAssociative.-assoc!\x22,tcoll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns a new transient collection of tcoll with a mapping from key to\r\n *   val added to it.\r\n */\r\ncljs.core._assoc_BANG_ \x3d (function cljs$core$_assoc_BANG_(tcoll,key,val){\r\nif((((!((tcoll \x3d\x3d null)))) \x26\x26 ((!((tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 \x3d\x3d null)))))){\r\nreturn tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);\r\n} else {\r\nreturn cljs$core$ITransientAssociative$_assoc_BANG_$dyn_16685(tcoll,key,val);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for adding mapping functionality to transient collections.\r\n * @interface\r\n */\r\ncljs.core.ITransientMap \x3d function(){};\r\n\r\nvar cljs$core$ITransientMap$_dissoc_BANG_$dyn_16686 \x3d (function (tcoll,key){\r\nvar x__4550__auto__ \x3d (((tcoll \x3d\x3d null))?null:tcoll);\r\nvar m__4551__auto__ \x3d (cljs.core._dissoc_BANG_[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(tcoll,key) : m__4551__auto__.call(null,tcoll,key));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._dissoc_BANG_[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(tcoll,key) : m__4549__auto__.call(null,tcoll,key));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ITransientMap.-dissoc!\x22,tcoll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns a new transient collection of tcoll without the mapping for key.\r\n */\r\ncljs.core._dissoc_BANG_ \x3d (function cljs$core$_dissoc_BANG_(tcoll,key){\r\nif((((!((tcoll \x3d\x3d null)))) \x26\x26 ((!((tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 \x3d\x3d null)))))){\r\nreturn tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);\r\n} else {\r\nreturn cljs$core$ITransientMap$_dissoc_BANG_$dyn_16686(tcoll,key);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for adding vector functionality to transient collections.\r\n * @interface\r\n */\r\ncljs.core.ITransientVector \x3d function(){};\r\n\r\nvar cljs$core$ITransientVector$_assoc_n_BANG_$dyn_16688 \x3d (function (tcoll,n,val){\r\nvar x__4550__auto__ \x3d (((tcoll \x3d\x3d null))?null:tcoll);\r\nvar m__4551__auto__ \x3d (cljs.core._assoc_n_BANG_[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(tcoll,n,val) : m__4551__auto__.call(null,tcoll,n,val));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._assoc_n_BANG_[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(tcoll,n,val) : m__4549__auto__.call(null,tcoll,n,val));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ITransientVector.-assoc-n!\x22,tcoll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns tcoll with value val added at position n.\r\n */\r\ncljs.core._assoc_n_BANG_ \x3d (function cljs$core$_assoc_n_BANG_(tcoll,n,val){\r\nif((((!((tcoll \x3d\x3d null)))) \x26\x26 ((!((tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 \x3d\x3d null)))))){\r\nreturn tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);\r\n} else {\r\nreturn cljs$core$ITransientVector$_assoc_n_BANG_$dyn_16688(tcoll,n,val);\r\n}\r\n});\r\n\r\nvar cljs$core$ITransientVector$_pop_BANG_$dyn_16689 \x3d (function (tcoll){\r\nvar x__4550__auto__ \x3d (((tcoll \x3d\x3d null))?null:tcoll);\r\nvar m__4551__auto__ \x3d (cljs.core._pop_BANG_[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4551__auto__.call(null,tcoll));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._pop_BANG_[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4549__auto__.call(null,tcoll));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ITransientVector.-pop!\x22,tcoll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns tcoll with the last item removed from it.\r\n */\r\ncljs.core._pop_BANG_ \x3d (function cljs$core$_pop_BANG_(tcoll){\r\nif((((!((tcoll \x3d\x3d null)))) \x26\x26 ((!((tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 \x3d\x3d null)))))){\r\nreturn tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);\r\n} else {\r\nreturn cljs$core$ITransientVector$_pop_BANG_$dyn_16689(tcoll);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for adding set functionality to a transient collection.\r\n * @interface\r\n */\r\ncljs.core.ITransientSet \x3d function(){};\r\n\r\nvar cljs$core$ITransientSet$_disjoin_BANG_$dyn_16690 \x3d (function (tcoll,v){\r\nvar x__4550__auto__ \x3d (((tcoll \x3d\x3d null))?null:tcoll);\r\nvar m__4551__auto__ \x3d (cljs.core._disjoin_BANG_[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(tcoll,v) : m__4551__auto__.call(null,tcoll,v));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._disjoin_BANG_[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(tcoll,v) : m__4549__auto__.call(null,tcoll,v));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ITransientSet.-disjoin!\x22,tcoll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns tcoll without v.\r\n */\r\ncljs.core._disjoin_BANG_ \x3d (function cljs$core$_disjoin_BANG_(tcoll,v){\r\nif((((!((tcoll \x3d\x3d null)))) \x26\x26 ((!((tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 \x3d\x3d null)))))){\r\nreturn tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);\r\n} else {\r\nreturn cljs$core$ITransientSet$_disjoin_BANG_$dyn_16690(tcoll,v);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for values that can be compared.\r\n * @interface\r\n */\r\ncljs.core.IComparable \x3d function(){};\r\n\r\nvar cljs$core$IComparable$_compare$dyn_16691 \x3d (function (x,y){\r\nvar x__4550__auto__ \x3d (((x \x3d\x3d null))?null:x);\r\nvar m__4551__auto__ \x3d (cljs.core._compare[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(x,y) : m__4551__auto__.call(null,x,y));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._compare[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(x,y) : m__4549__auto__.call(null,x,y));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IComparable.-compare\x22,x);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns a negative number, zero, or a positive number when x is logically\r\n *   \x27less than\x27, \x27equal to\x27, or \x27greater than\x27 y.\r\n */\r\ncljs.core._compare \x3d (function cljs$core$_compare(x,y){\r\nif((((!((x \x3d\x3d null)))) \x26\x26 ((!((x.cljs$core$IComparable$_compare$arity$2 \x3d\x3d null)))))){\r\nreturn x.cljs$core$IComparable$_compare$arity$2(x,y);\r\n} else {\r\nreturn cljs$core$IComparable$_compare$dyn_16691(x,y);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for accessing the items of a chunk.\r\n * @interface\r\n */\r\ncljs.core.IChunk \x3d function(){};\r\n\r\nvar cljs$core$IChunk$_drop_first$dyn_16692 \x3d (function (coll){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._drop_first[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null,coll));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._drop_first[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null,coll));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IChunk.-drop-first\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Return a new chunk of coll with the first item removed.\r\n */\r\ncljs.core._drop_first \x3d (function cljs$core$_drop_first(coll){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IChunk$_drop_first$arity$1 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$IChunk$_drop_first$arity$1(coll);\r\n} else {\r\nreturn cljs$core$IChunk$_drop_first$dyn_16692(coll);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for accessing a collection as sequential chunks.\r\n * @interface\r\n */\r\ncljs.core.IChunkedSeq \x3d function(){};\r\n\r\nvar cljs$core$IChunkedSeq$_chunked_first$dyn_16693 \x3d (function (coll){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._chunked_first[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null,coll));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._chunked_first[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null,coll));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IChunkedSeq.-chunked-first\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the first chunk in coll.\r\n */\r\ncljs.core._chunked_first \x3d (function cljs$core$_chunked_first(coll){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);\r\n} else {\r\nreturn cljs$core$IChunkedSeq$_chunked_first$dyn_16693(coll);\r\n}\r\n});\r\n\r\nvar cljs$core$IChunkedSeq$_chunked_rest$dyn_16694 \x3d (function (coll){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._chunked_rest[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null,coll));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._chunked_rest[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null,coll));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IChunkedSeq.-chunked-rest\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Return a new collection of coll with the first chunk removed.\r\n */\r\ncljs.core._chunked_rest \x3d (function cljs$core$_chunked_rest(coll){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);\r\n} else {\r\nreturn cljs$core$IChunkedSeq$_chunked_rest$dyn_16694(coll);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for accessing the chunks of a collection.\r\n * @interface\r\n */\r\ncljs.core.IChunkedNext \x3d function(){};\r\n\r\nvar cljs$core$IChunkedNext$_chunked_next$dyn_16695 \x3d (function (coll){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._chunked_next[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null,coll));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._chunked_next[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null,coll));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IChunkedNext.-chunked-next\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns a new collection of coll without the first chunk.\r\n */\r\ncljs.core._chunked_next \x3d (function cljs$core$_chunked_next(coll){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IChunkedNext$_chunked_next$arity$1 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);\r\n} else {\r\nreturn cljs$core$IChunkedNext$_chunked_next$dyn_16695(coll);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for adding a name.\r\n * @interface\r\n */\r\ncljs.core.INamed \x3d function(){};\r\n\r\nvar cljs$core$INamed$_name$dyn_16696 \x3d (function (x){\r\nvar x__4550__auto__ \x3d (((x \x3d\x3d null))?null:x);\r\nvar m__4551__auto__ \x3d (cljs.core._name[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4551__auto__.call(null,x));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._name[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4549__auto__.call(null,x));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22INamed.-name\x22,x);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the name String of x.\r\n */\r\ncljs.core._name \x3d (function cljs$core$_name(x){\r\nif((((!((x \x3d\x3d null)))) \x26\x26 ((!((x.cljs$core$INamed$_name$arity$1 \x3d\x3d null)))))){\r\nreturn x.cljs$core$INamed$_name$arity$1(x);\r\n} else {\r\nreturn cljs$core$INamed$_name$dyn_16696(x);\r\n}\r\n});\r\n\r\nvar cljs$core$INamed$_namespace$dyn_16697 \x3d (function (x){\r\nvar x__4550__auto__ \x3d (((x \x3d\x3d null))?null:x);\r\nvar m__4551__auto__ \x3d (cljs.core._namespace[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4551__auto__.call(null,x));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._namespace[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4549__auto__.call(null,x));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22INamed.-namespace\x22,x);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the namespace String of x.\r\n */\r\ncljs.core._namespace \x3d (function cljs$core$_namespace(x){\r\nif((((!((x \x3d\x3d null)))) \x26\x26 ((!((x.cljs$core$INamed$_namespace$arity$1 \x3d\x3d null)))))){\r\nreturn x.cljs$core$INamed$_namespace$arity$1(x);\r\n} else {\r\nreturn cljs$core$INamed$_namespace$dyn_16697(x);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Marker protocol indicating an atom.\r\n * @interface\r\n */\r\ncljs.core.IAtom \x3d function(){};\r\n\r\n\r\n/**\r\n * Protocol for adding resetting functionality.\r\n * @interface\r\n */\r\ncljs.core.IReset \x3d function(){};\r\n\r\nvar cljs$core$IReset$_reset_BANG_$dyn_16698 \x3d (function (o,new_value){\r\nvar x__4550__auto__ \x3d (((o \x3d\x3d null))?null:o);\r\nvar m__4551__auto__ \x3d (cljs.core._reset_BANG_[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(o,new_value) : m__4551__auto__.call(null,o,new_value));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._reset_BANG_[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(o,new_value) : m__4549__auto__.call(null,o,new_value));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IReset.-reset!\x22,o);\r\n}\r\n}\r\n});\r\n/**\r\n * Sets the value of o to new-value.\r\n */\r\ncljs.core._reset_BANG_ \x3d (function cljs$core$_reset_BANG_(o,new_value){\r\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$IReset$_reset_BANG_$arity$2 \x3d\x3d null)))))){\r\nreturn o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);\r\n} else {\r\nreturn cljs$core$IReset$_reset_BANG_$dyn_16698(o,new_value);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for adding swapping functionality.\r\n * @interface\r\n */\r\ncljs.core.ISwap \x3d function(){};\r\n\r\nvar cljs$core$ISwap$_swap_BANG_$dyn_16699 \x3d (function() {\r\nvar G__16700 \x3d null;\r\nvar G__16700__2 \x3d (function (o,f){\r\nvar x__4550__auto__ \x3d (((o \x3d\x3d null))?null:o);\r\nvar m__4551__auto__ \x3d (cljs.core._swap_BANG_[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(o,f) : m__4551__auto__.call(null,o,f));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._swap_BANG_[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(o,f) : m__4549__auto__.call(null,o,f));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ISwap.-swap!\x22,o);\r\n}\r\n}\r\n});\r\nvar G__16700__3 \x3d (function (o,f,a){\r\nvar x__4550__auto__ \x3d (((o \x3d\x3d null))?null:o);\r\nvar m__4551__auto__ \x3d (cljs.core._swap_BANG_[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(o,f,a) : m__4551__auto__.call(null,o,f,a));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._swap_BANG_[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(o,f,a) : m__4549__auto__.call(null,o,f,a));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ISwap.-swap!\x22,o);\r\n}\r\n}\r\n});\r\nvar G__16700__4 \x3d (function (o,f,a,b){\r\nvar x__4550__auto__ \x3d (((o \x3d\x3d null))?null:o);\r\nvar m__4551__auto__ \x3d (cljs.core._swap_BANG_[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$4(o,f,a,b) : m__4551__auto__.call(null,o,f,a,b));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._swap_BANG_[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$4(o,f,a,b) : m__4549__auto__.call(null,o,f,a,b));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ISwap.-swap!\x22,o);\r\n}\r\n}\r\n});\r\nvar G__16700__5 \x3d (function (o,f,a,b,xs){\r\nvar x__4550__auto__ \x3d (((o \x3d\x3d null))?null:o);\r\nvar m__4551__auto__ \x3d (cljs.core._swap_BANG_[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$5(o,f,a,b,xs) : m__4551__auto__.call(null,o,f,a,b,xs));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._swap_BANG_[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$5(o,f,a,b,xs) : m__4549__auto__.call(null,o,f,a,b,xs));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ISwap.-swap!\x22,o);\r\n}\r\n}\r\n});\r\nG__16700 \x3d function(o,f,a,b,xs){\r\nswitch(arguments.length){\r\ncase 2:\r\nreturn G__16700__2.call(this,o,f);\r\ncase 3:\r\nreturn G__16700__3.call(this,o,f,a);\r\ncase 4:\r\nreturn G__16700__4.call(this,o,f,a,b);\r\ncase 5:\r\nreturn G__16700__5.call(this,o,f,a,b,xs);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__16700.cljs$core$IFn$_invoke$arity$2 \x3d G__16700__2;\r\nG__16700.cljs$core$IFn$_invoke$arity$3 \x3d G__16700__3;\r\nG__16700.cljs$core$IFn$_invoke$arity$4 \x3d G__16700__4;\r\nG__16700.cljs$core$IFn$_invoke$arity$5 \x3d G__16700__5;\r\nreturn G__16700;\r\n})()\r\n;\r\n/**\r\n * Swaps the value of o to be (apply f current-value-of-atom args).\r\n */\r\ncljs.core._swap_BANG_ \x3d (function cljs$core$_swap_BANG_(var_args){\r\nvar G__14541 \x3d arguments.length;\r\nswitch (G__14541) {\r\ncase 2:\r\nreturn cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ncase 5:\r\nreturn cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 \x3d (function (o,f){\r\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$ISwap$_swap_BANG_$arity$2 \x3d\x3d null)))))){\r\nreturn o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);\r\n} else {\r\nreturn cljs$core$ISwap$_swap_BANG_$dyn_16699(o,f);\r\n}\r\n}));\r\n\r\n(cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 \x3d (function (o,f,a){\r\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$ISwap$_swap_BANG_$arity$3 \x3d\x3d null)))))){\r\nreturn o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);\r\n} else {\r\nreturn cljs$core$ISwap$_swap_BANG_$dyn_16699(o,f,a);\r\n}\r\n}));\r\n\r\n(cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 \x3d (function (o,f,a,b){\r\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$ISwap$_swap_BANG_$arity$4 \x3d\x3d null)))))){\r\nreturn o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);\r\n} else {\r\nreturn cljs$core$ISwap$_swap_BANG_$dyn_16699(o,f,a,b);\r\n}\r\n}));\r\n\r\n(cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 \x3d (function (o,f,a,b,xs){\r\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$ISwap$_swap_BANG_$arity$5 \x3d\x3d null)))))){\r\nreturn o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);\r\n} else {\r\nreturn cljs$core$ISwap$_swap_BANG_$dyn_16699(o,f,a,b,xs);\r\n}\r\n}));\r\n\r\n(cljs.core._swap_BANG_.cljs$lang$maxFixedArity \x3d 5);\r\n\r\n\r\n\r\n/**\r\n * Protocol for adding volatile functionality.\r\n * @interface\r\n */\r\ncljs.core.IVolatile \x3d function(){};\r\n\r\nvar cljs$core$IVolatile$_vreset_BANG_$dyn_16702 \x3d (function (o,new_value){\r\nvar x__4550__auto__ \x3d (((o \x3d\x3d null))?null:o);\r\nvar m__4551__auto__ \x3d (cljs.core._vreset_BANG_[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(o,new_value) : m__4551__auto__.call(null,o,new_value));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._vreset_BANG_[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(o,new_value) : m__4549__auto__.call(null,o,new_value));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IVolatile.-vreset!\x22,o);\r\n}\r\n}\r\n});\r\n/**\r\n * Sets the value of volatile o to new-value without regard for the\r\n *   current value. Returns new-value.\r\n */\r\ncljs.core._vreset_BANG_ \x3d (function cljs$core$_vreset_BANG_(o,new_value){\r\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$IVolatile$_vreset_BANG_$arity$2 \x3d\x3d null)))))){\r\nreturn o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);\r\n} else {\r\nreturn cljs$core$IVolatile$_vreset_BANG_$dyn_16702(o,new_value);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Protocol for iterating over a collection.\r\n * @interface\r\n */\r\ncljs.core.IIterable \x3d function(){};\r\n\r\nvar cljs$core$IIterable$_iterator$dyn_16703 \x3d (function (coll){\r\nvar x__4550__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\r\nvar m__4551__auto__ \x3d (cljs.core._iterator[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null,coll));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._iterator[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null,coll));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IIterable.-iterator\x22,coll);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns an iterator for coll.\r\n */\r\ncljs.core._iterator \x3d (function cljs$core$_iterator(coll){\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IIterable$_iterator$arity$1 \x3d\x3d null)))))){\r\nreturn coll.cljs$core$IIterable$_iterator$arity$1(coll);\r\n} else {\r\nreturn cljs$core$IIterable$_iterator$dyn_16703(coll);\r\n}\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IWriter}\r\n*/\r\ncljs.core.StringBufferWriter \x3d (function (sb){\r\nthis.sb \x3d sb;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 1073741824;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 \x3d (function (_,s){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn self__.sb.append(s);\r\n}));\r\n\r\n(cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn null;\r\n}));\r\n\r\n(cljs.core.StringBufferWriter.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22sb\x22,\x22sb\x22,-1249746442,null)], null);\r\n}));\r\n\r\n(cljs.core.StringBufferWriter.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.StringBufferWriter.cljs$lang$ctorStr \x3d \x22cljs.core/StringBufferWriter\x22);\r\n\r\n(cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/StringBufferWriter\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/StringBufferWriter.\r\n */\r\ncljs.core.__GT_StringBufferWriter \x3d (function cljs$core$__GT_StringBufferWriter(sb){\r\nreturn (new cljs.core.StringBufferWriter(sb));\r\n});\r\n\r\n/**\r\n * Support so that collections can implement toString without\r\n * loading all the printing machinery.\r\n */\r\ncljs.core.pr_str_STAR_ \x3d (function cljs$core$pr_str_STAR_(obj){\r\nvar sb \x3d (new goog.string.StringBuffer());\r\nvar writer \x3d (new cljs.core.StringBufferWriter(sb));\r\nobj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());\r\n\r\nwriter.cljs$core$IWriter$_flush$arity$1(null);\r\n\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);\r\n});\r\ncljs.core.int_rotate_left \x3d (function cljs$core$int_rotate_left(x,n){\r\nreturn ((x \x3c\x3c n) | (x \x3e\x3e\x3e (- n)));\r\n});\r\nif((((typeof Math !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof Math.imul !\x3d\x3d \x27undefined\x27)) \x26\x26 ((!((Math.imul((4294967295),(5)) \x3d\x3d\x3d (0))))))){\r\ncljs.core.imul \x3d (function cljs$core$imul(a,b){\r\nreturn Math.imul(a,b);\r\n});\r\n} else {\r\ncljs.core.imul \x3d (function cljs$core$imul(a,b){\r\nvar ah \x3d ((a \x3e\x3e\x3e (16)) \x26 (65535));\r\nvar al \x3d (a \x26 (65535));\r\nvar bh \x3d ((b \x3e\x3e\x3e (16)) \x26 (65535));\r\nvar bl \x3d (b \x26 (65535));\r\nreturn (((al * bl) + ((((ah * bl) + (al * bh)) \x3c\x3c (16)) \x3e\x3e\x3e (0))) | (0));\r\n});\r\n}\r\ncljs.core.m3_seed \x3d (0);\r\ncljs.core.m3_C1 \x3d ((3432918353) | (0));\r\ncljs.core.m3_C2 \x3d ((461845907) | (0));\r\ncljs.core.m3_mix_K1 \x3d (function cljs$core$m3_mix_K1(k1){\r\nreturn cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul((k1 | (0)),cljs.core.m3_C1),(15)),cljs.core.m3_C2);\r\n});\r\ncljs.core.m3_mix_H1 \x3d (function cljs$core$m3_mix_H1(h1,k1){\r\nreturn ((cljs.core.imul(cljs.core.int_rotate_left(((h1 | (0)) ^ (k1 | (0))),(13)),(5)) + ((3864292196) | (0))) | (0));\r\n});\r\ncljs.core.m3_fmix \x3d (function cljs$core$m3_fmix(h1,len){\r\nvar h1__$1 \x3d (h1 | (0));\r\nvar h1__$2 \x3d (h1__$1 ^ len);\r\nvar h1__$3 \x3d (h1__$2 ^ (h1__$2 \x3e\x3e\x3e (16)));\r\nvar h1__$4 \x3d cljs.core.imul(h1__$3,((2246822507) | (0)));\r\nvar h1__$5 \x3d (h1__$4 ^ (h1__$4 \x3e\x3e\x3e (13)));\r\nvar h1__$6 \x3d cljs.core.imul(h1__$5,((3266489909) | (0)));\r\nreturn (h1__$6 ^ (h1__$6 \x3e\x3e\x3e (16)));\r\n});\r\ncljs.core.m3_hash_int \x3d (function cljs$core$m3_hash_int(in$){\r\nif((in$ \x3d\x3d\x3d (0))){\r\nreturn in$;\r\n} else {\r\nvar k1 \x3d cljs.core.m3_mix_K1(in$);\r\nvar h1 \x3d cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);\r\nreturn cljs.core.m3_fmix(h1,(4));\r\n}\r\n});\r\ncljs.core.m3_hash_unencoded_chars \x3d (function cljs$core$m3_hash_unencoded_chars(in$){\r\nvar h1 \x3d (function (){var i \x3d (1);\r\nvar h1 \x3d cljs.core.m3_seed;\r\nwhile(true){\r\nif((i \x3c in$.length)){\r\nvar G__16705 \x3d (i + (2));\r\nvar G__16706 \x3d cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) \x3c\x3c (16)))));\r\ni \x3d G__16705;\r\nh1 \x3d G__16706;\r\ncontinue;\r\n} else {\r\nreturn h1;\r\n}\r\nbreak;\r\n}\r\n})();\r\nvar h1__$1 \x3d ((((in$.length \x26 (1)) \x3d\x3d\x3d (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);\r\nreturn cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));\r\n});\r\n\r\n\r\n\r\ncljs.core.string_hash_cache \x3d ({});\r\ncljs.core.string_hash_cache_count \x3d (0);\r\ncljs.core.hash_string_STAR_ \x3d (function cljs$core$hash_string_STAR_(s){\r\nif((!((s \x3d\x3d null)))){\r\nvar len \x3d s.length;\r\nif((len \x3e (0))){\r\nvar i \x3d (0);\r\nvar hash \x3d (0);\r\nwhile(true){\r\nif((i \x3c len)){\r\nvar G__16707 \x3d (i + (1));\r\nvar G__16708 \x3d (cljs.core.imul((31),hash) + s.charCodeAt(i));\r\ni \x3d G__16707;\r\nhash \x3d G__16708;\r\ncontinue;\r\n} else {\r\nreturn hash;\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn (0);\r\n}\r\n} else {\r\nreturn (0);\r\n}\r\n});\r\ncljs.core.add_to_string_hash_cache \x3d (function cljs$core$add_to_string_hash_cache(k){\r\nvar h \x3d cljs.core.hash_string_STAR_(k);\r\ncljs.core.goog$module$goog$object.set(cljs.core.string_hash_cache,k,h);\r\n\r\n(cljs.core.string_hash_cache_count \x3d (cljs.core.string_hash_cache_count + (1)));\r\n\r\nreturn h;\r\n});\r\ncljs.core.hash_string \x3d (function cljs$core$hash_string(k){\r\nif((cljs.core.string_hash_cache_count \x3e (255))){\r\n(cljs.core.string_hash_cache \x3d ({}));\r\n\r\n(cljs.core.string_hash_cache_count \x3d (0));\r\n} else {\r\n}\r\n\r\nif((k \x3d\x3d null)){\r\nreturn (0);\r\n} else {\r\nvar h \x3d (cljs.core.string_hash_cache[k]);\r\nif(typeof h \x3d\x3d\x3d \x27number\x27){\r\nreturn h;\r\n} else {\r\nreturn cljs.core.add_to_string_hash_cache(k);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the hash code of its argument. Note this is the hash code\r\n * consistent with \x3d.\r\n */\r\ncljs.core.hash \x3d (function cljs$core$hash(o){\r\nif((((!((o \x3d\x3d null))))?(((((o.cljs$lang$protocol_mask$partition0$ \x26 (4194304))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d o.cljs$core$IHash$))))?true:false):false)){\r\nreturn (o.cljs$core$IHash$_hash$arity$1(null) ^ (0));\r\n} else {\r\nif(typeof o \x3d\x3d\x3d \x27number\x27){\r\nif(isFinite(o)){\r\nreturn (Math.floor(o) % (2147483647));\r\n} else {\r\nvar G__14724 \x3d o;\r\nswitch (G__14724) {\r\ncase Infinity:\r\nreturn (2146435072);\r\n\r\nbreak;\r\ncase -Infinity:\r\nreturn (-1048576);\r\n\r\nbreak;\r\ndefault:\r\nreturn (2146959360);\r\n\r\n}\r\n}\r\n} else {\r\nif(o \x3d\x3d\x3d true){\r\nreturn (1231);\r\n} else {\r\nif(o \x3d\x3d\x3d false){\r\nreturn (1237);\r\n} else {\r\nif(typeof o \x3d\x3d\x3d \x27string\x27){\r\nreturn cljs.core.m3_hash_int(cljs.core.hash_string(o));\r\n} else {\r\nif((o instanceof Date)){\r\nreturn (o.valueOf() ^ (0));\r\n} else {\r\nif((o \x3d\x3d null)){\r\nreturn (0);\r\n} else {\r\nreturn (cljs.core._hash(o) ^ (0));\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\ncljs.core.hash_combine \x3d (function cljs$core$hash_combine(seed,hash){\r\nreturn (seed ^ (((hash + (2654435769)) + (seed \x3c\x3c (6))) + (seed \x3e\x3e (2))));\r\n});\r\n/**\r\n * Evaluates x and tests if it is an instance of the type\r\n *   c. Returns true or false\r\n */\r\ncljs.core.instance_QMARK_ \x3d (function cljs$core$instance_QMARK_(c,x){\r\nreturn (x instanceof c);\r\n});\r\n/**\r\n * Return true if x is a Symbol\r\n */\r\ncljs.core.symbol_QMARK_ \x3d (function cljs$core$symbol_QMARK_(x){\r\nreturn (x instanceof cljs.core.Symbol);\r\n});\r\ncljs.core.hash_symbol \x3d (function cljs$core$hash_symbol(sym){\r\nreturn cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));\r\n});\r\ncljs.core.compare_symbols \x3d (function cljs$core$compare_symbols(a,b){\r\nif((a.str \x3d\x3d\x3d b.str)){\r\nreturn (0);\r\n} else {\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d cljs.core.not(a.ns);\r\nif(and__4251__auto__){\r\nreturn b.ns;\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nreturn (-1);\r\n} else {\r\nif(cljs.core.truth_(a.ns)){\r\nif(cljs.core.not(b.ns)){\r\nreturn (1);\r\n} else {\r\nvar nsc \x3d cljs.core.goog$module$goog$array.defaultCompare(a.ns,b.ns);\r\nif(((0) \x3d\x3d\x3d nsc)){\r\nreturn cljs.core.goog$module$goog$array.defaultCompare(a.name,b.name);\r\n} else {\r\nreturn nsc;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.goog$module$goog$array.defaultCompare(a.name,b.name);\r\n\r\n}\r\n}\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IFn}\r\n * @implements {cljs.core.INamed}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IWithMeta}\r\n*/\r\ncljs.core.Symbol \x3d (function (ns,name,str,_hash,_meta){\r\nthis.ns \x3d ns;\r\nthis.name \x3d name;\r\nthis.str \x3d str;\r\nthis._hash \x3d _hash;\r\nthis._meta \x3d _meta;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2154168321;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 4096;\r\n});\r\n(cljs.core.Symbol.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn self__.str;\r\n}));\r\n\r\n(cljs.core.Symbol.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (_,other){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nif((other instanceof cljs.core.Symbol)){\r\nreturn (self__.str \x3d\x3d\x3d other.str);\r\n} else {\r\nreturn false;\r\n}\r\n}));\r\n\r\n(cljs.core.Symbol.prototype.call \x3d (function (unused__9633__auto__){\r\nvar self__ \x3d this;\r\nvar self__ \x3d this;\r\nvar G__14794 \x3d (arguments.length - (1));\r\nswitch (G__14794) {\r\ncase (1):\r\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\r\n\r\nbreak;\r\ncase (2):\r\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.Symbol.prototype.apply \x3d (function (self__,args14780){\r\nvar self__ \x3d this;\r\nvar self____$1 \x3d this;\r\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14780)));\r\n}));\r\n\r\n(cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar sym \x3d this;\r\nreturn (cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,sym) : cljs.core.get.call(null,coll,sym));\r\n}));\r\n\r\n(cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,not_found){\r\nvar self__ \x3d this;\r\nvar sym \x3d this;\r\nreturn (cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found) : cljs.core.get.call(null,coll,sym,not_found));\r\n}));\r\n\r\n(cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn self__._meta;\r\n}));\r\n\r\n(cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_,new_meta){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));\r\n}));\r\n\r\n(cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (sym){\r\nvar self__ \x3d this;\r\nvar sym__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__._hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_symbol(sym__$1);\r\n(self__._hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn self__.name;\r\n}));\r\n\r\n(cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn self__.ns;\r\n}));\r\n\r\n(cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (o,writer,_){\r\nvar self__ \x3d this;\r\nvar o__$1 \x3d this;\r\nreturn cljs.core._write(writer,self__.str);\r\n}));\r\n\r\n(cljs.core.Symbol.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22ns\x22,\x22ns\x22,2082130287,null),new cljs.core.Symbol(null,\x22name\x22,\x22name\x22,-810760592,null),new cljs.core.Symbol(null,\x22str\x22,\x22str\x22,-1564826950,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22_hash\x22,\x22_hash\x22,-2130838312,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22_meta\x22,\x22_meta\x22,-1716892533,null)], null);\r\n}));\r\n\r\n(cljs.core.Symbol.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.Symbol.cljs$lang$ctorStr \x3d \x22cljs.core/Symbol\x22);\r\n\r\n(cljs.core.Symbol.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/Symbol\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/Symbol.\r\n */\r\ncljs.core.__GT_Symbol \x3d (function cljs$core$__GT_Symbol(ns,name,str,_hash,_meta){\r\nreturn (new cljs.core.Symbol(ns,name,str,_hash,_meta));\r\n});\r\n\r\n/**\r\n * Returns true if v is of type cljs.core.Var\r\n */\r\ncljs.core.var_QMARK_ \x3d (function cljs$core$var_QMARK_(v){\r\nreturn (v instanceof cljs.core.Var);\r\n});\r\n/**\r\n * Returns a Symbol with the given namespace and name. Arity-1 works\r\n *   on strings, keywords, and vars.\r\n */\r\ncljs.core.symbol \x3d (function cljs$core$symbol(var_args){\r\nvar G__14828 \x3d arguments.length;\r\nswitch (G__14828) {\r\ncase 1:\r\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 \x3d (function (name){\r\nwhile(true){\r\nif((name instanceof cljs.core.Symbol)){\r\nreturn name;\r\n} else {\r\nif(typeof name \x3d\x3d\x3d \x27string\x27){\r\nvar idx \x3d name.indexOf(\x22/\x22);\r\nif((idx \x3c (1))){\r\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null,name);\r\n} else {\r\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring((0),idx),name.substring((idx + (1)),name.length));\r\n}\r\n} else {\r\nif(cljs.core.var_QMARK_(name)){\r\nreturn name.sym;\r\n} else {\r\nif((name instanceof cljs.core.Keyword)){\r\nvar G__16712 \x3d name.fqn;\r\nname \x3d G__16712;\r\ncontinue;\r\n} else {\r\nthrow (new Error(\x22no conversion to symbol\x22));\r\n\r\n}\r\n}\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 \x3d (function (ns,name){\r\nvar sym_str \x3d (((!((ns \x3d\x3d null))))?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),\x22/\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join(\x27\x27):name);\r\nreturn (new cljs.core.Symbol(ns,name,sym_str,null,null));\r\n}));\r\n\r\n(cljs.core.symbol.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IFn}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.Fn}\r\n * @implements {cljs.core.IDeref}\r\n * @implements {cljs.core.IWithMeta}\r\n*/\r\ncljs.core.Var \x3d (function (val,sym,_meta){\r\nthis.val \x3d val;\r\nthis.sym \x3d sym;\r\nthis._meta \x3d _meta;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 6717441;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.Var.prototype.isMacro \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;\r\n}));\r\n\r\n(cljs.core.Var.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn [\x22#\x27\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.sym)].join(\x27\x27);\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn self__._meta;\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_,new_meta){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (new cljs.core.Var(self__.val,self__.sym,new_meta));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this$,other){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nif((other instanceof cljs.core.Var)){\r\nvar G__14896 \x3d this$__$1.sym;\r\nvar G__14897 \x3d other.sym;\r\nreturn (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__14896,G__14897) : cljs.core._EQ_.call(null,G__14896,G__14897));\r\n} else {\r\nreturn false;\r\n}\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn cljs.core.hash_symbol(self__.sym);\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$Fn$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.Var.prototype.call \x3d (function (unused__9633__auto__){\r\nvar self__ \x3d this;\r\nvar self__ \x3d this;\r\nvar G__14903 \x3d (arguments.length - (1));\r\nswitch (G__14903) {\r\ncase (0):\r\nreturn self__.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase (1):\r\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\r\n\r\nbreak;\r\ncase (2):\r\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase (3):\r\nreturn self__.cljs$core$IFn$_invoke$arity$3((arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ncase (4):\r\nreturn self__.cljs$core$IFn$_invoke$arity$4((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ncase (5):\r\nreturn self__.cljs$core$IFn$_invoke$arity$5((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\r\n\r\nbreak;\r\ncase (6):\r\nreturn self__.cljs$core$IFn$_invoke$arity$6((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]));\r\n\r\nbreak;\r\ncase (7):\r\nreturn self__.cljs$core$IFn$_invoke$arity$7((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]));\r\n\r\nbreak;\r\ncase (8):\r\nreturn self__.cljs$core$IFn$_invoke$arity$8((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]));\r\n\r\nbreak;\r\ncase (9):\r\nreturn self__.cljs$core$IFn$_invoke$arity$9((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]));\r\n\r\nbreak;\r\ncase (10):\r\nreturn self__.cljs$core$IFn$_invoke$arity$10((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]));\r\n\r\nbreak;\r\ncase (11):\r\nreturn self__.cljs$core$IFn$_invoke$arity$11((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]));\r\n\r\nbreak;\r\ncase (12):\r\nreturn self__.cljs$core$IFn$_invoke$arity$12((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]));\r\n\r\nbreak;\r\ncase (13):\r\nreturn self__.cljs$core$IFn$_invoke$arity$13((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]));\r\n\r\nbreak;\r\ncase (14):\r\nreturn self__.cljs$core$IFn$_invoke$arity$14((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]));\r\n\r\nbreak;\r\ncase (15):\r\nreturn self__.cljs$core$IFn$_invoke$arity$15((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]));\r\n\r\nbreak;\r\ncase (16):\r\nreturn self__.cljs$core$IFn$_invoke$arity$16((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]));\r\n\r\nbreak;\r\ncase (17):\r\nreturn self__.cljs$core$IFn$_invoke$arity$17((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]));\r\n\r\nbreak;\r\ncase (18):\r\nreturn self__.cljs$core$IFn$_invoke$arity$18((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]));\r\n\r\nbreak;\r\ncase (19):\r\nreturn self__.cljs$core$IFn$_invoke$arity$19((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]));\r\n\r\nbreak;\r\ncase (20):\r\nreturn self__.cljs$core$IFn$_invoke$arity$20((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]));\r\n\r\nbreak;\r\ncase (21):\r\nreturn self__.cljs$core$IFn$_invoke$arity$21((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]),(arguments[(21)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.Var.prototype.apply \x3d (function (self__,args14876){\r\nvar self__ \x3d this;\r\nvar self____$1 \x3d this;\r\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14876)));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar fexpr__14951 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\nreturn (fexpr__14951.cljs$core$IFn$_invoke$arity$0 ? fexpr__14951.cljs$core$IFn$_invoke$arity$0() : fexpr__14951.call(null));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (a){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar fexpr__14953 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\nreturn (fexpr__14953.cljs$core$IFn$_invoke$arity$1 ? fexpr__14953.cljs$core$IFn$_invoke$arity$1(a) : fexpr__14953.call(null,a));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (a,b){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar fexpr__14957 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\nreturn (fexpr__14957.cljs$core$IFn$_invoke$arity$2 ? fexpr__14957.cljs$core$IFn$_invoke$arity$2(a,b) : fexpr__14957.call(null,a,b));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 \x3d (function (a,b,c){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar fexpr__14959 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\nreturn (fexpr__14959.cljs$core$IFn$_invoke$arity$3 ? fexpr__14959.cljs$core$IFn$_invoke$arity$3(a,b,c) : fexpr__14959.call(null,a,b,c));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 \x3d (function (a,b,c,d){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar fexpr__14961 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\nreturn (fexpr__14961.cljs$core$IFn$_invoke$arity$4 ? fexpr__14961.cljs$core$IFn$_invoke$arity$4(a,b,c,d) : fexpr__14961.call(null,a,b,c,d));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 \x3d (function (a,b,c,d,e){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar fexpr__14962 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\nreturn (fexpr__14962.cljs$core$IFn$_invoke$arity$5 ? fexpr__14962.cljs$core$IFn$_invoke$arity$5(a,b,c,d,e) : fexpr__14962.call(null,a,b,c,d,e));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 \x3d (function (a,b,c,d,e,f){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar fexpr__14965 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\nreturn (fexpr__14965.cljs$core$IFn$_invoke$arity$6 ? fexpr__14965.cljs$core$IFn$_invoke$arity$6(a,b,c,d,e,f) : fexpr__14965.call(null,a,b,c,d,e,f));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 \x3d (function (a,b,c,d,e,f,g){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar fexpr__14969 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\nreturn (fexpr__14969.cljs$core$IFn$_invoke$arity$7 ? fexpr__14969.cljs$core$IFn$_invoke$arity$7(a,b,c,d,e,f,g) : fexpr__14969.call(null,a,b,c,d,e,f,g));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 \x3d (function (a,b,c,d,e,f,g,h){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar fexpr__14970 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\nreturn (fexpr__14970.cljs$core$IFn$_invoke$arity$8 ? fexpr__14970.cljs$core$IFn$_invoke$arity$8(a,b,c,d,e,f,g,h) : fexpr__14970.call(null,a,b,c,d,e,f,g,h));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 \x3d (function (a,b,c,d,e,f,g,h,i){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar fexpr__14972 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\nreturn (fexpr__14972.cljs$core$IFn$_invoke$arity$9 ? fexpr__14972.cljs$core$IFn$_invoke$arity$9(a,b,c,d,e,f,g,h,i) : fexpr__14972.call(null,a,b,c,d,e,f,g,h,i));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 \x3d (function (a,b,c,d,e,f,g,h,i,j){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar fexpr__14974 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\nreturn (fexpr__14974.cljs$core$IFn$_invoke$arity$10 ? fexpr__14974.cljs$core$IFn$_invoke$arity$10(a,b,c,d,e,f,g,h,i,j) : fexpr__14974.call(null,a,b,c,d,e,f,g,h,i,j));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 \x3d (function (a,b,c,d,e,f,g,h,i,j,k){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar fexpr__14977 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\nreturn (fexpr__14977.cljs$core$IFn$_invoke$arity$11 ? fexpr__14977.cljs$core$IFn$_invoke$arity$11(a,b,c,d,e,f,g,h,i,j,k) : fexpr__14977.call(null,a,b,c,d,e,f,g,h,i,j,k));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar fexpr__14979 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\nreturn (fexpr__14979.cljs$core$IFn$_invoke$arity$12 ? fexpr__14979.cljs$core$IFn$_invoke$arity$12(a,b,c,d,e,f,g,h,i,j,k,l) : fexpr__14979.call(null,a,b,c,d,e,f,g,h,i,j,k,l));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar fexpr__14982 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\nreturn (fexpr__14982.cljs$core$IFn$_invoke$arity$13 ? fexpr__14982.cljs$core$IFn$_invoke$arity$13(a,b,c,d,e,f,g,h,i,j,k,l,m) : fexpr__14982.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar fexpr__14987 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\nreturn (fexpr__14987.cljs$core$IFn$_invoke$arity$14 ? fexpr__14987.cljs$core$IFn$_invoke$arity$14(a,b,c,d,e,f,g,h,i,j,k,l,m,n) : fexpr__14987.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar fexpr__14994 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\nreturn (fexpr__14994.cljs$core$IFn$_invoke$arity$15 ? fexpr__14994.cljs$core$IFn$_invoke$arity$15(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) : fexpr__14994.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar fexpr__14999 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\nreturn (fexpr__14999.cljs$core$IFn$_invoke$arity$16 ? fexpr__14999.cljs$core$IFn$_invoke$arity$16(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p) : fexpr__14999.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar fexpr__15004 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\nreturn (fexpr__15004.cljs$core$IFn$_invoke$arity$17 ? fexpr__15004.cljs$core$IFn$_invoke$arity$17(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q) : fexpr__15004.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar fexpr__15005 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\nreturn (fexpr__15005.cljs$core$IFn$_invoke$arity$18 ? fexpr__15005.cljs$core$IFn$_invoke$arity$18(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r) : fexpr__15005.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar fexpr__15006 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\nreturn (fexpr__15006.cljs$core$IFn$_invoke$arity$19 ? fexpr__15006.cljs$core$IFn$_invoke$arity$19(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s) : fexpr__15006.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar fexpr__15007 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\nreturn (fexpr__15007.cljs$core$IFn$_invoke$arity$20 ? fexpr__15007.cljs$core$IFn$_invoke$arity$20(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t) : fexpr__15007.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t));\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar G__15008 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\r\nvar G__15009 \x3d a;\r\nvar G__15010 \x3d b;\r\nvar G__15011 \x3d c;\r\nvar G__15012 \x3d d;\r\nvar G__15013 \x3d e;\r\nvar G__15014 \x3d f;\r\nvar G__15015 \x3d g;\r\nvar G__15016 \x3d h;\r\nvar G__15017 \x3d i;\r\nvar G__15018 \x3d j;\r\nvar G__15019 \x3d k;\r\nvar G__15020 \x3d l;\r\nvar G__15021 \x3d m;\r\nvar G__15022 \x3d n;\r\nvar G__15023 \x3d o;\r\nvar G__15024 \x3d p;\r\nvar G__15025 \x3d q;\r\nvar G__15026 \x3d r;\r\nvar G__15027 \x3d s;\r\nvar G__15028 \x3d t;\r\nvar G__15029 \x3d rest;\r\nreturn (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__15008,G__15009,G__15010,G__15011,G__15012,G__15013,G__15014,G__15015,G__15016,G__15017,G__15018,G__15019,G__15020,G__15021,G__15022,G__15023,G__15024,G__15025,G__15026,G__15027,G__15028,G__15029) : cljs.core.apply.call(null,G__15008,G__15009,G__15010,G__15011,G__15012,G__15013,G__15014,G__15015,G__15016,G__15017,G__15018,G__15019,G__15020,G__15021,G__15022,G__15023,G__15024,G__15025,G__15026,G__15027,G__15028,G__15029));\r\n}));\r\n\r\n(cljs.core.Var.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22val\x22,\x22val\x22,1769233139,null),new cljs.core.Symbol(null,\x22sym\x22,\x22sym\x22,195671222,null),new cljs.core.Symbol(null,\x22_meta\x22,\x22_meta\x22,-1716892533,null)], null);\r\n}));\r\n\r\n(cljs.core.Var.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.Var.cljs$lang$ctorStr \x3d \x22cljs.core/Var\x22);\r\n\r\n(cljs.core.Var.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/Var\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/Var.\r\n */\r\ncljs.core.__GT_Var \x3d (function cljs$core$__GT_Var(val,sym,_meta){\r\nreturn (new cljs.core.Var(val,sym,_meta));\r\n});\r\n\r\n\r\n\r\n/**\r\n * Return true if x implements IIterable protocol.\r\n */\r\ncljs.core.iterable_QMARK_ \x3d (function cljs$core$iterable_QMARK_(x){\r\nif((!((x \x3d\x3d null)))){\r\nif((((x.cljs$lang$protocol_mask$partition1$ \x26 (131072))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IIterable$)))){\r\nreturn true;\r\n} else {\r\nif((!x.cljs$lang$protocol_mask$partition1$)){\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,x);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,x);\r\n}\r\n});\r\n/**\r\n * Return true if x has a JavaScript iterator property\r\n */\r\ncljs.core.js_iterable_QMARK_ \x3d (function cljs$core$js_iterable_QMARK_(x){\r\nreturn (((!((x \x3d\x3d null)))) \x26\x26 ((!((x[cljs.core.ITER_SYMBOL] \x3d\x3d null)))));\r\n});\r\n/**\r\n * Clone the supplied value which must implement ICloneable.\r\n */\r\ncljs.core.clone \x3d (function cljs$core$clone(value){\r\nreturn cljs.core._clone(value);\r\n});\r\n/**\r\n * Return true if x implements ICloneable protocol.\r\n */\r\ncljs.core.cloneable_QMARK_ \x3d (function cljs$core$cloneable_QMARK_(value){\r\nif((!((value \x3d\x3d null)))){\r\nif((((value.cljs$lang$protocol_mask$partition1$ \x26 (8192))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d value.cljs$core$ICloneable$)))){\r\nreturn true;\r\n} else {\r\nif((!value.cljs$lang$protocol_mask$partition1$)){\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,value);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,value);\r\n}\r\n});\r\n/**\r\n * Returns a seq on the collection. If the collection is\r\n *   empty, returns nil.  (seq nil) returns nil. seq also works on\r\n *   Strings.\r\n */\r\ncljs.core.seq \x3d (function cljs$core$seq(coll){\r\nif((coll \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (8388608))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$ISeqable$))))?true:false):false)){\r\nreturn coll.cljs$core$ISeqable$_seq$arity$1(null);\r\n} else {\r\nif(cljs.core.array_QMARK_(coll)){\r\nif((coll.length \x3d\x3d\x3d (0))){\r\nreturn null;\r\n} else {\r\nreturn (new cljs.core.IndexedSeq(coll,(0),null));\r\n}\r\n} else {\r\nif(typeof coll \x3d\x3d\x3d \x27string\x27){\r\nif((coll.length \x3d\x3d\x3d (0))){\r\nreturn null;\r\n} else {\r\nreturn (new cljs.core.IndexedSeq(coll,(0),null));\r\n}\r\n} else {\r\nif(cljs.core.js_iterable_QMARK_(coll)){\r\nvar G__15033 \x3d cljs.core.goog$module$goog$object.get(coll,cljs.core.ITER_SYMBOL).call(coll);\r\nreturn (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__15033) : cljs.core.es6_iterator_seq.call(null,G__15033));\r\n} else {\r\nif(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){\r\nreturn cljs.core._seq(coll);\r\n} else {\r\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll),\x22 is not ISeqable\x22].join(\x27\x27)));\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the first item in the collection. Calls seq on its\r\n *   argument. If coll is nil, returns nil.\r\n */\r\ncljs.core.first \x3d (function cljs$core$first(coll){\r\nif((coll \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (64))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$ISeq$))))?true:false):false)){\r\nreturn coll.cljs$core$ISeq$_first$arity$1(null);\r\n} else {\r\nvar s \x3d cljs.core.seq(coll);\r\nif((s \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core._first(s);\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Returns a possibly empty seq of the items after the first. Calls seq on its\r\n *   argument.\r\n */\r\ncljs.core.rest \x3d (function cljs$core$rest(coll){\r\nif((!((coll \x3d\x3d null)))){\r\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (64))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$ISeq$))))?true:false):false)){\r\nreturn coll.cljs$core$ISeq$_rest$arity$1(null);\r\n} else {\r\nvar s \x3d cljs.core.seq(coll);\r\nif(s){\r\nreturn s.cljs$core$ISeq$_rest$arity$1(null);\r\n} else {\r\nreturn cljs.core.List.EMPTY;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.List.EMPTY;\r\n}\r\n});\r\n/**\r\n * Returns a seq of the items after the first. Calls seq on its\r\n *   argument.  If there are no more items, returns nil\r\n */\r\ncljs.core.next \x3d (function cljs$core$next(coll){\r\nif((coll \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (128))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$INext$))))?true:false):false)){\r\nreturn coll.cljs$core$INext$_next$arity$1(null);\r\n} else {\r\nreturn cljs.core.seq(cljs.core.rest(coll));\r\n}\r\n}\r\n});\r\n/**\r\n * Equality. Returns true if x equals y, false if not. Compares\r\n *   numbers and collections in a type-independent manner.  Clojure\x27s immutable data\r\n *   structures define -equiv (and thus \x3d) as a value, not an identity,\r\n *   comparison.\r\n */\r\ncljs.core._EQ_ \x3d (function cljs$core$_EQ_(var_args){\r\nvar G__15041 \x3d arguments.length;\r\nswitch (G__15041) {\r\ncase 1:\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___16758 \x3d arguments.length;\r\nvar i__4865__auto___16759 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___16759 \x3c len__4864__auto___16758)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___16759]));\r\n\r\nvar G__16760 \x3d (i__4865__auto___16759 + (1));\r\ni__4865__auto___16759 \x3d G__16760;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn true;\r\n}));\r\n\r\n(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nif((x \x3d\x3d null)){\r\nreturn (y \x3d\x3d null);\r\n} else {\r\nreturn (((x \x3d\x3d\x3d y)) || (cljs.core._equiv(x,y)));\r\n}\r\n}));\r\n\r\n(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nwhile(true){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){\r\nif(cljs.core.next(more)){\r\nvar G__16762 \x3d y;\r\nvar G__16763 \x3d cljs.core.first(more);\r\nvar G__16764 \x3d cljs.core.next(more);\r\nx \x3d G__16762;\r\ny \x3d G__16763;\r\nmore \x3d G__16764;\r\ncontinue;\r\n} else {\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));\r\n}\r\n} else {\r\nreturn false;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core._EQ_.cljs$lang$applyTo \x3d (function (seq15038){\r\nvar G__15039 \x3d cljs.core.first(seq15038);\r\nvar seq15038__$1 \x3d cljs.core.next(seq15038);\r\nvar G__15040 \x3d cljs.core.first(seq15038__$1);\r\nvar seq15038__$2 \x3d cljs.core.next(seq15038__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15039,G__15040,seq15038__$2);\r\n}));\r\n\r\n(cljs.core._EQ_.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.ES6Iterator \x3d (function (s){\r\nthis.s \x3d s;\r\n});\r\n(cljs.core.ES6Iterator.prototype.next \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nif((!((self__.s \x3d\x3d null)))){\r\nvar x \x3d cljs.core.first(self__.s);\r\n(self__.s \x3d cljs.core.next(self__.s));\r\n\r\nreturn ({\x22value\x22: x, \x22done\x22: false});\r\n} else {\r\nreturn ({\x22value\x22: null, \x22done\x22: true});\r\n}\r\n}));\r\n\r\n(cljs.core.ES6Iterator.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22s\x22,\x22s\x22,-948495851,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.ES6Iterator.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.ES6Iterator.cljs$lang$ctorStr \x3d \x22cljs.core/ES6Iterator\x22);\r\n\r\n(cljs.core.ES6Iterator.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/ES6Iterator\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/ES6Iterator.\r\n */\r\ncljs.core.__GT_ES6Iterator \x3d (function cljs$core$__GT_ES6Iterator(s){\r\nreturn (new cljs.core.ES6Iterator(s));\r\n});\r\n\r\n/**\r\n * EXPERIMENTAL: Return a ES2015 compatible iterator for coll.\r\n */\r\ncljs.core.es6_iterator \x3d (function cljs$core$es6_iterator(coll){\r\nreturn (new cljs.core.ES6Iterator(cljs.core.seq(coll)));\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.ISeqable}\r\n*/\r\ncljs.core.ES6IteratorSeq \x3d (function (value,iter,_rest){\r\nthis.value \x3d value;\r\nthis.iter \x3d iter;\r\nthis._rest \x3d _rest;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 8388672;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this$){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nreturn this$__$1;\r\n}));\r\n\r\n(cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn self__.value;\r\n}));\r\n\r\n(cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nif((self__._rest \x3d\x3d null)){\r\n(self__._rest \x3d (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(self__.iter) : cljs.core.es6_iterator_seq.call(null,self__.iter)));\r\n} else {\r\n}\r\n\r\nreturn self__._rest;\r\n}));\r\n\r\n(cljs.core.ES6IteratorSeq.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22value\x22,\x22value\x22,1946509744,null),new cljs.core.Symbol(null,\x22iter\x22,\x22iter\x22,-1346195486,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22_rest\x22,\x22_rest\x22,-2100466189,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.ES6IteratorSeq.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.ES6IteratorSeq.cljs$lang$ctorStr \x3d \x22cljs.core/ES6IteratorSeq\x22);\r\n\r\n(cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/ES6IteratorSeq\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/ES6IteratorSeq.\r\n */\r\ncljs.core.__GT_ES6IteratorSeq \x3d (function cljs$core$__GT_ES6IteratorSeq(value,iter,_rest){\r\nreturn (new cljs.core.ES6IteratorSeq(value,iter,_rest));\r\n});\r\n\r\n/**\r\n * EXPERIMENTAL: Given an ES2015 compatible iterator return a seq.\r\n */\r\ncljs.core.es6_iterator_seq \x3d (function cljs$core$es6_iterator_seq(iter){\r\nvar v \x3d iter.next();\r\nif(cljs.core.truth_(v.done)){\r\nreturn null;\r\n} else {\r\nreturn (new cljs.core.ES6IteratorSeq(v.value,iter,null));\r\n}\r\n});\r\n/**\r\n * Mix final collection hash for ordered or unordered collections.\r\n * hash-basis is the combined collection hash, count is the number\r\n * of elements included in the basis. Note this is the hash code\r\n * consistent with \x3d, different from .hashCode.\r\n * See http://clojure.org/data_structures#hash for full algorithms.\r\n */\r\ncljs.core.mix_collection_hash \x3d (function cljs$core$mix_collection_hash(hash_basis,count){\r\nvar h1 \x3d cljs.core.m3_seed;\r\nvar k1 \x3d cljs.core.m3_mix_K1(hash_basis);\r\nvar h1__$1 \x3d cljs.core.m3_mix_H1(h1,k1);\r\nreturn cljs.core.m3_fmix(h1__$1,count);\r\n});\r\n/**\r\n * Returns the hash code, consistent with \x3d, for an external ordered\r\n * collection implementing Iterable.\r\n * See http://clojure.org/data_structures#hash for full algorithms.\r\n */\r\ncljs.core.hash_ordered_coll \x3d (function cljs$core$hash_ordered_coll(coll){\r\nvar n \x3d (0);\r\nvar hash_code \x3d (1);\r\nvar coll__$1 \x3d cljs.core.seq(coll);\r\nwhile(true){\r\nif((!((coll__$1 \x3d\x3d null)))){\r\nvar G__16768 \x3d (n + (1));\r\nvar G__16769 \x3d ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));\r\nvar G__16770 \x3d cljs.core.next(coll__$1);\r\nn \x3d G__16768;\r\nhash_code \x3d G__16769;\r\ncoll__$1 \x3d G__16770;\r\ncontinue;\r\n} else {\r\nreturn cljs.core.mix_collection_hash(hash_code,n);\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.core.empty_ordered_hash \x3d cljs.core.mix_collection_hash((1),(0));\r\n/**\r\n * Returns the hash code, consistent with \x3d, for an external unordered\r\n * collection implementing Iterable. For maps, the iterator should\r\n * return map entries whose hash is computed as\r\n *   (hash-ordered-coll [k v]).\r\n * See http://clojure.org/data_structures#hash for full algorithms.\r\n */\r\ncljs.core.hash_unordered_coll \x3d (function cljs$core$hash_unordered_coll(coll){\r\nvar n \x3d (0);\r\nvar hash_code \x3d (0);\r\nvar coll__$1 \x3d cljs.core.seq(coll);\r\nwhile(true){\r\nif((!((coll__$1 \x3d\x3d null)))){\r\nvar G__16771 \x3d (n + (1));\r\nvar G__16772 \x3d ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));\r\nvar G__16773 \x3d cljs.core.next(coll__$1);\r\nn \x3d G__16771;\r\nhash_code \x3d G__16772;\r\ncoll__$1 \x3d G__16773;\r\ncontinue;\r\n} else {\r\nreturn cljs.core.mix_collection_hash(hash_code,n);\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.core.empty_unordered_hash \x3d cljs.core.mix_collection_hash((0),(0));\r\n\r\n\r\n(cljs.core.ICounted[\x22null\x22] \x3d true);\r\n\r\n(cljs.core._count[\x22null\x22] \x3d (function (_){\r\nreturn (0);\r\n}));\r\n(Date.prototype.cljs$core$IEquiv$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(Date.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (o,other){\r\nvar o__$1 \x3d this;\r\nreturn (((other instanceof Date)) \x26\x26 ((o__$1.valueOf() \x3d\x3d\x3d other.valueOf())));\r\n}));\r\n\r\n(Date.prototype.cljs$core$IComparable$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(Date.prototype.cljs$core$IComparable$_compare$arity$2 \x3d (function (this$,other){\r\nvar this$__$1 \x3d this;\r\nif((other instanceof Date)){\r\nreturn cljs.core.goog$module$goog$array.defaultCompare(this$__$1.valueOf(),other.valueOf());\r\n} else {\r\nthrow (new Error([\x22Cannot compare \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1),\x22 to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(other)].join(\x27\x27)));\r\n}\r\n}));\r\n\r\n/**\r\n * @interface\r\n */\r\ncljs.core.Inst \x3d function(){};\r\n\r\nvar cljs$core$Inst$inst_ms_STAR_$dyn_16774 \x3d (function (inst){\r\nvar x__4550__auto__ \x3d (((inst \x3d\x3d null))?null:inst);\r\nvar m__4551__auto__ \x3d (cljs.core.inst_ms_STAR_[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__4551__auto__.call(null,inst));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core.inst_ms_STAR_[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__4549__auto__.call(null,inst));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22Inst.inst-ms*\x22,inst);\r\n}\r\n}\r\n});\r\ncljs.core.inst_ms_STAR_ \x3d (function cljs$core$inst_ms_STAR_(inst){\r\nif((((!((inst \x3d\x3d null)))) \x26\x26 ((!((inst.cljs$core$Inst$inst_ms_STAR_$arity$1 \x3d\x3d null)))))){\r\nreturn inst.cljs$core$Inst$inst_ms_STAR_$arity$1(inst);\r\n} else {\r\nreturn cljs$core$Inst$inst_ms_STAR_$dyn_16774(inst);\r\n}\r\n});\r\n\r\n(Date.prototype.cljs$core$Inst$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(Date.prototype.cljs$core$Inst$inst_ms_STAR_$arity$1 \x3d (function (inst){\r\nvar inst__$1 \x3d this;\r\nreturn inst__$1.getTime();\r\n}));\r\n/**\r\n * Return the number of milliseconds since January 1, 1970, 00:00:00 GMT\r\n */\r\ncljs.core.inst_ms \x3d (function cljs$core$inst_ms(inst){\r\nreturn cljs.core.inst_ms_STAR_(inst);\r\n});\r\n/**\r\n * Return true if x satisfies Inst\r\n */\r\ncljs.core.inst_QMARK_ \x3d (function cljs$core$inst_QMARK_(x){\r\nif((!((x \x3d\x3d null)))){\r\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$Inst$)))){\r\nreturn true;\r\n} else {\r\nif((!x.cljs$lang$protocol_mask$partition$)){\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.Inst,x);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.Inst,x);\r\n}\r\n});\r\n(cljs.core.IEquiv[\x22number\x22] \x3d true);\r\n\r\n(cljs.core._equiv[\x22number\x22] \x3d (function (x,o){\r\nreturn (x \x3d\x3d\x3d o);\r\n}));\r\n(cljs.core.Fn[\x22function\x22] \x3d true);\r\n\r\n(cljs.core.IMeta[\x22function\x22] \x3d true);\r\n\r\n(cljs.core._meta[\x22function\x22] \x3d (function (_){\r\nreturn null;\r\n}));\r\n(cljs.core.IHash[\x22_\x22] \x3d true);\r\n\r\n(cljs.core._hash[\x22_\x22] \x3d (function (o){\r\nreturn goog.getUid(o);\r\n}));\r\n/**\r\n * Returns a number one greater than num.\r\n */\r\ncljs.core.inc \x3d (function cljs$core$inc(x){\r\nreturn (x + (1));\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IDeref}\r\n*/\r\ncljs.core.Reduced \x3d (function (val){\r\nthis.val \x3d val;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32768;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (o){\r\nvar self__ \x3d this;\r\nvar o__$1 \x3d this;\r\nreturn self__.val;\r\n}));\r\n\r\n(cljs.core.Reduced.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22val\x22,\x22val\x22,1769233139,null)], null);\r\n}));\r\n\r\n(cljs.core.Reduced.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.Reduced.cljs$lang$ctorStr \x3d \x22cljs.core/Reduced\x22);\r\n\r\n(cljs.core.Reduced.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/Reduced\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/Reduced.\r\n */\r\ncljs.core.__GT_Reduced \x3d (function cljs$core$__GT_Reduced(val){\r\nreturn (new cljs.core.Reduced(val));\r\n});\r\n\r\n/**\r\n * Wraps x in a way such that a reduce will terminate with the value x\r\n */\r\ncljs.core.reduced \x3d (function cljs$core$reduced(x){\r\nreturn (new cljs.core.Reduced(x));\r\n});\r\n/**\r\n * Returns true if x is the result of a call to reduced\r\n */\r\ncljs.core.reduced_QMARK_ \x3d (function cljs$core$reduced_QMARK_(r){\r\nreturn (r instanceof cljs.core.Reduced);\r\n});\r\n/**\r\n * If x is already reduced?, returns it, else returns (reduced x)\r\n */\r\ncljs.core.ensure_reduced \x3d (function cljs$core$ensure_reduced(x){\r\nif(cljs.core.reduced_QMARK_(x)){\r\nreturn x;\r\n} else {\r\nreturn cljs.core.reduced(x);\r\n}\r\n});\r\n/**\r\n * If x is reduced?, returns (deref x), else returns x\r\n */\r\ncljs.core.unreduced \x3d (function cljs$core$unreduced(x){\r\nif(cljs.core.reduced_QMARK_(x)){\r\nreturn (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null,x));\r\n} else {\r\nreturn x;\r\n}\r\n});\r\n/**\r\n * Also reader macro: @var/@atom/@delay. Returns the\r\n * most-recently-committed value of ref. When applied to a var\r\n * or atom, returns its current state. When applied to a delay, forces\r\n * it if not already forced. See also - realized?.\r\n */\r\ncljs.core.deref \x3d (function cljs$core$deref(o){\r\nreturn cljs.core._deref(o);\r\n});\r\n/**\r\n * Accepts any collection which satisfies the ICount and IIndexed protocols and\r\n * reduces them without incurring seq initialization\r\n */\r\ncljs.core.ci_reduce \x3d (function cljs$core$ci_reduce(var_args){\r\nvar G__15044 \x3d arguments.length;\r\nswitch (G__15044) {\r\ncase 2:\r\nreturn cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 \x3d (function (cicoll,f){\r\nvar cnt \x3d cicoll.cljs$core$ICounted$_count$arity$1(null);\r\nif((cnt \x3d\x3d\x3d (0))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\n} else {\r\nvar val \x3d cicoll.cljs$core$IIndexed$_nth$arity$2(null,(0));\r\nvar n \x3d (1);\r\nwhile(true){\r\nif((n \x3c cnt)){\r\nvar nval \x3d (function (){var G__15045 \x3d val;\r\nvar G__15046 \x3d cicoll.cljs$core$IIndexed$_nth$arity$2(null,n);\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15045,G__15046) : f.call(null,G__15045,G__15046));\r\n})();\r\nif(cljs.core.reduced_QMARK_(nval)){\r\nreturn cljs.core.deref(nval);\r\n} else {\r\nvar G__16776 \x3d nval;\r\nvar G__16777 \x3d (n + (1));\r\nval \x3d G__16776;\r\nn \x3d G__16777;\r\ncontinue;\r\n}\r\n} else {\r\nreturn val;\r\n}\r\nbreak;\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 \x3d (function (cicoll,f,val){\r\nvar cnt \x3d cicoll.cljs$core$ICounted$_count$arity$1(null);\r\nvar val__$1 \x3d val;\r\nvar n \x3d (0);\r\nwhile(true){\r\nif((n \x3c cnt)){\r\nvar nval \x3d (function (){var G__15047 \x3d val__$1;\r\nvar G__15048 \x3d cicoll.cljs$core$IIndexed$_nth$arity$2(null,n);\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15047,G__15048) : f.call(null,G__15047,G__15048));\r\n})();\r\nif(cljs.core.reduced_QMARK_(nval)){\r\nreturn cljs.core.deref(nval);\r\n} else {\r\nvar G__16778 \x3d nval;\r\nvar G__16779 \x3d (n + (1));\r\nval__$1 \x3d G__16778;\r\nn \x3d G__16779;\r\ncontinue;\r\n}\r\n} else {\r\nreturn val__$1;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.ci_reduce.cljs$lang$maxFixedArity \x3d 3);\r\n\r\ncljs.core.array_reduce \x3d (function cljs$core$array_reduce(var_args){\r\nvar G__15050 \x3d arguments.length;\r\nswitch (G__15050) {\r\ncase 2:\r\nreturn cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 \x3d (function (arr,f){\r\nvar cnt \x3d arr.length;\r\nif((arr.length \x3d\x3d\x3d (0))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\n} else {\r\nvar val \x3d (arr[(0)]);\r\nvar n \x3d (1);\r\nwhile(true){\r\nif((n \x3c cnt)){\r\nvar nval \x3d (function (){var G__15051 \x3d val;\r\nvar G__15052 \x3d (arr[n]);\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15051,G__15052) : f.call(null,G__15051,G__15052));\r\n})();\r\nif(cljs.core.reduced_QMARK_(nval)){\r\nreturn cljs.core.deref(nval);\r\n} else {\r\nvar G__16781 \x3d nval;\r\nvar G__16782 \x3d (n + (1));\r\nval \x3d G__16781;\r\nn \x3d G__16782;\r\ncontinue;\r\n}\r\n} else {\r\nreturn val;\r\n}\r\nbreak;\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 \x3d (function (arr,f,val){\r\nvar cnt \x3d arr.length;\r\nvar val__$1 \x3d val;\r\nvar n \x3d (0);\r\nwhile(true){\r\nif((n \x3c cnt)){\r\nvar nval \x3d (function (){var G__15053 \x3d val__$1;\r\nvar G__15054 \x3d (arr[n]);\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15053,G__15054) : f.call(null,G__15053,G__15054));\r\n})();\r\nif(cljs.core.reduced_QMARK_(nval)){\r\nreturn cljs.core.deref(nval);\r\n} else {\r\nvar G__16783 \x3d nval;\r\nvar G__16784 \x3d (n + (1));\r\nval__$1 \x3d G__16783;\r\nn \x3d G__16784;\r\ncontinue;\r\n}\r\n} else {\r\nreturn val__$1;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 \x3d (function (arr,f,val,idx){\r\nvar cnt \x3d arr.length;\r\nvar val__$1 \x3d val;\r\nvar n \x3d idx;\r\nwhile(true){\r\nif((n \x3c cnt)){\r\nvar nval \x3d (function (){var G__15055 \x3d val__$1;\r\nvar G__15056 \x3d (arr[n]);\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15055,G__15056) : f.call(null,G__15055,G__15056));\r\n})();\r\nif(cljs.core.reduced_QMARK_(nval)){\r\nreturn cljs.core.deref(nval);\r\n} else {\r\nvar G__16785 \x3d nval;\r\nvar G__16786 \x3d (n + (1));\r\nval__$1 \x3d G__16785;\r\nn \x3d G__16786;\r\ncontinue;\r\n}\r\n} else {\r\nreturn val__$1;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.array_reduce.cljs$lang$maxFixedArity \x3d 4);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Returns true if coll implements count in constant time\r\n */\r\ncljs.core.counted_QMARK_ \x3d (function cljs$core$counted_QMARK_(x){\r\nif((!((x \x3d\x3d null)))){\r\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (2))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$ICounted$)))){\r\nreturn true;\r\n} else {\r\nif((!x.cljs$lang$protocol_mask$partition0$)){\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,x);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,x);\r\n}\r\n});\r\n/**\r\n * Returns true if coll implements nth in constant time\r\n */\r\ncljs.core.indexed_QMARK_ \x3d (function cljs$core$indexed_QMARK_(x){\r\nif((!((x \x3d\x3d null)))){\r\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (16))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IIndexed$)))){\r\nreturn true;\r\n} else {\r\nif((!x.cljs$lang$protocol_mask$partition0$)){\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,x);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,x);\r\n}\r\n});\r\ncljs.core._indexOf \x3d (function cljs$core$_indexOf(var_args){\r\nvar G__15060 \x3d arguments.length;\r\nswitch (G__15060) {\r\ncase 2:\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,x){\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n}));\r\n\r\n(cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3 \x3d (function (coll,x,start){\r\nvar len \x3d (cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null,coll));\r\nif((start \x3e\x3d len)){\r\nreturn (-1);\r\n} else {\r\nvar idx \x3d (((start \x3e (0)))?start:(((start \x3c (0)))?(function (){var x__4336__auto__ \x3d (0);\r\nvar y__4337__auto__ \x3d (start + len);\r\nreturn ((x__4336__auto__ \x3e y__4337__auto__) ? x__4336__auto__ : y__4337__auto__);\r\n})():start\r\n));\r\nwhile(true){\r\nif((idx \x3c len)){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((cljs.core.nth.cljs$core$IFn$_invoke$arity$2 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,idx) : cljs.core.nth.call(null,coll,idx)),x)){\r\nreturn idx;\r\n} else {\r\nvar G__16788 \x3d (idx + (1));\r\nidx \x3d G__16788;\r\ncontinue;\r\n}\r\n} else {\r\nreturn (-1);\r\n}\r\nbreak;\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core._indexOf.cljs$lang$maxFixedArity \x3d 3);\r\n\r\ncljs.core._lastIndexOf \x3d (function cljs$core$_lastIndexOf(var_args){\r\nvar G__15062 \x3d arguments.length;\r\nswitch (G__15062) {\r\ncase 2:\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,x){\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null,coll)));\r\n}));\r\n\r\n(cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3 \x3d (function (coll,x,start){\r\nvar len \x3d (cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null,coll));\r\nif((len \x3d\x3d\x3d (0))){\r\nreturn (-1);\r\n} else {\r\nvar idx \x3d (((start \x3e (0)))?(function (){var x__4339__auto__ \x3d (len - (1));\r\nvar y__4340__auto__ \x3d start;\r\nreturn ((x__4339__auto__ \x3c y__4340__auto__) ? x__4339__auto__ : y__4340__auto__);\r\n})():(((start \x3c (0)))?(len + start):start\r\n));\r\nwhile(true){\r\nif((idx \x3e\x3d (0))){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((cljs.core.nth.cljs$core$IFn$_invoke$arity$2 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,idx) : cljs.core.nth.call(null,coll,idx)),x)){\r\nreturn idx;\r\n} else {\r\nvar G__16795 \x3d (idx - (1));\r\nidx \x3d G__16795;\r\ncontinue;\r\n}\r\n} else {\r\nreturn (-1);\r\n}\r\nbreak;\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core._lastIndexOf.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.IndexedSeqIterator \x3d (function (arr,i){\r\nthis.arr \x3d arr;\r\nthis.i \x3d i;\r\n});\r\n(cljs.core.IndexedSeqIterator.prototype.hasNext \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.i \x3c self__.arr.length);\r\n}));\r\n\r\n(cljs.core.IndexedSeqIterator.prototype.next \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar ret \x3d (self__.arr[self__.i]);\r\n(self__.i \x3d (self__.i + (1)));\r\n\r\nreturn ret;\r\n}));\r\n\r\n(cljs.core.IndexedSeqIterator.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.IndexedSeqIterator.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.IndexedSeqIterator.cljs$lang$ctorStr \x3d \x22cljs.core/IndexedSeqIterator\x22);\r\n\r\n(cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/IndexedSeqIterator\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/IndexedSeqIterator.\r\n */\r\ncljs.core.__GT_IndexedSeqIterator \x3d (function cljs$core$__GT_IndexedSeqIterator(arr,i){\r\nreturn (new cljs.core.IndexedSeqIterator(arr,i));\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IIndexed}\r\n * @implements {cljs.core.IReversible}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ASeq}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.INext}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.IndexedSeq \x3d (function (arr,i,meta){\r\nthis.arr \x3d arr;\r\nthis.i \x3d i;\r\nthis.meta \x3d meta;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 166592766;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\r\n});\r\n(cljs.core.IndexedSeq.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.IndexedSeq.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.IndexedSeq.prototype.indexOf \x3d (function() {\r\nvar G__16796 \x3d null;\r\nvar G__16796__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__16796__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__16796 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__16796__1.call(this,x);\r\ncase 2:\r\nreturn G__16796__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__16796.cljs$core$IFn$_invoke$arity$1 \x3d G__16796__1;\r\nG__16796.cljs$core$IFn$_invoke$arity$2 \x3d G__16796__2;\r\nreturn G__16796;\r\n})()\r\n);\r\n\r\n(cljs.core.IndexedSeq.prototype.lastIndexOf \x3d (function() {\r\nvar G__16797 \x3d null;\r\nvar G__16797__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null,coll)));\r\n});\r\nvar G__16797__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__16797 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__16797__1.call(this,x);\r\ncase 2:\r\nreturn G__16797__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__16797.cljs$core$IFn$_invoke$arity$1 \x3d G__16797__1;\r\nG__16797.cljs$core$IFn$_invoke$arity$2 \x3d G__16797__2;\r\nreturn G__16797;\r\n})()\r\n);\r\n\r\n(cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 \x3d (function (coll,n){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar i__$1 \x3d (n + self__.i);\r\nif(((((0) \x3c\x3d i__$1)) \x26\x26 ((i__$1 \x3c self__.arr.length)))){\r\nreturn (self__.arr[i__$1]);\r\n} else {\r\nthrow (new Error(\x22Index out of bounds\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 \x3d (function (coll,n,not_found){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar i__$1 \x3d (n + self__.i);\r\nif(((((0) \x3c\x3d i__$1)) \x26\x26 ((i__$1 \x3c self__.arr.length)))){\r\nreturn (self__.arr[i__$1]);\r\n} else {\r\nreturn not_found;\r\n}\r\n}));\r\n\r\n(cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));\r\n}));\r\n\r\n(cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (new cljs.core.IndexedSeq(self__.arr,self__.i,self__.meta));\r\n}));\r\n\r\n(cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nif(((self__.i + (1)) \x3c self__.arr.length)){\r\nreturn (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1)),null));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nvar x__4336__auto__ \x3d (0);\r\nvar y__4337__auto__ \x3d (self__.arr.length - self__.i);\r\nreturn ((x__4336__auto__ \x3e y__4337__auto__) ? x__4336__auto__ : y__4337__auto__);\r\n}));\r\n\r\n(cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar c \x3d coll__$1.cljs$core$ICounted$_count$arity$1(null);\r\nif((c \x3e (0))){\r\nreturn (new cljs.core.RSeq(coll__$1,(c - (1)),null));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.hash_ordered_coll(coll__$1);\r\n}));\r\n\r\n(cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1,other) : cljs.core.equiv_sequential.call(null,coll__$1,other));\r\n}));\r\n\r\n(cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.List.EMPTY;\r\n}));\r\n\r\n(cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));\r\n}));\r\n\r\n(cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);\r\n}));\r\n\r\n(cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (self__.arr[self__.i]);\r\n}));\r\n\r\n(cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nif(((self__.i + (1)) \x3c self__.arr.length)){\r\nreturn (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1)),null));\r\n} else {\r\nreturn cljs.core.List.EMPTY;\r\n}\r\n}));\r\n\r\n(cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this$){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nif((self__.i \x3c self__.arr.length)){\r\nreturn this$__$1;\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.IndexedSeq(self__.arr,self__.i,new_meta));\r\n}\r\n}));\r\n\r\n(cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o,coll__$1) : cljs.core.cons.call(null,o,coll__$1));\r\n}));\r\n\r\n(cljs.core.IndexedSeq.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null)], null);\r\n}));\r\n\r\n(cljs.core.IndexedSeq.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.IndexedSeq.cljs$lang$ctorStr \x3d \x22cljs.core/IndexedSeq\x22);\r\n\r\n(cljs.core.IndexedSeq.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/IndexedSeq\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/IndexedSeq.\r\n */\r\ncljs.core.__GT_IndexedSeq \x3d (function cljs$core$__GT_IndexedSeq(arr,i,meta){\r\nreturn (new cljs.core.IndexedSeq(arr,i,meta));\r\n});\r\n\r\n(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\n/**\r\n * Create seq from a primitive JavaScript Array-like.\r\n */\r\ncljs.core.prim_seq \x3d (function cljs$core$prim_seq(var_args){\r\nvar G__15064 \x3d arguments.length;\r\nswitch (G__15064) {\r\ncase 1:\r\nreturn cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 \x3d (function (prim){\r\nreturn cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));\r\n}));\r\n\r\n(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 \x3d (function (prim,i){\r\nif((i \x3c prim.length)){\r\nreturn (new cljs.core.IndexedSeq(prim,i,null));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.prim_seq.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Create a seq from a JavaScript array.\r\n */\r\ncljs.core.array_seq \x3d (function cljs$core$array_seq(var_args){\r\nvar G__15066 \x3d arguments.length;\r\nswitch (G__15066) {\r\ncase 1:\r\nreturn cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 \x3d (function (array){\r\nreturn cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));\r\n}));\r\n\r\n(cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 \x3d (function (array,i){\r\nreturn cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);\r\n}));\r\n\r\n(cljs.core.array_seq.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.INext}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.RSeq \x3d (function (ci,i,meta){\r\nthis.ci \x3d ci;\r\nthis.i \x3d i;\r\nthis.meta \x3d meta;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32374990;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 8192;\r\n});\r\n(cljs.core.RSeq.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.RSeq.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.RSeq.prototype.indexOf \x3d (function() {\r\nvar G__16824 \x3d null;\r\nvar G__16824__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__16824__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__16824 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__16824__1.call(this,x);\r\ncase 2:\r\nreturn G__16824__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__16824.cljs$core$IFn$_invoke$arity$1 \x3d G__16824__1;\r\nG__16824.cljs$core$IFn$_invoke$arity$2 \x3d G__16824__2;\r\nreturn G__16824;\r\n})()\r\n);\r\n\r\n(cljs.core.RSeq.prototype.lastIndexOf \x3d (function() {\r\nvar G__16833 \x3d null;\r\nvar G__16833__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null,coll)));\r\n});\r\nvar G__16833__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__16833 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__16833__1.call(this,x);\r\ncase 2:\r\nreturn G__16833__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__16833.cljs$core$IFn$_invoke$arity$1 \x3d G__16833__1;\r\nG__16833.cljs$core$IFn$_invoke$arity$2 \x3d G__16833__2;\r\nreturn G__16833;\r\n})()\r\n);\r\n\r\n(cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));\r\n}));\r\n\r\n(cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.i \x3e (0))){\r\nreturn (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (self__.i + (1));\r\n}));\r\n\r\n(cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.hash_ordered_coll(coll__$1);\r\n}));\r\n\r\n(cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1,other) : cljs.core.equiv_sequential.call(null,coll__$1,other));\r\n}));\r\n\r\n(cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.List.EMPTY;\r\n}));\r\n\r\n(cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (col,f){\r\nvar self__ \x3d this;\r\nvar col__$1 \x3d this;\r\nreturn (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,col__$1) : cljs.core.seq_reduce.call(null,f,col__$1));\r\n}));\r\n\r\n(cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (col,f,start){\r\nvar self__ \x3d this;\r\nvar col__$1 \x3d this;\r\nreturn (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,col__$1) : cljs.core.seq_reduce.call(null,f,start,col__$1));\r\n}));\r\n\r\n(cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core._nth(self__.ci,self__.i);\r\n}));\r\n\r\n(cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.i \x3e (0))){\r\nreturn (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));\r\n} else {\r\nreturn cljs.core.List.EMPTY;\r\n}\r\n}));\r\n\r\n(cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1;\r\n}));\r\n\r\n(cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.RSeq(self__.ci,self__.i,new_meta));\r\n}\r\n}));\r\n\r\n(cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o,coll__$1) : cljs.core.cons.call(null,o,coll__$1));\r\n}));\r\n\r\n(cljs.core.RSeq.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22ci\x22,\x22ci\x22,2049808339,null),new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null)], null);\r\n}));\r\n\r\n(cljs.core.RSeq.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.RSeq.cljs$lang$ctorStr \x3d \x22cljs.core/RSeq\x22);\r\n\r\n(cljs.core.RSeq.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/RSeq\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/RSeq.\r\n */\r\ncljs.core.__GT_RSeq \x3d (function cljs$core$__GT_RSeq(ci,i,meta){\r\nreturn (new cljs.core.RSeq(ci,i,meta));\r\n});\r\n\r\n(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\n/**\r\n * Same as (first (next x))\r\n */\r\ncljs.core.second \x3d (function cljs$core$second(coll){\r\nreturn cljs.core.first(cljs.core.next(coll));\r\n});\r\n/**\r\n * Same as (first (first x))\r\n */\r\ncljs.core.ffirst \x3d (function cljs$core$ffirst(coll){\r\nreturn cljs.core.first(cljs.core.first(coll));\r\n});\r\n/**\r\n * Same as (next (first x))\r\n */\r\ncljs.core.nfirst \x3d (function cljs$core$nfirst(coll){\r\nreturn cljs.core.next(cljs.core.first(coll));\r\n});\r\n/**\r\n * Same as (first (next x))\r\n */\r\ncljs.core.fnext \x3d (function cljs$core$fnext(coll){\r\nreturn cljs.core.first(cljs.core.next(coll));\r\n});\r\n/**\r\n * Same as (next (next x))\r\n */\r\ncljs.core.nnext \x3d (function cljs$core$nnext(coll){\r\nreturn cljs.core.next(cljs.core.next(coll));\r\n});\r\n/**\r\n * Return the last item in coll, in linear time\r\n */\r\ncljs.core.last \x3d (function cljs$core$last(s){\r\nwhile(true){\r\nvar sn \x3d cljs.core.next(s);\r\nif((!((sn \x3d\x3d null)))){\r\nvar G__16863 \x3d sn;\r\ns \x3d G__16863;\r\ncontinue;\r\n} else {\r\nreturn cljs.core.first(s);\r\n}\r\nbreak;\r\n}\r\n});\r\n(cljs.core.IEquiv[\x22_\x22] \x3d true);\r\n\r\n(cljs.core._equiv[\x22_\x22] \x3d (function (x,o){\r\nreturn (x \x3d\x3d\x3d o);\r\n}));\r\n/**\r\n * conj[oin]. Returns a new collection with the xs\r\n *   \x27added\x27. (conj nil item) returns (item).\r\n *   (conj coll) returns coll. (conj) returns [].\r\n *   The \x27addition\x27 may happen at different \x27places\x27 depending\r\n *   on the concrete type.\r\n */\r\ncljs.core.conj \x3d (function cljs$core$conj(var_args){\r\nvar G__15088 \x3d arguments.length;\r\nswitch (G__15088) {\r\ncase 0:\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___16865 \x3d arguments.length;\r\nvar i__4865__auto___16866 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___16866 \x3c len__4864__auto___16865)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___16866]));\r\n\r\nvar G__16867 \x3d (i__4865__auto___16866 + (1));\r\ni__4865__auto___16866 \x3d G__16867;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.conj.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n}));\r\n\r\n(cljs.core.conj.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\r\nreturn coll;\r\n}));\r\n\r\n(cljs.core.conj.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,x){\r\nif((!((coll \x3d\x3d null)))){\r\nreturn cljs.core._conj(coll,x);\r\n} else {\r\nreturn (new cljs.core.List(null,x,null,(1),null));\r\n}\r\n}));\r\n\r\n(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic \x3d (function (coll,x,xs){\r\nwhile(true){\r\nif(cljs.core.truth_(xs)){\r\nvar G__16869 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll,x);\r\nvar G__16870 \x3d cljs.core.first(xs);\r\nvar G__16871 \x3d cljs.core.next(xs);\r\ncoll \x3d G__16869;\r\nx \x3d G__16870;\r\nxs \x3d G__16871;\r\ncontinue;\r\n} else {\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll,x);\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.conj.cljs$lang$applyTo \x3d (function (seq15085){\r\nvar G__15086 \x3d cljs.core.first(seq15085);\r\nvar seq15085__$1 \x3d cljs.core.next(seq15085);\r\nvar G__15087 \x3d cljs.core.first(seq15085__$1);\r\nvar seq15085__$2 \x3d cljs.core.next(seq15085__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15086,G__15087,seq15085__$2);\r\n}));\r\n\r\n(cljs.core.conj.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Returns an empty collection of the same category as coll, or nil\r\n */\r\ncljs.core.empty \x3d (function cljs$core$empty(coll){\r\nif((coll \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (4))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$IEmptyableCollection$))))?true:false):false)){\r\nreturn coll.cljs$core$IEmptyableCollection$_empty$arity$1(null);\r\n} else {\r\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (4))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$IEmptyableCollection$))))?true:(((!coll.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IEmptyableCollection,coll):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IEmptyableCollection,coll))){\r\nreturn cljs.core._empty(coll);\r\n} else {\r\nreturn null;\r\n\r\n}\r\n}\r\n}\r\n});\r\ncljs.core.accumulating_seq_count \x3d (function cljs$core$accumulating_seq_count(coll){\r\nvar s \x3d cljs.core.seq(coll);\r\nvar acc \x3d (0);\r\nwhile(true){\r\nif(cljs.core.counted_QMARK_(s)){\r\nreturn (acc + cljs.core._count(s));\r\n} else {\r\nvar G__16876 \x3d cljs.core.next(s);\r\nvar G__16877 \x3d (acc + (1));\r\ns \x3d G__16876;\r\nacc \x3d G__16877;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Returns the number of items in the collection. (count nil) returns\r\n *   0.  Also works on strings, arrays, and Maps\r\n */\r\ncljs.core.count \x3d (function cljs$core$count(coll){\r\nif((!((coll \x3d\x3d null)))){\r\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (2))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$ICounted$))))?true:false):false)){\r\nreturn coll.cljs$core$ICounted$_count$arity$1(null);\r\n} else {\r\nif(cljs.core.array_QMARK_(coll)){\r\nreturn coll.length;\r\n} else {\r\nif(typeof coll \x3d\x3d\x3d \x27string\x27){\r\nreturn coll.length;\r\n} else {\r\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (8388608))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$ISeqable$))))?true:false):false)){\r\nreturn cljs.core.accumulating_seq_count(coll);\r\n} else {\r\nreturn cljs.core._count(coll);\r\n\r\n}\r\n}\r\n}\r\n}\r\n} else {\r\nreturn (0);\r\n}\r\n});\r\ncljs.core.linear_traversal_nth \x3d (function cljs$core$linear_traversal_nth(var_args){\r\nvar G__15129 \x3d arguments.length;\r\nswitch (G__15129) {\r\ncase 2:\r\nreturn cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,n){\r\nwhile(true){\r\nif((coll \x3d\x3d null)){\r\nthrow (new Error(\x22Index out of bounds\x22));\r\n} else {\r\nif((n \x3d\x3d\x3d (0))){\r\nif(cljs.core.seq(coll)){\r\nreturn cljs.core.first(coll);\r\n} else {\r\nthrow (new Error(\x22Index out of bounds\x22));\r\n}\r\n} else {\r\nif(cljs.core.indexed_QMARK_(coll)){\r\nreturn cljs.core._nth(coll,n);\r\n} else {\r\nif(cljs.core.seq(coll)){\r\nvar G__16886 \x3d cljs.core.next(coll);\r\nvar G__16887 \x3d (n - (1));\r\ncoll \x3d G__16886;\r\nn \x3d G__16887;\r\ncontinue;\r\n} else {\r\nthrow (new Error(\x22Index out of bounds\x22));\r\n\r\n}\r\n}\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 \x3d (function (coll,n,not_found){\r\nwhile(true){\r\nif((coll \x3d\x3d null)){\r\nreturn not_found;\r\n} else {\r\nif((n \x3d\x3d\x3d (0))){\r\nif(cljs.core.seq(coll)){\r\nreturn cljs.core.first(coll);\r\n} else {\r\nreturn not_found;\r\n}\r\n} else {\r\nif(cljs.core.indexed_QMARK_(coll)){\r\nreturn cljs.core._nth(coll,n,not_found);\r\n} else {\r\nif(cljs.core.seq(coll)){\r\nvar G__16896 \x3d cljs.core.next(coll);\r\nvar G__16897 \x3d (n - (1));\r\nvar G__16898 \x3d not_found;\r\ncoll \x3d G__16896;\r\nn \x3d G__16897;\r\nnot_found \x3d G__16898;\r\ncontinue;\r\n} else {\r\nreturn not_found;\r\n\r\n}\r\n}\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n/**\r\n * Returns the value at the index. get returns nil if index out of\r\n *   bounds, nth throws an exception unless not-found is supplied.  nth\r\n *   also works for strings, arrays, regex Matchers and Lists, and,\r\n *   in O(n) time, for sequences.\r\n */\r\ncljs.core.nth \x3d (function cljs$core$nth(var_args){\r\nvar G__15131 \x3d arguments.length;\r\nswitch (G__15131) {\r\ncase 2:\r\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.nth.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,n){\r\nif((!(typeof n \x3d\x3d\x3d \x27number\x27))){\r\nthrow (new Error(\x22Index argument to nth must be a number\x22));\r\n} else {\r\nif((coll \x3d\x3d null)){\r\nreturn coll;\r\n} else {\r\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (16))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$IIndexed$))))?true:false):false)){\r\nreturn coll.cljs$core$IIndexed$_nth$arity$2(null,n);\r\n} else {\r\nif(cljs.core.array_QMARK_(coll)){\r\nif(((((-1) \x3c n)) \x26\x26 ((n \x3c coll.length)))){\r\nreturn (coll[(n | (0))]);\r\n} else {\r\nthrow (new Error(\x22Index out of bounds\x22));\r\n}\r\n} else {\r\nif(typeof coll \x3d\x3d\x3d \x27string\x27){\r\nif(((((-1) \x3c n)) \x26\x26 ((n \x3c coll.length)))){\r\nreturn coll.charAt((n | (0)));\r\n} else {\r\nthrow (new Error(\x22Index out of bounds\x22));\r\n}\r\n} else {\r\nif((function (){var or__4253__auto__ \x3d (((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (64))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$ISeq$))))?true:false):false);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nif((!((coll \x3d\x3d null)))){\r\nif((((coll.cljs$lang$protocol_mask$partition0$ \x26 (16777216))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$ISequential$)))){\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n})()){\r\nif((n \x3c (0))){\r\nthrow (new Error(\x22Index out of bounds\x22));\r\n} else {\r\nreturn cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);\r\n}\r\n} else {\r\nif(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){\r\nreturn cljs.core._nth(coll,n);\r\n} else {\r\nthrow (new Error([\x22nth not supported on this type \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(\x27\x27)));\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.nth.cljs$core$IFn$_invoke$arity$3 \x3d (function (coll,n,not_found){\r\nif((!(typeof n \x3d\x3d\x3d \x27number\x27))){\r\nthrow (new Error(\x22Index argument to nth must be a number.\x22));\r\n} else {\r\nif((coll \x3d\x3d null)){\r\nreturn not_found;\r\n} else {\r\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (16))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$IIndexed$))))?true:false):false)){\r\nreturn coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);\r\n} else {\r\nif(cljs.core.array_QMARK_(coll)){\r\nif(((((-1) \x3c n)) \x26\x26 ((n \x3c coll.length)))){\r\nreturn (coll[(n | (0))]);\r\n} else {\r\nreturn not_found;\r\n}\r\n} else {\r\nif(typeof coll \x3d\x3d\x3d \x27string\x27){\r\nif(((((-1) \x3c n)) \x26\x26 ((n \x3c coll.length)))){\r\nreturn coll.charAt((n | (0)));\r\n} else {\r\nreturn not_found;\r\n}\r\n} else {\r\nif((function (){var or__4253__auto__ \x3d (((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (64))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$ISeq$))))?true:false):false);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nif((!((coll \x3d\x3d null)))){\r\nif((((coll.cljs$lang$protocol_mask$partition0$ \x26 (16777216))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$ISequential$)))){\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n})()){\r\nif((n \x3c (0))){\r\nreturn not_found;\r\n} else {\r\nreturn cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);\r\n}\r\n} else {\r\nif(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){\r\nreturn cljs.core._nth(coll,n,not_found);\r\n} else {\r\nthrow (new Error([\x22nth not supported on this type \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(\x27\x27)));\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.nth.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n/**\r\n * Returns the nth rest of coll, coll when n is 0.\r\n */\r\ncljs.core.nthrest \x3d (function cljs$core$nthrest(coll,n){\r\nvar n__$1 \x3d n;\r\nvar xs \x3d coll;\r\nwhile(true){\r\nvar temp__5751__auto__ \x3d (((n__$1 \x3e (0))) \x26\x26 (cljs.core.seq(xs)));\r\nif(temp__5751__auto__){\r\nvar xs__$1 \x3d temp__5751__auto__;\r\nvar G__16912 \x3d (n__$1 - (1));\r\nvar G__16913 \x3d cljs.core.rest(xs__$1);\r\nn__$1 \x3d G__16912;\r\nxs \x3d G__16913;\r\ncontinue;\r\n} else {\r\nreturn xs;\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Returns the value mapped to key, not-found or nil if key not present.\r\n */\r\ncljs.core.get \x3d (function cljs$core$get(var_args){\r\nvar G__15139 \x3d arguments.length;\r\nswitch (G__15139) {\r\ncase 2:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.get.cljs$core$IFn$_invoke$arity$2 \x3d (function (o,k){\r\nif((o \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nif((((!((o \x3d\x3d null))))?(((((o.cljs$lang$protocol_mask$partition0$ \x26 (256))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d o.cljs$core$ILookup$))))?true:false):false)){\r\nreturn o.cljs$core$ILookup$_lookup$arity$2(null,k);\r\n} else {\r\nif(cljs.core.array_QMARK_(o)){\r\nif((((!((k \x3d\x3d null)))) \x26\x26 ((k \x3c o.length)))){\r\nreturn (o[(k | (0))]);\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nif(typeof o \x3d\x3d\x3d \x27string\x27){\r\nif((((!((k \x3d\x3d null)))) \x26\x26 (((((-1) \x3c k)) \x26\x26 ((k \x3c o.length)))))){\r\nreturn o.charAt((k | (0)));\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nif(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){\r\nreturn cljs.core._lookup(o,k);\r\n} else {\r\nreturn null;\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.get.cljs$core$IFn$_invoke$arity$3 \x3d (function (o,k,not_found){\r\nif((!((o \x3d\x3d null)))){\r\nif((((!((o \x3d\x3d null))))?(((((o.cljs$lang$protocol_mask$partition0$ \x26 (256))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d o.cljs$core$ILookup$))))?true:false):false)){\r\nreturn o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);\r\n} else {\r\nif(cljs.core.array_QMARK_(o)){\r\nif((((!((k \x3d\x3d null)))) \x26\x26 (((((-1) \x3c k)) \x26\x26 ((k \x3c o.length)))))){\r\nreturn (o[(k | (0))]);\r\n} else {\r\nreturn not_found;\r\n}\r\n} else {\r\nif(typeof o \x3d\x3d\x3d \x27string\x27){\r\nif((((!((k \x3d\x3d null)))) \x26\x26 (((((-1) \x3c k)) \x26\x26 ((k \x3c o.length)))))){\r\nreturn o.charAt((k | (0)));\r\n} else {\r\nreturn not_found;\r\n}\r\n} else {\r\nif(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){\r\nreturn cljs.core._lookup(o,k,not_found);\r\n} else {\r\nreturn not_found;\r\n\r\n}\r\n}\r\n}\r\n}\r\n} else {\r\nreturn not_found;\r\n}\r\n}));\r\n\r\n(cljs.core.get.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n\r\n\r\n/**\r\n * assoc[iate]. When applied to a map, returns a new map of the\r\n * same (hashed/sorted) type, that contains the mapping of key(s) to\r\n * val(s). When applied to a vector, returns a new vector that\r\n * contains val at index. Note - index must be \x3c\x3d (count vector).\r\n */\r\ncljs.core.assoc \x3d (function cljs$core$assoc(var_args){\r\nvar G__15147 \x3d arguments.length;\r\nswitch (G__15147) {\r\ncase 3:\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___16921 \x3d arguments.length;\r\nvar i__4865__auto___16925 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___16925 \x3c len__4864__auto___16921)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___16925]));\r\n\r\nvar G__16926 \x3d (i__4865__auto___16925 + (1));\r\ni__4865__auto___16925 \x3d G__16926;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((3)),(0),null));\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 \x3d (function (coll,k,v){\r\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (512))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$IAssociative$))))?true:false):false)){\r\nreturn coll.cljs$core$IAssociative$_assoc$arity$3(null,k,v);\r\n} else {\r\nif((!((coll \x3d\x3d null)))){\r\nreturn cljs.core._assoc(coll,k,v);\r\n} else {\r\nreturn cljs.core.PersistentArrayMap.createAsIfByAssoc([k,v]);\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic \x3d (function (coll,k,v,kvs){\r\nwhile(true){\r\nvar ret \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);\r\nif(cljs.core.truth_(kvs)){\r\nvar G__16930 \x3d ret;\r\nvar G__16931 \x3d cljs.core.first(kvs);\r\nvar G__16932 \x3d cljs.core.second(kvs);\r\nvar G__16933 \x3d cljs.core.nnext(kvs);\r\ncoll \x3d G__16930;\r\nk \x3d G__16931;\r\nv \x3d G__16932;\r\nkvs \x3d G__16933;\r\ncontinue;\r\n} else {\r\nreturn ret;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.assoc.cljs$lang$applyTo \x3d (function (seq15143){\r\nvar G__15144 \x3d cljs.core.first(seq15143);\r\nvar seq15143__$1 \x3d cljs.core.next(seq15143);\r\nvar G__15145 \x3d cljs.core.first(seq15143__$1);\r\nvar seq15143__$2 \x3d cljs.core.next(seq15143__$1);\r\nvar G__15146 \x3d cljs.core.first(seq15143__$2);\r\nvar seq15143__$3 \x3d cljs.core.next(seq15143__$2);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15144,G__15145,G__15146,seq15143__$3);\r\n}));\r\n\r\n(cljs.core.assoc.cljs$lang$maxFixedArity \x3d (3));\r\n\r\n/**\r\n * dissoc[iate]. Returns a new map of the same (hashed/sorted) type,\r\n *   that does not contain a mapping for key(s).\r\n */\r\ncljs.core.dissoc \x3d (function cljs$core$dissoc(var_args){\r\nvar G__15153 \x3d arguments.length;\r\nswitch (G__15153) {\r\ncase 1:\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___16938 \x3d arguments.length;\r\nvar i__4865__auto___16939 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___16939 \x3c len__4864__auto___16938)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___16939]));\r\n\r\nvar G__16943 \x3d (i__4865__auto___16939 + (1));\r\ni__4865__auto___16939 \x3d G__16943;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\r\nreturn coll;\r\n}));\r\n\r\n(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,k){\r\nif((coll \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core._dissoc(coll,k);\r\n}\r\n}));\r\n\r\n(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic \x3d (function (coll,k,ks){\r\nwhile(true){\r\nif((coll \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nvar ret \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);\r\nif(cljs.core.truth_(ks)){\r\nvar G__16950 \x3d ret;\r\nvar G__16951 \x3d cljs.core.first(ks);\r\nvar G__16952 \x3d cljs.core.next(ks);\r\ncoll \x3d G__16950;\r\nk \x3d G__16951;\r\nks \x3d G__16952;\r\ncontinue;\r\n} else {\r\nreturn ret;\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.dissoc.cljs$lang$applyTo \x3d (function (seq15150){\r\nvar G__15151 \x3d cljs.core.first(seq15150);\r\nvar seq15150__$1 \x3d cljs.core.next(seq15150);\r\nvar G__15152 \x3d cljs.core.first(seq15150__$1);\r\nvar seq15150__$2 \x3d cljs.core.next(seq15150__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15151,G__15152,seq15150__$2);\r\n}));\r\n\r\n(cljs.core.dissoc.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Return true if f is a JavaScript function or satisfies the Fn protocol.\r\n */\r\ncljs.core.fn_QMARK_ \x3d (function cljs$core$fn_QMARK_(f){\r\nvar or__4253__auto__ \x3d typeof f \x3d\x3d\x3d \x27function\x27;\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nif((!((f \x3d\x3d null)))){\r\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d f.cljs$core$Fn$)))){\r\nreturn true;\r\n} else {\r\nif((!f.cljs$lang$protocol_mask$partition$)){\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.Fn,f);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.Fn,f);\r\n}\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IFn}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.Fn}\r\n * @implements {cljs.core.IWithMeta}\r\n*/\r\ncljs.core.MetaFn \x3d (function (afn,meta){\r\nthis.afn \x3d afn;\r\nthis.meta \x3d meta;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 393217;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_,new_meta){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (new cljs.core.MetaFn(self__.afn,new_meta));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$Fn$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.MetaFn.prototype.call \x3d (function (unused__9633__auto__){\r\nvar self__ \x3d this;\r\nvar self__ \x3d this;\r\nvar G__15156 \x3d (arguments.length - (1));\r\nswitch (G__15156) {\r\ncase (0):\r\nreturn self__.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase (1):\r\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\r\n\r\nbreak;\r\ncase (2):\r\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase (3):\r\nreturn self__.cljs$core$IFn$_invoke$arity$3((arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ncase (4):\r\nreturn self__.cljs$core$IFn$_invoke$arity$4((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ncase (5):\r\nreturn self__.cljs$core$IFn$_invoke$arity$5((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\r\n\r\nbreak;\r\ncase (6):\r\nreturn self__.cljs$core$IFn$_invoke$arity$6((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]));\r\n\r\nbreak;\r\ncase (7):\r\nreturn self__.cljs$core$IFn$_invoke$arity$7((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]));\r\n\r\nbreak;\r\ncase (8):\r\nreturn self__.cljs$core$IFn$_invoke$arity$8((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]));\r\n\r\nbreak;\r\ncase (9):\r\nreturn self__.cljs$core$IFn$_invoke$arity$9((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]));\r\n\r\nbreak;\r\ncase (10):\r\nreturn self__.cljs$core$IFn$_invoke$arity$10((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]));\r\n\r\nbreak;\r\ncase (11):\r\nreturn self__.cljs$core$IFn$_invoke$arity$11((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]));\r\n\r\nbreak;\r\ncase (12):\r\nreturn self__.cljs$core$IFn$_invoke$arity$12((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]));\r\n\r\nbreak;\r\ncase (13):\r\nreturn self__.cljs$core$IFn$_invoke$arity$13((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]));\r\n\r\nbreak;\r\ncase (14):\r\nreturn self__.cljs$core$IFn$_invoke$arity$14((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]));\r\n\r\nbreak;\r\ncase (15):\r\nreturn self__.cljs$core$IFn$_invoke$arity$15((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]));\r\n\r\nbreak;\r\ncase (16):\r\nreturn self__.cljs$core$IFn$_invoke$arity$16((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]));\r\n\r\nbreak;\r\ncase (17):\r\nreturn self__.cljs$core$IFn$_invoke$arity$17((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]));\r\n\r\nbreak;\r\ncase (18):\r\nreturn self__.cljs$core$IFn$_invoke$arity$18((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]));\r\n\r\nbreak;\r\ncase (19):\r\nreturn self__.cljs$core$IFn$_invoke$arity$19((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]));\r\n\r\nbreak;\r\ncase (20):\r\nreturn self__.cljs$core$IFn$_invoke$arity$20((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]));\r\n\r\nbreak;\r\ncase (21):\r\nreturn self__.cljs$core$IFn$_invoke$arity$21((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]),(arguments[(21)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.apply \x3d (function (self__,args15155){\r\nvar self__ \x3d this;\r\nvar self____$1 \x3d this;\r\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15155)));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (a){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null,a));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (a,b){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a,b) : self__.afn.call(null,a,b));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 \x3d (function (a,b,c){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a,b,c) : self__.afn.call(null,a,b,c));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 \x3d (function (a,b,c,d){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a,b,c,d) : self__.afn.call(null,a,b,c,d));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 \x3d (function (a,b,c,d,e){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a,b,c,d,e) : self__.afn.call(null,a,b,c,d,e));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 \x3d (function (a,b,c,d,e,f){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a,b,c,d,e,f) : self__.afn.call(null,a,b,c,d,e,f));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 \x3d (function (a,b,c,d,e,f,g){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a,b,c,d,e,f,g) : self__.afn.call(null,a,b,c,d,e,f,g));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 \x3d (function (a,b,c,d,e,f,g,h){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a,b,c,d,e,f,g,h) : self__.afn.call(null,a,b,c,d,e,f,g,h));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 \x3d (function (a,b,c,d,e,f,g,h,i){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a,b,c,d,e,f,g,h,i) : self__.afn.call(null,a,b,c,d,e,f,g,h,i));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 \x3d (function (a,b,c,d,e,f,g,h,i,j){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a,b,c,d,e,f,g,h,i,j) : self__.afn.call(null,a,b,c,d,e,f,g,h,i,j));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 \x3d (function (a,b,c,d,e,f,g,h,i,j,k){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a,b,c,d,e,f,g,h,i,j,k) : self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a,b,c,d,e,f,g,h,i,j,k,l) : self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a,b,c,d,e,f,g,h,i,j,k,l,m) : self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a,b,c,d,e,f,g,h,i,j,k,l,m,n) : self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) : self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p) : self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q) : self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r) : self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s) : self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t) : self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t));\r\n}));\r\n\r\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest) : cljs.core.apply.call(null,self__.afn,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest));\r\n}));\r\n\r\n(cljs.core.MetaFn.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22afn\x22,\x22afn\x22,216963467,null),new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null)], null);\r\n}));\r\n\r\n(cljs.core.MetaFn.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.MetaFn.cljs$lang$ctorStr \x3d \x22cljs.core/MetaFn\x22);\r\n\r\n(cljs.core.MetaFn.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/MetaFn\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/MetaFn.\r\n */\r\ncljs.core.__GT_MetaFn \x3d (function cljs$core$__GT_MetaFn(afn,meta){\r\nreturn (new cljs.core.MetaFn(afn,meta));\r\n});\r\n\r\n/**\r\n * Returns an object of the same type and value as obj, with\r\n *   map m as its metadata.\r\n */\r\ncljs.core.with_meta \x3d (function cljs$core$with_meta(o,meta){\r\nif(typeof o \x3d\x3d\x3d \x27function\x27){\r\nreturn (new cljs.core.MetaFn(o,meta));\r\n} else {\r\nif((o \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core._with_meta(o,meta);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the metadata of obj, returns nil if there is no metadata.\r\n */\r\ncljs.core.meta \x3d (function cljs$core$meta(o){\r\nif((function (){var and__4251__auto__ \x3d (!((o \x3d\x3d null)));\r\nif(and__4251__auto__){\r\nif((!((o \x3d\x3d null)))){\r\nif((((o.cljs$lang$protocol_mask$partition0$ \x26 (131072))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d o.cljs$core$IMeta$)))){\r\nreturn true;\r\n} else {\r\nif((!o.cljs$lang$protocol_mask$partition0$)){\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,o);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,o);\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})()){\r\nreturn cljs.core._meta(o);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * For a list or queue, same as first, for a vector, same as, but much\r\n *   more efficient than, last. If the collection is empty, returns nil.\r\n */\r\ncljs.core.peek \x3d (function cljs$core$peek(coll){\r\nif((coll \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core._peek(coll);\r\n}\r\n});\r\n/**\r\n * For a list or queue, returns a new list/queue without the first\r\n *   item, for a vector, returns a new vector without the last item.\r\n *   Note - not the same as next/butlast.\r\n */\r\ncljs.core.pop \x3d (function cljs$core$pop(coll){\r\nif((coll \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core._pop(coll);\r\n}\r\n});\r\n/**\r\n * disj[oin]. Returns a new set of the same (hashed/sorted) type, that\r\n *   does not contain key(s).\r\n */\r\ncljs.core.disj \x3d (function cljs$core$disj(var_args){\r\nvar G__15162 \x3d arguments.length;\r\nswitch (G__15162) {\r\ncase 1:\r\nreturn cljs.core.disj.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.disj.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17034 \x3d arguments.length;\r\nvar i__4865__auto___17035 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17035 \x3c len__4864__auto___17034)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17035]));\r\n\r\nvar G__17036 \x3d (i__4865__auto___17035 + (1));\r\ni__4865__auto___17035 \x3d G__17036;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.disj.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\r\nreturn coll;\r\n}));\r\n\r\n(cljs.core.disj.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,k){\r\nif((coll \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core._disjoin(coll,k);\r\n}\r\n}));\r\n\r\n(cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic \x3d (function (coll,k,ks){\r\nwhile(true){\r\nif((coll \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nvar ret \x3d cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll,k);\r\nif(cljs.core.truth_(ks)){\r\nvar G__17040 \x3d ret;\r\nvar G__17041 \x3d cljs.core.first(ks);\r\nvar G__17042 \x3d cljs.core.next(ks);\r\ncoll \x3d G__17040;\r\nk \x3d G__17041;\r\nks \x3d G__17042;\r\ncontinue;\r\n} else {\r\nreturn ret;\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.disj.cljs$lang$applyTo \x3d (function (seq15159){\r\nvar G__15160 \x3d cljs.core.first(seq15159);\r\nvar seq15159__$1 \x3d cljs.core.next(seq15159);\r\nvar G__15161 \x3d cljs.core.first(seq15159__$1);\r\nvar seq15159__$2 \x3d cljs.core.next(seq15159__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15160,G__15161,seq15159__$2);\r\n}));\r\n\r\n(cljs.core.disj.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Returns true if coll has no items - same as (not (seq coll)).\r\n *   Please use the idiom (seq x) rather than (not (empty? x))\r\n */\r\ncljs.core.empty_QMARK_ \x3d (function cljs$core$empty_QMARK_(coll){\r\nreturn (((coll \x3d\x3d null)) || (cljs.core.not(cljs.core.seq(coll))));\r\n});\r\n/**\r\n * Returns true if x satisfies ICollection\r\n */\r\ncljs.core.coll_QMARK_ \x3d (function cljs$core$coll_QMARK_(x){\r\nif((x \x3d\x3d null)){\r\nreturn false;\r\n} else {\r\nif((!((x \x3d\x3d null)))){\r\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (8))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$ICollection$)))){\r\nreturn true;\r\n} else {\r\nif((!x.cljs$lang$protocol_mask$partition0$)){\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,x);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,x);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns true if x satisfies ISet\r\n */\r\ncljs.core.set_QMARK_ \x3d (function cljs$core$set_QMARK_(x){\r\nif((x \x3d\x3d null)){\r\nreturn false;\r\n} else {\r\nif((!((x \x3d\x3d null)))){\r\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (4096))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$ISet$)))){\r\nreturn true;\r\n} else {\r\nif((!x.cljs$lang$protocol_mask$partition0$)){\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ISet,x);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ISet,x);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns true if coll implements IAssociative\r\n */\r\ncljs.core.associative_QMARK_ \x3d (function cljs$core$associative_QMARK_(x){\r\nif((!((x \x3d\x3d null)))){\r\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (512))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IAssociative$)))){\r\nreturn true;\r\n} else {\r\nif((!x.cljs$lang$protocol_mask$partition0$)){\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,x);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,x);\r\n}\r\n});\r\n/**\r\n * Returns true if coll implements IFind\r\n */\r\ncljs.core.ifind_QMARK_ \x3d (function cljs$core$ifind_QMARK_(x){\r\nif((!((x \x3d\x3d null)))){\r\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IFind$)))){\r\nreturn true;\r\n} else {\r\nif((!x.cljs$lang$protocol_mask$partition$)){\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IFind,x);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IFind,x);\r\n}\r\n});\r\n/**\r\n * Returns true if coll satisfies ISequential\r\n */\r\ncljs.core.sequential_QMARK_ \x3d (function cljs$core$sequential_QMARK_(x){\r\nif((!((x \x3d\x3d null)))){\r\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (16777216))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$ISequential$)))){\r\nreturn true;\r\n} else {\r\nif((!x.cljs$lang$protocol_mask$partition0$)){\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,x);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,x);\r\n}\r\n});\r\n/**\r\n * Returns true if coll satisfies ISorted\r\n */\r\ncljs.core.sorted_QMARK_ \x3d (function cljs$core$sorted_QMARK_(x){\r\nif((!((x \x3d\x3d null)))){\r\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (268435456))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$ISorted$)))){\r\nreturn true;\r\n} else {\r\nif((!x.cljs$lang$protocol_mask$partition0$)){\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,x);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,x);\r\n}\r\n});\r\n/**\r\n * Returns true if coll satisfies IReduce\r\n */\r\ncljs.core.reduceable_QMARK_ \x3d (function cljs$core$reduceable_QMARK_(x){\r\nif((!((x \x3d\x3d null)))){\r\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (524288))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IReduce$)))){\r\nreturn true;\r\n} else {\r\nif((!x.cljs$lang$protocol_mask$partition0$)){\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,x);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,x);\r\n}\r\n});\r\n/**\r\n * Return true if x satisfies IMap\r\n */\r\ncljs.core.map_QMARK_ \x3d (function cljs$core$map_QMARK_(x){\r\nif((x \x3d\x3d null)){\r\nreturn false;\r\n} else {\r\nif((!((x \x3d\x3d null)))){\r\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (1024))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IMap$)))){\r\nreturn true;\r\n} else {\r\nif((!x.cljs$lang$protocol_mask$partition0$)){\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IMap,x);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IMap,x);\r\n}\r\n}\r\n});\r\n/**\r\n * Return true if x satisfies IRecord\r\n */\r\ncljs.core.record_QMARK_ \x3d (function cljs$core$record_QMARK_(x){\r\nif((!((x \x3d\x3d null)))){\r\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (67108864))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IRecord$)))){\r\nreturn true;\r\n} else {\r\nif((!x.cljs$lang$protocol_mask$partition0$)){\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IRecord,x);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IRecord,x);\r\n}\r\n});\r\n/**\r\n * Return true if x satisfies IVector\r\n */\r\ncljs.core.vector_QMARK_ \x3d (function cljs$core$vector_QMARK_(x){\r\nif((!((x \x3d\x3d null)))){\r\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (16384))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IVector$)))){\r\nreturn true;\r\n} else {\r\nif((!x.cljs$lang$protocol_mask$partition0$)){\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IVector,x);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IVector,x);\r\n}\r\n});\r\n\r\n/**\r\n * Return true if x satisfies IChunkedSeq.\r\n */\r\ncljs.core.chunked_seq_QMARK_ \x3d (function cljs$core$chunked_seq_QMARK_(x){\r\nif((!((x \x3d\x3d null)))){\r\nif((((x.cljs$lang$protocol_mask$partition1$ \x26 (512))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IChunkedSeq$)))){\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n} else {\r\nreturn false;\r\n}\r\n});\r\n/**\r\n * Create JavaSript object from an even number arguments representing\r\n *   interleaved keys and values.\r\n */\r\ncljs.core.js_obj \x3d (function cljs$core$js_obj(var_args){\r\nvar G__15176 \x3d arguments.length;\r\nswitch (G__15176) {\r\ncase 0:\r\nreturn cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17102 \x3d arguments.length;\r\nvar i__4865__auto___17103 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17103 \x3c len__4864__auto___17102)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17103]));\r\n\r\nvar G__17104 \x3d (i__4865__auto___17103 + (1));\r\ni__4865__auto___17103 \x3d G__17104;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((0)),(0),null));\r\nreturn cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nreturn ({});\r\n}));\r\n\r\n(cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic \x3d (function (keyvals){\r\nreturn (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.goog$module$goog$object.create,keyvals) : cljs.core.apply.call(null,cljs.core.goog$module$goog$object.create,keyvals));\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.js_obj.cljs$lang$applyTo \x3d (function (seq15175){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15175));\r\n}));\r\n\r\n(cljs.core.js_obj.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/**\r\n * Return the JavaScript keys for an object.\r\n */\r\ncljs.core.js_keys \x3d (function cljs$core$js_keys(obj){\r\nreturn cljs.core.goog$module$goog$object.getKeys(obj);\r\n});\r\n/**\r\n * Delete a property from a JavaScript object.\r\n *   Returns true upon success, false otherwise.\r\n */\r\ncljs.core.js_delete \x3d (function cljs$core$js_delete(obj,key){\r\nreturn delete obj[key];\r\n});\r\ncljs.core.array_copy \x3d (function cljs$core$array_copy(from,i,to,j,len){\r\nvar i__$1 \x3d i;\r\nvar j__$1 \x3d j;\r\nvar len__$1 \x3d len;\r\nwhile(true){\r\nif((len__$1 \x3d\x3d\x3d (0))){\r\nreturn to;\r\n} else {\r\n(to[j__$1] \x3d (from[i__$1]));\r\n\r\nvar G__17110 \x3d (i__$1 + (1));\r\nvar G__17111 \x3d (j__$1 + (1));\r\nvar G__17112 \x3d (len__$1 - (1));\r\ni__$1 \x3d G__17110;\r\nj__$1 \x3d G__17111;\r\nlen__$1 \x3d G__17112;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.core.array_copy_downward \x3d (function cljs$core$array_copy_downward(from,i,to,j,len){\r\nvar i__$1 \x3d (i + (len - (1)));\r\nvar j__$1 \x3d (j + (len - (1)));\r\nvar len__$1 \x3d len;\r\nwhile(true){\r\nif((len__$1 \x3d\x3d\x3d (0))){\r\nreturn to;\r\n} else {\r\n(to[j__$1] \x3d (from[i__$1]));\r\n\r\nvar G__17113 \x3d (i__$1 - (1));\r\nvar G__17114 \x3d (j__$1 - (1));\r\nvar G__17115 \x3d (len__$1 - (1));\r\ni__$1 \x3d G__17113;\r\nj__$1 \x3d G__17114;\r\nlen__$1 \x3d G__17115;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.core.lookup_sentinel \x3d ({});\r\n/**\r\n * Returns true if x is the value false, false otherwise.\r\n */\r\ncljs.core.false_QMARK_ \x3d (function cljs$core$false_QMARK_(x){\r\nreturn x \x3d\x3d\x3d false;\r\n});\r\n/**\r\n * Returns true if x is the value true, false otherwise.\r\n */\r\ncljs.core.true_QMARK_ \x3d (function cljs$core$true_QMARK_(x){\r\nreturn x \x3d\x3d\x3d true;\r\n});\r\n/**\r\n * Return true if x is a Boolean\r\n */\r\ncljs.core.boolean_QMARK_ \x3d (function cljs$core$boolean_QMARK_(x){\r\nreturn ((x \x3d\x3d\x3d true) || (x \x3d\x3d\x3d false));\r\n});\r\n/**\r\n * Returns true if x identical to the JavaScript undefined value.\r\n */\r\ncljs.core.undefined_QMARK_ \x3d (function cljs$core$undefined_QMARK_(x){\r\nreturn (void 0 \x3d\x3d\x3d x);\r\n});\r\n/**\r\n * Return true if s satisfies ISeq\r\n */\r\ncljs.core.seq_QMARK_ \x3d (function cljs$core$seq_QMARK_(s){\r\nif((s \x3d\x3d null)){\r\nreturn false;\r\n} else {\r\nif((!((s \x3d\x3d null)))){\r\nif((((s.cljs$lang$protocol_mask$partition0$ \x26 (64))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d s.cljs$core$ISeq$)))){\r\nreturn true;\r\n} else {\r\nif((!s.cljs$lang$protocol_mask$partition0$)){\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,s);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,s);\r\n}\r\n}\r\n});\r\n/**\r\n * Return true if the seq function is supported for s\r\n */\r\ncljs.core.seqable_QMARK_ \x3d (function cljs$core$seqable_QMARK_(s){\r\nvar or__4253__auto__ \x3d (s \x3d\x3d null);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar or__4253__auto____$1 \x3d (((!((s \x3d\x3d null))))?(((((s.cljs$lang$protocol_mask$partition0$ \x26 (8388608))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d s.cljs$core$ISeqable$))))?true:(((!s.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,s):false)):cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,s));\r\nif(or__4253__auto____$1){\r\nreturn or__4253__auto____$1;\r\n} else {\r\nreturn ((cljs.core.array_QMARK_(s)) || (typeof s \x3d\x3d\x3d \x27string\x27));\r\n}\r\n}\r\n});\r\n/**\r\n * Coerce to boolean\r\n */\r\ncljs.core.boolean$ \x3d (function cljs$core$boolean(x){\r\nif((x \x3d\x3d null)){\r\nreturn false;\r\n} else {\r\nif(x \x3d\x3d\x3d false){\r\nreturn false;\r\n} else {\r\nreturn true;\r\n\r\n}\r\n}\r\n});\r\n/**\r\n * Returns true if f returns true for fn? or satisfies IFn.\r\n */\r\ncljs.core.ifn_QMARK_ \x3d (function cljs$core$ifn_QMARK_(f){\r\nvar or__4253__auto__ \x3d cljs.core.fn_QMARK_(f);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nif((!((f \x3d\x3d null)))){\r\nif((((f.cljs$lang$protocol_mask$partition0$ \x26 (1))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d f.cljs$core$IFn$)))){\r\nreturn true;\r\n} else {\r\nif((!f.cljs$lang$protocol_mask$partition0$)){\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IFn,f);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IFn,f);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns true if n is a JavaScript number with no decimal part.\r\n */\r\ncljs.core.integer_QMARK_ \x3d (function cljs$core$integer_QMARK_(n){\r\nreturn ((typeof n \x3d\x3d\x3d \x27number\x27) \x26\x26 ((((!(isNaN(n)))) \x26\x26 ((((!((n \x3d\x3d\x3d Infinity)))) \x26\x26 ((parseFloat(n) \x3d\x3d\x3d parseInt(n,(10)))))))));\r\n});\r\n/**\r\n * INTERNAL: do not use\r\n */\r\ncljs.core.LongImpl \x3d cljs.core.goog$module$goog$math$Long;\r\n/**\r\n * Return true if x satisfies integer? or is an instance of goog.math.Integer\r\n * or goog.math.Long.\r\n */\r\ncljs.core.int_QMARK_ \x3d (function cljs$core$int_QMARK_(x){\r\nreturn ((cljs.core.integer_QMARK_(x)) || ((((x instanceof goog.math.Integer)) || ((x instanceof cljs.core.goog$module$goog$math$Long)))));\r\n});\r\n/**\r\n * Return true if x satisfies int? and is positive.\r\n */\r\ncljs.core.pos_int_QMARK_ \x3d (function cljs$core$pos_int_QMARK_(x){\r\nif(cljs.core.integer_QMARK_(x)){\r\nreturn (x \x3e (0));\r\n} else {\r\nif((x instanceof goog.math.Integer)){\r\nreturn ((cljs.core.not(x.isNegative())) \x26\x26 (cljs.core.not(x.isZero())));\r\n} else {\r\nif((x instanceof cljs.core.goog$module$goog$math$Long)){\r\nreturn ((cljs.core.not(x.isNegative())) \x26\x26 (cljs.core.not(x.isZero())));\r\n} else {\r\nreturn false;\r\n\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Return true if x satisfies int? and is negative.\r\n */\r\ncljs.core.neg_int_QMARK_ \x3d (function cljs$core$neg_int_QMARK_(x){\r\nif(cljs.core.integer_QMARK_(x)){\r\nreturn (x \x3c (0));\r\n} else {\r\nif((x instanceof goog.math.Integer)){\r\nreturn x.isNegative();\r\n} else {\r\nif((x instanceof cljs.core.goog$module$goog$math$Long)){\r\nreturn x.isNegative();\r\n} else {\r\nreturn false;\r\n\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Return true if x satisfies int? and is a natural integer value.\r\n */\r\ncljs.core.nat_int_QMARK_ \x3d (function cljs$core$nat_int_QMARK_(x){\r\nif(cljs.core.integer_QMARK_(x)){\r\nreturn (!((x \x3c (0))));\r\n} else {\r\nif((x instanceof goog.math.Integer)){\r\nreturn cljs.core.not(x.isNegative());\r\n} else {\r\nif((x instanceof cljs.core.goog$module$goog$math$Long)){\r\nreturn cljs.core.not(x.isNegative());\r\n} else {\r\nreturn false;\r\n\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Returns true for JavaScript numbers, false otherwise.\r\n */\r\ncljs.core.float_QMARK_ \x3d (function cljs$core$float_QMARK_(x){\r\nreturn typeof x \x3d\x3d\x3d \x27number\x27;\r\n});\r\n/**\r\n * Returns true for JavaScript numbers, false otherwise.\r\n */\r\ncljs.core.double_QMARK_ \x3d (function cljs$core$double_QMARK_(x){\r\nreturn typeof x \x3d\x3d\x3d \x27number\x27;\r\n});\r\n/**\r\n * Returns true for Infinity and -Infinity values.\r\n */\r\ncljs.core.infinite_QMARK_ \x3d (function cljs$core$infinite_QMARK_(x){\r\nreturn (((x \x3d\x3d\x3d Number.POSITIVE_INFINITY)) || ((x \x3d\x3d\x3d Number.NEGATIVE_INFINITY)));\r\n});\r\n/**\r\n * Returns true if key is present in the given collection, otherwise\r\n *   returns false.  Note that for numerically indexed collections like\r\n *   vectors and arrays, this tests if the numeric key is within the\r\n *   range of indexes. \x27contains?\x27 operates constant or logarithmic time;\r\n *   it will not perform a linear search for a value.  See also \x27some\x27.\r\n */\r\ncljs.core.contains_QMARK_ \x3d (function cljs$core$contains_QMARK_(coll,v){\r\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (512))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$IAssociative$))))?true:false):false)){\r\nreturn coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(null,v);\r\n} else {\r\nif(cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,coll)){\r\nreturn cljs.core._contains_key_QMARK_(coll,v);\r\n} else {\r\nif((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) \x3d\x3d\x3d cljs.core.lookup_sentinel)){\r\nreturn false;\r\n} else {\r\nreturn true;\r\n\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the map entry for key, or nil if key not present.\r\n */\r\ncljs.core.find \x3d (function cljs$core$find(coll,k){\r\nif(cljs.core.ifind_QMARK_(coll)){\r\nreturn cljs.core._find(coll,k);\r\n} else {\r\nif((((!((coll \x3d\x3d null)))) \x26\x26 (((cljs.core.associative_QMARK_(coll)) \x26\x26 (cljs.core.contains_QMARK_(coll,k)))))){\r\nreturn (new cljs.core.MapEntry(k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k),null));\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n});\r\n/**\r\n * Returns true if no two of the arguments are \x3d\r\n */\r\ncljs.core.distinct_QMARK_ \x3d (function cljs$core$distinct_QMARK_(var_args){\r\nvar G__15189 \x3d arguments.length;\r\nswitch (G__15189) {\r\ncase 1:\r\nreturn cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17117 \x3d arguments.length;\r\nvar i__4865__auto___17118 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17118 \x3c len__4864__auto___17117)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17118]));\r\n\r\nvar G__17119 \x3d (i__4865__auto___17118 + (1));\r\ni__4865__auto___17118 \x3d G__17119;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn true;\r\n}));\r\n\r\n(cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn (!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)));\r\n}));\r\n\r\n(cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nif((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)))){\r\nvar s \x3d cljs.core.PersistentHashSet.createAsIfByAssoc([x,y]);\r\nvar xs \x3d more;\r\nwhile(true){\r\nvar x__$1 \x3d cljs.core.first(xs);\r\nvar etc \x3d cljs.core.next(xs);\r\nif(cljs.core.truth_(xs)){\r\nif(cljs.core.contains_QMARK_(s,x__$1)){\r\nreturn false;\r\n} else {\r\nvar G__17120 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);\r\nvar G__17121 \x3d etc;\r\ns \x3d G__17120;\r\nxs \x3d G__17121;\r\ncontinue;\r\n}\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn false;\r\n}\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.distinct_QMARK_.cljs$lang$applyTo \x3d (function (seq15186){\r\nvar G__15187 \x3d cljs.core.first(seq15186);\r\nvar seq15186__$1 \x3d cljs.core.next(seq15186);\r\nvar G__15188 \x3d cljs.core.first(seq15186__$1);\r\nvar seq15186__$2 \x3d cljs.core.next(seq15186__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15187,G__15188,seq15186__$2);\r\n}));\r\n\r\n(cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Comparator. Returns a negative number, zero, or a positive number\r\n *   when x is logically \x27less than\x27, \x27equal to\x27, or \x27greater than\x27\r\n *   y. Uses IComparable if available and google.array.defaultCompare for objects\r\n *  of the same type and special-cases nil to be less than any other object.\r\n */\r\ncljs.core.compare \x3d (function cljs$core$compare(x,y){\r\nif((x \x3d\x3d\x3d y)){\r\nreturn (0);\r\n} else {\r\nif((x \x3d\x3d null)){\r\nreturn (-1);\r\n} else {\r\nif((y \x3d\x3d null)){\r\nreturn (1);\r\n} else {\r\nif(typeof x \x3d\x3d\x3d \x27number\x27){\r\nif(typeof y \x3d\x3d\x3d \x27number\x27){\r\nreturn cljs.core.goog$module$goog$array.defaultCompare(x,y);\r\n} else {\r\nthrow (new Error([\x22Cannot compare \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x),\x22 to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(\x27\x27)));\r\n}\r\n} else {\r\nif((((!((x \x3d\x3d null))))?(((((x.cljs$lang$protocol_mask$partition1$ \x26 (2048))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IComparable$))))?true:(((!x.cljs$lang$protocol_mask$partition1$))?cljs.core.native_satisfies_QMARK_(cljs.core.IComparable,x):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IComparable,x))){\r\nreturn cljs.core._compare(x,y);\r\n} else {\r\nif(((((typeof x \x3d\x3d\x3d \x27string\x27) || (((cljs.core.array_QMARK_(x)) || (((x \x3d\x3d\x3d true) || (x \x3d\x3d\x3d false))))))) \x26\x26 ((cljs.core.type(x) \x3d\x3d\x3d cljs.core.type(y))))){\r\nreturn cljs.core.goog$module$goog$array.defaultCompare(x,y);\r\n} else {\r\nthrow (new Error([\x22Cannot compare \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x),\x22 to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(\x27\x27)));\r\n}\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Compare indexed collection.\r\n */\r\ncljs.core.compare_indexed \x3d (function cljs$core$compare_indexed(var_args){\r\nvar G__15192 \x3d arguments.length;\r\nswitch (G__15192) {\r\ncase 2:\r\nreturn cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 \x3d (function (xs,ys){\r\nvar xl \x3d cljs.core.count(xs);\r\nvar yl \x3d cljs.core.count(ys);\r\nif((xl \x3c yl)){\r\nreturn (-1);\r\n} else {\r\nif((xl \x3e yl)){\r\nreturn (1);\r\n} else {\r\nif((xl \x3d\x3d\x3d (0))){\r\nreturn (0);\r\n} else {\r\nreturn cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));\r\n\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 \x3d (function (xs,ys,len,n){\r\nwhile(true){\r\nvar d \x3d cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));\r\nif((((d \x3d\x3d\x3d (0))) \x26\x26 (((n + (1)) \x3c len)))){\r\nvar G__17123 \x3d xs;\r\nvar G__17124 \x3d ys;\r\nvar G__17125 \x3d len;\r\nvar G__17126 \x3d (n + (1));\r\nxs \x3d G__17123;\r\nys \x3d G__17124;\r\nlen \x3d G__17125;\r\nn \x3d G__17126;\r\ncontinue;\r\n} else {\r\nreturn d;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.compare_indexed.cljs$lang$maxFixedArity \x3d 4);\r\n\r\n/**\r\n * Given a fn that might be boolean valued or a comparator,\r\n * return a fn that is a comparator.\r\n */\r\ncljs.core.fn__GT_comparator \x3d (function cljs$core$fn__GT_comparator(f){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){\r\nreturn cljs.core.compare;\r\n} else {\r\nreturn (function (x,y){\r\nvar r \x3d (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x,y) : f.call(null,x,y));\r\nif(typeof r \x3d\x3d\x3d \x27number\x27){\r\nreturn r;\r\n} else {\r\nif(cljs.core.truth_(r)){\r\nreturn (-1);\r\n} else {\r\nif(cljs.core.truth_((f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y,x) : f.call(null,y,x)))){\r\nreturn (1);\r\n} else {\r\nreturn (0);\r\n}\r\n}\r\n}\r\n});\r\n}\r\n});\r\n/**\r\n * Returns a sorted sequence of the items in coll. Comp can be\r\n * boolean-valued comparison function, or a -/0/+ valued comparator.\r\n * Comp defaults to compare.\r\n */\r\ncljs.core.sort \x3d (function cljs$core$sort(var_args){\r\nvar G__15194 \x3d arguments.length;\r\nswitch (G__15194) {\r\ncase 1:\r\nreturn cljs.core.sort.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.sort.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.sort.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\r\nreturn cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);\r\n}));\r\n\r\n(cljs.core.sort.cljs$core$IFn$_invoke$arity$2 \x3d (function (comp,coll){\r\nif(cljs.core.seq(coll)){\r\nvar a \x3d (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null,coll));\r\ncljs.core.goog$module$goog$array.stableSort(a,cljs.core.fn__GT_comparator(comp));\r\n\r\nreturn cljs.core.with_meta(cljs.core.seq(a),cljs.core.meta(coll));\r\n} else {\r\nreturn cljs.core.List.EMPTY;\r\n}\r\n}));\r\n\r\n(cljs.core.sort.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Returns a sorted sequence of the items in coll, where the sort\r\n * order is determined by comparing (keyfn item).  Comp can be\r\n * boolean-valued comparison function, or a -/0/+ valued comparator.\r\n * Comp defaults to compare.\r\n */\r\ncljs.core.sort_by \x3d (function cljs$core$sort_by(var_args){\r\nvar G__15196 \x3d arguments.length;\r\nswitch (G__15196) {\r\ncase 2:\r\nreturn cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 \x3d (function (keyfn,coll){\r\nreturn cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);\r\n}));\r\n\r\n(cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 \x3d (function (keyfn,comp,coll){\r\nreturn cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){\r\nvar G__15198 \x3d (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null,x));\r\nvar G__15199 \x3d (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null,y));\r\nvar fexpr__15197 \x3d cljs.core.fn__GT_comparator(comp);\r\nreturn (fexpr__15197.cljs$core$IFn$_invoke$arity$2 ? fexpr__15197.cljs$core$IFn$_invoke$arity$2(G__15198,G__15199) : fexpr__15197.call(null,G__15198,G__15199));\r\n}),coll);\r\n}));\r\n\r\n(cljs.core.sort_by.cljs$lang$maxFixedArity \x3d 3);\r\n\r\ncljs.core.seq_reduce \x3d (function cljs$core$seq_reduce(var_args){\r\nvar G__15201 \x3d arguments.length;\r\nswitch (G__15201) {\r\ncase 2:\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,coll){\r\nvar temp__5751__auto__ \x3d cljs.core.seq(coll);\r\nif(temp__5751__auto__){\r\nvar s \x3d temp__5751__auto__;\r\nvar G__15202 \x3d f;\r\nvar G__15203 \x3d cljs.core.first(s);\r\nvar G__15204 \x3d cljs.core.next(s);\r\nreturn (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__15202,G__15203,G__15204) : cljs.core.reduce.call(null,G__15202,G__15203,G__15204));\r\n} else {\r\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\n}\r\n}));\r\n\r\n(cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 \x3d (function (f,val,coll){\r\nvar val__$1 \x3d val;\r\nvar coll__$1 \x3d cljs.core.seq(coll);\r\nwhile(true){\r\nif(coll__$1){\r\nvar nval \x3d (function (){var G__15205 \x3d val__$1;\r\nvar G__15206 \x3d cljs.core.first(coll__$1);\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15205,G__15206) : f.call(null,G__15205,G__15206));\r\n})();\r\nif(cljs.core.reduced_QMARK_(nval)){\r\nreturn cljs.core.deref(nval);\r\n} else {\r\nvar G__17131 \x3d nval;\r\nvar G__17132 \x3d cljs.core.next(coll__$1);\r\nval__$1 \x3d G__17131;\r\ncoll__$1 \x3d G__17132;\r\ncontinue;\r\n}\r\n} else {\r\nreturn val__$1;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.seq_reduce.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n/**\r\n * Return a random permutation of coll\r\n */\r\ncljs.core.shuffle \x3d (function cljs$core$shuffle(coll){\r\nvar a \x3d (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null,coll));\r\ncljs.core.goog$module$goog$array.shuffle(a);\r\n\r\nreturn (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null,a));\r\n});\r\ncljs.core.iter_reduce \x3d (function cljs$core$iter_reduce(var_args){\r\nvar G__15208 \x3d arguments.length;\r\nswitch (G__15208) {\r\ncase 2:\r\nreturn cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,f){\r\nvar iter \x3d cljs.core._iterator(coll);\r\nif(cljs.core.truth_(iter.hasNext())){\r\nvar init \x3d iter.next();\r\nvar acc \x3d init;\r\nwhile(true){\r\nif(iter.hasNext()){\r\nvar nacc \x3d (function (){var G__15209 \x3d acc;\r\nvar G__15210 \x3d iter.next();\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15209,G__15210) : f.call(null,G__15209,G__15210));\r\n})();\r\nif(cljs.core.reduced_QMARK_(nacc)){\r\nreturn cljs.core.deref(nacc);\r\n} else {\r\nvar G__17137 \x3d nacc;\r\nacc \x3d G__17137;\r\ncontinue;\r\n}\r\n} else {\r\nreturn acc;\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\n}\r\n}));\r\n\r\n(cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3 \x3d (function (coll,f,init){\r\nvar iter \x3d cljs.core._iterator(coll);\r\nvar acc \x3d init;\r\nwhile(true){\r\nif(iter.hasNext()){\r\nvar nacc \x3d (function (){var G__15211 \x3d acc;\r\nvar G__15212 \x3d iter.next();\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15211,G__15212) : f.call(null,G__15211,G__15212));\r\n})();\r\nif(cljs.core.reduced_QMARK_(nacc)){\r\nreturn cljs.core.deref(nacc);\r\n} else {\r\nvar G__17138 \x3d nacc;\r\nacc \x3d G__17138;\r\ncontinue;\r\n}\r\n} else {\r\nreturn acc;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.iter_reduce.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n/**\r\n * f should be a function of 2 arguments. If val is not supplied,\r\n *   returns the result of applying f to the first 2 items in coll, then\r\n *   applying f to that result and the 3rd item, etc. If coll contains no\r\n *   items, f must accept no arguments as well, and reduce returns the\r\n *   result of calling f with no arguments.  If coll has only 1 item, it\r\n *   is returned and f is not called.  If val is supplied, returns the\r\n *   result of applying f to val and the first item in coll, then\r\n *   applying f to that result and the 2nd item, etc. If coll contains no\r\n *   items, returns val and f is not called.\r\n */\r\ncljs.core.reduce \x3d (function cljs$core$reduce(var_args){\r\nvar G__15214 \x3d arguments.length;\r\nswitch (G__15214) {\r\ncase 2:\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,coll){\r\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (524288))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$IReduce$))))?true:false):false)){\r\nreturn coll.cljs$core$IReduce$_reduce$arity$2(null,f);\r\n} else {\r\nif(cljs.core.array_QMARK_(coll)){\r\nreturn cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);\r\n} else {\r\nif(typeof coll \x3d\x3d\x3d \x27string\x27){\r\nreturn cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);\r\n} else {\r\nif(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){\r\nreturn cljs.core._reduce(coll,f);\r\n} else {\r\nif(cljs.core.iterable_QMARK_(coll)){\r\nreturn cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);\r\n} else {\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 \x3d (function (f,val,coll){\r\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (524288))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$IReduce$))))?true:false):false)){\r\nreturn coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);\r\n} else {\r\nif(cljs.core.array_QMARK_(coll)){\r\nreturn cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);\r\n} else {\r\nif(typeof coll \x3d\x3d\x3d \x27string\x27){\r\nreturn cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);\r\n} else {\r\nif(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){\r\nreturn cljs.core._reduce(coll,f,val);\r\n} else {\r\nif(cljs.core.iterable_QMARK_(coll)){\r\nreturn cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);\r\n} else {\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.reduce.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n/**\r\n * Reduces an associative collection. f should be a function of 3\r\n *   arguments. Returns the result of applying f to init, the first key\r\n *   and the first value in coll, then applying f to that result and the\r\n *   2nd key and value, etc. If coll contains no entries, returns init\r\n *   and f is not called. Note that reduce-kv is supported on vectors,\r\n *   where the keys will be the ordinals.\r\n */\r\ncljs.core.reduce_kv \x3d (function cljs$core$reduce_kv(f,init,coll){\r\nif((!((coll \x3d\x3d null)))){\r\nreturn cljs.core._kv_reduce(coll,f,init);\r\n} else {\r\nreturn init;\r\n}\r\n});\r\n/**\r\n * Returns its argument.\r\n */\r\ncljs.core.identity \x3d (function cljs$core$identity(x){\r\nreturn x;\r\n});\r\n/**\r\n * Takes a reducing function f of 2 args and returns a fn suitable for\r\n *   transduce by adding an arity-1 signature that calls cf (default -\r\n *   identity) on the result argument.\r\n */\r\ncljs.core.completing \x3d (function cljs$core$completing(var_args){\r\nvar G__15218 \x3d arguments.length;\r\nswitch (G__15218) {\r\ncase 1:\r\nreturn cljs.core.completing.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.completing.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.completing.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\r\nreturn cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);\r\n}));\r\n\r\n(cljs.core.completing.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,cf){\r\nreturn (function() {\r\nvar G__17141 \x3d null;\r\nvar G__17141__0 \x3d (function (){\r\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\n});\r\nvar G__17141__1 \x3d (function (x){\r\nreturn (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null,x));\r\n});\r\nvar G__17141__2 \x3d (function (x,y){\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x,y) : f.call(null,x,y));\r\n});\r\nG__17141 \x3d function(x,y){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__17141__0.call(this);\r\ncase 1:\r\nreturn G__17141__1.call(this,x);\r\ncase 2:\r\nreturn G__17141__2.call(this,x,y);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__17141.cljs$core$IFn$_invoke$arity$0 \x3d G__17141__0;\r\nG__17141.cljs$core$IFn$_invoke$arity$1 \x3d G__17141__1;\r\nG__17141.cljs$core$IFn$_invoke$arity$2 \x3d G__17141__2;\r\nreturn G__17141;\r\n})()\r\n}));\r\n\r\n(cljs.core.completing.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * reduce with a transformation of f (xf). If init is not\r\n *   supplied, (f) will be called to produce it. f should be a reducing\r\n *   step function that accepts both 1 and 2 arguments, if it accepts\r\n *   only 2 you can add the arity-1 with \x27completing\x27. Returns the result\r\n *   of applying (the transformed) xf to init and the first item in coll,\r\n *   then applying xf to that result and the 2nd item, etc. If coll\r\n *   contains no items, returns init and f is not called. Note that\r\n *   certain transforms may inject or skip items.\r\n */\r\ncljs.core.transduce \x3d (function cljs$core$transduce(var_args){\r\nvar G__15220 \x3d arguments.length;\r\nswitch (G__15220) {\r\ncase 3:\r\nreturn cljs.core.transduce.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn cljs.core.transduce.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 \x3d (function (xform,f,coll){\r\nreturn cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)),coll);\r\n}));\r\n\r\n(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 \x3d (function (xform,f,init,coll){\r\nvar f__$1 \x3d (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null,f));\r\nvar ret \x3d cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);\r\nreturn (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null,ret));\r\n}));\r\n\r\n(cljs.core.transduce.cljs$lang$maxFixedArity \x3d 4);\r\n\r\n/**\r\n * Returns the sum of nums. (+) returns 0.\r\n */\r\ncljs.core._PLUS_ \x3d (function cljs$core$_PLUS_(var_args){\r\nvar G__15225 \x3d arguments.length;\r\nswitch (G__15225) {\r\ncase 0:\r\nreturn cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17156 \x3d arguments.length;\r\nvar i__4865__auto___17157 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17157 \x3c len__4864__auto___17156)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17157]));\r\n\r\nvar G__17158 \x3d (i__4865__auto___17157 + (1));\r\ni__4865__auto___17157 \x3d G__17158;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nreturn (0);\r\n}));\r\n\r\n(cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn x;\r\n}));\r\n\r\n(cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn (x + y);\r\n}));\r\n\r\n(cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_,(x + y),more);\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core._PLUS_.cljs$lang$applyTo \x3d (function (seq15222){\r\nvar G__15223 \x3d cljs.core.first(seq15222);\r\nvar seq15222__$1 \x3d cljs.core.next(seq15222);\r\nvar G__15224 \x3d cljs.core.first(seq15222__$1);\r\nvar seq15222__$2 \x3d cljs.core.next(seq15222__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15223,G__15224,seq15222__$2);\r\n}));\r\n\r\n(cljs.core._PLUS_.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * If no ys are supplied, returns the negation of x, else subtracts\r\n *   the ys from x and returns the result.\r\n */\r\ncljs.core._ \x3d (function cljs$core$_(var_args){\r\nvar G__15230 \x3d arguments.length;\r\nswitch (G__15230) {\r\ncase 1:\r\nreturn cljs.core._.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core._.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17160 \x3d arguments.length;\r\nvar i__4865__auto___17161 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17161 \x3c len__4864__auto___17160)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17161]));\r\n\r\nvar G__17162 \x3d (i__4865__auto___17161 + (1));\r\ni__4865__auto___17161 \x3d G__17162;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core._.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core._.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn (- x);\r\n}));\r\n\r\n(cljs.core._.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn (x - y);\r\n}));\r\n\r\n(cljs.core._.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._,(x - y),more);\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core._.cljs$lang$applyTo \x3d (function (seq15227){\r\nvar G__15228 \x3d cljs.core.first(seq15227);\r\nvar seq15227__$1 \x3d cljs.core.next(seq15227);\r\nvar G__15229 \x3d cljs.core.first(seq15227__$1);\r\nvar seq15227__$2 \x3d cljs.core.next(seq15227__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15228,G__15229,seq15227__$2);\r\n}));\r\n\r\n(cljs.core._.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Returns the product of nums. (*) returns 1.\r\n */\r\ncljs.core._STAR_ \x3d (function cljs$core$_STAR_(var_args){\r\nvar G__15235 \x3d arguments.length;\r\nswitch (G__15235) {\r\ncase 0:\r\nreturn cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17164 \x3d arguments.length;\r\nvar i__4865__auto___17165 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17165 \x3c len__4864__auto___17164)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17165]));\r\n\r\nvar G__17166 \x3d (i__4865__auto___17165 + (1));\r\ni__4865__auto___17165 \x3d G__17166;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nreturn (1);\r\n}));\r\n\r\n(cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn x;\r\n}));\r\n\r\n(cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn (x * y);\r\n}));\r\n\r\n(cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_,(x * y),more);\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core._STAR_.cljs$lang$applyTo \x3d (function (seq15232){\r\nvar G__15233 \x3d cljs.core.first(seq15232);\r\nvar seq15232__$1 \x3d cljs.core.next(seq15232);\r\nvar G__15234 \x3d cljs.core.first(seq15232__$1);\r\nvar seq15232__$2 \x3d cljs.core.next(seq15232__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15233,G__15234,seq15232__$2);\r\n}));\r\n\r\n(cljs.core._STAR_.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * If no denominators are supplied, returns 1/numerator,\r\n *   else returns numerator divided by all of the denominators.\r\n */\r\ncljs.core._SLASH_ \x3d (function cljs$core$_SLASH_(var_args){\r\nvar G__15240 \x3d arguments.length;\r\nswitch (G__15240) {\r\ncase 1:\r\nreturn cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17168 \x3d arguments.length;\r\nvar i__4865__auto___17169 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17169 \x3c len__4864__auto___17168)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17169]));\r\n\r\nvar G__17170 \x3d (i__4865__auto___17169 + (1));\r\ni__4865__auto___17169 \x3d G__17170;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn ((1) / x);\r\n}));\r\n\r\n(cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn (x / y);\r\n}));\r\n\r\n(cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_,(x / y),more);\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core._SLASH_.cljs$lang$applyTo \x3d (function (seq15237){\r\nvar G__15238 \x3d cljs.core.first(seq15237);\r\nvar seq15237__$1 \x3d cljs.core.next(seq15237);\r\nvar G__15239 \x3d cljs.core.first(seq15237__$1);\r\nvar seq15237__$2 \x3d cljs.core.next(seq15237__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15238,G__15239,seq15237__$2);\r\n}));\r\n\r\n(cljs.core._SLASH_.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Returns non-nil if nums are in monotonically increasing order,\r\n *   otherwise false.\r\n */\r\ncljs.core._LT_ \x3d (function cljs$core$_LT_(var_args){\r\nvar G__15245 \x3d arguments.length;\r\nswitch (G__15245) {\r\ncase 1:\r\nreturn cljs.core._LT_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core._LT_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17174 \x3d arguments.length;\r\nvar i__4865__auto___17175 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17175 \x3c len__4864__auto___17174)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17175]));\r\n\r\nvar G__17176 \x3d (i__4865__auto___17175 + (1));\r\ni__4865__auto___17175 \x3d G__17176;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn true;\r\n}));\r\n\r\n(cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn (x \x3c y);\r\n}));\r\n\r\n(cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nwhile(true){\r\nif((x \x3c y)){\r\nif(cljs.core.next(more)){\r\nvar G__17177 \x3d y;\r\nvar G__17178 \x3d cljs.core.first(more);\r\nvar G__17179 \x3d cljs.core.next(more);\r\nx \x3d G__17177;\r\ny \x3d G__17178;\r\nmore \x3d G__17179;\r\ncontinue;\r\n} else {\r\nreturn (y \x3c cljs.core.first(more));\r\n}\r\n} else {\r\nreturn false;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core._LT_.cljs$lang$applyTo \x3d (function (seq15242){\r\nvar G__15243 \x3d cljs.core.first(seq15242);\r\nvar seq15242__$1 \x3d cljs.core.next(seq15242);\r\nvar G__15244 \x3d cljs.core.first(seq15242__$1);\r\nvar seq15242__$2 \x3d cljs.core.next(seq15242__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15243,G__15244,seq15242__$2);\r\n}));\r\n\r\n(cljs.core._LT_.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Returns non-nil if nums are in monotonically non-decreasing order,\r\n *   otherwise false.\r\n */\r\ncljs.core._LT__EQ_ \x3d (function cljs$core$_LT__EQ_(var_args){\r\nvar G__15250 \x3d arguments.length;\r\nswitch (G__15250) {\r\ncase 1:\r\nreturn cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17184 \x3d arguments.length;\r\nvar i__4865__auto___17186 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17186 \x3c len__4864__auto___17184)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17186]));\r\n\r\nvar G__17187 \x3d (i__4865__auto___17186 + (1));\r\ni__4865__auto___17186 \x3d G__17187;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn true;\r\n}));\r\n\r\n(cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn (x \x3c\x3d y);\r\n}));\r\n\r\n(cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nwhile(true){\r\nif((x \x3c\x3d y)){\r\nif(cljs.core.next(more)){\r\nvar G__17188 \x3d y;\r\nvar G__17189 \x3d cljs.core.first(more);\r\nvar G__17190 \x3d cljs.core.next(more);\r\nx \x3d G__17188;\r\ny \x3d G__17189;\r\nmore \x3d G__17190;\r\ncontinue;\r\n} else {\r\nreturn (y \x3c\x3d cljs.core.first(more));\r\n}\r\n} else {\r\nreturn false;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core._LT__EQ_.cljs$lang$applyTo \x3d (function (seq15247){\r\nvar G__15248 \x3d cljs.core.first(seq15247);\r\nvar seq15247__$1 \x3d cljs.core.next(seq15247);\r\nvar G__15249 \x3d cljs.core.first(seq15247__$1);\r\nvar seq15247__$2 \x3d cljs.core.next(seq15247__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15248,G__15249,seq15247__$2);\r\n}));\r\n\r\n(cljs.core._LT__EQ_.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Returns non-nil if nums are in monotonically decreasing order,\r\n *   otherwise false.\r\n */\r\ncljs.core._GT_ \x3d (function cljs$core$_GT_(var_args){\r\nvar G__15255 \x3d arguments.length;\r\nswitch (G__15255) {\r\ncase 1:\r\nreturn cljs.core._GT_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core._GT_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17196 \x3d arguments.length;\r\nvar i__4865__auto___17197 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17197 \x3c len__4864__auto___17196)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17197]));\r\n\r\nvar G__17198 \x3d (i__4865__auto___17197 + (1));\r\ni__4865__auto___17197 \x3d G__17198;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn true;\r\n}));\r\n\r\n(cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn (x \x3e y);\r\n}));\r\n\r\n(cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nwhile(true){\r\nif((x \x3e y)){\r\nif(cljs.core.next(more)){\r\nvar G__17200 \x3d y;\r\nvar G__17201 \x3d cljs.core.first(more);\r\nvar G__17202 \x3d cljs.core.next(more);\r\nx \x3d G__17200;\r\ny \x3d G__17201;\r\nmore \x3d G__17202;\r\ncontinue;\r\n} else {\r\nreturn (y \x3e cljs.core.first(more));\r\n}\r\n} else {\r\nreturn false;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core._GT_.cljs$lang$applyTo \x3d (function (seq15252){\r\nvar G__15253 \x3d cljs.core.first(seq15252);\r\nvar seq15252__$1 \x3d cljs.core.next(seq15252);\r\nvar G__15254 \x3d cljs.core.first(seq15252__$1);\r\nvar seq15252__$2 \x3d cljs.core.next(seq15252__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15253,G__15254,seq15252__$2);\r\n}));\r\n\r\n(cljs.core._GT_.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Returns non-nil if nums are in monotonically non-increasing order,\r\n *   otherwise false.\r\n */\r\ncljs.core._GT__EQ_ \x3d (function cljs$core$_GT__EQ_(var_args){\r\nvar G__15260 \x3d arguments.length;\r\nswitch (G__15260) {\r\ncase 1:\r\nreturn cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17204 \x3d arguments.length;\r\nvar i__4865__auto___17205 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17205 \x3c len__4864__auto___17204)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17205]));\r\n\r\nvar G__17206 \x3d (i__4865__auto___17205 + (1));\r\ni__4865__auto___17205 \x3d G__17206;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn true;\r\n}));\r\n\r\n(cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn (x \x3e\x3d y);\r\n}));\r\n\r\n(cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nwhile(true){\r\nif((x \x3e\x3d y)){\r\nif(cljs.core.next(more)){\r\nvar G__17207 \x3d y;\r\nvar G__17208 \x3d cljs.core.first(more);\r\nvar G__17209 \x3d cljs.core.next(more);\r\nx \x3d G__17207;\r\ny \x3d G__17208;\r\nmore \x3d G__17209;\r\ncontinue;\r\n} else {\r\nreturn (y \x3e\x3d cljs.core.first(more));\r\n}\r\n} else {\r\nreturn false;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core._GT__EQ_.cljs$lang$applyTo \x3d (function (seq15257){\r\nvar G__15258 \x3d cljs.core.first(seq15257);\r\nvar seq15257__$1 \x3d cljs.core.next(seq15257);\r\nvar G__15259 \x3d cljs.core.first(seq15257__$1);\r\nvar seq15257__$2 \x3d cljs.core.next(seq15257__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15258,G__15259,seq15257__$2);\r\n}));\r\n\r\n(cljs.core._GT__EQ_.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Returns a number one less than num.\r\n */\r\ncljs.core.dec \x3d (function cljs$core$dec(x){\r\nreturn (x - (1));\r\n});\r\n/**\r\n * Returns the greatest of the nums.\r\n */\r\ncljs.core.max \x3d (function cljs$core$max(var_args){\r\nvar G__15265 \x3d arguments.length;\r\nswitch (G__15265) {\r\ncase 1:\r\nreturn cljs.core.max.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.max.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17213 \x3d arguments.length;\r\nvar i__4865__auto___17214 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17214 \x3c len__4864__auto___17213)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17214]));\r\n\r\nvar G__17215 \x3d (i__4865__auto___17214 + (1));\r\ni__4865__auto___17214 \x3d G__17215;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.max.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.max.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn x;\r\n}));\r\n\r\n(cljs.core.max.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nvar x__4336__auto__ \x3d x;\r\nvar y__4337__auto__ \x3d y;\r\nreturn ((x__4336__auto__ \x3e y__4337__auto__) ? x__4336__auto__ : y__4337__auto__);\r\n}));\r\n\r\n(cljs.core.max.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max,(function (){var x__4336__auto__ \x3d x;\r\nvar y__4337__auto__ \x3d y;\r\nreturn ((x__4336__auto__ \x3e y__4337__auto__) ? x__4336__auto__ : y__4337__auto__);\r\n})(),more);\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.max.cljs$lang$applyTo \x3d (function (seq15262){\r\nvar G__15263 \x3d cljs.core.first(seq15262);\r\nvar seq15262__$1 \x3d cljs.core.next(seq15262);\r\nvar G__15264 \x3d cljs.core.first(seq15262__$1);\r\nvar seq15262__$2 \x3d cljs.core.next(seq15262__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15263,G__15264,seq15262__$2);\r\n}));\r\n\r\n(cljs.core.max.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Returns the least of the nums.\r\n */\r\ncljs.core.min \x3d (function cljs$core$min(var_args){\r\nvar G__15270 \x3d arguments.length;\r\nswitch (G__15270) {\r\ncase 1:\r\nreturn cljs.core.min.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.min.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17217 \x3d arguments.length;\r\nvar i__4865__auto___17218 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17218 \x3c len__4864__auto___17217)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17218]));\r\n\r\nvar G__17219 \x3d (i__4865__auto___17218 + (1));\r\ni__4865__auto___17218 \x3d G__17219;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.min.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.min.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn x;\r\n}));\r\n\r\n(cljs.core.min.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nvar x__4339__auto__ \x3d x;\r\nvar y__4340__auto__ \x3d y;\r\nreturn ((x__4339__auto__ \x3c y__4340__auto__) ? x__4339__auto__ : y__4340__auto__);\r\n}));\r\n\r\n(cljs.core.min.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min,(function (){var x__4339__auto__ \x3d x;\r\nvar y__4340__auto__ \x3d y;\r\nreturn ((x__4339__auto__ \x3c y__4340__auto__) ? x__4339__auto__ : y__4340__auto__);\r\n})(),more);\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.min.cljs$lang$applyTo \x3d (function (seq15267){\r\nvar G__15268 \x3d cljs.core.first(seq15267);\r\nvar seq15267__$1 \x3d cljs.core.next(seq15267);\r\nvar G__15269 \x3d cljs.core.first(seq15267__$1);\r\nvar seq15267__$2 \x3d cljs.core.next(seq15267__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15268,G__15269,seq15267__$2);\r\n}));\r\n\r\n(cljs.core.min.cljs$lang$maxFixedArity \x3d (2));\r\n\r\ncljs.core.byte$ \x3d (function cljs$core$byte(x){\r\nreturn x;\r\n});\r\n/**\r\n * Coerce to char\r\n */\r\ncljs.core.char$ \x3d (function cljs$core$char(x){\r\nif(typeof x \x3d\x3d\x3d \x27number\x27){\r\nreturn String.fromCharCode(x);\r\n} else {\r\nif(((typeof x \x3d\x3d\x3d \x27string\x27) \x26\x26 ((x.length \x3d\x3d\x3d (1))))){\r\nreturn x;\r\n} else {\r\nthrow (new Error(\x22Argument to char must be a character or number\x22));\r\n\r\n}\r\n}\r\n});\r\ncljs.core.short$ \x3d (function cljs$core$short(x){\r\nreturn x;\r\n});\r\ncljs.core.float$ \x3d (function cljs$core$float(x){\r\nreturn x;\r\n});\r\ncljs.core.double$ \x3d (function cljs$core$double(x){\r\nreturn x;\r\n});\r\ncljs.core.unchecked_byte \x3d (function cljs$core$unchecked_byte(x){\r\nreturn x;\r\n});\r\ncljs.core.unchecked_char \x3d (function cljs$core$unchecked_char(x){\r\nreturn x;\r\n});\r\ncljs.core.unchecked_short \x3d (function cljs$core$unchecked_short(x){\r\nreturn x;\r\n});\r\ncljs.core.unchecked_float \x3d (function cljs$core$unchecked_float(x){\r\nreturn x;\r\n});\r\ncljs.core.unchecked_double \x3d (function cljs$core$unchecked_double(x){\r\nreturn x;\r\n});\r\n/**\r\n * Returns the sum of nums. (+) returns 0.\r\n */\r\ncljs.core.unchecked_add \x3d (function cljs$core$unchecked_add(var_args){\r\nvar G__15275 \x3d arguments.length;\r\nswitch (G__15275) {\r\ncase 0:\r\nreturn cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17221 \x3d arguments.length;\r\nvar i__4865__auto___17222 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17222 \x3c len__4864__auto___17221)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17222]));\r\n\r\nvar G__17223 \x3d (i__4865__auto___17222 + (1));\r\ni__4865__auto___17222 \x3d G__17223;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nreturn (0);\r\n}));\r\n\r\n(cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn x;\r\n}));\r\n\r\n(cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn (x + y);\r\n}));\r\n\r\n(cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add,(x + y),more);\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.unchecked_add.cljs$lang$applyTo \x3d (function (seq15272){\r\nvar G__15273 \x3d cljs.core.first(seq15272);\r\nvar seq15272__$1 \x3d cljs.core.next(seq15272);\r\nvar G__15274 \x3d cljs.core.first(seq15272__$1);\r\nvar seq15272__$2 \x3d cljs.core.next(seq15272__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15273,G__15274,seq15272__$2);\r\n}));\r\n\r\n(cljs.core.unchecked_add.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Returns the sum of nums. (+) returns 0.\r\n */\r\ncljs.core.unchecked_add_int \x3d (function cljs$core$unchecked_add_int(var_args){\r\nvar G__15280 \x3d arguments.length;\r\nswitch (G__15280) {\r\ncase 0:\r\nreturn cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17225 \x3d arguments.length;\r\nvar i__4865__auto___17226 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17226 \x3c len__4864__auto___17225)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17226]));\r\n\r\nvar G__17227 \x3d (i__4865__auto___17226 + (1));\r\ni__4865__auto___17226 \x3d G__17227;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nreturn (0);\r\n}));\r\n\r\n(cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn x;\r\n}));\r\n\r\n(cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn (x + y);\r\n}));\r\n\r\n(cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int,(x + y),more);\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.unchecked_add_int.cljs$lang$applyTo \x3d (function (seq15277){\r\nvar G__15278 \x3d cljs.core.first(seq15277);\r\nvar seq15277__$1 \x3d cljs.core.next(seq15277);\r\nvar G__15279 \x3d cljs.core.first(seq15277__$1);\r\nvar seq15277__$2 \x3d cljs.core.next(seq15277__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15278,G__15279,seq15277__$2);\r\n}));\r\n\r\n(cljs.core.unchecked_add_int.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Returns a number one less than x, an int.\r\n */\r\ncljs.core.unchecked_dec \x3d (function cljs$core$unchecked_dec(x){\r\nreturn (x - (1));\r\n});\r\n/**\r\n * Returns a number one less than x, an int.\r\n */\r\ncljs.core.unchecked_dec_int \x3d (function cljs$core$unchecked_dec_int(x){\r\nreturn (x - (1));\r\n});\r\n/**\r\n * If no denominators are supplied, returns 1/numerator,\r\n *   else returns numerator divided by all of the denominators.\r\n */\r\ncljs.core.unchecked_divide_int \x3d (function cljs$core$unchecked_divide_int(var_args){\r\nvar G__15285 \x3d arguments.length;\r\nswitch (G__15285) {\r\ncase 1:\r\nreturn cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17229 \x3d arguments.length;\r\nvar i__4865__auto___17230 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17230 \x3c len__4864__auto___17229)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17230]));\r\n\r\nvar G__17231 \x3d (i__4865__auto___17230 + (1));\r\ni__4865__auto___17230 \x3d G__17231;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn ((1) / x);\r\n}));\r\n\r\n(cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn (x / y);\r\n}));\r\n\r\n(cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int,(x / y),more);\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.unchecked_divide_int.cljs$lang$applyTo \x3d (function (seq15282){\r\nvar G__15283 \x3d cljs.core.first(seq15282);\r\nvar seq15282__$1 \x3d cljs.core.next(seq15282);\r\nvar G__15284 \x3d cljs.core.first(seq15282__$1);\r\nvar seq15282__$2 \x3d cljs.core.next(seq15282__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15283,G__15284,seq15282__$2);\r\n}));\r\n\r\n(cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity \x3d (2));\r\n\r\ncljs.core.unchecked_inc \x3d (function cljs$core$unchecked_inc(x){\r\nreturn (x + (1));\r\n});\r\ncljs.core.unchecked_inc_int \x3d (function cljs$core$unchecked_inc_int(x){\r\nreturn (x + (1));\r\n});\r\n/**\r\n * Returns the product of nums. (*) returns 1.\r\n */\r\ncljs.core.unchecked_multiply \x3d (function cljs$core$unchecked_multiply(var_args){\r\nvar G__15290 \x3d arguments.length;\r\nswitch (G__15290) {\r\ncase 0:\r\nreturn cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17237 \x3d arguments.length;\r\nvar i__4865__auto___17238 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17238 \x3c len__4864__auto___17237)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17238]));\r\n\r\nvar G__17239 \x3d (i__4865__auto___17238 + (1));\r\ni__4865__auto___17238 \x3d G__17239;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nreturn (1);\r\n}));\r\n\r\n(cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn x;\r\n}));\r\n\r\n(cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn (x * y);\r\n}));\r\n\r\n(cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply,(x * y),more);\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.unchecked_multiply.cljs$lang$applyTo \x3d (function (seq15287){\r\nvar G__15288 \x3d cljs.core.first(seq15287);\r\nvar seq15287__$1 \x3d cljs.core.next(seq15287);\r\nvar G__15289 \x3d cljs.core.first(seq15287__$1);\r\nvar seq15287__$2 \x3d cljs.core.next(seq15287__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15288,G__15289,seq15287__$2);\r\n}));\r\n\r\n(cljs.core.unchecked_multiply.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Returns the product of nums. (*) returns 1.\r\n */\r\ncljs.core.unchecked_multiply_int \x3d (function cljs$core$unchecked_multiply_int(var_args){\r\nvar G__15295 \x3d arguments.length;\r\nswitch (G__15295) {\r\ncase 0:\r\nreturn cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17242 \x3d arguments.length;\r\nvar i__4865__auto___17243 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17243 \x3c len__4864__auto___17242)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17243]));\r\n\r\nvar G__17244 \x3d (i__4865__auto___17243 + (1));\r\ni__4865__auto___17243 \x3d G__17244;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nreturn (1);\r\n}));\r\n\r\n(cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn x;\r\n}));\r\n\r\n(cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn (x * y);\r\n}));\r\n\r\n(cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int,(x * y),more);\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.unchecked_multiply_int.cljs$lang$applyTo \x3d (function (seq15292){\r\nvar G__15293 \x3d cljs.core.first(seq15292);\r\nvar seq15292__$1 \x3d cljs.core.next(seq15292);\r\nvar G__15294 \x3d cljs.core.first(seq15292__$1);\r\nvar seq15292__$2 \x3d cljs.core.next(seq15292__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15293,G__15294,seq15292__$2);\r\n}));\r\n\r\n(cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity \x3d (2));\r\n\r\ncljs.core.unchecked_negate \x3d (function cljs$core$unchecked_negate(x){\r\nreturn (- x);\r\n});\r\ncljs.core.unchecked_negate_int \x3d (function cljs$core$unchecked_negate_int(x){\r\nreturn (- x);\r\n});\r\ncljs.core.unchecked_remainder_int \x3d (function cljs$core$unchecked_remainder_int(x,n){\r\nreturn (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x,n) : cljs.core.mod.call(null,x,n));\r\n});\r\n/**\r\n * If no ys are supplied, returns the negation of x, else subtracts\r\n *   the ys from x and returns the result.\r\n */\r\ncljs.core.unchecked_subtract \x3d (function cljs$core$unchecked_subtract(var_args){\r\nvar G__15300 \x3d arguments.length;\r\nswitch (G__15300) {\r\ncase 1:\r\nreturn cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17254 \x3d arguments.length;\r\nvar i__4865__auto___17255 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17255 \x3c len__4864__auto___17254)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17255]));\r\n\r\nvar G__17256 \x3d (i__4865__auto___17255 + (1));\r\ni__4865__auto___17255 \x3d G__17256;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn (- x);\r\n}));\r\n\r\n(cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn (x - y);\r\n}));\r\n\r\n(cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract,(x - y),more);\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.unchecked_subtract.cljs$lang$applyTo \x3d (function (seq15297){\r\nvar G__15298 \x3d cljs.core.first(seq15297);\r\nvar seq15297__$1 \x3d cljs.core.next(seq15297);\r\nvar G__15299 \x3d cljs.core.first(seq15297__$1);\r\nvar seq15297__$2 \x3d cljs.core.next(seq15297__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15298,G__15299,seq15297__$2);\r\n}));\r\n\r\n(cljs.core.unchecked_subtract.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * If no ys are supplied, returns the negation of x, else subtracts\r\n *   the ys from x and returns the result.\r\n */\r\ncljs.core.unchecked_subtract_int \x3d (function cljs$core$unchecked_subtract_int(var_args){\r\nvar G__15305 \x3d arguments.length;\r\nswitch (G__15305) {\r\ncase 1:\r\nreturn cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17258 \x3d arguments.length;\r\nvar i__4865__auto___17259 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17259 \x3c len__4864__auto___17258)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17259]));\r\n\r\nvar G__17260 \x3d (i__4865__auto___17259 + (1));\r\ni__4865__auto___17259 \x3d G__17260;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn (- x);\r\n}));\r\n\r\n(cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn (x - y);\r\n}));\r\n\r\n(cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int,(x - y),more);\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.unchecked_subtract_int.cljs$lang$applyTo \x3d (function (seq15302){\r\nvar G__15303 \x3d cljs.core.first(seq15302);\r\nvar seq15302__$1 \x3d cljs.core.next(seq15302);\r\nvar G__15304 \x3d cljs.core.first(seq15302__$1);\r\nvar seq15302__$2 \x3d cljs.core.next(seq15302__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15303,G__15304,seq15302__$2);\r\n}));\r\n\r\n(cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity \x3d (2));\r\n\r\ncljs.core.fix \x3d (function cljs$core$fix(q){\r\nif((q \x3e\x3d (0))){\r\nreturn Math.floor(q);\r\n} else {\r\nreturn Math.ceil(q);\r\n}\r\n});\r\n/**\r\n * Coerce to int by stripping decimal places.\r\n */\r\ncljs.core.int$ \x3d (function cljs$core$int(x){\r\nreturn (x | (0));\r\n});\r\n/**\r\n * Coerce to int by stripping decimal places.\r\n */\r\ncljs.core.unchecked_int \x3d (function cljs$core$unchecked_int(x){\r\nreturn cljs.core.fix(x);\r\n});\r\n/**\r\n * Coerce to long by stripping decimal places. Identical to `int\x27.\r\n */\r\ncljs.core.long$ \x3d (function cljs$core$long(x){\r\nreturn cljs.core.fix(x);\r\n});\r\n/**\r\n * Coerce to long by stripping decimal places. Identical to `int\x27.\r\n */\r\ncljs.core.unchecked_long \x3d (function cljs$core$unchecked_long(x){\r\nreturn cljs.core.fix(x);\r\n});\r\ncljs.core.booleans \x3d (function cljs$core$booleans(x){\r\nreturn x;\r\n});\r\ncljs.core.bytes \x3d (function cljs$core$bytes(x){\r\nreturn x;\r\n});\r\ncljs.core.chars \x3d (function cljs$core$chars(x){\r\nreturn x;\r\n});\r\ncljs.core.shorts \x3d (function cljs$core$shorts(x){\r\nreturn x;\r\n});\r\ncljs.core.ints \x3d (function cljs$core$ints(x){\r\nreturn x;\r\n});\r\ncljs.core.floats \x3d (function cljs$core$floats(x){\r\nreturn x;\r\n});\r\ncljs.core.doubles \x3d (function cljs$core$doubles(x){\r\nreturn x;\r\n});\r\ncljs.core.longs \x3d (function cljs$core$longs(x){\r\nreturn x;\r\n});\r\n/**\r\n * Modulus of num and div with original javascript behavior. i.e. bug for negative numbers\r\n */\r\ncljs.core.js_mod \x3d (function cljs$core$js_mod(n,d){\r\nreturn (n % d);\r\n});\r\n/**\r\n * Modulus of num and div. Truncates toward negative infinity.\r\n */\r\ncljs.core.mod \x3d (function cljs$core$mod(n,d){\r\nreturn (((n % d) + d) % d);\r\n});\r\n/**\r\n * quot[ient] of dividing numerator by denominator.\r\n */\r\ncljs.core.quot \x3d (function cljs$core$quot(n,d){\r\nvar rem \x3d (n % d);\r\nreturn cljs.core.fix(((n - rem) / d));\r\n});\r\n/**\r\n * remainder of dividing numerator by denominator.\r\n */\r\ncljs.core.rem \x3d (function cljs$core$rem(n,d){\r\nvar q \x3d cljs.core.quot(n,d);\r\nreturn (n - (d * q));\r\n});\r\n/**\r\n * Bitwise exclusive or\r\n */\r\ncljs.core.bit_xor \x3d (function cljs$core$bit_xor(var_args){\r\nvar G__15310 \x3d arguments.length;\r\nswitch (G__15310) {\r\ncase 2:\r\nreturn cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17268 \x3d arguments.length;\r\nvar i__4865__auto___17269 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17269 \x3c len__4864__auto___17268)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17269]));\r\n\r\nvar G__17270 \x3d (i__4865__auto___17269 + (1));\r\ni__4865__auto___17269 \x3d G__17270;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn (x ^ y);\r\n}));\r\n\r\n(cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor,(x ^ y),more);\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.bit_xor.cljs$lang$applyTo \x3d (function (seq15307){\r\nvar G__15308 \x3d cljs.core.first(seq15307);\r\nvar seq15307__$1 \x3d cljs.core.next(seq15307);\r\nvar G__15309 \x3d cljs.core.first(seq15307__$1);\r\nvar seq15307__$2 \x3d cljs.core.next(seq15307__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15308,G__15309,seq15307__$2);\r\n}));\r\n\r\n(cljs.core.bit_xor.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Bitwise and\r\n */\r\ncljs.core.bit_and \x3d (function cljs$core$bit_and(var_args){\r\nvar G__15315 \x3d arguments.length;\r\nswitch (G__15315) {\r\ncase 2:\r\nreturn cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17272 \x3d arguments.length;\r\nvar i__4865__auto___17273 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17273 \x3c len__4864__auto___17272)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17273]));\r\n\r\nvar G__17274 \x3d (i__4865__auto___17273 + (1));\r\ni__4865__auto___17273 \x3d G__17274;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn (x \x26 y);\r\n}));\r\n\r\n(cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and,(x \x26 y),more);\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.bit_and.cljs$lang$applyTo \x3d (function (seq15312){\r\nvar G__15313 \x3d cljs.core.first(seq15312);\r\nvar seq15312__$1 \x3d cljs.core.next(seq15312);\r\nvar G__15314 \x3d cljs.core.first(seq15312__$1);\r\nvar seq15312__$2 \x3d cljs.core.next(seq15312__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15313,G__15314,seq15312__$2);\r\n}));\r\n\r\n(cljs.core.bit_and.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Bitwise or\r\n */\r\ncljs.core.bit_or \x3d (function cljs$core$bit_or(var_args){\r\nvar G__15320 \x3d arguments.length;\r\nswitch (G__15320) {\r\ncase 2:\r\nreturn cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17276 \x3d arguments.length;\r\nvar i__4865__auto___17277 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17277 \x3c len__4864__auto___17276)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17277]));\r\n\r\nvar G__17278 \x3d (i__4865__auto___17277 + (1));\r\ni__4865__auto___17277 \x3d G__17278;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn (x | y);\r\n}));\r\n\r\n(cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or,(x | y),more);\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.bit_or.cljs$lang$applyTo \x3d (function (seq15317){\r\nvar G__15318 \x3d cljs.core.first(seq15317);\r\nvar seq15317__$1 \x3d cljs.core.next(seq15317);\r\nvar G__15319 \x3d cljs.core.first(seq15317__$1);\r\nvar seq15317__$2 \x3d cljs.core.next(seq15317__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15318,G__15319,seq15317__$2);\r\n}));\r\n\r\n(cljs.core.bit_or.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Bitwise and with complement\r\n */\r\ncljs.core.bit_and_not \x3d (function cljs$core$bit_and_not(var_args){\r\nvar G__15325 \x3d arguments.length;\r\nswitch (G__15325) {\r\ncase 2:\r\nreturn cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17280 \x3d arguments.length;\r\nvar i__4865__auto___17281 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17281 \x3c len__4864__auto___17280)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17281]));\r\n\r\nvar G__17282 \x3d (i__4865__auto___17281 + (1));\r\ni__4865__auto___17281 \x3d G__17282;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn (x \x26 ~y);\r\n}));\r\n\r\n(cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not,(x \x26 ~y),more);\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.bit_and_not.cljs$lang$applyTo \x3d (function (seq15322){\r\nvar G__15323 \x3d cljs.core.first(seq15322);\r\nvar seq15322__$1 \x3d cljs.core.next(seq15322);\r\nvar G__15324 \x3d cljs.core.first(seq15322__$1);\r\nvar seq15322__$2 \x3d cljs.core.next(seq15322__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15323,G__15324,seq15322__$2);\r\n}));\r\n\r\n(cljs.core.bit_and_not.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Clear bit at index n\r\n */\r\ncljs.core.bit_clear \x3d (function cljs$core$bit_clear(x,n){\r\nreturn (x \x26 ~(1 \x3c\x3c n));\r\n});\r\n/**\r\n * Flip bit at index n\r\n */\r\ncljs.core.bit_flip \x3d (function cljs$core$bit_flip(x,n){\r\nreturn (x ^ (1 \x3c\x3c n));\r\n});\r\n/**\r\n * Bitwise complement\r\n */\r\ncljs.core.bit_not \x3d (function cljs$core$bit_not(x){\r\nreturn (~ x);\r\n});\r\n/**\r\n * Set bit at index n\r\n */\r\ncljs.core.bit_set \x3d (function cljs$core$bit_set(x,n){\r\nreturn (x | (1 \x3c\x3c n));\r\n});\r\n/**\r\n * Test bit at index n\r\n */\r\ncljs.core.bit_test \x3d (function cljs$core$bit_test(x,n){\r\nreturn ((x \x26 (1 \x3c\x3c n)) !\x3d 0);\r\n});\r\n/**\r\n * Bitwise shift left\r\n */\r\ncljs.core.bit_shift_left \x3d (function cljs$core$bit_shift_left(x,n){\r\nreturn (x \x3c\x3c n);\r\n});\r\n/**\r\n * Bitwise shift right\r\n */\r\ncljs.core.bit_shift_right \x3d (function cljs$core$bit_shift_right(x,n){\r\nreturn (x \x3e\x3e n);\r\n});\r\n/**\r\n * DEPRECATED: Bitwise shift right with zero fill\r\n */\r\ncljs.core.bit_shift_right_zero_fill \x3d (function cljs$core$bit_shift_right_zero_fill(x,n){\r\nreturn (x \x3e\x3e\x3e n);\r\n});\r\n/**\r\n * Bitwise shift right with zero fill\r\n */\r\ncljs.core.unsigned_bit_shift_right \x3d (function cljs$core$unsigned_bit_shift_right(x,n){\r\nreturn (x \x3e\x3e\x3e n);\r\n});\r\n/**\r\n * Counts the number of bits set in n\r\n */\r\ncljs.core.bit_count \x3d (function cljs$core$bit_count(v){\r\nvar v__$1 \x3d (v - ((v \x3e\x3e (1)) \x26 (1431655765)));\r\nvar v__$2 \x3d ((v__$1 \x26 (858993459)) + ((v__$1 \x3e\x3e (2)) \x26 (858993459)));\r\nreturn ((((v__$2 + (v__$2 \x3e\x3e (4))) \x26 (252645135)) * (16843009)) \x3e\x3e (24));\r\n});\r\n/**\r\n * Returns non-nil if nums all have the equivalent\r\n *   value, otherwise false. Behavior on non nums is\r\n *   undefined.\r\n */\r\ncljs.core._EQ__EQ_ \x3d (function cljs$core$_EQ__EQ_(var_args){\r\nvar G__15330 \x3d arguments.length;\r\nswitch (G__15330) {\r\ncase 1:\r\nreturn cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17284 \x3d arguments.length;\r\nvar i__4865__auto___17285 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17285 \x3c len__4864__auto___17284)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17285]));\r\n\r\nvar G__17286 \x3d (i__4865__auto___17285 + (1));\r\ni__4865__auto___17285 \x3d G__17286;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn true;\r\n}));\r\n\r\n(cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn cljs.core._equiv(x,y);\r\n}));\r\n\r\n(cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nwhile(true){\r\nif((x \x3d\x3d\x3d y)){\r\nif(cljs.core.next(more)){\r\nvar G__17287 \x3d y;\r\nvar G__17288 \x3d cljs.core.first(more);\r\nvar G__17289 \x3d cljs.core.next(more);\r\nx \x3d G__17287;\r\ny \x3d G__17288;\r\nmore \x3d G__17289;\r\ncontinue;\r\n} else {\r\nreturn (y \x3d\x3d\x3d cljs.core.first(more));\r\n}\r\n} else {\r\nreturn false;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core._EQ__EQ_.cljs$lang$applyTo \x3d (function (seq15327){\r\nvar G__15328 \x3d cljs.core.first(seq15327);\r\nvar seq15327__$1 \x3d cljs.core.next(seq15327);\r\nvar G__15329 \x3d cljs.core.first(seq15327__$1);\r\nvar seq15327__$2 \x3d cljs.core.next(seq15327__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15328,G__15329,seq15327__$2);\r\n}));\r\n\r\n(cljs.core._EQ__EQ_.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Returns true if num is greater than zero, else false\r\n */\r\ncljs.core.pos_QMARK_ \x3d (function cljs$core$pos_QMARK_(x){\r\nreturn (x \x3e (0));\r\n});\r\n/**\r\n * Returns true if num is zero, else false\r\n */\r\ncljs.core.zero_QMARK_ \x3d (function cljs$core$zero_QMARK_(x){\r\nreturn (x \x3d\x3d\x3d (0));\r\n});\r\n/**\r\n * Returns true if num is less than zero, else false\r\n */\r\ncljs.core.neg_QMARK_ \x3d (function cljs$core$neg_QMARK_(x){\r\nreturn (x \x3c (0));\r\n});\r\n/**\r\n * Returns the nth next of coll, (seq coll) when n is 0.\r\n */\r\ncljs.core.nthnext \x3d (function cljs$core$nthnext(coll,n){\r\nvar n__$1 \x3d n;\r\nvar xs \x3d cljs.core.seq(coll);\r\nwhile(true){\r\nif(((xs) \x26\x26 ((n__$1 \x3e (0))))){\r\nvar G__17290 \x3d (n__$1 - (1));\r\nvar G__17291 \x3d cljs.core.next(xs);\r\nn__$1 \x3d G__17290;\r\nxs \x3d G__17291;\r\ncontinue;\r\n} else {\r\nreturn xs;\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * With no args, returns the empty string. With one arg x, returns\r\n *   x.toString().  (str nil) returns the empty string. With more than\r\n *   one arg, returns the concatenation of the str values of the args.\r\n */\r\ncljs.core.str \x3d (function cljs$core$str(var_args){\r\nvar G__15334 \x3d arguments.length;\r\nswitch (G__15334) {\r\ncase 0:\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17293 \x3d arguments.length;\r\nvar i__4865__auto___17294 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17294 \x3c len__4864__auto___17293)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17294]));\r\n\r\nvar G__17295 \x3d (i__4865__auto___17294 + (1));\r\ni__4865__auto___17294 \x3d G__17295;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((1)),(0),null));\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.str.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nreturn \x22\x22;\r\n}));\r\n\r\n(cljs.core.str.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nif((x \x3d\x3d null)){\r\nreturn \x22\x22;\r\n} else {\r\nreturn [x].join(\x22\x22);\r\n}\r\n}));\r\n\r\n(cljs.core.str.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,ys){\r\nvar sb \x3d (new goog.string.StringBuffer(cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)));\r\nvar more \x3d ys;\r\nwhile(true){\r\nif(cljs.core.truth_(more)){\r\nvar G__17296 \x3d sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));\r\nvar G__17297 \x3d cljs.core.next(more);\r\nsb \x3d G__17296;\r\nmore \x3d G__17297;\r\ncontinue;\r\n} else {\r\nreturn sb.toString();\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.str.cljs$lang$applyTo \x3d (function (seq15332){\r\nvar G__15333 \x3d cljs.core.first(seq15332);\r\nvar seq15332__$1 \x3d cljs.core.next(seq15332);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15333,seq15332__$1);\r\n}));\r\n\r\n(cljs.core.str.cljs$lang$maxFixedArity \x3d (1));\r\n\r\n/**\r\n * Returns the substring of s beginning at start inclusive, and ending\r\n *   at end (defaults to length of string), exclusive.\r\n */\r\ncljs.core.subs \x3d (function cljs$core$subs(var_args){\r\nvar G__15336 \x3d arguments.length;\r\nswitch (G__15336) {\r\ncase 2:\r\nreturn cljs.core.subs.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.subs.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.subs.cljs$core$IFn$_invoke$arity$2 \x3d (function (s,start){\r\nreturn s.substring(start);\r\n}));\r\n\r\n(cljs.core.subs.cljs$core$IFn$_invoke$arity$3 \x3d (function (s,start,end){\r\nreturn s.substring(start,end);\r\n}));\r\n\r\n(cljs.core.subs.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n\r\n/**\r\n * Assumes x is sequential. Returns true if x equals y, otherwise\r\n *   returns false.\r\n */\r\ncljs.core.equiv_sequential \x3d (function cljs$core$equiv_sequential(x,y){\r\nreturn cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?((((cljs.core.counted_QMARK_(x)) \x26\x26 (((cljs.core.counted_QMARK_(y)) \x26\x26 ((!((cljs.core.count(x) \x3d\x3d\x3d cljs.core.count(y)))))))))?false:(function (){var xs \x3d cljs.core.seq(x);\r\nvar ys \x3d cljs.core.seq(y);\r\nwhile(true){\r\nif((xs \x3d\x3d null)){\r\nreturn (ys \x3d\x3d null);\r\n} else {\r\nif((ys \x3d\x3d null)){\r\nreturn false;\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){\r\nvar G__17299 \x3d cljs.core.next(xs);\r\nvar G__17300 \x3d cljs.core.next(ys);\r\nxs \x3d G__17299;\r\nys \x3d G__17300;\r\ncontinue;\r\n} else {\r\nreturn false;\r\n\r\n}\r\n}\r\n}\r\nbreak;\r\n}\r\n})()):null));\r\n});\r\ncljs.core.hash_coll \x3d (function cljs$core$hash_coll(coll){\r\nif(cljs.core.seq(coll)){\r\nvar res \x3d cljs.core.hash(cljs.core.first(coll));\r\nvar s \x3d cljs.core.next(coll);\r\nwhile(true){\r\nif((s \x3d\x3d null)){\r\nreturn res;\r\n} else {\r\nvar G__17304 \x3d cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));\r\nvar G__17305 \x3d cljs.core.next(s);\r\nres \x3d G__17304;\r\ns \x3d G__17305;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn (0);\r\n}\r\n});\r\n\r\ncljs.core.hash_imap \x3d (function cljs$core$hash_imap(m){\r\nvar h \x3d (0);\r\nvar s \x3d cljs.core.seq(m);\r\nwhile(true){\r\nif(s){\r\nvar e \x3d cljs.core.first(s);\r\nvar G__17307 \x3d ((h + (cljs.core.hash((cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null,e))) ^ cljs.core.hash((cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null,e))))) % (4503599627370496));\r\nvar G__17308 \x3d cljs.core.next(s);\r\nh \x3d G__17307;\r\ns \x3d G__17308;\r\ncontinue;\r\n} else {\r\nreturn h;\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.core.hash_iset \x3d (function cljs$core$hash_iset(s){\r\nvar h \x3d (0);\r\nvar s__$1 \x3d cljs.core.seq(s);\r\nwhile(true){\r\nif(s__$1){\r\nvar e \x3d cljs.core.first(s__$1);\r\nvar G__17315 \x3d ((h + cljs.core.hash(e)) % (4503599627370496));\r\nvar G__17316 \x3d cljs.core.next(s__$1);\r\nh \x3d G__17315;\r\ns__$1 \x3d G__17316;\r\ncontinue;\r\n} else {\r\nreturn h;\r\n}\r\nbreak;\r\n}\r\n});\r\n\r\n\r\n/**\r\n * Takes a JavaScript object and a map of names to functions and\r\n *   attaches said functions as methods on the object.  Any references to\r\n *   JavaScript\x27s implicit this (via the this-as macro) will resolve to the\r\n *   object that the function is attached.\r\n */\r\ncljs.core.extend_object_BANG_ \x3d (function cljs$core$extend_object_BANG_(obj,fn_map){\r\nvar seq__15337_17323 \x3d cljs.core.seq(fn_map);\r\nvar chunk__15338_17324 \x3d null;\r\nvar count__15339_17325 \x3d (0);\r\nvar i__15340_17326 \x3d (0);\r\nwhile(true){\r\nif((i__15340_17326 \x3c count__15339_17325)){\r\nvar vec__15347_17327 \x3d chunk__15338_17324.cljs$core$IIndexed$_nth$arity$2(null,i__15340_17326);\r\nvar key_name_17328 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15347_17327,(0),null);\r\nvar f_17329 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15347_17327,(1),null);\r\nvar str_name_17330 \x3d (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_17328) : cljs.core.name.call(null,key_name_17328));\r\ncljs.core.goog$module$goog$object.set(obj,str_name_17330,f_17329);\r\n\r\n\r\nvar G__17331 \x3d seq__15337_17323;\r\nvar G__17332 \x3d chunk__15338_17324;\r\nvar G__17333 \x3d count__15339_17325;\r\nvar G__17334 \x3d (i__15340_17326 + (1));\r\nseq__15337_17323 \x3d G__17331;\r\nchunk__15338_17324 \x3d G__17332;\r\ncount__15339_17325 \x3d G__17333;\r\ni__15340_17326 \x3d G__17334;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto___17335 \x3d cljs.core.seq(seq__15337_17323);\r\nif(temp__5753__auto___17335){\r\nvar seq__15337_17336__$1 \x3d temp__5753__auto___17335;\r\nif(cljs.core.chunked_seq_QMARK_(seq__15337_17336__$1)){\r\nvar c__4679__auto___17337 \x3d (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__15337_17336__$1) : cljs.core.chunk_first.call(null,seq__15337_17336__$1));\r\nvar G__17338 \x3d (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__15337_17336__$1) : cljs.core.chunk_rest.call(null,seq__15337_17336__$1));\r\nvar G__17339 \x3d c__4679__auto___17337;\r\nvar G__17340 \x3d cljs.core.count(c__4679__auto___17337);\r\nvar G__17341 \x3d (0);\r\nseq__15337_17323 \x3d G__17338;\r\nchunk__15338_17324 \x3d G__17339;\r\ncount__15339_17325 \x3d G__17340;\r\ni__15340_17326 \x3d G__17341;\r\ncontinue;\r\n} else {\r\nvar vec__15350_17342 \x3d cljs.core.first(seq__15337_17336__$1);\r\nvar key_name_17343 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15350_17342,(0),null);\r\nvar f_17344 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15350_17342,(1),null);\r\nvar str_name_17345 \x3d (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_17343) : cljs.core.name.call(null,key_name_17343));\r\ncljs.core.goog$module$goog$object.set(obj,str_name_17345,f_17344);\r\n\r\n\r\nvar G__17346 \x3d cljs.core.next(seq__15337_17336__$1);\r\nvar G__17347 \x3d null;\r\nvar G__17348 \x3d (0);\r\nvar G__17349 \x3d (0);\r\nseq__15337_17323 \x3d G__17346;\r\nchunk__15338_17324 \x3d G__17347;\r\ncount__15339_17325 \x3d G__17348;\r\ni__15340_17326 \x3d G__17349;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nreturn obj;\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IList}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ASeq}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.INext}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IStack}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.List \x3d (function (meta,first,rest,count,__hash){\r\nthis.meta \x3d meta;\r\nthis.first \x3d first;\r\nthis.rest \x3d rest;\r\nthis.count \x3d count;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 65937646;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 8192;\r\n});\r\n(cljs.core.List.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.List.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.List.prototype.indexOf \x3d (function() {\r\nvar G__17356 \x3d null;\r\nvar G__17356__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__17356__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__17356 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__17356__1.call(this,x);\r\ncase 2:\r\nreturn G__17356__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__17356.cljs$core$IFn$_invoke$arity$1 \x3d G__17356__1;\r\nG__17356.cljs$core$IFn$_invoke$arity$2 \x3d G__17356__2;\r\nreturn G__17356;\r\n})()\r\n);\r\n\r\n(cljs.core.List.prototype.lastIndexOf \x3d (function() {\r\nvar G__17357 \x3d null;\r\nvar G__17357__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,self__.count);\r\n});\r\nvar G__17357__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__17357 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__17357__1.call(this,x);\r\ncase 2:\r\nreturn G__17357__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__17357.cljs$core$IFn$_invoke$arity$1 \x3d G__17357__1;\r\nG__17357.cljs$core$IFn$_invoke$arity$2 \x3d G__17357__2;\r\nreturn G__17357;\r\n})()\r\n);\r\n\r\n(cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));\r\n}));\r\n\r\n(cljs.core.List.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.count \x3d\x3d\x3d (1))){\r\nreturn null;\r\n} else {\r\nreturn self__.rest;\r\n}\r\n}));\r\n\r\n(cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.count;\r\n}));\r\n\r\n(cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.first;\r\n}));\r\n\r\n(cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1.cljs$core$ISeq$_rest$arity$1(null);\r\n}));\r\n\r\n(cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.equiv_sequential(coll__$1,other);\r\n}));\r\n\r\n(cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);\r\n}));\r\n\r\n(cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);\r\n}));\r\n\r\n(cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);\r\n}));\r\n\r\n(cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.first;\r\n}));\r\n\r\n(cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.count \x3d\x3d\x3d (1))){\r\nreturn cljs.core.List.EMPTY;\r\n} else {\r\nreturn self__.rest;\r\n}\r\n}));\r\n\r\n(cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1;\r\n}));\r\n\r\n(cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.List(new_meta,self__.first,self__.rest,self__.count,self__.__hash));\r\n}\r\n}));\r\n\r\n(cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));\r\n}));\r\n\r\n(cljs.core.List.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22first\x22,\x22first\x22,996428481,null),new cljs.core.Symbol(null,\x22rest\x22,\x22rest\x22,398835108,null),new cljs.core.Symbol(null,\x22count\x22,\x22count\x22,-514511684,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.List.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.List.cljs$lang$ctorStr \x3d \x22cljs.core/List\x22);\r\n\r\n(cljs.core.List.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/List\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/List.\r\n */\r\ncljs.core.__GT_List \x3d (function cljs$core$__GT_List(meta,first,rest,count,__hash){\r\nreturn (new cljs.core.List(meta,first,rest,count,__hash));\r\n});\r\n\r\n/**\r\n * Returns true if x implements IList\r\n */\r\ncljs.core.list_QMARK_ \x3d (function cljs$core$list_QMARK_(x){\r\nif((!((x \x3d\x3d null)))){\r\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (33554432))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IList$)))){\r\nreturn true;\r\n} else {\r\nif((!x.cljs$lang$protocol_mask$partition0$)){\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IList,x);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IList,x);\r\n}\r\n});\r\n(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IList}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.INext}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IStack}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.EmptyList \x3d (function (meta){\r\nthis.meta \x3d meta;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 65937614;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 8192;\r\n});\r\n(cljs.core.EmptyList.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.EmptyList.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.EmptyList.prototype.indexOf \x3d (function() {\r\nvar G__17370 \x3d null;\r\nvar G__17370__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__17370__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__17370 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__17370__1.call(this,x);\r\ncase 2:\r\nreturn G__17370__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__17370.cljs$core$IFn$_invoke$arity$1 \x3d G__17370__1;\r\nG__17370.cljs$core$IFn$_invoke$arity$2 \x3d G__17370__2;\r\nreturn G__17370;\r\n})()\r\n);\r\n\r\n(cljs.core.EmptyList.prototype.lastIndexOf \x3d (function() {\r\nvar G__17371 \x3d null;\r\nvar G__17371__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\r\n});\r\nvar G__17371__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__17371 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__17371__1.call(this,x);\r\ncase 2:\r\nreturn G__17371__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__17371.cljs$core$IFn$_invoke$arity$1 \x3d G__17371__1;\r\nG__17371.cljs$core$IFn$_invoke$arity$2 \x3d G__17371__2;\r\nreturn G__17371;\r\n})()\r\n);\r\n\r\n(cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (new cljs.core.EmptyList(self__.meta));\r\n}));\r\n\r\n(cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn null;\r\n}));\r\n\r\n(cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (0);\r\n}));\r\n\r\n(cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn null;\r\n}));\r\n\r\n(cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nthrow (new Error(\x22Can\x27t pop empty list\x22));\r\n}));\r\n\r\n(cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.empty_ordered_hash;\r\n}));\r\n\r\n(cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(((cljs.core.list_QMARK_(other)) || (cljs.core.sequential_QMARK_(other)))){\r\nreturn (cljs.core.seq(other) \x3d\x3d null);\r\n} else {\r\nreturn false;\r\n}\r\n}));\r\n\r\n(cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1;\r\n}));\r\n\r\n(cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);\r\n}));\r\n\r\n(cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);\r\n}));\r\n\r\n(cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn null;\r\n}));\r\n\r\n(cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.List.EMPTY;\r\n}));\r\n\r\n(cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn null;\r\n}));\r\n\r\n(cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.EmptyList(new_meta));\r\n}\r\n}));\r\n\r\n(cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (new cljs.core.List(self__.meta,o,null,(1),null));\r\n}));\r\n\r\n(cljs.core.EmptyList.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null)], null);\r\n}));\r\n\r\n(cljs.core.EmptyList.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.EmptyList.cljs$lang$ctorStr \x3d \x22cljs.core/EmptyList\x22);\r\n\r\n(cljs.core.EmptyList.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/EmptyList\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/EmptyList.\r\n */\r\ncljs.core.__GT_EmptyList \x3d (function cljs$core$__GT_EmptyList(meta){\r\nreturn (new cljs.core.EmptyList(meta));\r\n});\r\n\r\n(cljs.core.List.EMPTY \x3d (new cljs.core.EmptyList(null)));\r\n(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\n/**\r\n * Returns true if coll satisfies? IReversible.\r\n */\r\ncljs.core.reversible_QMARK_ \x3d (function cljs$core$reversible_QMARK_(coll){\r\nif((!((coll \x3d\x3d null)))){\r\nif((((coll.cljs$lang$protocol_mask$partition0$ \x26 (134217728))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$IReversible$)))){\r\nreturn true;\r\n} else {\r\nif((!coll.cljs$lang$protocol_mask$partition0$)){\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,coll);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,coll);\r\n}\r\n});\r\n/**\r\n * Returns, in constant time, a seq of the items in rev (which\r\n *   can be a vector or sorted-map), in reverse order. If rev is empty returns nil\r\n */\r\ncljs.core.rseq \x3d (function cljs$core$rseq(rev){\r\nreturn cljs.core._rseq(rev);\r\n});\r\n/**\r\n * Returns a seq of the items in coll in reverse order. Not lazy.\r\n */\r\ncljs.core.reverse \x3d (function cljs$core$reverse(coll){\r\nif(cljs.core.reversible_QMARK_(coll)){\r\nvar or__4253__auto__ \x3d cljs.core.rseq(coll);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.core.List.EMPTY;\r\n}\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);\r\n}\r\n});\r\n/**\r\n * Creates a new list containing the items.\r\n */\r\ncljs.core.list \x3d (function cljs$core$list(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___17389 \x3d arguments.length;\r\nvar i__4865__auto___17390 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17390 \x3c len__4864__auto___17389)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___17390]));\r\n\r\nvar G__17391 \x3d (i__4865__auto___17390 + (1));\r\ni__4865__auto___17390 \x3d G__17391;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.list.cljs$core$IFn$_invoke$arity$variadic \x3d (function (xs){\r\nvar arr \x3d (((((xs instanceof cljs.core.IndexedSeq)) \x26\x26 ((xs.i \x3d\x3d\x3d (0)))))?xs.arr:(function (){var arr \x3d [];\r\nvar xs__$1 \x3d xs;\r\nwhile(true){\r\nif((!((xs__$1 \x3d\x3d null)))){\r\narr.push(cljs.core._first(xs__$1));\r\n\r\nvar G__17395 \x3d cljs.core._next(xs__$1);\r\nxs__$1 \x3d G__17395;\r\ncontinue;\r\n} else {\r\nreturn arr;\r\n}\r\nbreak;\r\n}\r\n})());\r\nvar i \x3d arr.length;\r\nvar r \x3d cljs.core.List.EMPTY;\r\nwhile(true){\r\nif((i \x3e (0))){\r\nvar G__17396 \x3d (i - (1));\r\nvar G__17397 \x3d cljs.core._conj(r,(arr[(i - (1))]));\r\ni \x3d G__17396;\r\nr \x3d G__17397;\r\ncontinue;\r\n} else {\r\nreturn r;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.list.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(cljs.core.list.cljs$lang$applyTo \x3d (function (seq15355){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15355));\r\n}));\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IList}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ASeq}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.INext}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.Cons \x3d (function (meta,first,rest,__hash){\r\nthis.meta \x3d meta;\r\nthis.first \x3d first;\r\nthis.rest \x3d rest;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 65929452;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 8192;\r\n});\r\n(cljs.core.Cons.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.Cons.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.Cons.prototype.indexOf \x3d (function() {\r\nvar G__17398 \x3d null;\r\nvar G__17398__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__17398__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__17398 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__17398__1.call(this,x);\r\ncase 2:\r\nreturn G__17398__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__17398.cljs$core$IFn$_invoke$arity$1 \x3d G__17398__1;\r\nG__17398.cljs$core$IFn$_invoke$arity$2 \x3d G__17398__2;\r\nreturn G__17398;\r\n})()\r\n);\r\n\r\n(cljs.core.Cons.prototype.lastIndexOf \x3d (function() {\r\nvar G__17402 \x3d null;\r\nvar G__17402__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\r\n});\r\nvar G__17402__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__17402 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__17402__1.call(this,x);\r\ncase 2:\r\nreturn G__17402__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__17402.cljs$core$IFn$_invoke$arity$1 \x3d G__17402__1;\r\nG__17402.cljs$core$IFn$_invoke$arity$2 \x3d G__17402__2;\r\nreturn G__17402;\r\n})()\r\n);\r\n\r\n(cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));\r\n}));\r\n\r\n(cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.rest \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core.seq(self__.rest);\r\n}\r\n}));\r\n\r\n(cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.equiv_sequential(coll__$1,other);\r\n}));\r\n\r\n(cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.List.EMPTY;\r\n}));\r\n\r\n(cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);\r\n}));\r\n\r\n(cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);\r\n}));\r\n\r\n(cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.first;\r\n}));\r\n\r\n(cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.rest \x3d\x3d null)){\r\nreturn cljs.core.List.EMPTY;\r\n} else {\r\nreturn self__.rest;\r\n}\r\n}));\r\n\r\n(cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1;\r\n}));\r\n\r\n(cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.Cons(new_meta,self__.first,self__.rest,self__.__hash));\r\n}\r\n}));\r\n\r\n(cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (new cljs.core.Cons(null,o,coll__$1,null));\r\n}));\r\n\r\n(cljs.core.Cons.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22first\x22,\x22first\x22,996428481,null),new cljs.core.Symbol(null,\x22rest\x22,\x22rest\x22,398835108,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.Cons.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.Cons.cljs$lang$ctorStr \x3d \x22cljs.core/Cons\x22);\r\n\r\n(cljs.core.Cons.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/Cons\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/Cons.\r\n */\r\ncljs.core.__GT_Cons \x3d (function cljs$core$__GT_Cons(meta,first,rest,__hash){\r\nreturn (new cljs.core.Cons(meta,first,rest,__hash));\r\n});\r\n\r\n(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\n/**\r\n * Returns a new seq where x is the first element and coll is the rest.\r\n */\r\ncljs.core.cons \x3d (function cljs$core$cons(x,coll){\r\nif((coll \x3d\x3d null)){\r\nreturn (new cljs.core.List(null,x,null,(1),null));\r\n} else {\r\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (64))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$ISeq$))))?true:false):false)){\r\nreturn (new cljs.core.Cons(null,x,coll,null));\r\n} else {\r\nreturn (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));\r\n\r\n}\r\n}\r\n});\r\ncljs.core.hash_keyword \x3d (function cljs$core$hash_keyword(k){\r\nreturn ((cljs.core.hash_symbol(k) + (2654435769)) | (0));\r\n});\r\ncljs.core.compare_keywords \x3d (function cljs$core$compare_keywords(a,b){\r\nif((a.fqn \x3d\x3d\x3d b.fqn)){\r\nreturn (0);\r\n} else {\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d cljs.core.not(a.ns);\r\nif(and__4251__auto__){\r\nreturn b.ns;\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nreturn (-1);\r\n} else {\r\nif(cljs.core.truth_(a.ns)){\r\nif(cljs.core.not(b.ns)){\r\nreturn (1);\r\n} else {\r\nvar nsc \x3d cljs.core.goog$module$goog$array.defaultCompare(a.ns,b.ns);\r\nif(((0) \x3d\x3d\x3d nsc)){\r\nreturn cljs.core.goog$module$goog$array.defaultCompare(a.name,b.name);\r\n} else {\r\nreturn nsc;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.goog$module$goog$array.defaultCompare(a.name,b.name);\r\n\r\n}\r\n}\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IFn}\r\n * @implements {cljs.core.INamed}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n*/\r\ncljs.core.Keyword \x3d (function (ns,name,fqn,_hash){\r\nthis.ns \x3d ns;\r\nthis.name \x3d name;\r\nthis.fqn \x3d fqn;\r\nthis._hash \x3d _hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2153775105;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 4096;\r\n});\r\n(cljs.core.Keyword.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn [\x22:\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join(\x27\x27);\r\n}));\r\n\r\n(cljs.core.Keyword.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (_,other){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nif((other instanceof cljs.core.Keyword)){\r\nreturn (self__.fqn \x3d\x3d\x3d other.fqn);\r\n} else {\r\nreturn false;\r\n}\r\n}));\r\n\r\n(cljs.core.Keyword.prototype.call \x3d (function (unused__9633__auto__){\r\nvar self__ \x3d this;\r\nvar self__ \x3d this;\r\nvar G__15358 \x3d (arguments.length - (1));\r\nswitch (G__15358) {\r\ncase (1):\r\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\r\n\r\nbreak;\r\ncase (2):\r\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.Keyword.prototype.apply \x3d (function (self__,args15357){\r\nvar self__ \x3d this;\r\nvar self____$1 \x3d this;\r\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15357)));\r\n}));\r\n\r\n(cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar kw \x3d this;\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);\r\n}));\r\n\r\n(cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,not_found){\r\nvar self__ \x3d this;\r\nvar kw \x3d this;\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);\r\n}));\r\n\r\n(cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this$){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__._hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_keyword(this$__$1);\r\n(self__._hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn self__.name;\r\n}));\r\n\r\n(cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn self__.ns;\r\n}));\r\n\r\n(cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (o,writer,_){\r\nvar self__ \x3d this;\r\nvar o__$1 \x3d this;\r\nreturn cljs.core._write(writer,[\x22:\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join(\x27\x27));\r\n}));\r\n\r\n(cljs.core.Keyword.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22ns\x22,\x22ns\x22,2082130287,null),new cljs.core.Symbol(null,\x22name\x22,\x22name\x22,-810760592,null),new cljs.core.Symbol(null,\x22fqn\x22,\x22fqn\x22,-1749334463,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22_hash\x22,\x22_hash\x22,-2130838312,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.Keyword.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.Keyword.cljs$lang$ctorStr \x3d \x22cljs.core/Keyword\x22);\r\n\r\n(cljs.core.Keyword.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/Keyword\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/Keyword.\r\n */\r\ncljs.core.__GT_Keyword \x3d (function cljs$core$__GT_Keyword(ns,name,fqn,_hash){\r\nreturn (new cljs.core.Keyword(ns,name,fqn,_hash));\r\n});\r\n\r\n/**\r\n * Return true if x is a Keyword\r\n */\r\ncljs.core.keyword_QMARK_ \x3d (function cljs$core$keyword_QMARK_(x){\r\nreturn (x instanceof cljs.core.Keyword);\r\n});\r\n/**\r\n * Efficient test to determine that two keywords are identical.\r\n */\r\ncljs.core.keyword_identical_QMARK_ \x3d (function cljs$core$keyword_identical_QMARK_(x,y){\r\nif((x \x3d\x3d\x3d y)){\r\nreturn true;\r\n} else {\r\nif((((x instanceof cljs.core.Keyword)) \x26\x26 ((y instanceof cljs.core.Keyword)))){\r\nreturn (x.fqn \x3d\x3d\x3d y.fqn);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n});\r\n/**\r\n * Efficient test to determine that two symbols are identical.\r\n */\r\ncljs.core.symbol_identical_QMARK_ \x3d (function cljs$core$symbol_identical_QMARK_(x,y){\r\nif((x \x3d\x3d\x3d y)){\r\nreturn true;\r\n} else {\r\nif((((x instanceof cljs.core.Symbol)) \x26\x26 ((y instanceof cljs.core.Symbol)))){\r\nreturn (x.str \x3d\x3d\x3d y.str);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the namespace String of a symbol or keyword, or nil if not present.\r\n */\r\ncljs.core.namespace \x3d (function cljs$core$namespace(x){\r\nif((((!((x \x3d\x3d null))))?(((((x.cljs$lang$protocol_mask$partition1$ \x26 (4096))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$INamed$))))?true:false):false)){\r\nreturn x.cljs$core$INamed$_namespace$arity$1(null);\r\n} else {\r\nthrow (new Error([\x22Doesn\x27t support namespace: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(\x27\x27)));\r\n}\r\n});\r\n/**\r\n * Return true if x is a symbol or keyword\r\n */\r\ncljs.core.ident_QMARK_ \x3d (function cljs$core$ident_QMARK_(x){\r\nreturn (((x instanceof cljs.core.Keyword)) || ((x instanceof cljs.core.Symbol)));\r\n});\r\n/**\r\n * Return true if x is a symbol or keyword without a namespace\r\n */\r\ncljs.core.simple_ident_QMARK_ \x3d (function cljs$core$simple_ident_QMARK_(x){\r\nreturn ((cljs.core.ident_QMARK_(x)) \x26\x26 ((cljs.core.namespace(x) \x3d\x3d null)));\r\n});\r\n/**\r\n * Return true if x is a symbol or keyword with a namespace\r\n */\r\ncljs.core.qualified_ident_QMARK_ \x3d (function cljs$core$qualified_ident_QMARK_(x){\r\nreturn cljs.core.boolean$((function (){var and__4251__auto__ \x3d cljs.core.ident_QMARK_(x);\r\nif(and__4251__auto__){\r\nvar and__4251__auto____$1 \x3d cljs.core.namespace(x);\r\nif(cljs.core.truth_(and__4251__auto____$1)){\r\nreturn true;\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})());\r\n});\r\n/**\r\n * Return true if x is a symbol without a namespace\r\n */\r\ncljs.core.simple_symbol_QMARK_ \x3d (function cljs$core$simple_symbol_QMARK_(x){\r\nreturn (((x instanceof cljs.core.Symbol)) \x26\x26 ((cljs.core.namespace(x) \x3d\x3d null)));\r\n});\r\n/**\r\n * Return true if x is a symbol with a namespace\r\n */\r\ncljs.core.qualified_symbol_QMARK_ \x3d (function cljs$core$qualified_symbol_QMARK_(x){\r\nreturn cljs.core.boolean$((function (){var and__4251__auto__ \x3d (x instanceof cljs.core.Symbol);\r\nif(and__4251__auto__){\r\nvar and__4251__auto____$1 \x3d cljs.core.namespace(x);\r\nif(cljs.core.truth_(and__4251__auto____$1)){\r\nreturn true;\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})());\r\n});\r\n/**\r\n * Return true if x is a keyword without a namespace\r\n */\r\ncljs.core.simple_keyword_QMARK_ \x3d (function cljs$core$simple_keyword_QMARK_(x){\r\nreturn (((x instanceof cljs.core.Keyword)) \x26\x26 ((cljs.core.namespace(x) \x3d\x3d null)));\r\n});\r\n/**\r\n * Return true if x is a keyword with a namespace\r\n */\r\ncljs.core.qualified_keyword_QMARK_ \x3d (function cljs$core$qualified_keyword_QMARK_(x){\r\nreturn cljs.core.boolean$((function (){var and__4251__auto__ \x3d (x instanceof cljs.core.Keyword);\r\nif(and__4251__auto__){\r\nvar and__4251__auto____$1 \x3d cljs.core.namespace(x);\r\nif(cljs.core.truth_(and__4251__auto____$1)){\r\nreturn true;\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})());\r\n});\r\n/**\r\n * Returns a Keyword with the given namespace and name.  Do not use :\r\n *   in the keyword strings, it will be added automatically.\r\n */\r\ncljs.core.keyword \x3d (function cljs$core$keyword(var_args){\r\nvar G__15361 \x3d arguments.length;\r\nswitch (G__15361) {\r\ncase 1:\r\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 \x3d (function (name){\r\nif((name instanceof cljs.core.Keyword)){\r\nreturn name;\r\n} else {\r\nif((name instanceof cljs.core.Symbol)){\r\nreturn (new cljs.core.Keyword(cljs.core.namespace(name),(cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null,name)),name.str,null));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22/\x22,name)){\r\nreturn (new cljs.core.Keyword(null,name,name,null));\r\n} else {\r\nif(typeof name \x3d\x3d\x3d \x27string\x27){\r\nvar parts \x3d name.split(\x22/\x22);\r\nif((parts.length \x3d\x3d\x3d (2))){\r\nreturn (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));\r\n} else {\r\nreturn (new cljs.core.Keyword(null,(parts[(0)]),name,null));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 \x3d (function (ns,name){\r\nvar ns__$1 \x3d (((ns instanceof cljs.core.Keyword))?(cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(ns) : cljs.core.name.call(null,ns)):(((ns instanceof cljs.core.Symbol))?(cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(ns) : cljs.core.name.call(null,ns)):ns\r\n));\r\nvar name__$1 \x3d (((name instanceof cljs.core.Keyword))?(cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null,name)):(((name instanceof cljs.core.Symbol))?(cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null,name)):name\r\n));\r\nreturn (new cljs.core.Keyword(ns__$1,name__$1,[(cljs.core.truth_(ns__$1)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1),\x22/\x22].join(\x27\x27):null),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$1)].join(\x27\x27),null));\r\n}));\r\n\r\n(cljs.core.keyword.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IPending}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.INext}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.LazySeq \x3d (function (meta,fn,s,__hash){\r\nthis.meta \x3d meta;\r\nthis.fn \x3d fn;\r\nthis.s \x3d s;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32374988;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 1;\r\n});\r\n(cljs.core.LazySeq.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.LazySeq.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.LazySeq.prototype.sval \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nif((self__.fn \x3d\x3d null)){\r\nreturn self__.s;\r\n} else {\r\n(self__.s \x3d (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null)));\r\n\r\n(self__.fn \x3d null);\r\n\r\nreturn self__.s;\r\n}\r\n}));\r\n\r\n(cljs.core.LazySeq.prototype.indexOf \x3d (function() {\r\nvar G__17490 \x3d null;\r\nvar G__17490__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__17490__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__17490 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__17490__1.call(this,x);\r\ncase 2:\r\nreturn G__17490__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__17490.cljs$core$IFn$_invoke$arity$1 \x3d G__17490__1;\r\nG__17490.cljs$core$IFn$_invoke$arity$2 \x3d G__17490__2;\r\nreturn G__17490;\r\n})()\r\n);\r\n\r\n(cljs.core.LazySeq.prototype.lastIndexOf \x3d (function() {\r\nvar G__17493 \x3d null;\r\nvar G__17493__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\r\n});\r\nvar G__17493__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__17493 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__17493__1.call(this,x);\r\ncase 2:\r\nreturn G__17493__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__17493.cljs$core$IFn$_invoke$arity$1 \x3d G__17493__1;\r\nG__17493.cljs$core$IFn$_invoke$arity$2 \x3d G__17493__2;\r\nreturn G__17493;\r\n})()\r\n);\r\n\r\n(cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\ncoll__$1.cljs$core$ISeqable$_seq$arity$1(null);\r\n\r\nif((self__.s \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core.next(self__.s);\r\n}\r\n}));\r\n\r\n(cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.equiv_sequential(coll__$1,other);\r\n}));\r\n\r\n(cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);\r\n}));\r\n\r\n(cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.not(self__.fn);\r\n}));\r\n\r\n(cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);\r\n}));\r\n\r\n(cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);\r\n}));\r\n\r\n(cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\ncoll__$1.cljs$core$ISeqable$_seq$arity$1(null);\r\n\r\nif((self__.s \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core.first(self__.s);\r\n}\r\n}));\r\n\r\n(cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\ncoll__$1.cljs$core$ISeqable$_seq$arity$1(null);\r\n\r\nif((!((self__.s \x3d\x3d null)))){\r\nreturn cljs.core.rest(self__.s);\r\n} else {\r\nreturn cljs.core.List.EMPTY;\r\n}\r\n}));\r\n\r\n(cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\ncoll__$1.sval();\r\n\r\nif((self__.s \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nvar ls \x3d self__.s;\r\nwhile(true){\r\nif((ls instanceof cljs.core.LazySeq)){\r\nvar G__17496 \x3d ls.sval();\r\nls \x3d G__17496;\r\ncontinue;\r\n} else {\r\n(self__.s \x3d ls);\r\n\r\nreturn cljs.core.seq(self__.s);\r\n}\r\nbreak;\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.LazySeq(new_meta,(function (){\r\nreturn coll__$1.cljs$core$ISeqable$_seq$arity$1(null);\r\n}),null,self__.__hash));\r\n}\r\n}));\r\n\r\n(cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.cons(o,coll__$1);\r\n}));\r\n\r\n(cljs.core.LazySeq.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22fn\x22,\x22fn\x22,465265323,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22s\x22,\x22s\x22,-948495851,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.LazySeq.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.LazySeq.cljs$lang$ctorStr \x3d \x22cljs.core/LazySeq\x22);\r\n\r\n(cljs.core.LazySeq.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/LazySeq\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/LazySeq.\r\n */\r\ncljs.core.__GT_LazySeq \x3d (function cljs$core$__GT_LazySeq(meta,fn,s,__hash){\r\nreturn (new cljs.core.LazySeq(meta,fn,s,__hash));\r\n});\r\n\r\n(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.ICounted}\r\n*/\r\ncljs.core.ChunkBuffer \x3d (function (buf,end){\r\nthis.buf \x3d buf;\r\nthis.end \x3d end;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.ChunkBuffer.prototype.add \x3d (function (o){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\n(self__.buf[self__.end] \x3d o);\r\n\r\nreturn (self__.end \x3d (self__.end + (1)));\r\n}));\r\n\r\n(cljs.core.ChunkBuffer.prototype.chunk \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar ret \x3d (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));\r\n(self__.buf \x3d null);\r\n\r\nreturn ret;\r\n}));\r\n\r\n(cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn self__.end;\r\n}));\r\n\r\n(cljs.core.ChunkBuffer.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22buf\x22,\x22buf\x22,1426618187,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22end\x22,\x22end\x22,1372345569,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.ChunkBuffer.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.ChunkBuffer.cljs$lang$ctorStr \x3d \x22cljs.core/ChunkBuffer\x22);\r\n\r\n(cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/ChunkBuffer\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/ChunkBuffer.\r\n */\r\ncljs.core.__GT_ChunkBuffer \x3d (function cljs$core$__GT_ChunkBuffer(buf,end){\r\nreturn (new cljs.core.ChunkBuffer(buf,end));\r\n});\r\n\r\ncljs.core.chunk_buffer \x3d (function cljs$core$chunk_buffer(capacity){\r\nreturn (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IIndexed}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.IChunk}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.ArrayChunk \x3d (function (arr,off,end){\r\nthis.arr \x3d arr;\r\nthis.off \x3d off;\r\nthis.end \x3d end;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 524306;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (self__.end - self__.off);\r\n}));\r\n\r\n(cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 \x3d (function (coll,i){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (self__.arr[(self__.off + i)]);\r\n}));\r\n\r\n(cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 \x3d (function (coll,i,not_found){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((((i \x3e\x3d (0))) \x26\x26 ((i \x3c (self__.end - self__.off))))){\r\nreturn (self__.arr[(self__.off + i)]);\r\n} else {\r\nreturn not_found;\r\n}\r\n}));\r\n\r\n(cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.off \x3d\x3d\x3d self__.end)){\r\nthrow (new Error(\x22-drop-first of empty chunk\x22));\r\n} else {\r\nreturn (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));\r\n}\r\n}));\r\n\r\n(cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));\r\n}));\r\n\r\n(cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);\r\n}));\r\n\r\n(cljs.core.ArrayChunk.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),new cljs.core.Symbol(null,\x22off\x22,\x22off\x22,-2047994980,null),new cljs.core.Symbol(null,\x22end\x22,\x22end\x22,1372345569,null)], null);\r\n}));\r\n\r\n(cljs.core.ArrayChunk.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.ArrayChunk.cljs$lang$ctorStr \x3d \x22cljs.core/ArrayChunk\x22);\r\n\r\n(cljs.core.ArrayChunk.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/ArrayChunk\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/ArrayChunk.\r\n */\r\ncljs.core.__GT_ArrayChunk \x3d (function cljs$core$__GT_ArrayChunk(arr,off,end){\r\nreturn (new cljs.core.ArrayChunk(arr,off,end));\r\n});\r\n\r\ncljs.core.array_chunk \x3d (function cljs$core$array_chunk(var_args){\r\nvar G__15363 \x3d arguments.length;\r\nswitch (G__15363) {\r\ncase 1:\r\nreturn cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 \x3d (function (arr){\r\nreturn (new cljs.core.ArrayChunk(arr,(0),arr.length));\r\n}));\r\n\r\n(cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 \x3d (function (arr,off){\r\nreturn (new cljs.core.ArrayChunk(arr,off,arr.length));\r\n}));\r\n\r\n(cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 \x3d (function (arr,off,end){\r\nreturn (new cljs.core.ArrayChunk(arr,off,end));\r\n}));\r\n\r\n(cljs.core.array_chunk.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ASeq}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IChunkedNext}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.INext}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.IChunkedSeq}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n*/\r\ncljs.core.ChunkedCons \x3d (function (chunk,more,meta,__hash){\r\nthis.chunk \x3d chunk;\r\nthis.more \x3d more;\r\nthis.meta \x3d meta;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 31850732;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 1536;\r\n});\r\n(cljs.core.ChunkedCons.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.ChunkedCons.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.ChunkedCons.prototype.indexOf \x3d (function() {\r\nvar G__17603 \x3d null;\r\nvar G__17603__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__17603__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__17603 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__17603__1.call(this,x);\r\ncase 2:\r\nreturn G__17603__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__17603.cljs$core$IFn$_invoke$arity$1 \x3d G__17603__1;\r\nG__17603.cljs$core$IFn$_invoke$arity$2 \x3d G__17603__2;\r\nreturn G__17603;\r\n})()\r\n);\r\n\r\n(cljs.core.ChunkedCons.prototype.lastIndexOf \x3d (function() {\r\nvar G__17604 \x3d null;\r\nvar G__17604__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\r\n});\r\nvar G__17604__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__17604 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__17604__1.call(this,x);\r\ncase 2:\r\nreturn G__17604__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__17604.cljs$core$IFn$_invoke$arity$1 \x3d G__17604__1;\r\nG__17604.cljs$core$IFn$_invoke$arity$2 \x3d G__17604__2;\r\nreturn G__17604;\r\n})()\r\n);\r\n\r\n(cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((cljs.core._count(self__.chunk) \x3e (1))){\r\nreturn (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,null,null));\r\n} else {\r\nif((self__.more \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core._seq(self__.more);\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.equiv_sequential(coll__$1,other);\r\n}));\r\n\r\n(cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.List.EMPTY;\r\n}));\r\n\r\n(cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core._nth(self__.chunk,(0));\r\n}));\r\n\r\n(cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((cljs.core._count(self__.chunk) \x3e (1))){\r\nreturn (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,null,null));\r\n} else {\r\nif((self__.more \x3d\x3d null)){\r\nreturn cljs.core.List.EMPTY;\r\n} else {\r\nreturn self__.more;\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1;\r\n}));\r\n\r\n(cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.chunk;\r\n}));\r\n\r\n(cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.more \x3d\x3d null)){\r\nreturn cljs.core.List.EMPTY;\r\n} else {\r\nreturn self__.more;\r\n}\r\n}));\r\n\r\n(cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.ChunkedCons(self__.chunk,self__.more,new_meta,self__.__hash));\r\n}\r\n}));\r\n\r\n(cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this$,o){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nreturn cljs.core.cons(o,this$__$1);\r\n}));\r\n\r\n(cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.more \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn self__.more;\r\n}\r\n}));\r\n\r\n(cljs.core.ChunkedCons.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22chunk\x22,\x22chunk\x22,449371907,null),new cljs.core.Symbol(null,\x22more\x22,\x22more\x22,-418290273,null),new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.ChunkedCons.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.ChunkedCons.cljs$lang$ctorStr \x3d \x22cljs.core/ChunkedCons\x22);\r\n\r\n(cljs.core.ChunkedCons.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/ChunkedCons\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/ChunkedCons.\r\n */\r\ncljs.core.__GT_ChunkedCons \x3d (function cljs$core$__GT_ChunkedCons(chunk,more,meta,__hash){\r\nreturn (new cljs.core.ChunkedCons(chunk,more,meta,__hash));\r\n});\r\n\r\n(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\ncljs.core.chunk_cons \x3d (function cljs$core$chunk_cons(chunk,rest){\r\nif((cljs.core._count(chunk) \x3d\x3d\x3d (0))){\r\nreturn rest;\r\n} else {\r\nreturn (new cljs.core.ChunkedCons(chunk,rest,null,null));\r\n}\r\n});\r\ncljs.core.chunk_append \x3d (function cljs$core$chunk_append(b,x){\r\nreturn b.add(x);\r\n});\r\ncljs.core.chunk \x3d (function cljs$core$chunk(b){\r\nreturn b.chunk();\r\n});\r\ncljs.core.chunk_first \x3d (function cljs$core$chunk_first(s){\r\nreturn cljs.core._chunked_first(s);\r\n});\r\ncljs.core.chunk_rest \x3d (function cljs$core$chunk_rest(s){\r\nreturn cljs.core._chunked_rest(s);\r\n});\r\ncljs.core.chunk_next \x3d (function cljs$core$chunk_next(s){\r\nif((((!((s \x3d\x3d null))))?(((((s.cljs$lang$protocol_mask$partition1$ \x26 (1024))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d s.cljs$core$IChunkedNext$))))?true:false):false)){\r\nreturn s.cljs$core$IChunkedNext$_chunked_next$arity$1(null);\r\n} else {\r\nreturn cljs.core.seq(cljs.core._chunked_rest(s));\r\n}\r\n});\r\n/**\r\n * Returns an array containing the contents of coll.\r\n */\r\ncljs.core.to_array \x3d (function cljs$core$to_array(coll){\r\nvar ary \x3d [];\r\nvar s \x3d cljs.core.seq(coll);\r\nwhile(true){\r\nif((!((s \x3d\x3d null)))){\r\nary.push(cljs.core.first(s));\r\n\r\nvar G__17631 \x3d cljs.core.next(s);\r\ns \x3d G__17631;\r\ncontinue;\r\n} else {\r\nreturn ary;\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Returns a (potentially-ragged) 2-dimensional array\r\n *   containing the contents of coll.\r\n */\r\ncljs.core.to_array_2d \x3d (function cljs$core$to_array_2d(coll){\r\nvar ret \x3d (new Array(cljs.core.count(coll)));\r\nvar i_17632 \x3d (0);\r\nvar xs_17633 \x3d cljs.core.seq(coll);\r\nwhile(true){\r\nif((xs_17633 \x3d\x3d null)){\r\n} else {\r\n(ret[i_17632] \x3d cljs.core.to_array(cljs.core.first(xs_17633)));\r\n\r\nvar G__17635 \x3d (i_17632 + (1));\r\nvar G__17636 \x3d cljs.core.next(xs_17633);\r\ni_17632 \x3d G__17635;\r\nxs_17633 \x3d G__17636;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n\r\nreturn ret;\r\n});\r\n/**\r\n * Creates an array of ints. Does not coerce array, provided for compatibility\r\n *   with Clojure.\r\n */\r\ncljs.core.int_array \x3d (function cljs$core$int_array(var_args){\r\nvar G__15366 \x3d arguments.length;\r\nswitch (G__15366) {\r\ncase 1:\r\nreturn cljs.core.int_array.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.int_array.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 \x3d (function (size_or_seq){\r\nif(typeof size_or_seq \x3d\x3d\x3d \x27number\x27){\r\nreturn cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);\r\n} else {\r\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);\r\n}\r\n}));\r\n\r\n(cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 \x3d (function (size,init_val_or_seq){\r\nvar a \x3d (new Array(size));\r\nif(cljs.core.seq_QMARK_(init_val_or_seq)){\r\nvar s \x3d cljs.core.seq(init_val_or_seq);\r\nvar i \x3d (0);\r\nvar s__$1 \x3d s;\r\nwhile(true){\r\nif(((s__$1) \x26\x26 ((i \x3c size)))){\r\n(a[i] \x3d cljs.core.first(s__$1));\r\n\r\nvar G__17654 \x3d (i + (1));\r\nvar G__17655 \x3d cljs.core.next(s__$1);\r\ni \x3d G__17654;\r\ns__$1 \x3d G__17655;\r\ncontinue;\r\n} else {\r\nreturn a;\r\n}\r\nbreak;\r\n}\r\n} else {\r\nvar n__4741__auto___17657 \x3d size;\r\nvar i_17658 \x3d (0);\r\nwhile(true){\r\nif((i_17658 \x3c n__4741__auto___17657)){\r\n(a[i_17658] \x3d init_val_or_seq);\r\n\r\nvar G__17660 \x3d (i_17658 + (1));\r\ni_17658 \x3d G__17660;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn a;\r\n}\r\n}));\r\n\r\n(cljs.core.int_array.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Creates an array of longs. Does not coerce array, provided for compatibility\r\n *   with Clojure.\r\n */\r\ncljs.core.long_array \x3d (function cljs$core$long_array(var_args){\r\nvar G__15368 \x3d arguments.length;\r\nswitch (G__15368) {\r\ncase 1:\r\nreturn cljs.core.long_array.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.long_array.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 \x3d (function (size_or_seq){\r\nif(typeof size_or_seq \x3d\x3d\x3d \x27number\x27){\r\nreturn cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);\r\n} else {\r\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);\r\n}\r\n}));\r\n\r\n(cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 \x3d (function (size,init_val_or_seq){\r\nvar a \x3d (new Array(size));\r\nif(cljs.core.seq_QMARK_(init_val_or_seq)){\r\nvar s \x3d cljs.core.seq(init_val_or_seq);\r\nvar i \x3d (0);\r\nvar s__$1 \x3d s;\r\nwhile(true){\r\nif(((s__$1) \x26\x26 ((i \x3c size)))){\r\n(a[i] \x3d cljs.core.first(s__$1));\r\n\r\nvar G__17697 \x3d (i + (1));\r\nvar G__17698 \x3d cljs.core.next(s__$1);\r\ni \x3d G__17697;\r\ns__$1 \x3d G__17698;\r\ncontinue;\r\n} else {\r\nreturn a;\r\n}\r\nbreak;\r\n}\r\n} else {\r\nvar n__4741__auto___17699 \x3d size;\r\nvar i_17700 \x3d (0);\r\nwhile(true){\r\nif((i_17700 \x3c n__4741__auto___17699)){\r\n(a[i_17700] \x3d init_val_or_seq);\r\n\r\nvar G__17701 \x3d (i_17700 + (1));\r\ni_17700 \x3d G__17701;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn a;\r\n}\r\n}));\r\n\r\n(cljs.core.long_array.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Creates an array of doubles. Does not coerce array, provided for compatibility\r\n *   with Clojure.\r\n */\r\ncljs.core.double_array \x3d (function cljs$core$double_array(var_args){\r\nvar G__15370 \x3d arguments.length;\r\nswitch (G__15370) {\r\ncase 1:\r\nreturn cljs.core.double_array.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.double_array.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 \x3d (function (size_or_seq){\r\nif(typeof size_or_seq \x3d\x3d\x3d \x27number\x27){\r\nreturn cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);\r\n} else {\r\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);\r\n}\r\n}));\r\n\r\n(cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 \x3d (function (size,init_val_or_seq){\r\nvar a \x3d (new Array(size));\r\nif(cljs.core.seq_QMARK_(init_val_or_seq)){\r\nvar s \x3d cljs.core.seq(init_val_or_seq);\r\nvar i \x3d (0);\r\nvar s__$1 \x3d s;\r\nwhile(true){\r\nif(((s__$1) \x26\x26 ((i \x3c size)))){\r\n(a[i] \x3d cljs.core.first(s__$1));\r\n\r\nvar G__17718 \x3d (i + (1));\r\nvar G__17719 \x3d cljs.core.next(s__$1);\r\ni \x3d G__17718;\r\ns__$1 \x3d G__17719;\r\ncontinue;\r\n} else {\r\nreturn a;\r\n}\r\nbreak;\r\n}\r\n} else {\r\nvar n__4741__auto___17720 \x3d size;\r\nvar i_17721 \x3d (0);\r\nwhile(true){\r\nif((i_17721 \x3c n__4741__auto___17720)){\r\n(a[i_17721] \x3d init_val_or_seq);\r\n\r\nvar G__17722 \x3d (i_17721 + (1));\r\ni_17721 \x3d G__17722;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn a;\r\n}\r\n}));\r\n\r\n(cljs.core.double_array.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Creates an array of objects. Does not coerce array, provided for compatibility\r\n *   with Clojure.\r\n */\r\ncljs.core.object_array \x3d (function cljs$core$object_array(var_args){\r\nvar G__15372 \x3d arguments.length;\r\nswitch (G__15372) {\r\ncase 1:\r\nreturn cljs.core.object_array.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.object_array.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 \x3d (function (size_or_seq){\r\nif(typeof size_or_seq \x3d\x3d\x3d \x27number\x27){\r\nreturn cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);\r\n} else {\r\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);\r\n}\r\n}));\r\n\r\n(cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 \x3d (function (size,init_val_or_seq){\r\nvar a \x3d (new Array(size));\r\nif(cljs.core.seq_QMARK_(init_val_or_seq)){\r\nvar s \x3d cljs.core.seq(init_val_or_seq);\r\nvar i \x3d (0);\r\nvar s__$1 \x3d s;\r\nwhile(true){\r\nif(((s__$1) \x26\x26 ((i \x3c size)))){\r\n(a[i] \x3d cljs.core.first(s__$1));\r\n\r\nvar G__17737 \x3d (i + (1));\r\nvar G__17738 \x3d cljs.core.next(s__$1);\r\ni \x3d G__17737;\r\ns__$1 \x3d G__17738;\r\ncontinue;\r\n} else {\r\nreturn a;\r\n}\r\nbreak;\r\n}\r\n} else {\r\nvar n__4741__auto___17741 \x3d size;\r\nvar i_17742 \x3d (0);\r\nwhile(true){\r\nif((i_17742 \x3c n__4741__auto___17741)){\r\n(a[i_17742] \x3d init_val_or_seq);\r\n\r\nvar G__17745 \x3d (i_17742 + (1));\r\ni_17742 \x3d G__17745;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn a;\r\n}\r\n}));\r\n\r\n(cljs.core.object_array.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * If coll is counted? returns its count, else will count at most the first n\r\n * elements of coll using its seq\r\n */\r\ncljs.core.bounded_count \x3d (function cljs$core$bounded_count(n,coll){\r\nif(cljs.core.counted_QMARK_(coll)){\r\nreturn cljs.core.count(coll);\r\n} else {\r\nvar i \x3d (0);\r\nvar s \x3d cljs.core.seq(coll);\r\nwhile(true){\r\nif((((!((s \x3d\x3d null)))) \x26\x26 ((i \x3c n)))){\r\nvar G__17748 \x3d (i + (1));\r\nvar G__17749 \x3d cljs.core.next(s);\r\ni \x3d G__17748;\r\ns \x3d G__17749;\r\ncontinue;\r\n} else {\r\nreturn i;\r\n}\r\nbreak;\r\n}\r\n}\r\n});\r\ncljs.core.spread \x3d (function cljs$core$spread(arglist){\r\nif((arglist \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nvar n \x3d cljs.core.next(arglist);\r\nif((n \x3d\x3d null)){\r\nreturn cljs.core.seq(cljs.core.first(arglist));\r\n} else {\r\nreturn cljs.core.cons(cljs.core.first(arglist),(cljs.core.spread.cljs$core$IFn$_invoke$arity$1 ? cljs.core.spread.cljs$core$IFn$_invoke$arity$1(n) : cljs.core.spread.call(null,n)));\r\n}\r\n}\r\n});\r\n/**\r\n * Returns a lazy seq representing the concatenation of the elements in the supplied colls.\r\n */\r\ncljs.core.concat \x3d (function cljs$core$concat(var_args){\r\nvar G__15377 \x3d arguments.length;\r\nswitch (G__15377) {\r\ncase 0:\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17762 \x3d arguments.length;\r\nvar i__4865__auto___17763 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17763 \x3c len__4864__auto___17762)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17763]));\r\n\r\nvar G__17764 \x3d (i__4865__auto___17763 + (1));\r\ni__4865__auto___17763 \x3d G__17764;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.concat.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nreturn null;\r\n}),null,null));\r\n}));\r\n\r\n(cljs.core.concat.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nreturn x;\r\n}),null,null));\r\n}));\r\n\r\n(cljs.core.concat.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s \x3d cljs.core.seq(x);\r\nif(s){\r\nif(cljs.core.chunked_seq_QMARK_(s)){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk_first(s),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));\r\n} else {\r\nreturn cljs.core.cons(cljs.core.first(s),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));\r\n}\r\n} else {\r\nreturn y;\r\n}\r\n}),null,null));\r\n}));\r\n\r\n(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,zs){\r\nvar cat \x3d (function cljs$core$cat(xys,zs__$1){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar xys__$1 \x3d cljs.core.seq(xys);\r\nif(xys__$1){\r\nif(cljs.core.chunked_seq_QMARK_(xys__$1)){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cljs$core$cat(cljs.core.chunk_rest(xys__$1),zs__$1));\r\n} else {\r\nreturn cljs.core.cons(cljs.core.first(xys__$1),cljs$core$cat(cljs.core.rest(xys__$1),zs__$1));\r\n}\r\n} else {\r\nif(cljs.core.truth_(zs__$1)){\r\nreturn cljs$core$cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}),null,null));\r\n});\r\nreturn cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.concat.cljs$lang$applyTo \x3d (function (seq15374){\r\nvar G__15375 \x3d cljs.core.first(seq15374);\r\nvar seq15374__$1 \x3d cljs.core.next(seq15374);\r\nvar G__15376 \x3d cljs.core.first(seq15374__$1);\r\nvar seq15374__$2 \x3d cljs.core.next(seq15374__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15375,G__15376,seq15374__$2);\r\n}));\r\n\r\n(cljs.core.concat.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Creates a new list containing the items prepended to the rest, the\r\n *   last of which will be treated as a sequence.\r\n */\r\ncljs.core.list_STAR_ \x3d (function cljs$core$list_STAR_(var_args){\r\nvar G__15384 \x3d arguments.length;\r\nswitch (G__15384) {\r\ncase 1:\r\nreturn cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17787 \x3d arguments.length;\r\nvar i__4865__auto___17792 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17792 \x3c len__4864__auto___17787)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17792]));\r\n\r\nvar G__17793 \x3d (i__4865__auto___17792 + (1));\r\ni__4865__auto___17792 \x3d G__17793;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((4)),(0),null));\r\nreturn cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 \x3d (function (args){\r\nreturn cljs.core.seq(args);\r\n}));\r\n\r\n(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 \x3d (function (a,args){\r\nreturn cljs.core.cons(a,args);\r\n}));\r\n\r\n(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 \x3d (function (a,b,args){\r\nreturn cljs.core.cons(a,cljs.core.cons(b,args));\r\n}));\r\n\r\n(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 \x3d (function (a,b,c,args){\r\nreturn cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));\r\n}));\r\n\r\n(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (a,b,c,d,more){\r\nreturn cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.list_STAR_.cljs$lang$applyTo \x3d (function (seq15379){\r\nvar G__15380 \x3d cljs.core.first(seq15379);\r\nvar seq15379__$1 \x3d cljs.core.next(seq15379);\r\nvar G__15381 \x3d cljs.core.first(seq15379__$1);\r\nvar seq15379__$2 \x3d cljs.core.next(seq15379__$1);\r\nvar G__15382 \x3d cljs.core.first(seq15379__$2);\r\nvar seq15379__$3 \x3d cljs.core.next(seq15379__$2);\r\nvar G__15383 \x3d cljs.core.first(seq15379__$3);\r\nvar seq15379__$4 \x3d cljs.core.next(seq15379__$3);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15380,G__15381,G__15382,G__15383,seq15379__$4);\r\n}));\r\n\r\n(cljs.core.list_STAR_.cljs$lang$maxFixedArity \x3d (4));\r\n\r\n/**\r\n * Returns a new, transient version of the collection, in constant time.\r\n */\r\ncljs.core.transient$ \x3d (function cljs$core$transient(coll){\r\nreturn cljs.core._as_transient(coll);\r\n});\r\n/**\r\n * Returns a new, persistent version of the transient collection, in\r\n *   constant time. The transient collection cannot be used after this\r\n *   call, any such use will throw an exception.\r\n */\r\ncljs.core.persistent_BANG_ \x3d (function cljs$core$persistent_BANG_(tcoll){\r\nreturn cljs.core._persistent_BANG_(tcoll);\r\n});\r\n/**\r\n * Adds val to the transient collection, and return tcoll. The \x27addition\x27\r\n *   may happen at different \x27places\x27 depending on the concrete type.\r\n */\r\ncljs.core.conj_BANG_ \x3d (function cljs$core$conj_BANG_(var_args){\r\nvar G__15389 \x3d arguments.length;\r\nswitch (G__15389) {\r\ncase 0:\r\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17815 \x3d arguments.length;\r\nvar i__4865__auto___17816 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17816 \x3c len__4864__auto___17815)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17816]));\r\n\r\nvar G__17818 \x3d (i__4865__auto___17816 + (1));\r\ni__4865__auto___17816 \x3d G__17818;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nreturn cljs.core.transient$(cljs.core.PersistentVector.EMPTY);\r\n}));\r\n\r\n(cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 \x3d (function (tcoll){\r\nreturn tcoll;\r\n}));\r\n\r\n(cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 \x3d (function (tcoll,val){\r\nreturn cljs.core._conj_BANG_(tcoll,val);\r\n}));\r\n\r\n(cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (tcoll,val,vals){\r\nwhile(true){\r\nvar ntcoll \x3d cljs.core._conj_BANG_(tcoll,val);\r\nif(cljs.core.truth_(vals)){\r\nvar G__17837 \x3d ntcoll;\r\nvar G__17838 \x3d cljs.core.first(vals);\r\nvar G__17839 \x3d cljs.core.next(vals);\r\ntcoll \x3d G__17837;\r\nval \x3d G__17838;\r\nvals \x3d G__17839;\r\ncontinue;\r\n} else {\r\nreturn ntcoll;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.conj_BANG_.cljs$lang$applyTo \x3d (function (seq15386){\r\nvar G__15387 \x3d cljs.core.first(seq15386);\r\nvar seq15386__$1 \x3d cljs.core.next(seq15386);\r\nvar G__15388 \x3d cljs.core.first(seq15386__$1);\r\nvar seq15386__$2 \x3d cljs.core.next(seq15386__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15387,G__15388,seq15386__$2);\r\n}));\r\n\r\n(cljs.core.conj_BANG_.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * When applied to a transient map, adds mapping of key(s) to\r\n *   val(s). When applied to a transient vector, sets the val at index.\r\n *   Note - index must be \x3c\x3d (count vector). Returns coll.\r\n */\r\ncljs.core.assoc_BANG_ \x3d (function cljs$core$assoc_BANG_(var_args){\r\nvar G__15395 \x3d arguments.length;\r\nswitch (G__15395) {\r\ncase 3:\r\nreturn cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17855 \x3d arguments.length;\r\nvar i__4865__auto___17856 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17856 \x3c len__4864__auto___17855)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17856]));\r\n\r\nvar G__17858 \x3d (i__4865__auto___17856 + (1));\r\ni__4865__auto___17856 \x3d G__17858;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((3)),(0),null));\r\nreturn cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 \x3d (function (tcoll,key,val){\r\nreturn cljs.core._assoc_BANG_(tcoll,key,val);\r\n}));\r\n\r\n(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (tcoll,key,val,kvs){\r\nwhile(true){\r\nvar ntcoll \x3d cljs.core._assoc_BANG_(tcoll,key,val);\r\nif(cljs.core.truth_(kvs)){\r\nvar G__17865 \x3d ntcoll;\r\nvar G__17866 \x3d cljs.core.first(kvs);\r\nvar G__17867 \x3d cljs.core.second(kvs);\r\nvar G__17868 \x3d cljs.core.nnext(kvs);\r\ntcoll \x3d G__17865;\r\nkey \x3d G__17866;\r\nval \x3d G__17867;\r\nkvs \x3d G__17868;\r\ncontinue;\r\n} else {\r\nreturn ntcoll;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.assoc_BANG_.cljs$lang$applyTo \x3d (function (seq15391){\r\nvar G__15392 \x3d cljs.core.first(seq15391);\r\nvar seq15391__$1 \x3d cljs.core.next(seq15391);\r\nvar G__15393 \x3d cljs.core.first(seq15391__$1);\r\nvar seq15391__$2 \x3d cljs.core.next(seq15391__$1);\r\nvar G__15394 \x3d cljs.core.first(seq15391__$2);\r\nvar seq15391__$3 \x3d cljs.core.next(seq15391__$2);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15392,G__15393,G__15394,seq15391__$3);\r\n}));\r\n\r\n(cljs.core.assoc_BANG_.cljs$lang$maxFixedArity \x3d (3));\r\n\r\n/**\r\n * Returns a transient map that doesn\x27t contain a mapping for key(s).\r\n */\r\ncljs.core.dissoc_BANG_ \x3d (function cljs$core$dissoc_BANG_(var_args){\r\nvar G__15400 \x3d arguments.length;\r\nswitch (G__15400) {\r\ncase 2:\r\nreturn cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17872 \x3d arguments.length;\r\nvar i__4865__auto___17873 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17873 \x3c len__4864__auto___17872)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17873]));\r\n\r\nvar G__17875 \x3d (i__4865__auto___17873 + (1));\r\ni__4865__auto___17873 \x3d G__17875;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 \x3d (function (tcoll,key){\r\nreturn cljs.core._dissoc_BANG_(tcoll,key);\r\n}));\r\n\r\n(cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (tcoll,key,ks){\r\nwhile(true){\r\nvar ntcoll \x3d cljs.core._dissoc_BANG_(tcoll,key);\r\nif(cljs.core.truth_(ks)){\r\nvar G__17876 \x3d ntcoll;\r\nvar G__17877 \x3d cljs.core.first(ks);\r\nvar G__17878 \x3d cljs.core.next(ks);\r\ntcoll \x3d G__17876;\r\nkey \x3d G__17877;\r\nks \x3d G__17878;\r\ncontinue;\r\n} else {\r\nreturn ntcoll;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.dissoc_BANG_.cljs$lang$applyTo \x3d (function (seq15397){\r\nvar G__15398 \x3d cljs.core.first(seq15397);\r\nvar seq15397__$1 \x3d cljs.core.next(seq15397);\r\nvar G__15399 \x3d cljs.core.first(seq15397__$1);\r\nvar seq15397__$2 \x3d cljs.core.next(seq15397__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15398,G__15399,seq15397__$2);\r\n}));\r\n\r\n(cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Removes the last item from a transient vector. If\r\n *   the collection is empty, throws an exception. Returns tcoll\r\n */\r\ncljs.core.pop_BANG_ \x3d (function cljs$core$pop_BANG_(tcoll){\r\nreturn cljs.core._pop_BANG_(tcoll);\r\n});\r\n/**\r\n * disj[oin]. Returns a transient set of the same (hashed/sorted) type, that\r\n *   does not contain key(s).\r\n */\r\ncljs.core.disj_BANG_ \x3d (function cljs$core$disj_BANG_(var_args){\r\nvar G__15405 \x3d arguments.length;\r\nswitch (G__15405) {\r\ncase 2:\r\nreturn cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___17885 \x3d arguments.length;\r\nvar i__4865__auto___17886 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17886 \x3c len__4864__auto___17885)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___17886]));\r\n\r\nvar G__17887 \x3d (i__4865__auto___17886 + (1));\r\ni__4865__auto___17886 \x3d G__17887;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 \x3d (function (tcoll,val){\r\nreturn cljs.core._disjoin_BANG_(tcoll,val);\r\n}));\r\n\r\n(cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (tcoll,val,vals){\r\nwhile(true){\r\nvar ntcoll \x3d cljs.core._disjoin_BANG_(tcoll,val);\r\nif(cljs.core.truth_(vals)){\r\nvar G__17888 \x3d ntcoll;\r\nvar G__17889 \x3d cljs.core.first(vals);\r\nvar G__17890 \x3d cljs.core.next(vals);\r\ntcoll \x3d G__17888;\r\nval \x3d G__17889;\r\nvals \x3d G__17890;\r\ncontinue;\r\n} else {\r\nreturn ntcoll;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.disj_BANG_.cljs$lang$applyTo \x3d (function (seq15402){\r\nvar G__15403 \x3d cljs.core.first(seq15402);\r\nvar seq15402__$1 \x3d cljs.core.next(seq15402);\r\nvar G__15404 \x3d cljs.core.first(seq15402__$1);\r\nvar seq15402__$2 \x3d cljs.core.next(seq15402__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15403,G__15404,seq15402__$2);\r\n}));\r\n\r\n(cljs.core.disj_BANG_.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n\r\ncljs.core.apply_to \x3d (function cljs$core$apply_to(f,argc,args){\r\nvar args__$1 \x3d cljs.core.seq(args);\r\nif((argc \x3d\x3d\x3d (0))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\n} else {\r\nvar a1 \x3d cljs.core._first(args__$1);\r\nvar args__$2 \x3d cljs.core._rest(args__$1);\r\nif((argc \x3d\x3d\x3d (1))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a1) : f.call(null,a1));\r\n} else {\r\nvar b2 \x3d cljs.core._first(args__$2);\r\nvar args__$3 \x3d cljs.core._rest(args__$2);\r\nif((argc \x3d\x3d\x3d (2))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a1,b2) : f.call(null,a1,b2));\r\n} else {\r\nvar c3 \x3d cljs.core._first(args__$3);\r\nvar args__$4 \x3d cljs.core._rest(args__$3);\r\nif((argc \x3d\x3d\x3d (3))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a1,b2,c3) : f.call(null,a1,b2,c3));\r\n} else {\r\nvar d4 \x3d cljs.core._first(args__$4);\r\nvar args__$5 \x3d cljs.core._rest(args__$4);\r\nif((argc \x3d\x3d\x3d (4))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a1,b2,c3,d4) : f.call(null,a1,b2,c3,d4));\r\n} else {\r\nvar e5 \x3d cljs.core._first(args__$5);\r\nvar args__$6 \x3d cljs.core._rest(args__$5);\r\nif((argc \x3d\x3d\x3d (5))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a1,b2,c3,d4,e5) : f.call(null,a1,b2,c3,d4,e5));\r\n} else {\r\nvar f6 \x3d cljs.core._first(args__$6);\r\nvar args__$7 \x3d cljs.core._rest(args__$6);\r\nif((argc \x3d\x3d\x3d (6))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a1,b2,c3,d4,e5,f6) : f.call(null,a1,b2,c3,d4,e5,f6));\r\n} else {\r\nvar g7 \x3d cljs.core._first(args__$7);\r\nvar args__$8 \x3d cljs.core._rest(args__$7);\r\nif((argc \x3d\x3d\x3d (7))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a1,b2,c3,d4,e5,f6,g7) : f.call(null,a1,b2,c3,d4,e5,f6,g7));\r\n} else {\r\nvar h8 \x3d cljs.core._first(args__$8);\r\nvar args__$9 \x3d cljs.core._rest(args__$8);\r\nif((argc \x3d\x3d\x3d (8))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a1,b2,c3,d4,e5,f6,g7,h8) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8));\r\n} else {\r\nvar i9 \x3d cljs.core._first(args__$9);\r\nvar args__$10 \x3d cljs.core._rest(args__$9);\r\nif((argc \x3d\x3d\x3d (9))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a1,b2,c3,d4,e5,f6,g7,h8,i9) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9));\r\n} else {\r\nvar j10 \x3d cljs.core._first(args__$10);\r\nvar args__$11 \x3d cljs.core._rest(args__$10);\r\nif((argc \x3d\x3d\x3d (10))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a1,b2,c3,d4,e5,f6,g7,h8,i9,j10) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9,j10));\r\n} else {\r\nvar k11 \x3d cljs.core._first(args__$11);\r\nvar args__$12 \x3d cljs.core._rest(args__$11);\r\nif((argc \x3d\x3d\x3d (11))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11));\r\n} else {\r\nvar l12 \x3d cljs.core._first(args__$12);\r\nvar args__$13 \x3d cljs.core._rest(args__$12);\r\nif((argc \x3d\x3d\x3d (12))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12));\r\n} else {\r\nvar m13 \x3d cljs.core._first(args__$13);\r\nvar args__$14 \x3d cljs.core._rest(args__$13);\r\nif((argc \x3d\x3d\x3d (13))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13));\r\n} else {\r\nvar n14 \x3d cljs.core._first(args__$14);\r\nvar args__$15 \x3d cljs.core._rest(args__$14);\r\nif((argc \x3d\x3d\x3d (14))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14));\r\n} else {\r\nvar o15 \x3d cljs.core._first(args__$15);\r\nvar args__$16 \x3d cljs.core._rest(args__$15);\r\nif((argc \x3d\x3d\x3d (15))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15));\r\n} else {\r\nvar p16 \x3d cljs.core._first(args__$16);\r\nvar args__$17 \x3d cljs.core._rest(args__$16);\r\nif((argc \x3d\x3d\x3d (16))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15,p16) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15,p16));\r\n} else {\r\nvar q17 \x3d cljs.core._first(args__$17);\r\nvar args__$18 \x3d cljs.core._rest(args__$17);\r\nif((argc \x3d\x3d\x3d (17))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15,p16,q17) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15,p16,q17));\r\n} else {\r\nvar r18 \x3d cljs.core._first(args__$18);\r\nvar args__$19 \x3d cljs.core._rest(args__$18);\r\nif((argc \x3d\x3d\x3d (18))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15,p16,q17,r18) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15,p16,q17,r18));\r\n} else {\r\nvar s19 \x3d cljs.core._first(args__$19);\r\nvar args__$20 \x3d cljs.core._rest(args__$19);\r\nif((argc \x3d\x3d\x3d (19))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15,p16,q17,r18,s19) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15,p16,q17,r18,s19));\r\n} else {\r\nvar t20 \x3d cljs.core._first(args__$20);\r\nvar args__$21 \x3d cljs.core._rest(args__$20);\r\nif((argc \x3d\x3d\x3d (20))){\r\nreturn (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15,p16,q17,r18,s19,t20) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15,p16,q17,r18,s19,t20));\r\n} else {\r\nthrow (new Error(\x22Only up to 20 arguments supported on functions\x22));\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\n\r\n/**\r\n * Internal. DO NOT USE! Next without the nil? check.\r\n */\r\ncljs.core.next_STAR_ \x3d (function cljs$core$next_STAR_(coll){\r\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (128))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$INext$))))?true:false):false)){\r\nreturn coll.cljs$core$INext$_next$arity$1(null);\r\n} else {\r\nreturn cljs.core.seq(cljs.core.rest(coll));\r\n}\r\n});\r\n/**\r\n * Internal. DO NOT USE!\r\n *   Assumes args was already called with seq beforehand!\r\n */\r\ncljs.core.apply_to_simple \x3d (function cljs$core$apply_to_simple(var_args){\r\nvar G__15408 \x3d arguments.length;\r\nswitch (G__15408) {\r\ncase 2:\r\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ncase 5:\r\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ncase 6:\r\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,args){\r\nif((args \x3d\x3d null)){\r\nif(f.cljs$core$IFn$_invoke$arity$0){\r\nreturn f.cljs$core$IFn$_invoke$arity$0();\r\n} else {\r\nreturn f.call(f);\r\n}\r\n} else {\r\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f,cljs.core._first(args),cljs.core.next_STAR_(args));\r\n}\r\n}));\r\n\r\n(cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3 \x3d (function (f,a0,args){\r\nif((args \x3d\x3d null)){\r\nif(f.cljs$core$IFn$_invoke$arity$1){\r\nreturn f.cljs$core$IFn$_invoke$arity$1(a0);\r\n} else {\r\nreturn f.call(f,a0);\r\n}\r\n} else {\r\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f,a0,cljs.core._first(args),cljs.core.next_STAR_(args));\r\n}\r\n}));\r\n\r\n(cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4 \x3d (function (f,a0,a1,args){\r\nif((args \x3d\x3d null)){\r\nif(f.cljs$core$IFn$_invoke$arity$2){\r\nreturn f.cljs$core$IFn$_invoke$arity$2(a0,a1);\r\n} else {\r\nreturn f.call(f,a0,a1);\r\n}\r\n} else {\r\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f,a0,a1,cljs.core._first(args),cljs.core.next_STAR_(args));\r\n}\r\n}));\r\n\r\n(cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5 \x3d (function (f,a0,a1,a2,args){\r\nif((args \x3d\x3d null)){\r\nif(f.cljs$core$IFn$_invoke$arity$3){\r\nreturn f.cljs$core$IFn$_invoke$arity$3(a0,a1,a2);\r\n} else {\r\nreturn f.call(f,a0,a1,a2);\r\n}\r\n} else {\r\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f,a0,a1,a2,cljs.core._first(args),cljs.core.next_STAR_(args));\r\n}\r\n}));\r\n\r\n(cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6 \x3d (function (f,a0,a1,a2,a3,args){\r\nif((args \x3d\x3d null)){\r\nif(f.cljs$core$IFn$_invoke$arity$4){\r\nreturn f.cljs$core$IFn$_invoke$arity$4(a0,a1,a2,a3);\r\n} else {\r\nreturn f.call(f,a0,a1,a2,a3);\r\n}\r\n} else {\r\nvar a4 \x3d cljs.core._first(args);\r\nvar next_4 \x3d cljs.core.next(args);\r\nif((next_4 \x3d\x3d null)){\r\nif(f.cljs$core$IFn$_invoke$arity$5){\r\nreturn f.cljs$core$IFn$_invoke$arity$5(a0,a1,a2,a3,a4);\r\n} else {\r\nreturn f.call(f,a0,a1,a2,a3,a4);\r\n}\r\n} else {\r\nvar a5 \x3d cljs.core._first(next_4);\r\nvar next_5 \x3d cljs.core.next(next_4);\r\nif((next_5 \x3d\x3d null)){\r\nif(f.cljs$core$IFn$_invoke$arity$6){\r\nreturn f.cljs$core$IFn$_invoke$arity$6(a0,a1,a2,a3,a4,a5);\r\n} else {\r\nreturn f.call(f,a0,a1,a2,a3,a4,a5);\r\n}\r\n} else {\r\nvar a6 \x3d cljs.core._first(next_5);\r\nvar next_6 \x3d cljs.core.next(next_5);\r\nif((next_6 \x3d\x3d null)){\r\nif(f.cljs$core$IFn$_invoke$arity$7){\r\nreturn f.cljs$core$IFn$_invoke$arity$7(a0,a1,a2,a3,a4,a5,a6);\r\n} else {\r\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6);\r\n}\r\n} else {\r\nvar a7 \x3d cljs.core._first(next_6);\r\nvar next_7 \x3d cljs.core.next(next_6);\r\nif((next_7 \x3d\x3d null)){\r\nif(f.cljs$core$IFn$_invoke$arity$8){\r\nreturn f.cljs$core$IFn$_invoke$arity$8(a0,a1,a2,a3,a4,a5,a6,a7);\r\n} else {\r\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7);\r\n}\r\n} else {\r\nvar a8 \x3d cljs.core._first(next_7);\r\nvar next_8 \x3d cljs.core.next(next_7);\r\nif((next_8 \x3d\x3d null)){\r\nif(f.cljs$core$IFn$_invoke$arity$9){\r\nreturn f.cljs$core$IFn$_invoke$arity$9(a0,a1,a2,a3,a4,a5,a6,a7,a8);\r\n} else {\r\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8);\r\n}\r\n} else {\r\nvar a9 \x3d cljs.core._first(next_8);\r\nvar next_9 \x3d cljs.core.next(next_8);\r\nif((next_9 \x3d\x3d null)){\r\nif(f.cljs$core$IFn$_invoke$arity$10){\r\nreturn f.cljs$core$IFn$_invoke$arity$10(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);\r\n} else {\r\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);\r\n}\r\n} else {\r\nvar a10 \x3d cljs.core._first(next_9);\r\nvar next_10 \x3d cljs.core.next(next_9);\r\nif((next_10 \x3d\x3d null)){\r\nif(f.cljs$core$IFn$_invoke$arity$11){\r\nreturn f.cljs$core$IFn$_invoke$arity$11(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);\r\n} else {\r\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);\r\n}\r\n} else {\r\nvar a11 \x3d cljs.core._first(next_10);\r\nvar next_11 \x3d cljs.core.next(next_10);\r\nif((next_11 \x3d\x3d null)){\r\nif(f.cljs$core$IFn$_invoke$arity$12){\r\nreturn f.cljs$core$IFn$_invoke$arity$12(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);\r\n} else {\r\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);\r\n}\r\n} else {\r\nvar a12 \x3d cljs.core._first(next_11);\r\nvar next_12 \x3d cljs.core.next(next_11);\r\nif((next_12 \x3d\x3d null)){\r\nif(f.cljs$core$IFn$_invoke$arity$13){\r\nreturn f.cljs$core$IFn$_invoke$arity$13(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);\r\n} else {\r\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);\r\n}\r\n} else {\r\nvar a13 \x3d cljs.core._first(next_12);\r\nvar next_13 \x3d cljs.core.next(next_12);\r\nif((next_13 \x3d\x3d null)){\r\nif(f.cljs$core$IFn$_invoke$arity$14){\r\nreturn f.cljs$core$IFn$_invoke$arity$14(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13);\r\n} else {\r\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13);\r\n}\r\n} else {\r\nvar a14 \x3d cljs.core._first(next_13);\r\nvar next_14 \x3d cljs.core.next(next_13);\r\nif((next_14 \x3d\x3d null)){\r\nif(f.cljs$core$IFn$_invoke$arity$15){\r\nreturn f.cljs$core$IFn$_invoke$arity$15(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14);\r\n} else {\r\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14);\r\n}\r\n} else {\r\nvar a15 \x3d cljs.core._first(next_14);\r\nvar next_15 \x3d cljs.core.next(next_14);\r\nif((next_15 \x3d\x3d null)){\r\nif(f.cljs$core$IFn$_invoke$arity$16){\r\nreturn f.cljs$core$IFn$_invoke$arity$16(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15);\r\n} else {\r\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15);\r\n}\r\n} else {\r\nvar a16 \x3d cljs.core._first(next_15);\r\nvar next_16 \x3d cljs.core.next(next_15);\r\nif((next_16 \x3d\x3d null)){\r\nif(f.cljs$core$IFn$_invoke$arity$17){\r\nreturn f.cljs$core$IFn$_invoke$arity$17(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16);\r\n} else {\r\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16);\r\n}\r\n} else {\r\nvar a17 \x3d cljs.core._first(next_16);\r\nvar next_17 \x3d cljs.core.next(next_16);\r\nif((next_17 \x3d\x3d null)){\r\nif(f.cljs$core$IFn$_invoke$arity$18){\r\nreturn f.cljs$core$IFn$_invoke$arity$18(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17);\r\n} else {\r\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17);\r\n}\r\n} else {\r\nvar a18 \x3d cljs.core._first(next_17);\r\nvar next_18 \x3d cljs.core.next(next_17);\r\nif((next_18 \x3d\x3d null)){\r\nif(f.cljs$core$IFn$_invoke$arity$19){\r\nreturn f.cljs$core$IFn$_invoke$arity$19(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18);\r\n} else {\r\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18);\r\n}\r\n} else {\r\nvar a19 \x3d cljs.core._first(next_18);\r\nvar next_19 \x3d cljs.core.next(next_18);\r\nif((next_19 \x3d\x3d null)){\r\nif(f.cljs$core$IFn$_invoke$arity$20){\r\nreturn f.cljs$core$IFn$_invoke$arity$20(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19);\r\n} else {\r\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19);\r\n}\r\n} else {\r\nvar arr__4789__auto__ \x3d [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19];\r\nvar s__4790__auto___18080 \x3d next_19;\r\nwhile(true){\r\nif(s__4790__auto___18080){\r\narr__4789__auto__.push(cljs.core._first(s__4790__auto___18080));\r\n\r\nvar G__18082 \x3d cljs.core.next(s__4790__auto___18080);\r\ns__4790__auto___18080 \x3d G__18082;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn f.apply(f,arr__4789__auto__);\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.apply_to_simple.cljs$lang$maxFixedArity \x3d 6);\r\n\r\n/**\r\n * Applies fn f to the argument list formed by prepending intervening arguments to args.\r\n */\r\ncljs.core.apply \x3d (function cljs$core$apply(var_args){\r\nvar G__15416 \x3d arguments.length;\r\nswitch (G__15416) {\r\ncase 2:\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ncase 5:\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___18089 \x3d arguments.length;\r\nvar i__4865__auto___18090 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___18090 \x3c len__4864__auto___18089)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___18090]));\r\n\r\nvar G__18091 \x3d (i__4865__auto___18090 + (1));\r\ni__4865__auto___18090 \x3d G__18091;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((5)),(0),null));\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.apply.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,args){\r\nif(f.cljs$lang$applyTo){\r\nvar fixed_arity \x3d f.cljs$lang$maxFixedArity;\r\nvar bc \x3d cljs.core.bounded_count((fixed_arity + (1)),args);\r\nif((bc \x3c\x3d fixed_arity)){\r\nreturn cljs.core.apply_to(f,bc,args);\r\n} else {\r\nreturn f.cljs$lang$applyTo(args);\r\n}\r\n} else {\r\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(args));\r\n}\r\n}));\r\n\r\n(cljs.core.apply.cljs$core$IFn$_invoke$arity$3 \x3d (function (f,x,args){\r\nif(f.cljs$lang$applyTo){\r\nvar arglist \x3d cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);\r\nvar fixed_arity \x3d f.cljs$lang$maxFixedArity;\r\nvar bc \x3d (cljs.core.bounded_count(fixed_arity,args) + (1));\r\nif((bc \x3c\x3d fixed_arity)){\r\nreturn cljs.core.apply_to(f,bc,arglist);\r\n} else {\r\nreturn f.cljs$lang$applyTo(arglist);\r\n}\r\n} else {\r\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f,x,cljs.core.seq(args));\r\n}\r\n}));\r\n\r\n(cljs.core.apply.cljs$core$IFn$_invoke$arity$4 \x3d (function (f,x,y,args){\r\nif(f.cljs$lang$applyTo){\r\nvar arglist \x3d cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);\r\nvar fixed_arity \x3d f.cljs$lang$maxFixedArity;\r\nvar bc \x3d ((2) + cljs.core.bounded_count((fixed_arity - (1)),args));\r\nif((bc \x3c\x3d fixed_arity)){\r\nreturn cljs.core.apply_to(f,bc,arglist);\r\n} else {\r\nreturn f.cljs$lang$applyTo(arglist);\r\n}\r\n} else {\r\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f,x,y,cljs.core.seq(args));\r\n}\r\n}));\r\n\r\n(cljs.core.apply.cljs$core$IFn$_invoke$arity$5 \x3d (function (f,x,y,z,args){\r\nif(f.cljs$lang$applyTo){\r\nvar arglist \x3d cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);\r\nvar fixed_arity \x3d f.cljs$lang$maxFixedArity;\r\nvar bc \x3d ((3) + cljs.core.bounded_count((fixed_arity - (2)),args));\r\nif((bc \x3c\x3d fixed_arity)){\r\nreturn cljs.core.apply_to(f,bc,arglist);\r\n} else {\r\nreturn f.cljs$lang$applyTo(arglist);\r\n}\r\n} else {\r\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f,x,y,z,cljs.core.seq(args));\r\n}\r\n}));\r\n\r\n(cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,a,b,c,d,args){\r\nif(f.cljs$lang$applyTo){\r\nvar spread_args \x3d cljs.core.spread(args);\r\nvar arglist \x3d cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,spread_args))));\r\nvar fixed_arity \x3d f.cljs$lang$maxFixedArity;\r\nvar bc \x3d ((4) + cljs.core.bounded_count((fixed_arity - (3)),spread_args));\r\nif((bc \x3c\x3d fixed_arity)){\r\nreturn cljs.core.apply_to(f,bc,arglist);\r\n} else {\r\nreturn f.cljs$lang$applyTo(arglist);\r\n}\r\n} else {\r\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f,a,b,c,d,cljs.core.spread(args));\r\n}\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.apply.cljs$lang$applyTo \x3d (function (seq15410){\r\nvar G__15411 \x3d cljs.core.first(seq15410);\r\nvar seq15410__$1 \x3d cljs.core.next(seq15410);\r\nvar G__15412 \x3d cljs.core.first(seq15410__$1);\r\nvar seq15410__$2 \x3d cljs.core.next(seq15410__$1);\r\nvar G__15413 \x3d cljs.core.first(seq15410__$2);\r\nvar seq15410__$3 \x3d cljs.core.next(seq15410__$2);\r\nvar G__15414 \x3d cljs.core.first(seq15410__$3);\r\nvar seq15410__$4 \x3d cljs.core.next(seq15410__$3);\r\nvar G__15415 \x3d cljs.core.first(seq15410__$4);\r\nvar seq15410__$5 \x3d cljs.core.next(seq15410__$4);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15411,G__15412,G__15413,G__15414,G__15415,seq15410__$5);\r\n}));\r\n\r\n(cljs.core.apply.cljs$lang$maxFixedArity \x3d (5));\r\n\r\ncljs.core.__destructure_map \x3d (function cljs$core$__destructure_map(x){\r\nif((((!((x \x3d\x3d null))))?(((((x.cljs$lang$protocol_mask$partition0$ \x26 (64))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$ISeq$))))?true:false):false)){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,x);\r\n} else {\r\nreturn x;\r\n}\r\n});\r\n/**\r\n * Returns an object of the same type and value as obj, with\r\n *   (apply f (meta obj) args) as its metadata.\r\n */\r\ncljs.core.vary_meta \x3d (function cljs$core$vary_meta(var_args){\r\nvar G__15426 \x3d arguments.length;\r\nswitch (G__15426) {\r\ncase 2:\r\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ncase 5:\r\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ncase 6:\r\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___18113 \x3d arguments.length;\r\nvar i__4865__auto___18114 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___18114 \x3c len__4864__auto___18113)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___18114]));\r\n\r\nvar G__18115 \x3d (i__4865__auto___18114 + (1));\r\ni__4865__auto___18114 \x3d G__18115;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((6)),(0),null));\r\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 \x3d (function (obj,f){\r\nreturn cljs.core.with_meta(obj,(function (){var G__15427 \x3d cljs.core.meta(obj);\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15427) : f.call(null,G__15427));\r\n})());\r\n}));\r\n\r\n(cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 \x3d (function (obj,f,a){\r\nreturn cljs.core.with_meta(obj,(function (){var G__15428 \x3d cljs.core.meta(obj);\r\nvar G__15429 \x3d a;\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15428,G__15429) : f.call(null,G__15428,G__15429));\r\n})());\r\n}));\r\n\r\n(cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 \x3d (function (obj,f,a,b){\r\nreturn cljs.core.with_meta(obj,(function (){var G__15430 \x3d cljs.core.meta(obj);\r\nvar G__15431 \x3d a;\r\nvar G__15432 \x3d b;\r\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15430,G__15431,G__15432) : f.call(null,G__15430,G__15431,G__15432));\r\n})());\r\n}));\r\n\r\n(cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 \x3d (function (obj,f,a,b,c){\r\nreturn cljs.core.with_meta(obj,(function (){var G__15433 \x3d cljs.core.meta(obj);\r\nvar G__15434 \x3d a;\r\nvar G__15435 \x3d b;\r\nvar G__15436 \x3d c;\r\nreturn (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15433,G__15434,G__15435,G__15436) : f.call(null,G__15433,G__15434,G__15435,G__15436));\r\n})());\r\n}));\r\n\r\n(cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 \x3d (function (obj,f,a,b,c,d){\r\nreturn cljs.core.with_meta(obj,(function (){var G__15437 \x3d cljs.core.meta(obj);\r\nvar G__15438 \x3d a;\r\nvar G__15439 \x3d b;\r\nvar G__15440 \x3d c;\r\nvar G__15441 \x3d d;\r\nreturn (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__15437,G__15438,G__15439,G__15440,G__15441) : f.call(null,G__15437,G__15438,G__15439,G__15440,G__15441));\r\n})());\r\n}));\r\n\r\n(cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic \x3d (function (obj,f,a,b,c,d,args){\r\nreturn cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([d,args], 0)));\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.vary_meta.cljs$lang$applyTo \x3d (function (seq15419){\r\nvar G__15420 \x3d cljs.core.first(seq15419);\r\nvar seq15419__$1 \x3d cljs.core.next(seq15419);\r\nvar G__15421 \x3d cljs.core.first(seq15419__$1);\r\nvar seq15419__$2 \x3d cljs.core.next(seq15419__$1);\r\nvar G__15422 \x3d cljs.core.first(seq15419__$2);\r\nvar seq15419__$3 \x3d cljs.core.next(seq15419__$2);\r\nvar G__15423 \x3d cljs.core.first(seq15419__$3);\r\nvar seq15419__$4 \x3d cljs.core.next(seq15419__$3);\r\nvar G__15424 \x3d cljs.core.first(seq15419__$4);\r\nvar seq15419__$5 \x3d cljs.core.next(seq15419__$4);\r\nvar G__15425 \x3d cljs.core.first(seq15419__$5);\r\nvar seq15419__$6 \x3d cljs.core.next(seq15419__$5);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15420,G__15421,G__15422,G__15423,G__15424,G__15425,seq15419__$6);\r\n}));\r\n\r\n(cljs.core.vary_meta.cljs$lang$maxFixedArity \x3d (6));\r\n\r\n/**\r\n * Same as (not (\x3d obj1 obj2))\r\n */\r\ncljs.core.not_EQ_ \x3d (function cljs$core$not_EQ_(var_args){\r\nvar G__15446 \x3d arguments.length;\r\nswitch (G__15446) {\r\ncase 1:\r\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___18123 \x3d arguments.length;\r\nvar i__4865__auto___18125 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___18125 \x3c len__4864__auto___18123)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___18125]));\r\n\r\nvar G__18127 \x3d (i__4865__auto___18125 + (1));\r\ni__4865__auto___18125 \x3d G__18127;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn false;\r\n}));\r\n\r\n(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\r\nreturn (!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)));\r\n}));\r\n\r\n(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\r\nreturn cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.not_EQ_.cljs$lang$applyTo \x3d (function (seq15443){\r\nvar G__15444 \x3d cljs.core.first(seq15443);\r\nvar seq15443__$1 \x3d cljs.core.next(seq15443);\r\nvar G__15445 \x3d cljs.core.first(seq15443__$1);\r\nvar seq15443__$2 \x3d cljs.core.next(seq15443__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15444,G__15445,seq15443__$2);\r\n}));\r\n\r\n(cljs.core.not_EQ_.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * If coll is empty, returns nil, else coll\r\n */\r\ncljs.core.not_empty \x3d (function cljs$core$not_empty(coll){\r\nif(cljs.core.seq(coll)){\r\nreturn coll;\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ncljs.core.nil_iter \x3d (function cljs$core$nil_iter(){\r\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core.t_cljs$core15447 !\x3d\x3d \x27undefined\x27)){\r\n} else {\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.IWithMeta}\r\n*/\r\ncljs.core.t_cljs$core15447 \x3d (function (meta15448){\r\nthis.meta15448 \x3d meta15448;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 393216;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.t_cljs$core15447.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_15449,meta15448__$1){\r\nvar self__ \x3d this;\r\nvar _15449__$1 \x3d this;\r\nreturn (new cljs.core.t_cljs$core15447(meta15448__$1));\r\n}));\r\n\r\n(cljs.core.t_cljs$core15447.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_15449){\r\nvar self__ \x3d this;\r\nvar _15449__$1 \x3d this;\r\nreturn self__.meta15448;\r\n}));\r\n\r\n(cljs.core.t_cljs$core15447.prototype.hasNext \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn false;\r\n}));\r\n\r\n(cljs.core.t_cljs$core15447.prototype.next \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (new Error(\x22No such element\x22));\r\n}));\r\n\r\n(cljs.core.t_cljs$core15447.prototype.remove \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (new Error(\x22Unsupported operation\x22));\r\n}));\r\n\r\n(cljs.core.t_cljs$core15447.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta15448\x22,\x22meta15448\x22,512064760,null)], null);\r\n}));\r\n\r\n(cljs.core.t_cljs$core15447.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.t_cljs$core15447.cljs$lang$ctorStr \x3d \x22cljs.core/t_cljs$core15447\x22);\r\n\r\n(cljs.core.t_cljs$core15447.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/t_cljs$core15447\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/t_cljs$core15447.\r\n */\r\ncljs.core.__GT_t_cljs$core15447 \x3d (function cljs$core$nil_iter_$___GT_t_cljs$core15447(meta15448){\r\nreturn (new cljs.core.t_cljs$core15447(meta15448));\r\n});\r\n\r\n}\r\n\r\nreturn (new cljs.core.t_cljs$core15447(cljs.core.PersistentArrayMap.EMPTY));\r\n});\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.StringIter \x3d (function (s,i){\r\nthis.s \x3d s;\r\nthis.i \x3d i;\r\n});\r\n(cljs.core.StringIter.prototype.hasNext \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.i \x3c self__.s.length);\r\n}));\r\n\r\n(cljs.core.StringIter.prototype.next \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar ret \x3d self__.s.charAt(self__.i);\r\n(self__.i \x3d (self__.i + (1)));\r\n\r\nreturn ret;\r\n}));\r\n\r\n(cljs.core.StringIter.prototype.remove \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (new Error(\x22Unsupported operation\x22));\r\n}));\r\n\r\n(cljs.core.StringIter.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22s\x22,\x22s\x22,-948495851,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.StringIter.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.StringIter.cljs$lang$ctorStr \x3d \x22cljs.core/StringIter\x22);\r\n\r\n(cljs.core.StringIter.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/StringIter\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/StringIter.\r\n */\r\ncljs.core.__GT_StringIter \x3d (function cljs$core$__GT_StringIter(s,i){\r\nreturn (new cljs.core.StringIter(s,i));\r\n});\r\n\r\ncljs.core.string_iter \x3d (function cljs$core$string_iter(x){\r\nreturn (new cljs.core.StringIter(x,(0)));\r\n});\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.ArrayIter \x3d (function (arr,i){\r\nthis.arr \x3d arr;\r\nthis.i \x3d i;\r\n});\r\n(cljs.core.ArrayIter.prototype.hasNext \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.i \x3c self__.arr.length);\r\n}));\r\n\r\n(cljs.core.ArrayIter.prototype.next \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar ret \x3d (self__.arr[self__.i]);\r\n(self__.i \x3d (self__.i + (1)));\r\n\r\nreturn ret;\r\n}));\r\n\r\n(cljs.core.ArrayIter.prototype.remove \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (new Error(\x22Unsupported operation\x22));\r\n}));\r\n\r\n(cljs.core.ArrayIter.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.ArrayIter.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.ArrayIter.cljs$lang$ctorStr \x3d \x22cljs.core/ArrayIter\x22);\r\n\r\n(cljs.core.ArrayIter.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/ArrayIter\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/ArrayIter.\r\n */\r\ncljs.core.__GT_ArrayIter \x3d (function cljs$core$__GT_ArrayIter(arr,i){\r\nreturn (new cljs.core.ArrayIter(arr,i));\r\n});\r\n\r\ncljs.core.array_iter \x3d (function cljs$core$array_iter(x){\r\nreturn (new cljs.core.ArrayIter(x,(0)));\r\n});\r\ncljs.core.INIT \x3d ({});\r\ncljs.core.START \x3d ({});\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.SeqIter \x3d (function (_seq,_next){\r\nthis._seq \x3d _seq;\r\nthis._next \x3d _next;\r\n});\r\n(cljs.core.SeqIter.prototype.hasNext \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nif((self__._seq \x3d\x3d\x3d cljs.core.INIT)){\r\n(self__._seq \x3d cljs.core.START);\r\n\r\n(self__._next \x3d cljs.core.seq(self__._next));\r\n} else {\r\nif((self__._seq \x3d\x3d\x3d self__._next)){\r\n(self__._next \x3d cljs.core.next(self__._seq));\r\n} else {\r\n}\r\n}\r\n\r\nreturn (!((self__._next \x3d\x3d null)));\r\n}));\r\n\r\n(cljs.core.SeqIter.prototype.next \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nif((!(this$.hasNext()))){\r\nthrow (new Error(\x22No such element\x22));\r\n} else {\r\n(self__._seq \x3d self__._next);\r\n\r\nreturn cljs.core.first(self__._next);\r\n}\r\n}));\r\n\r\n(cljs.core.SeqIter.prototype.remove \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (new Error(\x22Unsupported operation\x22));\r\n}));\r\n\r\n(cljs.core.SeqIter.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22_seq\x22,\x22_seq\x22,-449557847,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22_next\x22,\x22_next\x22,101877036,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.SeqIter.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.SeqIter.cljs$lang$ctorStr \x3d \x22cljs.core/SeqIter\x22);\r\n\r\n(cljs.core.SeqIter.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/SeqIter\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/SeqIter.\r\n */\r\ncljs.core.__GT_SeqIter \x3d (function cljs$core$__GT_SeqIter(_seq,_next){\r\nreturn (new cljs.core.SeqIter(_seq,_next));\r\n});\r\n\r\ncljs.core.seq_iter \x3d (function cljs$core$seq_iter(coll){\r\nreturn (new cljs.core.SeqIter(cljs.core.INIT,coll));\r\n});\r\ncljs.core.iter \x3d (function cljs$core$iter(coll){\r\nif(cljs.core.iterable_QMARK_(coll)){\r\nreturn cljs.core._iterator(coll);\r\n} else {\r\nif((coll \x3d\x3d null)){\r\nreturn cljs.core.nil_iter();\r\n} else {\r\nif(typeof coll \x3d\x3d\x3d \x27string\x27){\r\nreturn cljs.core.string_iter(coll);\r\n} else {\r\nif(cljs.core.array_QMARK_(coll)){\r\nreturn cljs.core.array_iter(coll);\r\n} else {\r\nif(cljs.core.seqable_QMARK_(coll)){\r\nreturn cljs.core.seq_iter(coll);\r\n} else {\r\nthrow (new Error([\x22Cannot create iterator from \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll)].join(\x27\x27)));\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.Many \x3d (function (vals){\r\nthis.vals \x3d vals;\r\n});\r\n(cljs.core.Many.prototype.add \x3d (function (o){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nself__.vals.push(o);\r\n\r\nreturn this$;\r\n}));\r\n\r\n(cljs.core.Many.prototype.remove \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn self__.vals.shift();\r\n}));\r\n\r\n(cljs.core.Many.prototype.isEmpty \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn (self__.vals.length \x3d\x3d\x3d (0));\r\n}));\r\n\r\n(cljs.core.Many.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn [\x22Many: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.vals)].join(\x27\x27);\r\n}));\r\n\r\n(cljs.core.Many.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22vals\x22,\x22vals\x22,-1886377036,null)], null);\r\n}));\r\n\r\n(cljs.core.Many.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.Many.cljs$lang$ctorStr \x3d \x22cljs.core/Many\x22);\r\n\r\n(cljs.core.Many.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/Many\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/Many.\r\n */\r\ncljs.core.__GT_Many \x3d (function cljs$core$__GT_Many(vals){\r\nreturn (new cljs.core.Many(vals));\r\n});\r\n\r\ncljs.core.NONE \x3d ({});\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.Single \x3d (function (val){\r\nthis.val \x3d val;\r\n});\r\n(cljs.core.Single.prototype.add \x3d (function (o){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nif((self__.val \x3d\x3d\x3d cljs.core.NONE)){\r\n(self__.val \x3d o);\r\n\r\nreturn this$;\r\n} else {\r\nreturn (new cljs.core.Many([self__.val,o]));\r\n}\r\n}));\r\n\r\n(cljs.core.Single.prototype.remove \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nif((self__.val \x3d\x3d\x3d cljs.core.NONE)){\r\nthrow (new Error(\x22Removing object from empty buffer\x22));\r\n} else {\r\nvar ret \x3d self__.val;\r\n(self__.val \x3d cljs.core.NONE);\r\n\r\nreturn ret;\r\n}\r\n}));\r\n\r\n(cljs.core.Single.prototype.isEmpty \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn (self__.val \x3d\x3d\x3d cljs.core.NONE);\r\n}));\r\n\r\n(cljs.core.Single.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn [\x22Single: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.val)].join(\x27\x27);\r\n}));\r\n\r\n(cljs.core.Single.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22val\x22,\x22val\x22,1769233139,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.Single.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.Single.cljs$lang$ctorStr \x3d \x22cljs.core/Single\x22);\r\n\r\n(cljs.core.Single.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/Single\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/Single.\r\n */\r\ncljs.core.__GT_Single \x3d (function cljs$core$__GT_Single(val){\r\nreturn (new cljs.core.Single(val));\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.Empty \x3d (function (){\r\n});\r\n(cljs.core.Empty.prototype.add \x3d (function (o){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn (new cljs.core.Single(o));\r\n}));\r\n\r\n(cljs.core.Empty.prototype.remove \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nthrow (new Error(\x22Removing object from empty buffer\x22));\r\n}));\r\n\r\n(cljs.core.Empty.prototype.isEmpty \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn true;\r\n}));\r\n\r\n(cljs.core.Empty.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn \x22Empty\x22;\r\n}));\r\n\r\n(cljs.core.Empty.getBasis \x3d (function (){\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n}));\r\n\r\n(cljs.core.Empty.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.Empty.cljs$lang$ctorStr \x3d \x22cljs.core/Empty\x22);\r\n\r\n(cljs.core.Empty.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/Empty\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/Empty.\r\n */\r\ncljs.core.__GT_Empty \x3d (function cljs$core$__GT_Empty(){\r\nreturn (new cljs.core.Empty());\r\n});\r\n\r\ncljs.core.EMPTY \x3d (new cljs.core.Empty());\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.MultiIterator \x3d (function (iters){\r\nthis.iters \x3d iters;\r\n});\r\n(cljs.core.MultiIterator.prototype.hasNext \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar iters__$1 \x3d cljs.core.seq(self__.iters);\r\nwhile(true){\r\nif((!((iters__$1 \x3d\x3d null)))){\r\nvar iter \x3d cljs.core.first(iters__$1);\r\nif((!(iter.hasNext()))){\r\nreturn false;\r\n} else {\r\nvar G__18178 \x3d cljs.core.next(iters__$1);\r\niters__$1 \x3d G__18178;\r\ncontinue;\r\n}\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.MultiIterator.prototype.next \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar nexts \x3d [];\r\nvar n__4741__auto___18179 \x3d self__.iters.length;\r\nvar i_18180 \x3d (0);\r\nwhile(true){\r\nif((i_18180 \x3c n__4741__auto___18179)){\r\n(nexts[i_18180] \x3d (self__.iters[i_18180]).next());\r\n\r\nvar G__18181 \x3d (i_18180 + (1));\r\ni_18180 \x3d G__18181;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(nexts,(0));\r\n}));\r\n\r\n(cljs.core.MultiIterator.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22iters\x22,\x22iters\x22,719353031,null)], null);\r\n}));\r\n\r\n(cljs.core.MultiIterator.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.MultiIterator.cljs$lang$ctorStr \x3d \x22cljs.core/MultiIterator\x22);\r\n\r\n(cljs.core.MultiIterator.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/MultiIterator\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/MultiIterator.\r\n */\r\ncljs.core.__GT_MultiIterator \x3d (function cljs$core$__GT_MultiIterator(iters){\r\nreturn (new cljs.core.MultiIterator(iters));\r\n});\r\n\r\ncljs.core.chunkIteratorSeq \x3d (function cljs$core$chunkIteratorSeq(iter){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nif(iter.hasNext()){\r\nvar arr \x3d [];\r\nvar n \x3d (0);\r\nwhile(true){\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d iter.hasNext();\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn (n \x3c (32));\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\n(arr[n] \x3d iter.next());\r\n\r\nvar G__18183 \x3d (n + (1));\r\nn \x3d G__18183;\r\ncontinue;\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arr,(0),n),(cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1(iter) : cljs.core.chunkIteratorSeq.call(null,iter)));\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}),null,null));\r\n});\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.TransformerIterator \x3d (function (buffer,_next,completed,xf,sourceIter,multi){\r\nthis.buffer \x3d buffer;\r\nthis._next \x3d _next;\r\nthis.completed \x3d completed;\r\nthis.xf \x3d xf;\r\nthis.sourceIter \x3d sourceIter;\r\nthis.multi \x3d multi;\r\n});\r\n(cljs.core.TransformerIterator.prototype.step \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nif((!((self__._next \x3d\x3d\x3d cljs.core.NONE)))){\r\nreturn true;\r\n} else {\r\nwhile(true){\r\nif((self__._next \x3d\x3d\x3d cljs.core.NONE)){\r\nif(self__.buffer.isEmpty()){\r\nif(self__.completed){\r\nreturn false;\r\n} else {\r\nif(self__.sourceIter.hasNext()){\r\nvar iter \x3d ((self__.multi)?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xf,cljs.core.cons(null,self__.sourceIter.next())):(function (){var G__15450 \x3d null;\r\nvar G__15451 \x3d self__.sourceIter.next();\r\nreturn (self__.xf.cljs$core$IFn$_invoke$arity$2 ? self__.xf.cljs$core$IFn$_invoke$arity$2(G__15450,G__15451) : self__.xf.call(null,G__15450,G__15451));\r\n})());\r\nif(cljs.core.reduced_QMARK_(iter)){\r\n(self__.xf.cljs$core$IFn$_invoke$arity$1 ? self__.xf.cljs$core$IFn$_invoke$arity$1(null) : self__.xf.call(null,null));\r\n\r\n(self__.completed \x3d true);\r\n} else {\r\n}\r\n\r\ncontinue;\r\n} else {\r\n(self__.xf.cljs$core$IFn$_invoke$arity$1 ? self__.xf.cljs$core$IFn$_invoke$arity$1(null) : self__.xf.call(null,null));\r\n\r\n(self__.completed \x3d true);\r\n\r\ncontinue;\r\n}\r\n}\r\n} else {\r\n(self__._next \x3d self__.buffer.remove());\r\n\r\ncontinue;\r\n}\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.TransformerIterator.prototype.hasNext \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.step();\r\n}));\r\n\r\n(cljs.core.TransformerIterator.prototype.next \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nif(this$.hasNext()){\r\nvar ret \x3d self__._next;\r\n(self__._next \x3d cljs.core.NONE);\r\n\r\nreturn ret;\r\n} else {\r\nthrow (new Error(\x22No such element\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.TransformerIterator.prototype.remove \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (new Error(\x22Unsupported operation\x22));\r\n}));\r\n\r\n(cljs.core.TransformerIterator.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22buffer\x22,\x22buffer\x22,-2037140571,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22_next\x22,\x22_next\x22,101877036,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22completed\x22,\x22completed\x22,1154475024,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22xf\x22,\x22xf\x22,2042434515,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22sourceIter\x22,\x22sourceIter\x22,1068220306,null),new cljs.core.Symbol(null,\x22multi\x22,\x22multi\x22,1450238522,null)], null);\r\n}));\r\n\r\n(cljs.core.TransformerIterator.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.TransformerIterator.cljs$lang$ctorStr \x3d \x22cljs.core/TransformerIterator\x22);\r\n\r\n(cljs.core.TransformerIterator.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/TransformerIterator\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/TransformerIterator.\r\n */\r\ncljs.core.__GT_TransformerIterator \x3d (function cljs$core$__GT_TransformerIterator(buffer,_next,completed,xf,sourceIter,multi){\r\nreturn (new cljs.core.TransformerIterator(buffer,_next,completed,xf,sourceIter,multi));\r\n});\r\n\r\n(cljs.core.TransformerIterator.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\ncljs.core.transformer_iterator \x3d (function cljs$core$transformer_iterator(xform,sourceIter,multi){\r\nvar iterator \x3d (new cljs.core.TransformerIterator(cljs.core.EMPTY,cljs.core.NONE,false,null,sourceIter,multi));\r\n(iterator.xf \x3d (function (){var G__15452 \x3d (function() {\r\nvar G__18198 \x3d null;\r\nvar G__18198__0 \x3d (function (){\r\nreturn null;\r\n});\r\nvar G__18198__1 \x3d (function (acc){\r\nreturn acc;\r\n});\r\nvar G__18198__2 \x3d (function (acc,o){\r\n(iterator.buffer \x3d iterator.buffer.add(o));\r\n\r\nreturn acc;\r\n});\r\nG__18198 \x3d function(acc,o){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__18198__0.call(this);\r\ncase 1:\r\nreturn G__18198__1.call(this,acc);\r\ncase 2:\r\nreturn G__18198__2.call(this,acc,o);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__18198.cljs$core$IFn$_invoke$arity$0 \x3d G__18198__0;\r\nG__18198.cljs$core$IFn$_invoke$arity$1 \x3d G__18198__1;\r\nG__18198.cljs$core$IFn$_invoke$arity$2 \x3d G__18198__2;\r\nreturn G__18198;\r\n})()\r\n;\r\nreturn (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__15452) : xform.call(null,G__15452));\r\n})());\r\n\r\nreturn iterator;\r\n});\r\n(cljs.core.TransformerIterator.create \x3d (function (xform,source){\r\nreturn cljs.core.transformer_iterator(xform,source,false);\r\n}));\r\n(cljs.core.TransformerIterator.createMulti \x3d (function (xform,sources){\r\nreturn cljs.core.transformer_iterator(xform,(new cljs.core.MultiIterator(cljs.core.to_array(sources))),true);\r\n}));\r\n/**\r\n * Coerces coll to a (possibly empty) sequence, if it is not already\r\n *   one. Will not force a lazy seq. (sequence nil) yields (), When a\r\n *   transducer is supplied, returns a lazy sequence of applications of\r\n *   the transform to the items in coll(s), i.e. to the set of first\r\n *   items of each coll, followed by the set of second\r\n *   items in each coll, until any one of the colls is exhausted.  Any\r\n *   remaining items in other colls are ignored. The transform should accept\r\n *   number-of-colls arguments\r\n */\r\ncljs.core.sequence \x3d (function cljs$core$sequence(var_args){\r\nvar G__15457 \x3d arguments.length;\r\nswitch (G__15457) {\r\ncase 1:\r\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___18202 \x3d arguments.length;\r\nvar i__4865__auto___18203 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___18203 \x3c len__4864__auto___18202)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___18203]));\r\n\r\nvar G__18204 \x3d (i__4865__auto___18203 + (1));\r\ni__4865__auto___18203 \x3d G__18204;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\r\nif(cljs.core.seq_QMARK_(coll)){\r\nreturn coll;\r\n} else {\r\nvar or__4253__auto__ \x3d cljs.core.seq(coll);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.core.List.EMPTY;\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 \x3d (function (xform,coll){\r\nvar or__4253__auto__ \x3d cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.create(xform,cljs.core.iter(coll)));\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.core.List.EMPTY;\r\n}\r\n}));\r\n\r\n(cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic \x3d (function (xform,coll,colls){\r\nvar or__4253__auto__ \x3d cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.createMulti(xform,(function (){var G__15458 \x3d cljs.core.iter;\r\nvar G__15459 \x3d cljs.core.cons(coll,colls);\r\nreturn (cljs.core.map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.map.cljs$core$IFn$_invoke$arity$2(G__15458,G__15459) : cljs.core.map.call(null,G__15458,G__15459));\r\n})()));\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.core.List.EMPTY;\r\n}\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.sequence.cljs$lang$applyTo \x3d (function (seq15454){\r\nvar G__15455 \x3d cljs.core.first(seq15454);\r\nvar seq15454__$1 \x3d cljs.core.next(seq15454);\r\nvar G__15456 \x3d cljs.core.first(seq15454__$1);\r\nvar seq15454__$2 \x3d cljs.core.next(seq15454__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15455,G__15456,seq15454__$2);\r\n}));\r\n\r\n(cljs.core.sequence.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Returns true if (pred x) is logical true for every x in coll, else\r\n *   false.\r\n */\r\ncljs.core.every_QMARK_ \x3d (function cljs$core$every_QMARK_(pred,coll){\r\nwhile(true){\r\nif((cljs.core.seq(coll) \x3d\x3d null)){\r\nreturn true;\r\n} else {\r\nif(cljs.core.truth_((function (){var G__15460 \x3d cljs.core.first(coll);\r\nreturn (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15460) : pred.call(null,G__15460));\r\n})())){\r\nvar G__18214 \x3d pred;\r\nvar G__18215 \x3d cljs.core.next(coll);\r\npred \x3d G__18214;\r\ncoll \x3d G__18215;\r\ncontinue;\r\n} else {\r\nreturn false;\r\n\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Returns false if (pred x) is logical true for every x in\r\n *   coll, else true.\r\n */\r\ncljs.core.not_every_QMARK_ \x3d (function cljs$core$not_every_QMARK_(pred,coll){\r\nreturn (!(cljs.core.every_QMARK_(pred,coll)));\r\n});\r\n/**\r\n * Returns the first logical true value of (pred x) for any x in coll,\r\n *   else nil.  One common idiom is to use a set as pred, for example\r\n *   this will return :fred if :fred is in the sequence, otherwise nil:\r\n *   (some #{:fred} coll)\r\n */\r\ncljs.core.some \x3d (function cljs$core$some(pred,coll){\r\nwhile(true){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(coll);\r\nif(temp__5753__auto__){\r\nvar s \x3d temp__5753__auto__;\r\nvar or__4253__auto__ \x3d (function (){var G__15461 \x3d cljs.core.first(s);\r\nreturn (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15461) : pred.call(null,G__15461));\r\n})();\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar G__18220 \x3d pred;\r\nvar G__18221 \x3d cljs.core.next(s);\r\npred \x3d G__18220;\r\ncoll \x3d G__18221;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Returns false if (pred x) is logical true for any x in coll,\r\n *   else true.\r\n */\r\ncljs.core.not_any_QMARK_ \x3d (function cljs$core$not_any_QMARK_(pred,coll){\r\nreturn cljs.core.not(cljs.core.some(pred,coll));\r\n});\r\n/**\r\n * Returns true if n is even, throws an exception if n is not an integer\r\n */\r\ncljs.core.even_QMARK_ \x3d (function cljs$core$even_QMARK_(n){\r\nif(cljs.core.integer_QMARK_(n)){\r\nreturn ((n \x26 (1)) \x3d\x3d\x3d (0));\r\n} else {\r\nthrow (new Error([\x22Argument must be an integer: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join(\x27\x27)));\r\n}\r\n});\r\n/**\r\n * Returns true if n is odd, throws an exception if n is not an integer\r\n */\r\ncljs.core.odd_QMARK_ \x3d (function cljs$core$odd_QMARK_(n){\r\nreturn (!(cljs.core.even_QMARK_(n)));\r\n});\r\n/**\r\n * Takes a fn f and returns a fn that takes the same arguments as f,\r\n *   has the same effects, if any, and returns the opposite truth value.\r\n */\r\ncljs.core.complement \x3d (function cljs$core$complement(f){\r\nreturn (function() {\r\nvar G__18231 \x3d null;\r\nvar G__18231__0 \x3d (function (){\r\nreturn cljs.core.not((f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)));\r\n});\r\nvar G__18231__1 \x3d (function (x){\r\nreturn cljs.core.not((f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null,x)));\r\n});\r\nvar G__18231__2 \x3d (function (x,y){\r\nreturn cljs.core.not((f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x,y) : f.call(null,x,y)));\r\n});\r\nvar G__18231__3 \x3d (function() { \r\nvar G__18233__delegate \x3d function (x,y,zs){\r\nreturn cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));\r\n};\r\nvar G__18233 \x3d function (x,y,var_args){\r\nvar zs \x3d null;\r\nif (arguments.length \x3e 2) {\r\nvar G__18234__i \x3d 0, G__18234__a \x3d new Array(arguments.length -  2);\r\nwhile (G__18234__i \x3c G__18234__a.length) {G__18234__a[G__18234__i] \x3d arguments[G__18234__i + 2]; ++G__18234__i;}\r\n  zs \x3d new cljs.core.IndexedSeq(G__18234__a,0,null);\r\n} \r\nreturn G__18233__delegate.call(this,x,y,zs);};\r\nG__18233.cljs$lang$maxFixedArity \x3d 2;\r\nG__18233.cljs$lang$applyTo \x3d (function (arglist__18235){\r\nvar x \x3d cljs.core.first(arglist__18235);\r\narglist__18235 \x3d cljs.core.next(arglist__18235);\r\nvar y \x3d cljs.core.first(arglist__18235);\r\nvar zs \x3d cljs.core.rest(arglist__18235);\r\nreturn G__18233__delegate(x,y,zs);\r\n});\r\nG__18233.cljs$core$IFn$_invoke$arity$variadic \x3d G__18233__delegate;\r\nreturn G__18233;\r\n})()\r\n;\r\nG__18231 \x3d function(x,y,var_args){\r\nvar zs \x3d var_args;\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__18231__0.call(this);\r\ncase 1:\r\nreturn G__18231__1.call(this,x);\r\ncase 2:\r\nreturn G__18231__2.call(this,x,y);\r\ndefault:\r\nvar G__18236 \x3d null;\r\nif (arguments.length \x3e 2) {\r\nvar G__18238__i \x3d 0, G__18238__a \x3d new Array(arguments.length -  2);\r\nwhile (G__18238__i \x3c G__18238__a.length) {G__18238__a[G__18238__i] \x3d arguments[G__18238__i + 2]; ++G__18238__i;}\r\nG__18236 \x3d new cljs.core.IndexedSeq(G__18238__a,0,null);\r\n}\r\nreturn G__18231__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18236);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__18231.cljs$lang$maxFixedArity \x3d 2;\r\nG__18231.cljs$lang$applyTo \x3d G__18231__3.cljs$lang$applyTo;\r\nG__18231.cljs$core$IFn$_invoke$arity$0 \x3d G__18231__0;\r\nG__18231.cljs$core$IFn$_invoke$arity$1 \x3d G__18231__1;\r\nG__18231.cljs$core$IFn$_invoke$arity$2 \x3d G__18231__2;\r\nG__18231.cljs$core$IFn$_invoke$arity$variadic \x3d G__18231__3.cljs$core$IFn$_invoke$arity$variadic;\r\nreturn G__18231;\r\n})()\r\n});\r\n/**\r\n * Returns a function that takes any number of arguments and returns x.\r\n */\r\ncljs.core.constantly \x3d (function cljs$core$constantly(x){\r\nreturn (function() { \r\nvar G__18240__delegate \x3d function (args){\r\nreturn x;\r\n};\r\nvar G__18240 \x3d function (var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__18242__i \x3d 0, G__18242__a \x3d new Array(arguments.length -  0);\r\nwhile (G__18242__i \x3c G__18242__a.length) {G__18242__a[G__18242__i] \x3d arguments[G__18242__i + 0]; ++G__18242__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__18242__a,0,null);\r\n} \r\nreturn G__18240__delegate.call(this,args);};\r\nG__18240.cljs$lang$maxFixedArity \x3d 0;\r\nG__18240.cljs$lang$applyTo \x3d (function (arglist__18243){\r\nvar args \x3d cljs.core.seq(arglist__18243);\r\nreturn G__18240__delegate(args);\r\n});\r\nG__18240.cljs$core$IFn$_invoke$arity$variadic \x3d G__18240__delegate;\r\nreturn G__18240;\r\n})()\r\n;\r\n});\r\n/**\r\n * Takes a set of functions and returns a fn that is the composition\r\n *   of those fns.  The returned fn takes a variable number of args,\r\n *   applies the rightmost of fns to the args, the next\r\n *   fn (right-to-left) to the result, etc.\r\n */\r\ncljs.core.comp \x3d (function cljs$core$comp(var_args){\r\nvar G__15467 \x3d arguments.length;\r\nswitch (G__15467) {\r\ncase 0:\r\nreturn cljs.core.comp.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.core.comp.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.comp.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.comp.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___18246 \x3d arguments.length;\r\nvar i__4865__auto___18248 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___18248 \x3c len__4864__auto___18246)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___18248]));\r\n\r\nvar G__18249 \x3d (i__4865__auto___18248 + (1));\r\ni__4865__auto___18248 \x3d G__18249;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((3)),(0),null));\r\nreturn cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.comp.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nreturn cljs.core.identity;\r\n}));\r\n\r\n(cljs.core.comp.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\r\nreturn f;\r\n}));\r\n\r\n(cljs.core.comp.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,g){\r\nreturn (function() {\r\nvar G__18250 \x3d null;\r\nvar G__18250__0 \x3d (function (){\r\nvar G__15468 \x3d (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15468) : f.call(null,G__15468));\r\n});\r\nvar G__18250__1 \x3d (function (x){\r\nvar G__15469 \x3d (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null,x));\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15469) : f.call(null,G__15469));\r\n});\r\nvar G__18250__2 \x3d (function (x,y){\r\nvar G__15470 \x3d (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x,y) : g.call(null,x,y));\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15470) : f.call(null,G__15470));\r\n});\r\nvar G__18250__3 \x3d (function (x,y,z){\r\nvar G__15471 \x3d (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x,y,z) : g.call(null,x,y,z));\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15471) : f.call(null,G__15471));\r\n});\r\nvar G__18250__4 \x3d (function() { \r\nvar G__18253__delegate \x3d function (x,y,z,args){\r\nvar G__15472 \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15472) : f.call(null,G__15472));\r\n};\r\nvar G__18253 \x3d function (x,y,z,var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__18254__i \x3d 0, G__18254__a \x3d new Array(arguments.length -  3);\r\nwhile (G__18254__i \x3c G__18254__a.length) {G__18254__a[G__18254__i] \x3d arguments[G__18254__i + 3]; ++G__18254__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__18254__a,0,null);\r\n} \r\nreturn G__18253__delegate.call(this,x,y,z,args);};\r\nG__18253.cljs$lang$maxFixedArity \x3d 3;\r\nG__18253.cljs$lang$applyTo \x3d (function (arglist__18255){\r\nvar x \x3d cljs.core.first(arglist__18255);\r\narglist__18255 \x3d cljs.core.next(arglist__18255);\r\nvar y \x3d cljs.core.first(arglist__18255);\r\narglist__18255 \x3d cljs.core.next(arglist__18255);\r\nvar z \x3d cljs.core.first(arglist__18255);\r\nvar args \x3d cljs.core.rest(arglist__18255);\r\nreturn G__18253__delegate(x,y,z,args);\r\n});\r\nG__18253.cljs$core$IFn$_invoke$arity$variadic \x3d G__18253__delegate;\r\nreturn G__18253;\r\n})()\r\n;\r\nG__18250 \x3d function(x,y,z,var_args){\r\nvar args \x3d var_args;\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__18250__0.call(this);\r\ncase 1:\r\nreturn G__18250__1.call(this,x);\r\ncase 2:\r\nreturn G__18250__2.call(this,x,y);\r\ncase 3:\r\nreturn G__18250__3.call(this,x,y,z);\r\ndefault:\r\nvar G__18256 \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__18257__i \x3d 0, G__18257__a \x3d new Array(arguments.length -  3);\r\nwhile (G__18257__i \x3c G__18257__a.length) {G__18257__a[G__18257__i] \x3d arguments[G__18257__i + 3]; ++G__18257__i;}\r\nG__18256 \x3d new cljs.core.IndexedSeq(G__18257__a,0,null);\r\n}\r\nreturn G__18250__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__18256);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__18250.cljs$lang$maxFixedArity \x3d 3;\r\nG__18250.cljs$lang$applyTo \x3d G__18250__4.cljs$lang$applyTo;\r\nG__18250.cljs$core$IFn$_invoke$arity$0 \x3d G__18250__0;\r\nG__18250.cljs$core$IFn$_invoke$arity$1 \x3d G__18250__1;\r\nG__18250.cljs$core$IFn$_invoke$arity$2 \x3d G__18250__2;\r\nG__18250.cljs$core$IFn$_invoke$arity$3 \x3d G__18250__3;\r\nG__18250.cljs$core$IFn$_invoke$arity$variadic \x3d G__18250__4.cljs$core$IFn$_invoke$arity$variadic;\r\nreturn G__18250;\r\n})()\r\n}));\r\n\r\n(cljs.core.comp.cljs$core$IFn$_invoke$arity$3 \x3d (function (f,g,h){\r\nreturn (function() {\r\nvar G__18258 \x3d null;\r\nvar G__18258__0 \x3d (function (){\r\nvar G__15473 \x3d (function (){var G__15474 \x3d (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));\r\nreturn (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15474) : g.call(null,G__15474));\r\n})();\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15473) : f.call(null,G__15473));\r\n});\r\nvar G__18258__1 \x3d (function (x){\r\nvar G__15475 \x3d (function (){var G__15476 \x3d (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null,x));\r\nreturn (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15476) : g.call(null,G__15476));\r\n})();\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15475) : f.call(null,G__15475));\r\n});\r\nvar G__18258__2 \x3d (function (x,y){\r\nvar G__15477 \x3d (function (){var G__15478 \x3d (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x,y) : h.call(null,x,y));\r\nreturn (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15478) : g.call(null,G__15478));\r\n})();\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15477) : f.call(null,G__15477));\r\n});\r\nvar G__18258__3 \x3d (function (x,y,z){\r\nvar G__15479 \x3d (function (){var G__15480 \x3d (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x,y,z) : h.call(null,x,y,z));\r\nreturn (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15480) : g.call(null,G__15480));\r\n})();\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15479) : f.call(null,G__15479));\r\n});\r\nvar G__18258__4 \x3d (function() { \r\nvar G__18261__delegate \x3d function (x,y,z,args){\r\nvar G__15481 \x3d (function (){var G__15482 \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);\r\nreturn (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15482) : g.call(null,G__15482));\r\n})();\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15481) : f.call(null,G__15481));\r\n};\r\nvar G__18261 \x3d function (x,y,z,var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__18262__i \x3d 0, G__18262__a \x3d new Array(arguments.length -  3);\r\nwhile (G__18262__i \x3c G__18262__a.length) {G__18262__a[G__18262__i] \x3d arguments[G__18262__i + 3]; ++G__18262__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__18262__a,0,null);\r\n} \r\nreturn G__18261__delegate.call(this,x,y,z,args);};\r\nG__18261.cljs$lang$maxFixedArity \x3d 3;\r\nG__18261.cljs$lang$applyTo \x3d (function (arglist__18263){\r\nvar x \x3d cljs.core.first(arglist__18263);\r\narglist__18263 \x3d cljs.core.next(arglist__18263);\r\nvar y \x3d cljs.core.first(arglist__18263);\r\narglist__18263 \x3d cljs.core.next(arglist__18263);\r\nvar z \x3d cljs.core.first(arglist__18263);\r\nvar args \x3d cljs.core.rest(arglist__18263);\r\nreturn G__18261__delegate(x,y,z,args);\r\n});\r\nG__18261.cljs$core$IFn$_invoke$arity$variadic \x3d G__18261__delegate;\r\nreturn G__18261;\r\n})()\r\n;\r\nG__18258 \x3d function(x,y,z,var_args){\r\nvar args \x3d var_args;\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__18258__0.call(this);\r\ncase 1:\r\nreturn G__18258__1.call(this,x);\r\ncase 2:\r\nreturn G__18258__2.call(this,x,y);\r\ncase 3:\r\nreturn G__18258__3.call(this,x,y,z);\r\ndefault:\r\nvar G__18264 \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__18265__i \x3d 0, G__18265__a \x3d new Array(arguments.length -  3);\r\nwhile (G__18265__i \x3c G__18265__a.length) {G__18265__a[G__18265__i] \x3d arguments[G__18265__i + 3]; ++G__18265__i;}\r\nG__18264 \x3d new cljs.core.IndexedSeq(G__18265__a,0,null);\r\n}\r\nreturn G__18258__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__18264);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__18258.cljs$lang$maxFixedArity \x3d 3;\r\nG__18258.cljs$lang$applyTo \x3d G__18258__4.cljs$lang$applyTo;\r\nG__18258.cljs$core$IFn$_invoke$arity$0 \x3d G__18258__0;\r\nG__18258.cljs$core$IFn$_invoke$arity$1 \x3d G__18258__1;\r\nG__18258.cljs$core$IFn$_invoke$arity$2 \x3d G__18258__2;\r\nG__18258.cljs$core$IFn$_invoke$arity$3 \x3d G__18258__3;\r\nG__18258.cljs$core$IFn$_invoke$arity$variadic \x3d G__18258__4.cljs$core$IFn$_invoke$arity$variadic;\r\nreturn G__18258;\r\n})()\r\n}));\r\n\r\n(cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f1,f2,f3,fs){\r\nvar fs__$1 \x3d cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));\r\nreturn (function() { \r\nvar G__18267__delegate \x3d function (args){\r\nvar ret \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);\r\nvar fs__$2 \x3d cljs.core.next(fs__$1);\r\nwhile(true){\r\nif(fs__$2){\r\nvar G__18269 \x3d (function (){var fexpr__15483 \x3d cljs.core.first(fs__$2);\r\nreturn (fexpr__15483.cljs$core$IFn$_invoke$arity$1 ? fexpr__15483.cljs$core$IFn$_invoke$arity$1(ret) : fexpr__15483.call(null,ret));\r\n})();\r\nvar G__18270 \x3d cljs.core.next(fs__$2);\r\nret \x3d G__18269;\r\nfs__$2 \x3d G__18270;\r\ncontinue;\r\n} else {\r\nreturn ret;\r\n}\r\nbreak;\r\n}\r\n};\r\nvar G__18267 \x3d function (var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__18272__i \x3d 0, G__18272__a \x3d new Array(arguments.length -  0);\r\nwhile (G__18272__i \x3c G__18272__a.length) {G__18272__a[G__18272__i] \x3d arguments[G__18272__i + 0]; ++G__18272__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__18272__a,0,null);\r\n} \r\nreturn G__18267__delegate.call(this,args);};\r\nG__18267.cljs$lang$maxFixedArity \x3d 0;\r\nG__18267.cljs$lang$applyTo \x3d (function (arglist__18273){\r\nvar args \x3d cljs.core.seq(arglist__18273);\r\nreturn G__18267__delegate(args);\r\n});\r\nG__18267.cljs$core$IFn$_invoke$arity$variadic \x3d G__18267__delegate;\r\nreturn G__18267;\r\n})()\r\n;\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.comp.cljs$lang$applyTo \x3d (function (seq15463){\r\nvar G__15464 \x3d cljs.core.first(seq15463);\r\nvar seq15463__$1 \x3d cljs.core.next(seq15463);\r\nvar G__15465 \x3d cljs.core.first(seq15463__$1);\r\nvar seq15463__$2 \x3d cljs.core.next(seq15463__$1);\r\nvar G__15466 \x3d cljs.core.first(seq15463__$2);\r\nvar seq15463__$3 \x3d cljs.core.next(seq15463__$2);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15464,G__15465,G__15466,seq15463__$3);\r\n}));\r\n\r\n(cljs.core.comp.cljs$lang$maxFixedArity \x3d (3));\r\n\r\n/**\r\n * Takes a function f and fewer than the normal arguments to f, and\r\n *   returns a fn that takes a variable number of additional args. When\r\n *   called, the returned function calls f with args + additional args.\r\n */\r\ncljs.core.partial \x3d (function cljs$core$partial(var_args){\r\nvar G__15490 \x3d arguments.length;\r\nswitch (G__15490) {\r\ncase 1:\r\nreturn cljs.core.partial.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.partial.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.partial.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn cljs.core.partial.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___18283 \x3d arguments.length;\r\nvar i__4865__auto___18284 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___18284 \x3c len__4864__auto___18283)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___18284]));\r\n\r\nvar G__18285 \x3d (i__4865__auto___18284 + (1));\r\ni__4865__auto___18284 \x3d G__18285;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((4)),(0),null));\r\nreturn cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.partial.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\r\nreturn f;\r\n}));\r\n\r\n(cljs.core.partial.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,arg1){\r\nreturn (function() {\r\nvar G__18287 \x3d null;\r\nvar G__18287__0 \x3d (function (){\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null,arg1));\r\n});\r\nvar G__18287__1 \x3d (function (x){\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1,x) : f.call(null,arg1,x));\r\n});\r\nvar G__18287__2 \x3d (function (x,y){\r\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1,x,y) : f.call(null,arg1,x,y));\r\n});\r\nvar G__18287__3 \x3d (function (x,y,z){\r\nreturn (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1,x,y,z) : f.call(null,arg1,x,y,z));\r\n});\r\nvar G__18287__4 \x3d (function() { \r\nvar G__18297__delegate \x3d function (x,y,z,args){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0));\r\n};\r\nvar G__18297 \x3d function (x,y,z,var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__18298__i \x3d 0, G__18298__a \x3d new Array(arguments.length -  3);\r\nwhile (G__18298__i \x3c G__18298__a.length) {G__18298__a[G__18298__i] \x3d arguments[G__18298__i + 3]; ++G__18298__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__18298__a,0,null);\r\n} \r\nreturn G__18297__delegate.call(this,x,y,z,args);};\r\nG__18297.cljs$lang$maxFixedArity \x3d 3;\r\nG__18297.cljs$lang$applyTo \x3d (function (arglist__18299){\r\nvar x \x3d cljs.core.first(arglist__18299);\r\narglist__18299 \x3d cljs.core.next(arglist__18299);\r\nvar y \x3d cljs.core.first(arglist__18299);\r\narglist__18299 \x3d cljs.core.next(arglist__18299);\r\nvar z \x3d cljs.core.first(arglist__18299);\r\nvar args \x3d cljs.core.rest(arglist__18299);\r\nreturn G__18297__delegate(x,y,z,args);\r\n});\r\nG__18297.cljs$core$IFn$_invoke$arity$variadic \x3d G__18297__delegate;\r\nreturn G__18297;\r\n})()\r\n;\r\nG__18287 \x3d function(x,y,z,var_args){\r\nvar args \x3d var_args;\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__18287__0.call(this);\r\ncase 1:\r\nreturn G__18287__1.call(this,x);\r\ncase 2:\r\nreturn G__18287__2.call(this,x,y);\r\ncase 3:\r\nreturn G__18287__3.call(this,x,y,z);\r\ndefault:\r\nvar G__18300 \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__18301__i \x3d 0, G__18301__a \x3d new Array(arguments.length -  3);\r\nwhile (G__18301__i \x3c G__18301__a.length) {G__18301__a[G__18301__i] \x3d arguments[G__18301__i + 3]; ++G__18301__i;}\r\nG__18300 \x3d new cljs.core.IndexedSeq(G__18301__a,0,null);\r\n}\r\nreturn G__18287__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__18300);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__18287.cljs$lang$maxFixedArity \x3d 3;\r\nG__18287.cljs$lang$applyTo \x3d G__18287__4.cljs$lang$applyTo;\r\nG__18287.cljs$core$IFn$_invoke$arity$0 \x3d G__18287__0;\r\nG__18287.cljs$core$IFn$_invoke$arity$1 \x3d G__18287__1;\r\nG__18287.cljs$core$IFn$_invoke$arity$2 \x3d G__18287__2;\r\nG__18287.cljs$core$IFn$_invoke$arity$3 \x3d G__18287__3;\r\nG__18287.cljs$core$IFn$_invoke$arity$variadic \x3d G__18287__4.cljs$core$IFn$_invoke$arity$variadic;\r\nreturn G__18287;\r\n})()\r\n}));\r\n\r\n(cljs.core.partial.cljs$core$IFn$_invoke$arity$3 \x3d (function (f,arg1,arg2){\r\nreturn (function() {\r\nvar G__18305 \x3d null;\r\nvar G__18305__0 \x3d (function (){\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1,arg2) : f.call(null,arg1,arg2));\r\n});\r\nvar G__18305__1 \x3d (function (x){\r\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1,arg2,x) : f.call(null,arg1,arg2,x));\r\n});\r\nvar G__18305__2 \x3d (function (x,y){\r\nreturn (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1,arg2,x,y) : f.call(null,arg1,arg2,x,y));\r\n});\r\nvar G__18305__3 \x3d (function (x,y,z){\r\nreturn (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1,arg2,x,y,z) : f.call(null,arg1,arg2,x,y,z));\r\n});\r\nvar G__18305__4 \x3d (function() { \r\nvar G__18310__delegate \x3d function (x,y,z,args){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([z,args], 0));\r\n};\r\nvar G__18310 \x3d function (x,y,z,var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__18312__i \x3d 0, G__18312__a \x3d new Array(arguments.length -  3);\r\nwhile (G__18312__i \x3c G__18312__a.length) {G__18312__a[G__18312__i] \x3d arguments[G__18312__i + 3]; ++G__18312__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__18312__a,0,null);\r\n} \r\nreturn G__18310__delegate.call(this,x,y,z,args);};\r\nG__18310.cljs$lang$maxFixedArity \x3d 3;\r\nG__18310.cljs$lang$applyTo \x3d (function (arglist__18313){\r\nvar x \x3d cljs.core.first(arglist__18313);\r\narglist__18313 \x3d cljs.core.next(arglist__18313);\r\nvar y \x3d cljs.core.first(arglist__18313);\r\narglist__18313 \x3d cljs.core.next(arglist__18313);\r\nvar z \x3d cljs.core.first(arglist__18313);\r\nvar args \x3d cljs.core.rest(arglist__18313);\r\nreturn G__18310__delegate(x,y,z,args);\r\n});\r\nG__18310.cljs$core$IFn$_invoke$arity$variadic \x3d G__18310__delegate;\r\nreturn G__18310;\r\n})()\r\n;\r\nG__18305 \x3d function(x,y,z,var_args){\r\nvar args \x3d var_args;\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__18305__0.call(this);\r\ncase 1:\r\nreturn G__18305__1.call(this,x);\r\ncase 2:\r\nreturn G__18305__2.call(this,x,y);\r\ncase 3:\r\nreturn G__18305__3.call(this,x,y,z);\r\ndefault:\r\nvar G__18315 \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__18316__i \x3d 0, G__18316__a \x3d new Array(arguments.length -  3);\r\nwhile (G__18316__i \x3c G__18316__a.length) {G__18316__a[G__18316__i] \x3d arguments[G__18316__i + 3]; ++G__18316__i;}\r\nG__18315 \x3d new cljs.core.IndexedSeq(G__18316__a,0,null);\r\n}\r\nreturn G__18305__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__18315);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__18305.cljs$lang$maxFixedArity \x3d 3;\r\nG__18305.cljs$lang$applyTo \x3d G__18305__4.cljs$lang$applyTo;\r\nG__18305.cljs$core$IFn$_invoke$arity$0 \x3d G__18305__0;\r\nG__18305.cljs$core$IFn$_invoke$arity$1 \x3d G__18305__1;\r\nG__18305.cljs$core$IFn$_invoke$arity$2 \x3d G__18305__2;\r\nG__18305.cljs$core$IFn$_invoke$arity$3 \x3d G__18305__3;\r\nG__18305.cljs$core$IFn$_invoke$arity$variadic \x3d G__18305__4.cljs$core$IFn$_invoke$arity$variadic;\r\nreturn G__18305;\r\n})()\r\n}));\r\n\r\n(cljs.core.partial.cljs$core$IFn$_invoke$arity$4 \x3d (function (f,arg1,arg2,arg3){\r\nreturn (function() {\r\nvar G__18317 \x3d null;\r\nvar G__18317__0 \x3d (function (){\r\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1,arg2,arg3) : f.call(null,arg1,arg2,arg3));\r\n});\r\nvar G__18317__1 \x3d (function (x){\r\nreturn (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1,arg2,arg3,x) : f.call(null,arg1,arg2,arg3,x));\r\n});\r\nvar G__18317__2 \x3d (function (x,y){\r\nreturn (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1,arg2,arg3,x,y) : f.call(null,arg1,arg2,arg3,x,y));\r\n});\r\nvar G__18317__3 \x3d (function (x,y,z){\r\nreturn (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1,arg2,arg3,x,y,z) : f.call(null,arg1,arg2,arg3,x,y,z));\r\n});\r\nvar G__18317__4 \x3d (function() { \r\nvar G__18320__delegate \x3d function (x,y,z,args){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([y,z,args], 0));\r\n};\r\nvar G__18320 \x3d function (x,y,z,var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__18322__i \x3d 0, G__18322__a \x3d new Array(arguments.length -  3);\r\nwhile (G__18322__i \x3c G__18322__a.length) {G__18322__a[G__18322__i] \x3d arguments[G__18322__i + 3]; ++G__18322__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__18322__a,0,null);\r\n} \r\nreturn G__18320__delegate.call(this,x,y,z,args);};\r\nG__18320.cljs$lang$maxFixedArity \x3d 3;\r\nG__18320.cljs$lang$applyTo \x3d (function (arglist__18323){\r\nvar x \x3d cljs.core.first(arglist__18323);\r\narglist__18323 \x3d cljs.core.next(arglist__18323);\r\nvar y \x3d cljs.core.first(arglist__18323);\r\narglist__18323 \x3d cljs.core.next(arglist__18323);\r\nvar z \x3d cljs.core.first(arglist__18323);\r\nvar args \x3d cljs.core.rest(arglist__18323);\r\nreturn G__18320__delegate(x,y,z,args);\r\n});\r\nG__18320.cljs$core$IFn$_invoke$arity$variadic \x3d G__18320__delegate;\r\nreturn G__18320;\r\n})()\r\n;\r\nG__18317 \x3d function(x,y,z,var_args){\r\nvar args \x3d var_args;\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__18317__0.call(this);\r\ncase 1:\r\nreturn G__18317__1.call(this,x);\r\ncase 2:\r\nreturn G__18317__2.call(this,x,y);\r\ncase 3:\r\nreturn G__18317__3.call(this,x,y,z);\r\ndefault:\r\nvar G__18324 \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__18325__i \x3d 0, G__18325__a \x3d new Array(arguments.length -  3);\r\nwhile (G__18325__i \x3c G__18325__a.length) {G__18325__a[G__18325__i] \x3d arguments[G__18325__i + 3]; ++G__18325__i;}\r\nG__18324 \x3d new cljs.core.IndexedSeq(G__18325__a,0,null);\r\n}\r\nreturn G__18317__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__18324);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__18317.cljs$lang$maxFixedArity \x3d 3;\r\nG__18317.cljs$lang$applyTo \x3d G__18317__4.cljs$lang$applyTo;\r\nG__18317.cljs$core$IFn$_invoke$arity$0 \x3d G__18317__0;\r\nG__18317.cljs$core$IFn$_invoke$arity$1 \x3d G__18317__1;\r\nG__18317.cljs$core$IFn$_invoke$arity$2 \x3d G__18317__2;\r\nG__18317.cljs$core$IFn$_invoke$arity$3 \x3d G__18317__3;\r\nG__18317.cljs$core$IFn$_invoke$arity$variadic \x3d G__18317__4.cljs$core$IFn$_invoke$arity$variadic;\r\nreturn G__18317;\r\n})()\r\n}));\r\n\r\n(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,arg1,arg2,arg3,more){\r\nreturn (function() { \r\nvar G__18326__delegate \x3d function (args){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));\r\n};\r\nvar G__18326 \x3d function (var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__18328__i \x3d 0, G__18328__a \x3d new Array(arguments.length -  0);\r\nwhile (G__18328__i \x3c G__18328__a.length) {G__18328__a[G__18328__i] \x3d arguments[G__18328__i + 0]; ++G__18328__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__18328__a,0,null);\r\n} \r\nreturn G__18326__delegate.call(this,args);};\r\nG__18326.cljs$lang$maxFixedArity \x3d 0;\r\nG__18326.cljs$lang$applyTo \x3d (function (arglist__18329){\r\nvar args \x3d cljs.core.seq(arglist__18329);\r\nreturn G__18326__delegate(args);\r\n});\r\nG__18326.cljs$core$IFn$_invoke$arity$variadic \x3d G__18326__delegate;\r\nreturn G__18326;\r\n})()\r\n;\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.partial.cljs$lang$applyTo \x3d (function (seq15485){\r\nvar G__15486 \x3d cljs.core.first(seq15485);\r\nvar seq15485__$1 \x3d cljs.core.next(seq15485);\r\nvar G__15487 \x3d cljs.core.first(seq15485__$1);\r\nvar seq15485__$2 \x3d cljs.core.next(seq15485__$1);\r\nvar G__15488 \x3d cljs.core.first(seq15485__$2);\r\nvar seq15485__$3 \x3d cljs.core.next(seq15485__$2);\r\nvar G__15489 \x3d cljs.core.first(seq15485__$3);\r\nvar seq15485__$4 \x3d cljs.core.next(seq15485__$3);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15486,G__15487,G__15488,G__15489,seq15485__$4);\r\n}));\r\n\r\n(cljs.core.partial.cljs$lang$maxFixedArity \x3d (4));\r\n\r\n/**\r\n * Takes a function f, and returns a function that calls f, replacing\r\n *   a nil first argument to f with the supplied value x. Higher arity\r\n *   versions can replace arguments in the second and third\r\n *   positions (y, z). Note that the function f can take any number of\r\n *   arguments, not just the one(s) being nil-patched.\r\n */\r\ncljs.core.fnil \x3d (function cljs$core$fnil(var_args){\r\nvar G__15492 \x3d arguments.length;\r\nswitch (G__15492) {\r\ncase 2:\r\nreturn cljs.core.fnil.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.fnil.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn cljs.core.fnil.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,x){\r\nreturn (function() {\r\nvar G__18334 \x3d null;\r\nvar G__18334__1 \x3d (function (a){\r\nvar G__15493 \x3d (((a \x3d\x3d null))?x:a);\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15493) : f.call(null,G__15493));\r\n});\r\nvar G__18334__2 \x3d (function (a,b){\r\nvar G__15494 \x3d (((a \x3d\x3d null))?x:a);\r\nvar G__15495 \x3d b;\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15494,G__15495) : f.call(null,G__15494,G__15495));\r\n});\r\nvar G__18334__3 \x3d (function (a,b,c){\r\nvar G__15496 \x3d (((a \x3d\x3d null))?x:a);\r\nvar G__15497 \x3d b;\r\nvar G__15498 \x3d c;\r\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15496,G__15497,G__15498) : f.call(null,G__15496,G__15497,G__15498));\r\n});\r\nvar G__18334__4 \x3d (function() { \r\nvar G__18337__delegate \x3d function (a,b,c,ds){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a \x3d\x3d null))?x:a),b,c,ds);\r\n};\r\nvar G__18337 \x3d function (a,b,c,var_args){\r\nvar ds \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__18342__i \x3d 0, G__18342__a \x3d new Array(arguments.length -  3);\r\nwhile (G__18342__i \x3c G__18342__a.length) {G__18342__a[G__18342__i] \x3d arguments[G__18342__i + 3]; ++G__18342__i;}\r\n  ds \x3d new cljs.core.IndexedSeq(G__18342__a,0,null);\r\n} \r\nreturn G__18337__delegate.call(this,a,b,c,ds);};\r\nG__18337.cljs$lang$maxFixedArity \x3d 3;\r\nG__18337.cljs$lang$applyTo \x3d (function (arglist__18343){\r\nvar a \x3d cljs.core.first(arglist__18343);\r\narglist__18343 \x3d cljs.core.next(arglist__18343);\r\nvar b \x3d cljs.core.first(arglist__18343);\r\narglist__18343 \x3d cljs.core.next(arglist__18343);\r\nvar c \x3d cljs.core.first(arglist__18343);\r\nvar ds \x3d cljs.core.rest(arglist__18343);\r\nreturn G__18337__delegate(a,b,c,ds);\r\n});\r\nG__18337.cljs$core$IFn$_invoke$arity$variadic \x3d G__18337__delegate;\r\nreturn G__18337;\r\n})()\r\n;\r\nG__18334 \x3d function(a,b,c,var_args){\r\nvar ds \x3d var_args;\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__18334__1.call(this,a);\r\ncase 2:\r\nreturn G__18334__2.call(this,a,b);\r\ncase 3:\r\nreturn G__18334__3.call(this,a,b,c);\r\ndefault:\r\nvar G__18344 \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__18345__i \x3d 0, G__18345__a \x3d new Array(arguments.length -  3);\r\nwhile (G__18345__i \x3c G__18345__a.length) {G__18345__a[G__18345__i] \x3d arguments[G__18345__i + 3]; ++G__18345__i;}\r\nG__18344 \x3d new cljs.core.IndexedSeq(G__18345__a,0,null);\r\n}\r\nreturn G__18334__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__18344);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__18334.cljs$lang$maxFixedArity \x3d 3;\r\nG__18334.cljs$lang$applyTo \x3d G__18334__4.cljs$lang$applyTo;\r\nG__18334.cljs$core$IFn$_invoke$arity$1 \x3d G__18334__1;\r\nG__18334.cljs$core$IFn$_invoke$arity$2 \x3d G__18334__2;\r\nG__18334.cljs$core$IFn$_invoke$arity$3 \x3d G__18334__3;\r\nG__18334.cljs$core$IFn$_invoke$arity$variadic \x3d G__18334__4.cljs$core$IFn$_invoke$arity$variadic;\r\nreturn G__18334;\r\n})()\r\n}));\r\n\r\n(cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 \x3d (function (f,x,y){\r\nreturn (function() {\r\nvar G__18346 \x3d null;\r\nvar G__18346__2 \x3d (function (a,b){\r\nvar G__15499 \x3d (((a \x3d\x3d null))?x:a);\r\nvar G__15500 \x3d (((b \x3d\x3d null))?y:b);\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15499,G__15500) : f.call(null,G__15499,G__15500));\r\n});\r\nvar G__18346__3 \x3d (function (a,b,c){\r\nvar G__15501 \x3d (((a \x3d\x3d null))?x:a);\r\nvar G__15502 \x3d (((b \x3d\x3d null))?y:b);\r\nvar G__15503 \x3d c;\r\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15501,G__15502,G__15503) : f.call(null,G__15501,G__15502,G__15503));\r\n});\r\nvar G__18346__4 \x3d (function() { \r\nvar G__18347__delegate \x3d function (a,b,c,ds){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a \x3d\x3d null))?x:a),(((b \x3d\x3d null))?y:b),c,ds);\r\n};\r\nvar G__18347 \x3d function (a,b,c,var_args){\r\nvar ds \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__18348__i \x3d 0, G__18348__a \x3d new Array(arguments.length -  3);\r\nwhile (G__18348__i \x3c G__18348__a.length) {G__18348__a[G__18348__i] \x3d arguments[G__18348__i + 3]; ++G__18348__i;}\r\n  ds \x3d new cljs.core.IndexedSeq(G__18348__a,0,null);\r\n} \r\nreturn G__18347__delegate.call(this,a,b,c,ds);};\r\nG__18347.cljs$lang$maxFixedArity \x3d 3;\r\nG__18347.cljs$lang$applyTo \x3d (function (arglist__18349){\r\nvar a \x3d cljs.core.first(arglist__18349);\r\narglist__18349 \x3d cljs.core.next(arglist__18349);\r\nvar b \x3d cljs.core.first(arglist__18349);\r\narglist__18349 \x3d cljs.core.next(arglist__18349);\r\nvar c \x3d cljs.core.first(arglist__18349);\r\nvar ds \x3d cljs.core.rest(arglist__18349);\r\nreturn G__18347__delegate(a,b,c,ds);\r\n});\r\nG__18347.cljs$core$IFn$_invoke$arity$variadic \x3d G__18347__delegate;\r\nreturn G__18347;\r\n})()\r\n;\r\nG__18346 \x3d function(a,b,c,var_args){\r\nvar ds \x3d var_args;\r\nswitch(arguments.length){\r\ncase 2:\r\nreturn G__18346__2.call(this,a,b);\r\ncase 3:\r\nreturn G__18346__3.call(this,a,b,c);\r\ndefault:\r\nvar G__18352 \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__18353__i \x3d 0, G__18353__a \x3d new Array(arguments.length -  3);\r\nwhile (G__18353__i \x3c G__18353__a.length) {G__18353__a[G__18353__i] \x3d arguments[G__18353__i + 3]; ++G__18353__i;}\r\nG__18352 \x3d new cljs.core.IndexedSeq(G__18353__a,0,null);\r\n}\r\nreturn G__18346__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__18352);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__18346.cljs$lang$maxFixedArity \x3d 3;\r\nG__18346.cljs$lang$applyTo \x3d G__18346__4.cljs$lang$applyTo;\r\nG__18346.cljs$core$IFn$_invoke$arity$2 \x3d G__18346__2;\r\nG__18346.cljs$core$IFn$_invoke$arity$3 \x3d G__18346__3;\r\nG__18346.cljs$core$IFn$_invoke$arity$variadic \x3d G__18346__4.cljs$core$IFn$_invoke$arity$variadic;\r\nreturn G__18346;\r\n})()\r\n}));\r\n\r\n(cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 \x3d (function (f,x,y,z){\r\nreturn (function() {\r\nvar G__18356 \x3d null;\r\nvar G__18356__2 \x3d (function (a,b){\r\nvar G__15504 \x3d (((a \x3d\x3d null))?x:a);\r\nvar G__15505 \x3d (((b \x3d\x3d null))?y:b);\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15504,G__15505) : f.call(null,G__15504,G__15505));\r\n});\r\nvar G__18356__3 \x3d (function (a,b,c){\r\nvar G__15506 \x3d (((a \x3d\x3d null))?x:a);\r\nvar G__15507 \x3d (((b \x3d\x3d null))?y:b);\r\nvar G__15508 \x3d (((c \x3d\x3d null))?z:c);\r\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15506,G__15507,G__15508) : f.call(null,G__15506,G__15507,G__15508));\r\n});\r\nvar G__18356__4 \x3d (function() { \r\nvar G__18357__delegate \x3d function (a,b,c,ds){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a \x3d\x3d null))?x:a),(((b \x3d\x3d null))?y:b),(((c \x3d\x3d null))?z:c),ds);\r\n};\r\nvar G__18357 \x3d function (a,b,c,var_args){\r\nvar ds \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__18358__i \x3d 0, G__18358__a \x3d new Array(arguments.length -  3);\r\nwhile (G__18358__i \x3c G__18358__a.length) {G__18358__a[G__18358__i] \x3d arguments[G__18358__i + 3]; ++G__18358__i;}\r\n  ds \x3d new cljs.core.IndexedSeq(G__18358__a,0,null);\r\n} \r\nreturn G__18357__delegate.call(this,a,b,c,ds);};\r\nG__18357.cljs$lang$maxFixedArity \x3d 3;\r\nG__18357.cljs$lang$applyTo \x3d (function (arglist__18359){\r\nvar a \x3d cljs.core.first(arglist__18359);\r\narglist__18359 \x3d cljs.core.next(arglist__18359);\r\nvar b \x3d cljs.core.first(arglist__18359);\r\narglist__18359 \x3d cljs.core.next(arglist__18359);\r\nvar c \x3d cljs.core.first(arglist__18359);\r\nvar ds \x3d cljs.core.rest(arglist__18359);\r\nreturn G__18357__delegate(a,b,c,ds);\r\n});\r\nG__18357.cljs$core$IFn$_invoke$arity$variadic \x3d G__18357__delegate;\r\nreturn G__18357;\r\n})()\r\n;\r\nG__18356 \x3d function(a,b,c,var_args){\r\nvar ds \x3d var_args;\r\nswitch(arguments.length){\r\ncase 2:\r\nreturn G__18356__2.call(this,a,b);\r\ncase 3:\r\nreturn G__18356__3.call(this,a,b,c);\r\ndefault:\r\nvar G__18360 \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__18361__i \x3d 0, G__18361__a \x3d new Array(arguments.length -  3);\r\nwhile (G__18361__i \x3c G__18361__a.length) {G__18361__a[G__18361__i] \x3d arguments[G__18361__i + 3]; ++G__18361__i;}\r\nG__18360 \x3d new cljs.core.IndexedSeq(G__18361__a,0,null);\r\n}\r\nreturn G__18356__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__18360);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__18356.cljs$lang$maxFixedArity \x3d 3;\r\nG__18356.cljs$lang$applyTo \x3d G__18356__4.cljs$lang$applyTo;\r\nG__18356.cljs$core$IFn$_invoke$arity$2 \x3d G__18356__2;\r\nG__18356.cljs$core$IFn$_invoke$arity$3 \x3d G__18356__3;\r\nG__18356.cljs$core$IFn$_invoke$arity$variadic \x3d G__18356__4.cljs$core$IFn$_invoke$arity$variadic;\r\nreturn G__18356;\r\n})()\r\n}));\r\n\r\n(cljs.core.fnil.cljs$lang$maxFixedArity \x3d 4);\r\n\r\n/**\r\n * Returns a lazy sequence consisting of the result of applying f to 0\r\n *   and the first item of coll, followed by applying f to 1 and the second\r\n *   item in coll, etc, until coll is exhausted. Thus function f should\r\n *   accept 2 arguments, index and item. Returns a stateful transducer when\r\n *   no collection is provided.\r\n */\r\ncljs.core.map_indexed \x3d (function cljs$core$map_indexed(var_args){\r\nvar G__15510 \x3d arguments.length;\r\nswitch (G__15510) {\r\ncase 1:\r\nreturn cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\r\nreturn (function (rf){\r\nvar i \x3d (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1((-1)) : cljs.core.volatile_BANG_.call(null,(-1)));\r\nreturn (function() {\r\nvar G__18363 \x3d null;\r\nvar G__18363__0 \x3d (function (){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\r\n});\r\nvar G__18363__1 \x3d (function (result){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\r\n});\r\nvar G__18363__2 \x3d (function (result,input){\r\nvar G__15511 \x3d result;\r\nvar G__15512 \x3d (function (){var G__15513 \x3d cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));\r\nvar G__15514 \x3d input;\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15513,G__15514) : f.call(null,G__15513,G__15514));\r\n})();\r\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15511,G__15512) : rf.call(null,G__15511,G__15512));\r\n});\r\nG__18363 \x3d function(result,input){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__18363__0.call(this);\r\ncase 1:\r\nreturn G__18363__1.call(this,result);\r\ncase 2:\r\nreturn G__18363__2.call(this,result,input);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__18363.cljs$core$IFn$_invoke$arity$0 \x3d G__18363__0;\r\nG__18363.cljs$core$IFn$_invoke$arity$1 \x3d G__18363__1;\r\nG__18363.cljs$core$IFn$_invoke$arity$2 \x3d G__18363__2;\r\nreturn G__18363;\r\n})()\r\n});\r\n}));\r\n\r\n(cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,coll){\r\nvar mapi \x3d (function cljs$core$mapi(idx,coll__$1){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(coll__$1);\r\nif(temp__5753__auto__){\r\nvar s \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s)){\r\nvar c \x3d cljs.core.chunk_first(s);\r\nvar size \x3d cljs.core.count(c);\r\nvar b \x3d cljs.core.chunk_buffer(size);\r\nvar n__4741__auto___18364 \x3d size;\r\nvar i_18365 \x3d (0);\r\nwhile(true){\r\nif((i_18365 \x3c n__4741__auto___18364)){\r\ncljs.core.chunk_append(b,(function (){var G__15519 \x3d (idx + i_18365);\r\nvar G__15520 \x3d cljs.core._nth(c,i_18365);\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15519,G__15520) : f.call(null,G__15519,G__15520));\r\n})());\r\n\r\nvar G__18366 \x3d (i_18365 + (1));\r\ni_18365 \x3d G__18366;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$mapi((idx + size),cljs.core.chunk_rest(s)));\r\n} else {\r\nreturn cljs.core.cons((function (){var G__15521 \x3d idx;\r\nvar G__15522 \x3d cljs.core.first(s);\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15521,G__15522) : f.call(null,G__15521,G__15522));\r\n})(),cljs$core$mapi((idx + (1)),cljs.core.rest(s)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}),null,null));\r\n});\r\nreturn mapi((0),coll);\r\n}));\r\n\r\n(cljs.core.map_indexed.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Returns a lazy sequence of the non-nil results of (f item). Note,\r\n *   this means false return values will be included.  f must be free of\r\n *   side-effects.  Returns a transducer when no collection is provided.\r\n */\r\ncljs.core.keep \x3d (function cljs$core$keep(var_args){\r\nvar G__15524 \x3d arguments.length;\r\nswitch (G__15524) {\r\ncase 1:\r\nreturn cljs.core.keep.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.keep.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.keep.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\r\nreturn (function (rf){\r\nreturn (function() {\r\nvar G__18368 \x3d null;\r\nvar G__18368__0 \x3d (function (){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\r\n});\r\nvar G__18368__1 \x3d (function (result){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\r\n});\r\nvar G__18368__2 \x3d (function (result,input){\r\nvar v \x3d (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null,input));\r\nif((v \x3d\x3d null)){\r\nreturn result;\r\n} else {\r\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,v) : rf.call(null,result,v));\r\n}\r\n});\r\nG__18368 \x3d function(result,input){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__18368__0.call(this);\r\ncase 1:\r\nreturn G__18368__1.call(this,result);\r\ncase 2:\r\nreturn G__18368__2.call(this,result,input);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__18368.cljs$core$IFn$_invoke$arity$0 \x3d G__18368__0;\r\nG__18368.cljs$core$IFn$_invoke$arity$1 \x3d G__18368__1;\r\nG__18368.cljs$core$IFn$_invoke$arity$2 \x3d G__18368__2;\r\nreturn G__18368;\r\n})()\r\n});\r\n}));\r\n\r\n(cljs.core.keep.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,coll){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(coll);\r\nif(temp__5753__auto__){\r\nvar s \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s)){\r\nvar c \x3d cljs.core.chunk_first(s);\r\nvar size \x3d cljs.core.count(c);\r\nvar b \x3d cljs.core.chunk_buffer(size);\r\nvar n__4741__auto___18369 \x3d size;\r\nvar i_18370 \x3d (0);\r\nwhile(true){\r\nif((i_18370 \x3c n__4741__auto___18369)){\r\nvar x_18371 \x3d (function (){var G__15525 \x3d cljs.core._nth(c,i_18370);\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15525) : f.call(null,G__15525));\r\n})();\r\nif((x_18371 \x3d\x3d null)){\r\n} else {\r\ncljs.core.chunk_append(b,x_18371);\r\n}\r\n\r\nvar G__18372 \x3d (i_18370 + (1));\r\ni_18370 \x3d G__18372;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b),cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));\r\n} else {\r\nvar x \x3d (function (){var G__15526 \x3d cljs.core.first(s);\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15526) : f.call(null,G__15526));\r\n})();\r\nif((x \x3d\x3d null)){\r\nreturn cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));\r\n} else {\r\nreturn cljs.core.cons(x,cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));\r\n}\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}),null,null));\r\n}));\r\n\r\n(cljs.core.keep.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IWatchable}\r\n * @implements {cljs.core.IAtom}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.IDeref}\r\n*/\r\ncljs.core.Atom \x3d (function (state,meta,validator,watches){\r\nthis.state \x3d state;\r\nthis.meta \x3d meta;\r\nthis.validator \x3d validator;\r\nthis.watches \x3d watches;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 16386;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 6455296;\r\n});\r\n(cljs.core.Atom.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (o,other){\r\nvar self__ \x3d this;\r\nvar o__$1 \x3d this;\r\nreturn (o__$1 \x3d\x3d\x3d other);\r\n}));\r\n\r\n(cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn self__.state;\r\n}));\r\n\r\n(cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 \x3d (function (this$,oldval,newval){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nvar seq__15527 \x3d cljs.core.seq(self__.watches);\r\nvar chunk__15528 \x3d null;\r\nvar count__15529 \x3d (0);\r\nvar i__15530 \x3d (0);\r\nwhile(true){\r\nif((i__15530 \x3c count__15529)){\r\nvar vec__15537 \x3d chunk__15528.cljs$core$IIndexed$_nth$arity$2(null,i__15530);\r\nvar key \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15537,(0),null);\r\nvar f \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15537,(1),null);\r\n(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key,this$__$1,oldval,newval) : f.call(null,key,this$__$1,oldval,newval));\r\n\r\n\r\nvar G__18381 \x3d seq__15527;\r\nvar G__18382 \x3d chunk__15528;\r\nvar G__18383 \x3d count__15529;\r\nvar G__18384 \x3d (i__15530 + (1));\r\nseq__15527 \x3d G__18381;\r\nchunk__15528 \x3d G__18382;\r\ncount__15529 \x3d G__18383;\r\ni__15530 \x3d G__18384;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto__ \x3d cljs.core.seq(seq__15527);\r\nif(temp__5753__auto__){\r\nvar seq__15527__$1 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__15527__$1)){\r\nvar c__4679__auto__ \x3d cljs.core.chunk_first(seq__15527__$1);\r\nvar G__18388 \x3d cljs.core.chunk_rest(seq__15527__$1);\r\nvar G__18389 \x3d c__4679__auto__;\r\nvar G__18390 \x3d cljs.core.count(c__4679__auto__);\r\nvar G__18391 \x3d (0);\r\nseq__15527 \x3d G__18388;\r\nchunk__15528 \x3d G__18389;\r\ncount__15529 \x3d G__18390;\r\ni__15530 \x3d G__18391;\r\ncontinue;\r\n} else {\r\nvar vec__15540 \x3d cljs.core.first(seq__15527__$1);\r\nvar key \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15540,(0),null);\r\nvar f \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15540,(1),null);\r\n(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key,this$__$1,oldval,newval) : f.call(null,key,this$__$1,oldval,newval));\r\n\r\n\r\nvar G__18393 \x3d cljs.core.next(seq__15527__$1);\r\nvar G__18394 \x3d null;\r\nvar G__18395 \x3d (0);\r\nvar G__18396 \x3d (0);\r\nseq__15527 \x3d G__18393;\r\nchunk__15528 \x3d G__18394;\r\ncount__15529 \x3d G__18395;\r\ni__15530 \x3d G__18396;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 \x3d (function (this$,key,f){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\n(this$__$1.watches \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f));\r\n\r\nreturn this$__$1;\r\n}));\r\n\r\n(cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 \x3d (function (this$,key){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nreturn (this$__$1.watches \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key));\r\n}));\r\n\r\n(cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this$){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nreturn goog.getUid(this$__$1);\r\n}));\r\n\r\n(cljs.core.Atom.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22state\x22,\x22state\x22,-348086572,null),new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22validator\x22,\x22validator\x22,-325659154,null),new cljs.core.Symbol(null,\x22watches\x22,\x22watches\x22,1367433992,null)], null);\r\n}));\r\n\r\n(cljs.core.Atom.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.Atom.cljs$lang$ctorStr \x3d \x22cljs.core/Atom\x22);\r\n\r\n(cljs.core.Atom.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/Atom\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/Atom.\r\n */\r\ncljs.core.__GT_Atom \x3d (function cljs$core$__GT_Atom(state,meta,validator,watches){\r\nreturn (new cljs.core.Atom(state,meta,validator,watches));\r\n});\r\n\r\n/**\r\n * Creates and returns an Atom with an initial value of x and zero or\r\n *   more options (in any order):\r\n * \r\n *   :meta metadata-map\r\n * \r\n *   :validator validate-fn\r\n * \r\n *   If metadata-map is supplied, it will become the metadata on the\r\n *   atom. validate-fn must be nil or a side-effect-free fn of one\r\n *   argument, which will be passed the intended new state on any state\r\n *   change. If the new state is unacceptable, the validate-fn should\r\n *   return false or throw an Error.  If either of these error conditions\r\n *   occur, then the value of the atom will not change.\r\n */\r\ncljs.core.atom \x3d (function cljs$core$atom(var_args){\r\nvar G__15546 \x3d arguments.length;\r\nswitch (G__15546) {\r\ncase 1:\r\nreturn cljs.core.atom.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___18402 \x3d arguments.length;\r\nvar i__4865__auto___18403 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___18403 \x3c len__4864__auto___18402)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___18403]));\r\n\r\nvar G__18404 \x3d (i__4865__auto___18403 + (1));\r\ni__4865__auto___18403 \x3d G__18404;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((1)),(0),null));\r\nreturn cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.atom.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn (new cljs.core.Atom(x,null,null,null));\r\n}));\r\n\r\n(cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,p__15547){\r\nvar map__15548 \x3d p__15547;\r\nvar map__15548__$1 \x3d cljs.core.__destructure_map(map__15548);\r\nvar meta \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15548__$1,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964));\r\nvar validator \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15548__$1,new cljs.core.Keyword(null,\x22validator\x22,\x22validator\x22,-1966190681));\r\nreturn (new cljs.core.Atom(x,meta,validator,null));\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.atom.cljs$lang$applyTo \x3d (function (seq15544){\r\nvar G__15545 \x3d cljs.core.first(seq15544);\r\nvar seq15544__$1 \x3d cljs.core.next(seq15544);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15545,seq15544__$1);\r\n}));\r\n\r\n(cljs.core.atom.cljs$lang$maxFixedArity \x3d (1));\r\n\r\n/**\r\n * Sets the value of atom to newval without regard for the\r\n *   current value. Returns new-value.\r\n */\r\ncljs.core.reset_BANG_ \x3d (function cljs$core$reset_BANG_(a,new_value){\r\nif((a instanceof cljs.core.Atom)){\r\nvar validate \x3d a.validator;\r\nif((validate \x3d\x3d null)){\r\n} else {\r\nif(cljs.core.truth_((validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null,new_value)))){\r\n} else {\r\nthrow (new Error(\x22Validator rejected reference state\x22));\r\n}\r\n}\r\n\r\nvar old_value \x3d a.state;\r\n(a.state \x3d new_value);\r\n\r\nif((a.watches \x3d\x3d null)){\r\n} else {\r\na.cljs$core$IWatchable$_notify_watches$arity$3(null,old_value,new_value);\r\n}\r\n\r\nreturn new_value;\r\n} else {\r\nreturn cljs.core._reset_BANG_(a,new_value);\r\n}\r\n});\r\n/**\r\n * Sets the value of atom to newval. Returns [old new], the value of the\r\n * atom before and after the reset.\r\n */\r\ncljs.core.reset_vals_BANG_ \x3d (function cljs$core$reset_vals_BANG_(a,new_value){\r\nvar validate \x3d a.validator;\r\nif((validate \x3d\x3d null)){\r\n} else {\r\nif(cljs.core.truth_((validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null,new_value)))){\r\n} else {\r\nthrow (new Error(\x22Validator rejected reference state\x22));\r\n}\r\n}\r\n\r\nvar old_value \x3d a.state;\r\n(a.state \x3d new_value);\r\n\r\nif((a.watches \x3d\x3d null)){\r\n} else {\r\ncljs.core._notify_watches(a,old_value,new_value);\r\n}\r\n\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_value,new_value], null);\r\n});\r\n/**\r\n * Atomically swaps the value of atom to be:\r\n *   (apply f current-value-of-atom args). Note that f may be called\r\n *   multiple times, and thus should be free of side effects.  Returns\r\n *   the value that was swapped in.\r\n */\r\ncljs.core.swap_BANG_ \x3d (function cljs$core$swap_BANG_(var_args){\r\nvar G__15555 \x3d arguments.length;\r\nswitch (G__15555) {\r\ncase 2:\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___18412 \x3d arguments.length;\r\nvar i__4865__auto___18413 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___18413 \x3c len__4864__auto___18412)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___18413]));\r\n\r\nvar G__18415 \x3d (i__4865__auto___18413 + (1));\r\ni__4865__auto___18413 \x3d G__18415;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((4)),(0),null));\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 \x3d (function (a,f){\r\nif((a instanceof cljs.core.Atom)){\r\nreturn cljs.core.reset_BANG_(a,(function (){var G__15556 \x3d a.state;\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15556) : f.call(null,G__15556));\r\n})());\r\n} else {\r\nreturn cljs.core._swap_BANG_(a,f);\r\n}\r\n}));\r\n\r\n(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 \x3d (function (a,f,x){\r\nif((a instanceof cljs.core.Atom)){\r\nreturn cljs.core.reset_BANG_(a,(function (){var G__15557 \x3d a.state;\r\nvar G__15558 \x3d x;\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15557,G__15558) : f.call(null,G__15557,G__15558));\r\n})());\r\n} else {\r\nreturn cljs.core._swap_BANG_(a,f,x);\r\n}\r\n}));\r\n\r\n(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 \x3d (function (a,f,x,y){\r\nif((a instanceof cljs.core.Atom)){\r\nreturn cljs.core.reset_BANG_(a,(function (){var G__15559 \x3d a.state;\r\nvar G__15560 \x3d x;\r\nvar G__15561 \x3d y;\r\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15559,G__15560,G__15561) : f.call(null,G__15559,G__15560,G__15561));\r\n})());\r\n} else {\r\nreturn cljs.core._swap_BANG_(a,f,x,y);\r\n}\r\n}));\r\n\r\n(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (a,f,x,y,more){\r\nif((a instanceof cljs.core.Atom)){\r\nreturn cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));\r\n} else {\r\nreturn cljs.core._swap_BANG_(a,f,x,y,more);\r\n}\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.swap_BANG_.cljs$lang$applyTo \x3d (function (seq15550){\r\nvar G__15551 \x3d cljs.core.first(seq15550);\r\nvar seq15550__$1 \x3d cljs.core.next(seq15550);\r\nvar G__15552 \x3d cljs.core.first(seq15550__$1);\r\nvar seq15550__$2 \x3d cljs.core.next(seq15550__$1);\r\nvar G__15553 \x3d cljs.core.first(seq15550__$2);\r\nvar seq15550__$3 \x3d cljs.core.next(seq15550__$2);\r\nvar G__15554 \x3d cljs.core.first(seq15550__$3);\r\nvar seq15550__$4 \x3d cljs.core.next(seq15550__$3);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15551,G__15552,G__15553,G__15554,seq15550__$4);\r\n}));\r\n\r\n(cljs.core.swap_BANG_.cljs$lang$maxFixedArity \x3d (4));\r\n\r\n/**\r\n * Atomically swaps the value of atom to be:\r\n *   (apply f current-value-of-atom args). Note that f may be called\r\n *   multiple times, and thus should be free of side effects.\r\n *   Returns [old new], the value of the atom before and after the swap.\r\n */\r\ncljs.core.swap_vals_BANG_ \x3d (function cljs$core$swap_vals_BANG_(var_args){\r\nvar G__15568 \x3d arguments.length;\r\nswitch (G__15568) {\r\ncase 2:\r\nreturn cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___18425 \x3d arguments.length;\r\nvar i__4865__auto___18426 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___18426 \x3c len__4864__auto___18425)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___18426]));\r\n\r\nvar G__18427 \x3d (i__4865__auto___18426 + (1));\r\ni__4865__auto___18426 \x3d G__18427;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((4)),(0),null));\r\nreturn cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2 \x3d (function (a,f){\r\nreturn cljs.core.reset_vals_BANG_(a,(function (){var G__15569 \x3d a.state;\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15569) : f.call(null,G__15569));\r\n})());\r\n}));\r\n\r\n(cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3 \x3d (function (a,f,x){\r\nreturn cljs.core.reset_vals_BANG_(a,(function (){var G__15570 \x3d a.state;\r\nvar G__15571 \x3d x;\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15570,G__15571) : f.call(null,G__15570,G__15571));\r\n})());\r\n}));\r\n\r\n(cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4 \x3d (function (a,f,x,y){\r\nreturn cljs.core.reset_vals_BANG_(a,(function (){var G__15572 \x3d a.state;\r\nvar G__15573 \x3d x;\r\nvar G__15574 \x3d y;\r\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15572,G__15573,G__15574) : f.call(null,G__15572,G__15573,G__15574));\r\n})());\r\n}));\r\n\r\n(cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (a,f,x,y,more){\r\nreturn cljs.core.reset_vals_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.swap_vals_BANG_.cljs$lang$applyTo \x3d (function (seq15563){\r\nvar G__15564 \x3d cljs.core.first(seq15563);\r\nvar seq15563__$1 \x3d cljs.core.next(seq15563);\r\nvar G__15565 \x3d cljs.core.first(seq15563__$1);\r\nvar seq15563__$2 \x3d cljs.core.next(seq15563__$1);\r\nvar G__15566 \x3d cljs.core.first(seq15563__$2);\r\nvar seq15563__$3 \x3d cljs.core.next(seq15563__$2);\r\nvar G__15567 \x3d cljs.core.first(seq15563__$3);\r\nvar seq15563__$4 \x3d cljs.core.next(seq15563__$3);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15564,G__15565,G__15566,G__15567,seq15563__$4);\r\n}));\r\n\r\n(cljs.core.swap_vals_BANG_.cljs$lang$maxFixedArity \x3d (4));\r\n\r\n/**\r\n * Atomically sets the value of atom to newval if and only if the\r\n *   current value of the atom is equal to oldval. Returns true if\r\n *   set happened, else false.\r\n */\r\ncljs.core.compare_and_set_BANG_ \x3d (function cljs$core$compare_and_set_BANG_(a,oldval,newval){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){\r\ncljs.core.reset_BANG_(a,newval);\r\n\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n});\r\n/**\r\n * Sets the validator-fn for an atom. validator-fn must be nil or a\r\n *   side-effect-free fn of one argument, which will be passed the intended\r\n *   new state on any state change. If the new state is unacceptable, the\r\n *   validator-fn should return false or throw an Error. If the current state\r\n *   is not acceptable to the new validator, an Error will be thrown and the\r\n *   validator will not be changed.\r\n */\r\ncljs.core.set_validator_BANG_ \x3d (function cljs$core$set_validator_BANG_(iref,val){\r\nif((((!((val \x3d\x3d null)))) \x26\x26 (cljs.core.not((function (){var G__15575 \x3d cljs.core._deref(iref);\r\nreturn (val.cljs$core$IFn$_invoke$arity$1 ? val.cljs$core$IFn$_invoke$arity$1(G__15575) : val.call(null,G__15575));\r\n})())))){\r\nthrow (new Error(\x22Validator rejected reference state\x22));\r\n} else {\r\n}\r\n\r\nreturn (iref.validator \x3d val);\r\n});\r\n/**\r\n * Gets the validator-fn for a var/ref/agent/atom.\r\n */\r\ncljs.core.get_validator \x3d (function cljs$core$get_validator(iref){\r\nreturn iref.validator;\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IVolatile}\r\n * @implements {cljs.core.IDeref}\r\n*/\r\ncljs.core.Volatile \x3d (function (state){\r\nthis.state \x3d state;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32768;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.Volatile.prototype.cljs$core$IVolatile$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 \x3d (function (_,new_state){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (self__.state \x3d new_state);\r\n}));\r\n\r\n(cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn self__.state;\r\n}));\r\n\r\n(cljs.core.Volatile.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22state\x22,\x22state\x22,-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.Volatile.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.Volatile.cljs$lang$ctorStr \x3d \x22cljs.core/Volatile\x22);\r\n\r\n(cljs.core.Volatile.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/Volatile\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/Volatile.\r\n */\r\ncljs.core.__GT_Volatile \x3d (function cljs$core$__GT_Volatile(state){\r\nreturn (new cljs.core.Volatile(state));\r\n});\r\n\r\n/**\r\n * Creates and returns a Volatile with an initial value of val.\r\n */\r\ncljs.core.volatile_BANG_ \x3d (function cljs$core$volatile_BANG_(val){\r\nreturn (new cljs.core.Volatile(val));\r\n});\r\n/**\r\n * Returns true if x is a volatile.\r\n */\r\ncljs.core.volatile_QMARK_ \x3d (function cljs$core$volatile_QMARK_(x){\r\nreturn (x instanceof cljs.core.Volatile);\r\n});\r\n/**\r\n * Sets the value of volatile to newval without regard for the\r\n * current value. Returns newval.\r\n */\r\ncljs.core.vreset_BANG_ \x3d (function cljs$core$vreset_BANG_(vol,newval){\r\nreturn cljs.core._vreset_BANG_(vol,newval);\r\n});\r\n/**\r\n * Returns a lazy sequence of the non-nil results of (f index item). Note,\r\n *   this means false return values will be included.  f must be free of\r\n *   side-effects.  Returns a stateful transducer when no collection is\r\n *   provided.\r\n */\r\ncljs.core.keep_indexed \x3d (function cljs$core$keep_indexed(var_args){\r\nvar G__15577 \x3d arguments.length;\r\nswitch (G__15577) {\r\ncase 1:\r\nreturn cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\r\nreturn (function (rf){\r\nvar ia \x3d cljs.core.volatile_BANG_((-1));\r\nreturn (function() {\r\nvar G__18540 \x3d null;\r\nvar G__18540__0 \x3d (function (){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\r\n});\r\nvar G__18540__1 \x3d (function (result){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\r\n});\r\nvar G__18540__2 \x3d (function (result,input){\r\nvar i \x3d ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));\r\nvar v \x3d (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i,input) : f.call(null,i,input));\r\nif((v \x3d\x3d null)){\r\nreturn result;\r\n} else {\r\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,v) : rf.call(null,result,v));\r\n}\r\n});\r\nG__18540 \x3d function(result,input){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__18540__0.call(this);\r\ncase 1:\r\nreturn G__18540__1.call(this,result);\r\ncase 2:\r\nreturn G__18540__2.call(this,result,input);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__18540.cljs$core$IFn$_invoke$arity$0 \x3d G__18540__0;\r\nG__18540.cljs$core$IFn$_invoke$arity$1 \x3d G__18540__1;\r\nG__18540.cljs$core$IFn$_invoke$arity$2 \x3d G__18540__2;\r\nreturn G__18540;\r\n})()\r\n});\r\n}));\r\n\r\n(cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,coll){\r\nvar keepi \x3d (function cljs$core$keepi(idx,coll__$1){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(coll__$1);\r\nif(temp__5753__auto__){\r\nvar s \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s)){\r\nvar c \x3d cljs.core.chunk_first(s);\r\nvar size \x3d cljs.core.count(c);\r\nvar b \x3d cljs.core.chunk_buffer(size);\r\nvar n__4741__auto___18541 \x3d size;\r\nvar i_18542 \x3d (0);\r\nwhile(true){\r\nif((i_18542 \x3c n__4741__auto___18541)){\r\nvar x_18543 \x3d (function (){var G__15582 \x3d (idx + i_18542);\r\nvar G__15583 \x3d cljs.core._nth(c,i_18542);\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15582,G__15583) : f.call(null,G__15582,G__15583));\r\n})();\r\nif((x_18543 \x3d\x3d null)){\r\n} else {\r\ncljs.core.chunk_append(b,x_18543);\r\n}\r\n\r\nvar G__18887 \x3d (i_18542 + (1));\r\ni_18542 \x3d G__18887;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keepi((idx + size),cljs.core.chunk_rest(s)));\r\n} else {\r\nvar x \x3d (function (){var G__15584 \x3d idx;\r\nvar G__15585 \x3d cljs.core.first(s);\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15584,G__15585) : f.call(null,G__15584,G__15585));\r\n})();\r\nif((x \x3d\x3d null)){\r\nreturn cljs$core$keepi((idx + (1)),cljs.core.rest(s));\r\n} else {\r\nreturn cljs.core.cons(x,cljs$core$keepi((idx + (1)),cljs.core.rest(s)));\r\n}\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}),null,null));\r\n});\r\nreturn keepi((0),coll);\r\n}));\r\n\r\n(cljs.core.keep_indexed.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Takes a set of predicates and returns a function f that returns true if all of its\r\n *   composing predicates return a logical true value against all of its arguments, else it returns\r\n *   false. Note that f is short-circuiting in that it will stop execution on the first\r\n *   argument that triggers a logical false result against the original predicates.\r\n */\r\ncljs.core.every_pred \x3d (function cljs$core$every_pred(var_args){\r\nvar G__15597 \x3d arguments.length;\r\nswitch (G__15597) {\r\ncase 1:\r\nreturn cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___18891 \x3d arguments.length;\r\nvar i__4865__auto___18894 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___18894 \x3c len__4864__auto___18891)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___18894]));\r\n\r\nvar G__18898 \x3d (i__4865__auto___18894 + (1));\r\ni__4865__auto___18894 \x3d G__18898;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((3)),(0),null));\r\nreturn cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 \x3d (function (p){\r\nreturn (function() {\r\nvar cljs$core$ep1 \x3d null;\r\nvar cljs$core$ep1__0 \x3d (function (){\r\nreturn true;\r\n});\r\nvar cljs$core$ep1__1 \x3d (function (x){\r\nreturn cljs.core.boolean$((p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null,x)));\r\n});\r\nvar cljs$core$ep1__2 \x3d (function (x,y){\r\nreturn cljs.core.boolean$((function (){var and__4251__auto__ \x3d (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null,x));\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null,y));\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})());\r\n});\r\nvar cljs$core$ep1__3 \x3d (function (x,y,z){\r\nreturn cljs.core.boolean$((function (){var and__4251__auto__ \x3d (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null,x));\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nvar and__4251__auto____$1 \x3d (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null,y));\r\nif(cljs.core.truth_(and__4251__auto____$1)){\r\nreturn (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null,z));\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})());\r\n});\r\nvar cljs$core$ep1__4 \x3d (function() { \r\nvar G__18902__delegate \x3d function (x,y,z,args){\r\nreturn cljs.core.boolean$((function (){var and__4251__auto__ \x3d cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x,y,z);\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn cljs.core.every_QMARK_(p,args);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})());\r\n};\r\nvar G__18902 \x3d function (x,y,z,var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__18903__i \x3d 0, G__18903__a \x3d new Array(arguments.length -  3);\r\nwhile (G__18903__i \x3c G__18903__a.length) {G__18903__a[G__18903__i] \x3d arguments[G__18903__i + 3]; ++G__18903__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__18903__a,0,null);\r\n} \r\nreturn G__18902__delegate.call(this,x,y,z,args);};\r\nG__18902.cljs$lang$maxFixedArity \x3d 3;\r\nG__18902.cljs$lang$applyTo \x3d (function (arglist__18904){\r\nvar x \x3d cljs.core.first(arglist__18904);\r\narglist__18904 \x3d cljs.core.next(arglist__18904);\r\nvar y \x3d cljs.core.first(arglist__18904);\r\narglist__18904 \x3d cljs.core.next(arglist__18904);\r\nvar z \x3d cljs.core.first(arglist__18904);\r\nvar args \x3d cljs.core.rest(arglist__18904);\r\nreturn G__18902__delegate(x,y,z,args);\r\n});\r\nG__18902.cljs$core$IFn$_invoke$arity$variadic \x3d G__18902__delegate;\r\nreturn G__18902;\r\n})()\r\n;\r\ncljs$core$ep1 \x3d function(x,y,z,var_args){\r\nvar args \x3d var_args;\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn cljs$core$ep1__0.call(this);\r\ncase 1:\r\nreturn cljs$core$ep1__1.call(this,x);\r\ncase 2:\r\nreturn cljs$core$ep1__2.call(this,x,y);\r\ncase 3:\r\nreturn cljs$core$ep1__3.call(this,x,y,z);\r\ndefault:\r\nvar G__18905 \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__18906__i \x3d 0, G__18906__a \x3d new Array(arguments.length -  3);\r\nwhile (G__18906__i \x3c G__18906__a.length) {G__18906__a[G__18906__i] \x3d arguments[G__18906__i + 3]; ++G__18906__i;}\r\nG__18905 \x3d new cljs.core.IndexedSeq(G__18906__a,0,null);\r\n}\r\nreturn cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__18905);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\ncljs$core$ep1.cljs$lang$maxFixedArity \x3d 3;\r\ncljs$core$ep1.cljs$lang$applyTo \x3d cljs$core$ep1__4.cljs$lang$applyTo;\r\ncljs$core$ep1.cljs$core$IFn$_invoke$arity$0 \x3d cljs$core$ep1__0;\r\ncljs$core$ep1.cljs$core$IFn$_invoke$arity$1 \x3d cljs$core$ep1__1;\r\ncljs$core$ep1.cljs$core$IFn$_invoke$arity$2 \x3d cljs$core$ep1__2;\r\ncljs$core$ep1.cljs$core$IFn$_invoke$arity$3 \x3d cljs$core$ep1__3;\r\ncljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic \x3d cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;\r\nreturn cljs$core$ep1;\r\n})()\r\n}));\r\n\r\n(cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 \x3d (function (p1,p2){\r\nreturn (function() {\r\nvar cljs$core$ep2 \x3d null;\r\nvar cljs$core$ep2__0 \x3d (function (){\r\nreturn true;\r\n});\r\nvar cljs$core$ep2__1 \x3d (function (x){\r\nreturn cljs.core.boolean$((function (){var and__4251__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})());\r\n});\r\nvar cljs$core$ep2__2 \x3d (function (x,y){\r\nreturn cljs.core.boolean$((function (){var and__4251__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nvar and__4251__auto____$1 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null,y));\r\nif(cljs.core.truth_(and__4251__auto____$1)){\r\nvar and__4251__auto____$2 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\r\nif(cljs.core.truth_(and__4251__auto____$2)){\r\nreturn (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null,y));\r\n} else {\r\nreturn and__4251__auto____$2;\r\n}\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})());\r\n});\r\nvar cljs$core$ep2__3 \x3d (function (x,y,z){\r\nreturn cljs.core.boolean$((function (){var and__4251__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nvar and__4251__auto____$1 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null,y));\r\nif(cljs.core.truth_(and__4251__auto____$1)){\r\nvar and__4251__auto____$2 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null,z));\r\nif(cljs.core.truth_(and__4251__auto____$2)){\r\nvar and__4251__auto____$3 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\r\nif(cljs.core.truth_(and__4251__auto____$3)){\r\nvar and__4251__auto____$4 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null,y));\r\nif(cljs.core.truth_(and__4251__auto____$4)){\r\nreturn (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null,z));\r\n} else {\r\nreturn and__4251__auto____$4;\r\n}\r\n} else {\r\nreturn and__4251__auto____$3;\r\n}\r\n} else {\r\nreturn and__4251__auto____$2;\r\n}\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})());\r\n});\r\nvar cljs$core$ep2__4 \x3d (function() { \r\nvar G__18994__delegate \x3d function (x,y,z,args){\r\nreturn cljs.core.boolean$((function (){var and__4251__auto__ \x3d cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x,y,z);\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn cljs.core.every_QMARK_((function (p1__15586_SHARP_){\r\nvar and__4251__auto____$1 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__15586_SHARP_) : p1.call(null,p1__15586_SHARP_));\r\nif(cljs.core.truth_(and__4251__auto____$1)){\r\nreturn (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__15586_SHARP_) : p2.call(null,p1__15586_SHARP_));\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n}),args);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})());\r\n};\r\nvar G__18994 \x3d function (x,y,z,var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__19002__i \x3d 0, G__19002__a \x3d new Array(arguments.length -  3);\r\nwhile (G__19002__i \x3c G__19002__a.length) {G__19002__a[G__19002__i] \x3d arguments[G__19002__i + 3]; ++G__19002__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__19002__a,0,null);\r\n} \r\nreturn G__18994__delegate.call(this,x,y,z,args);};\r\nG__18994.cljs$lang$maxFixedArity \x3d 3;\r\nG__18994.cljs$lang$applyTo \x3d (function (arglist__19004){\r\nvar x \x3d cljs.core.first(arglist__19004);\r\narglist__19004 \x3d cljs.core.next(arglist__19004);\r\nvar y \x3d cljs.core.first(arglist__19004);\r\narglist__19004 \x3d cljs.core.next(arglist__19004);\r\nvar z \x3d cljs.core.first(arglist__19004);\r\nvar args \x3d cljs.core.rest(arglist__19004);\r\nreturn G__18994__delegate(x,y,z,args);\r\n});\r\nG__18994.cljs$core$IFn$_invoke$arity$variadic \x3d G__18994__delegate;\r\nreturn G__18994;\r\n})()\r\n;\r\ncljs$core$ep2 \x3d function(x,y,z,var_args){\r\nvar args \x3d var_args;\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn cljs$core$ep2__0.call(this);\r\ncase 1:\r\nreturn cljs$core$ep2__1.call(this,x);\r\ncase 2:\r\nreturn cljs$core$ep2__2.call(this,x,y);\r\ncase 3:\r\nreturn cljs$core$ep2__3.call(this,x,y,z);\r\ndefault:\r\nvar G__19006 \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__19007__i \x3d 0, G__19007__a \x3d new Array(arguments.length -  3);\r\nwhile (G__19007__i \x3c G__19007__a.length) {G__19007__a[G__19007__i] \x3d arguments[G__19007__i + 3]; ++G__19007__i;}\r\nG__19006 \x3d new cljs.core.IndexedSeq(G__19007__a,0,null);\r\n}\r\nreturn cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19006);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\ncljs$core$ep2.cljs$lang$maxFixedArity \x3d 3;\r\ncljs$core$ep2.cljs$lang$applyTo \x3d cljs$core$ep2__4.cljs$lang$applyTo;\r\ncljs$core$ep2.cljs$core$IFn$_invoke$arity$0 \x3d cljs$core$ep2__0;\r\ncljs$core$ep2.cljs$core$IFn$_invoke$arity$1 \x3d cljs$core$ep2__1;\r\ncljs$core$ep2.cljs$core$IFn$_invoke$arity$2 \x3d cljs$core$ep2__2;\r\ncljs$core$ep2.cljs$core$IFn$_invoke$arity$3 \x3d cljs$core$ep2__3;\r\ncljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic \x3d cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;\r\nreturn cljs$core$ep2;\r\n})()\r\n}));\r\n\r\n(cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 \x3d (function (p1,p2,p3){\r\nreturn (function() {\r\nvar cljs$core$ep3 \x3d null;\r\nvar cljs$core$ep3__0 \x3d (function (){\r\nreturn true;\r\n});\r\nvar cljs$core$ep3__1 \x3d (function (x){\r\nreturn cljs.core.boolean$((function (){var and__4251__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nvar and__4251__auto____$1 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\r\nif(cljs.core.truth_(and__4251__auto____$1)){\r\nreturn (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null,x));\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})());\r\n});\r\nvar cljs$core$ep3__2 \x3d (function (x,y){\r\nreturn cljs.core.boolean$((function (){var and__4251__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nvar and__4251__auto____$1 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\r\nif(cljs.core.truth_(and__4251__auto____$1)){\r\nvar and__4251__auto____$2 \x3d (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null,x));\r\nif(cljs.core.truth_(and__4251__auto____$2)){\r\nvar and__4251__auto____$3 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null,y));\r\nif(cljs.core.truth_(and__4251__auto____$3)){\r\nvar and__4251__auto____$4 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null,y));\r\nif(cljs.core.truth_(and__4251__auto____$4)){\r\nreturn (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null,y));\r\n} else {\r\nreturn and__4251__auto____$4;\r\n}\r\n} else {\r\nreturn and__4251__auto____$3;\r\n}\r\n} else {\r\nreturn and__4251__auto____$2;\r\n}\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})());\r\n});\r\nvar cljs$core$ep3__3 \x3d (function (x,y,z){\r\nreturn cljs.core.boolean$((function (){var and__4251__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nvar and__4251__auto____$1 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\r\nif(cljs.core.truth_(and__4251__auto____$1)){\r\nvar and__4251__auto____$2 \x3d (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null,x));\r\nif(cljs.core.truth_(and__4251__auto____$2)){\r\nvar and__4251__auto____$3 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null,y));\r\nif(cljs.core.truth_(and__4251__auto____$3)){\r\nvar and__4251__auto____$4 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null,y));\r\nif(cljs.core.truth_(and__4251__auto____$4)){\r\nvar and__4251__auto____$5 \x3d (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null,y));\r\nif(cljs.core.truth_(and__4251__auto____$5)){\r\nvar and__4251__auto____$6 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null,z));\r\nif(cljs.core.truth_(and__4251__auto____$6)){\r\nvar and__4251__auto____$7 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null,z));\r\nif(cljs.core.truth_(and__4251__auto____$7)){\r\nreturn (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null,z));\r\n} else {\r\nreturn and__4251__auto____$7;\r\n}\r\n} else {\r\nreturn and__4251__auto____$6;\r\n}\r\n} else {\r\nreturn and__4251__auto____$5;\r\n}\r\n} else {\r\nreturn and__4251__auto____$4;\r\n}\r\n} else {\r\nreturn and__4251__auto____$3;\r\n}\r\n} else {\r\nreturn and__4251__auto____$2;\r\n}\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})());\r\n});\r\nvar cljs$core$ep3__4 \x3d (function() { \r\nvar G__19041__delegate \x3d function (x,y,z,args){\r\nreturn cljs.core.boolean$((function (){var and__4251__auto__ \x3d cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x,y,z);\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn cljs.core.every_QMARK_((function (p1__15587_SHARP_){\r\nvar and__4251__auto____$1 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__15587_SHARP_) : p1.call(null,p1__15587_SHARP_));\r\nif(cljs.core.truth_(and__4251__auto____$1)){\r\nvar and__4251__auto____$2 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__15587_SHARP_) : p2.call(null,p1__15587_SHARP_));\r\nif(cljs.core.truth_(and__4251__auto____$2)){\r\nreturn (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__15587_SHARP_) : p3.call(null,p1__15587_SHARP_));\r\n} else {\r\nreturn and__4251__auto____$2;\r\n}\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n}),args);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})());\r\n};\r\nvar G__19041 \x3d function (x,y,z,var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__19043__i \x3d 0, G__19043__a \x3d new Array(arguments.length -  3);\r\nwhile (G__19043__i \x3c G__19043__a.length) {G__19043__a[G__19043__i] \x3d arguments[G__19043__i + 3]; ++G__19043__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__19043__a,0,null);\r\n} \r\nreturn G__19041__delegate.call(this,x,y,z,args);};\r\nG__19041.cljs$lang$maxFixedArity \x3d 3;\r\nG__19041.cljs$lang$applyTo \x3d (function (arglist__19122){\r\nvar x \x3d cljs.core.first(arglist__19122);\r\narglist__19122 \x3d cljs.core.next(arglist__19122);\r\nvar y \x3d cljs.core.first(arglist__19122);\r\narglist__19122 \x3d cljs.core.next(arglist__19122);\r\nvar z \x3d cljs.core.first(arglist__19122);\r\nvar args \x3d cljs.core.rest(arglist__19122);\r\nreturn G__19041__delegate(x,y,z,args);\r\n});\r\nG__19041.cljs$core$IFn$_invoke$arity$variadic \x3d G__19041__delegate;\r\nreturn G__19041;\r\n})()\r\n;\r\ncljs$core$ep3 \x3d function(x,y,z,var_args){\r\nvar args \x3d var_args;\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn cljs$core$ep3__0.call(this);\r\ncase 1:\r\nreturn cljs$core$ep3__1.call(this,x);\r\ncase 2:\r\nreturn cljs$core$ep3__2.call(this,x,y);\r\ncase 3:\r\nreturn cljs$core$ep3__3.call(this,x,y,z);\r\ndefault:\r\nvar G__19123 \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__19124__i \x3d 0, G__19124__a \x3d new Array(arguments.length -  3);\r\nwhile (G__19124__i \x3c G__19124__a.length) {G__19124__a[G__19124__i] \x3d arguments[G__19124__i + 3]; ++G__19124__i;}\r\nG__19123 \x3d new cljs.core.IndexedSeq(G__19124__a,0,null);\r\n}\r\nreturn cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19123);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\ncljs$core$ep3.cljs$lang$maxFixedArity \x3d 3;\r\ncljs$core$ep3.cljs$lang$applyTo \x3d cljs$core$ep3__4.cljs$lang$applyTo;\r\ncljs$core$ep3.cljs$core$IFn$_invoke$arity$0 \x3d cljs$core$ep3__0;\r\ncljs$core$ep3.cljs$core$IFn$_invoke$arity$1 \x3d cljs$core$ep3__1;\r\ncljs$core$ep3.cljs$core$IFn$_invoke$arity$2 \x3d cljs$core$ep3__2;\r\ncljs$core$ep3.cljs$core$IFn$_invoke$arity$3 \x3d cljs$core$ep3__3;\r\ncljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic \x3d cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;\r\nreturn cljs$core$ep3;\r\n})()\r\n}));\r\n\r\n(cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic \x3d (function (p1,p2,p3,ps){\r\nvar ps__$1 \x3d cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);\r\nreturn (function() {\r\nvar cljs$core$epn \x3d null;\r\nvar cljs$core$epn__0 \x3d (function (){\r\nreturn true;\r\n});\r\nvar cljs$core$epn__1 \x3d (function (x){\r\nreturn cljs.core.every_QMARK_((function (p1__15588_SHARP_){\r\nreturn (p1__15588_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15588_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__15588_SHARP_.call(null,x));\r\n}),ps__$1);\r\n});\r\nvar cljs$core$epn__2 \x3d (function (x,y){\r\nreturn cljs.core.every_QMARK_((function (p1__15589_SHARP_){\r\nvar and__4251__auto__ \x3d (p1__15589_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15589_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__15589_SHARP_.call(null,x));\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn (p1__15589_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15589_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__15589_SHARP_.call(null,y));\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n}),ps__$1);\r\n});\r\nvar cljs$core$epn__3 \x3d (function (x,y,z){\r\nreturn cljs.core.every_QMARK_((function (p1__15590_SHARP_){\r\nvar and__4251__auto__ \x3d (p1__15590_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15590_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__15590_SHARP_.call(null,x));\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nvar and__4251__auto____$1 \x3d (p1__15590_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15590_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__15590_SHARP_.call(null,y));\r\nif(cljs.core.truth_(and__4251__auto____$1)){\r\nreturn (p1__15590_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15590_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__15590_SHARP_.call(null,z));\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n}),ps__$1);\r\n});\r\nvar cljs$core$epn__4 \x3d (function() { \r\nvar G__19132__delegate \x3d function (x,y,z,args){\r\nreturn cljs.core.boolean$((function (){var and__4251__auto__ \x3d cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x,y,z);\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn cljs.core.every_QMARK_((function (p1__15591_SHARP_){\r\nreturn cljs.core.every_QMARK_(p1__15591_SHARP_,args);\r\n}),ps__$1);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})());\r\n};\r\nvar G__19132 \x3d function (x,y,z,var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__19133__i \x3d 0, G__19133__a \x3d new Array(arguments.length -  3);\r\nwhile (G__19133__i \x3c G__19133__a.length) {G__19133__a[G__19133__i] \x3d arguments[G__19133__i + 3]; ++G__19133__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__19133__a,0,null);\r\n} \r\nreturn G__19132__delegate.call(this,x,y,z,args);};\r\nG__19132.cljs$lang$maxFixedArity \x3d 3;\r\nG__19132.cljs$lang$applyTo \x3d (function (arglist__19134){\r\nvar x \x3d cljs.core.first(arglist__19134);\r\narglist__19134 \x3d cljs.core.next(arglist__19134);\r\nvar y \x3d cljs.core.first(arglist__19134);\r\narglist__19134 \x3d cljs.core.next(arglist__19134);\r\nvar z \x3d cljs.core.first(arglist__19134);\r\nvar args \x3d cljs.core.rest(arglist__19134);\r\nreturn G__19132__delegate(x,y,z,args);\r\n});\r\nG__19132.cljs$core$IFn$_invoke$arity$variadic \x3d G__19132__delegate;\r\nreturn G__19132;\r\n})()\r\n;\r\ncljs$core$epn \x3d function(x,y,z,var_args){\r\nvar args \x3d var_args;\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn cljs$core$epn__0.call(this);\r\ncase 1:\r\nreturn cljs$core$epn__1.call(this,x);\r\ncase 2:\r\nreturn cljs$core$epn__2.call(this,x,y);\r\ncase 3:\r\nreturn cljs$core$epn__3.call(this,x,y,z);\r\ndefault:\r\nvar G__19135 \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__19136__i \x3d 0, G__19136__a \x3d new Array(arguments.length -  3);\r\nwhile (G__19136__i \x3c G__19136__a.length) {G__19136__a[G__19136__i] \x3d arguments[G__19136__i + 3]; ++G__19136__i;}\r\nG__19135 \x3d new cljs.core.IndexedSeq(G__19136__a,0,null);\r\n}\r\nreturn cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19135);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\ncljs$core$epn.cljs$lang$maxFixedArity \x3d 3;\r\ncljs$core$epn.cljs$lang$applyTo \x3d cljs$core$epn__4.cljs$lang$applyTo;\r\ncljs$core$epn.cljs$core$IFn$_invoke$arity$0 \x3d cljs$core$epn__0;\r\ncljs$core$epn.cljs$core$IFn$_invoke$arity$1 \x3d cljs$core$epn__1;\r\ncljs$core$epn.cljs$core$IFn$_invoke$arity$2 \x3d cljs$core$epn__2;\r\ncljs$core$epn.cljs$core$IFn$_invoke$arity$3 \x3d cljs$core$epn__3;\r\ncljs$core$epn.cljs$core$IFn$_invoke$arity$variadic \x3d cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;\r\nreturn cljs$core$epn;\r\n})()\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.every_pred.cljs$lang$applyTo \x3d (function (seq15593){\r\nvar G__15594 \x3d cljs.core.first(seq15593);\r\nvar seq15593__$1 \x3d cljs.core.next(seq15593);\r\nvar G__15595 \x3d cljs.core.first(seq15593__$1);\r\nvar seq15593__$2 \x3d cljs.core.next(seq15593__$1);\r\nvar G__15596 \x3d cljs.core.first(seq15593__$2);\r\nvar seq15593__$3 \x3d cljs.core.next(seq15593__$2);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15594,G__15595,G__15596,seq15593__$3);\r\n}));\r\n\r\n(cljs.core.every_pred.cljs$lang$maxFixedArity \x3d (3));\r\n\r\n/**\r\n * Takes a set of predicates and returns a function f that returns the first logical true value\r\n *   returned by one of its composing predicates against any of its arguments, else it returns\r\n *   logical false. Note that f is short-circuiting in that it will stop execution on the first\r\n *   argument that triggers a logical true result against the original predicates.\r\n */\r\ncljs.core.some_fn \x3d (function cljs$core$some_fn(var_args){\r\nvar G__15609 \x3d arguments.length;\r\nswitch (G__15609) {\r\ncase 1:\r\nreturn cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___19179 \x3d arguments.length;\r\nvar i__4865__auto___19180 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___19180 \x3c len__4864__auto___19179)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___19180]));\r\n\r\nvar G__19182 \x3d (i__4865__auto___19180 + (1));\r\ni__4865__auto___19180 \x3d G__19182;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((3)),(0),null));\r\nreturn cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 \x3d (function (p){\r\nreturn (function() {\r\nvar cljs$core$sp1 \x3d null;\r\nvar cljs$core$sp1__0 \x3d (function (){\r\nreturn null;\r\n});\r\nvar cljs$core$sp1__1 \x3d (function (x){\r\nreturn (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null,x));\r\n});\r\nvar cljs$core$sp1__2 \x3d (function (x,y){\r\nvar or__4253__auto__ \x3d (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null,x));\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null,y));\r\n}\r\n});\r\nvar cljs$core$sp1__3 \x3d (function (x,y,z){\r\nvar or__4253__auto__ \x3d (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null,x));\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar or__4253__auto____$1 \x3d (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null,y));\r\nif(cljs.core.truth_(or__4253__auto____$1)){\r\nreturn or__4253__auto____$1;\r\n} else {\r\nreturn (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null,z));\r\n}\r\n}\r\n});\r\nvar cljs$core$sp1__4 \x3d (function() { \r\nvar G__19192__delegate \x3d function (x,y,z,args){\r\nvar or__4253__auto__ \x3d cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.core.some(p,args);\r\n}\r\n};\r\nvar G__19192 \x3d function (x,y,z,var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__19193__i \x3d 0, G__19193__a \x3d new Array(arguments.length -  3);\r\nwhile (G__19193__i \x3c G__19193__a.length) {G__19193__a[G__19193__i] \x3d arguments[G__19193__i + 3]; ++G__19193__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__19193__a,0,null);\r\n} \r\nreturn G__19192__delegate.call(this,x,y,z,args);};\r\nG__19192.cljs$lang$maxFixedArity \x3d 3;\r\nG__19192.cljs$lang$applyTo \x3d (function (arglist__19195){\r\nvar x \x3d cljs.core.first(arglist__19195);\r\narglist__19195 \x3d cljs.core.next(arglist__19195);\r\nvar y \x3d cljs.core.first(arglist__19195);\r\narglist__19195 \x3d cljs.core.next(arglist__19195);\r\nvar z \x3d cljs.core.first(arglist__19195);\r\nvar args \x3d cljs.core.rest(arglist__19195);\r\nreturn G__19192__delegate(x,y,z,args);\r\n});\r\nG__19192.cljs$core$IFn$_invoke$arity$variadic \x3d G__19192__delegate;\r\nreturn G__19192;\r\n})()\r\n;\r\ncljs$core$sp1 \x3d function(x,y,z,var_args){\r\nvar args \x3d var_args;\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn cljs$core$sp1__0.call(this);\r\ncase 1:\r\nreturn cljs$core$sp1__1.call(this,x);\r\ncase 2:\r\nreturn cljs$core$sp1__2.call(this,x,y);\r\ncase 3:\r\nreturn cljs$core$sp1__3.call(this,x,y,z);\r\ndefault:\r\nvar G__19196 \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__19197__i \x3d 0, G__19197__a \x3d new Array(arguments.length -  3);\r\nwhile (G__19197__i \x3c G__19197__a.length) {G__19197__a[G__19197__i] \x3d arguments[G__19197__i + 3]; ++G__19197__i;}\r\nG__19196 \x3d new cljs.core.IndexedSeq(G__19197__a,0,null);\r\n}\r\nreturn cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19196);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\ncljs$core$sp1.cljs$lang$maxFixedArity \x3d 3;\r\ncljs$core$sp1.cljs$lang$applyTo \x3d cljs$core$sp1__4.cljs$lang$applyTo;\r\ncljs$core$sp1.cljs$core$IFn$_invoke$arity$0 \x3d cljs$core$sp1__0;\r\ncljs$core$sp1.cljs$core$IFn$_invoke$arity$1 \x3d cljs$core$sp1__1;\r\ncljs$core$sp1.cljs$core$IFn$_invoke$arity$2 \x3d cljs$core$sp1__2;\r\ncljs$core$sp1.cljs$core$IFn$_invoke$arity$3 \x3d cljs$core$sp1__3;\r\ncljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic \x3d cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;\r\nreturn cljs$core$sp1;\r\n})()\r\n}));\r\n\r\n(cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 \x3d (function (p1,p2){\r\nreturn (function() {\r\nvar cljs$core$sp2 \x3d null;\r\nvar cljs$core$sp2__0 \x3d (function (){\r\nreturn null;\r\n});\r\nvar cljs$core$sp2__1 \x3d (function (x){\r\nvar or__4253__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\r\n}\r\n});\r\nvar cljs$core$sp2__2 \x3d (function (x,y){\r\nvar or__4253__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar or__4253__auto____$1 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null,y));\r\nif(cljs.core.truth_(or__4253__auto____$1)){\r\nreturn or__4253__auto____$1;\r\n} else {\r\nvar or__4253__auto____$2 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\r\nif(cljs.core.truth_(or__4253__auto____$2)){\r\nreturn or__4253__auto____$2;\r\n} else {\r\nreturn (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null,y));\r\n}\r\n}\r\n}\r\n});\r\nvar cljs$core$sp2__3 \x3d (function (x,y,z){\r\nvar or__4253__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar or__4253__auto____$1 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null,y));\r\nif(cljs.core.truth_(or__4253__auto____$1)){\r\nreturn or__4253__auto____$1;\r\n} else {\r\nvar or__4253__auto____$2 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null,z));\r\nif(cljs.core.truth_(or__4253__auto____$2)){\r\nreturn or__4253__auto____$2;\r\n} else {\r\nvar or__4253__auto____$3 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\r\nif(cljs.core.truth_(or__4253__auto____$3)){\r\nreturn or__4253__auto____$3;\r\n} else {\r\nvar or__4253__auto____$4 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null,y));\r\nif(cljs.core.truth_(or__4253__auto____$4)){\r\nreturn or__4253__auto____$4;\r\n} else {\r\nreturn (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null,z));\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\nvar cljs$core$sp2__4 \x3d (function() { \r\nvar G__19212__delegate \x3d function (x,y,z,args){\r\nvar or__4253__auto__ \x3d cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.core.some((function (p1__15598_SHARP_){\r\nvar or__4253__auto____$1 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__15598_SHARP_) : p1.call(null,p1__15598_SHARP_));\r\nif(cljs.core.truth_(or__4253__auto____$1)){\r\nreturn or__4253__auto____$1;\r\n} else {\r\nreturn (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__15598_SHARP_) : p2.call(null,p1__15598_SHARP_));\r\n}\r\n}),args);\r\n}\r\n};\r\nvar G__19212 \x3d function (x,y,z,var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__19218__i \x3d 0, G__19218__a \x3d new Array(arguments.length -  3);\r\nwhile (G__19218__i \x3c G__19218__a.length) {G__19218__a[G__19218__i] \x3d arguments[G__19218__i + 3]; ++G__19218__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__19218__a,0,null);\r\n} \r\nreturn G__19212__delegate.call(this,x,y,z,args);};\r\nG__19212.cljs$lang$maxFixedArity \x3d 3;\r\nG__19212.cljs$lang$applyTo \x3d (function (arglist__19219){\r\nvar x \x3d cljs.core.first(arglist__19219);\r\narglist__19219 \x3d cljs.core.next(arglist__19219);\r\nvar y \x3d cljs.core.first(arglist__19219);\r\narglist__19219 \x3d cljs.core.next(arglist__19219);\r\nvar z \x3d cljs.core.first(arglist__19219);\r\nvar args \x3d cljs.core.rest(arglist__19219);\r\nreturn G__19212__delegate(x,y,z,args);\r\n});\r\nG__19212.cljs$core$IFn$_invoke$arity$variadic \x3d G__19212__delegate;\r\nreturn G__19212;\r\n})()\r\n;\r\ncljs$core$sp2 \x3d function(x,y,z,var_args){\r\nvar args \x3d var_args;\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn cljs$core$sp2__0.call(this);\r\ncase 1:\r\nreturn cljs$core$sp2__1.call(this,x);\r\ncase 2:\r\nreturn cljs$core$sp2__2.call(this,x,y);\r\ncase 3:\r\nreturn cljs$core$sp2__3.call(this,x,y,z);\r\ndefault:\r\nvar G__19220 \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__19221__i \x3d 0, G__19221__a \x3d new Array(arguments.length -  3);\r\nwhile (G__19221__i \x3c G__19221__a.length) {G__19221__a[G__19221__i] \x3d arguments[G__19221__i + 3]; ++G__19221__i;}\r\nG__19220 \x3d new cljs.core.IndexedSeq(G__19221__a,0,null);\r\n}\r\nreturn cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19220);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\ncljs$core$sp2.cljs$lang$maxFixedArity \x3d 3;\r\ncljs$core$sp2.cljs$lang$applyTo \x3d cljs$core$sp2__4.cljs$lang$applyTo;\r\ncljs$core$sp2.cljs$core$IFn$_invoke$arity$0 \x3d cljs$core$sp2__0;\r\ncljs$core$sp2.cljs$core$IFn$_invoke$arity$1 \x3d cljs$core$sp2__1;\r\ncljs$core$sp2.cljs$core$IFn$_invoke$arity$2 \x3d cljs$core$sp2__2;\r\ncljs$core$sp2.cljs$core$IFn$_invoke$arity$3 \x3d cljs$core$sp2__3;\r\ncljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic \x3d cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;\r\nreturn cljs$core$sp2;\r\n})()\r\n}));\r\n\r\n(cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 \x3d (function (p1,p2,p3){\r\nreturn (function() {\r\nvar cljs$core$sp3 \x3d null;\r\nvar cljs$core$sp3__0 \x3d (function (){\r\nreturn null;\r\n});\r\nvar cljs$core$sp3__1 \x3d (function (x){\r\nvar or__4253__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar or__4253__auto____$1 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\r\nif(cljs.core.truth_(or__4253__auto____$1)){\r\nreturn or__4253__auto____$1;\r\n} else {\r\nreturn (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null,x));\r\n}\r\n}\r\n});\r\nvar cljs$core$sp3__2 \x3d (function (x,y){\r\nvar or__4253__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar or__4253__auto____$1 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\r\nif(cljs.core.truth_(or__4253__auto____$1)){\r\nreturn or__4253__auto____$1;\r\n} else {\r\nvar or__4253__auto____$2 \x3d (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null,x));\r\nif(cljs.core.truth_(or__4253__auto____$2)){\r\nreturn or__4253__auto____$2;\r\n} else {\r\nvar or__4253__auto____$3 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null,y));\r\nif(cljs.core.truth_(or__4253__auto____$3)){\r\nreturn or__4253__auto____$3;\r\n} else {\r\nvar or__4253__auto____$4 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null,y));\r\nif(cljs.core.truth_(or__4253__auto____$4)){\r\nreturn or__4253__auto____$4;\r\n} else {\r\nreturn (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null,y));\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\nvar cljs$core$sp3__3 \x3d (function (x,y,z){\r\nvar or__4253__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar or__4253__auto____$1 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\r\nif(cljs.core.truth_(or__4253__auto____$1)){\r\nreturn or__4253__auto____$1;\r\n} else {\r\nvar or__4253__auto____$2 \x3d (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null,x));\r\nif(cljs.core.truth_(or__4253__auto____$2)){\r\nreturn or__4253__auto____$2;\r\n} else {\r\nvar or__4253__auto____$3 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null,y));\r\nif(cljs.core.truth_(or__4253__auto____$3)){\r\nreturn or__4253__auto____$3;\r\n} else {\r\nvar or__4253__auto____$4 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null,y));\r\nif(cljs.core.truth_(or__4253__auto____$4)){\r\nreturn or__4253__auto____$4;\r\n} else {\r\nvar or__4253__auto____$5 \x3d (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null,y));\r\nif(cljs.core.truth_(or__4253__auto____$5)){\r\nreturn or__4253__auto____$5;\r\n} else {\r\nvar or__4253__auto____$6 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null,z));\r\nif(cljs.core.truth_(or__4253__auto____$6)){\r\nreturn or__4253__auto____$6;\r\n} else {\r\nvar or__4253__auto____$7 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null,z));\r\nif(cljs.core.truth_(or__4253__auto____$7)){\r\nreturn or__4253__auto____$7;\r\n} else {\r\nreturn (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null,z));\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\nvar cljs$core$sp3__4 \x3d (function() { \r\nvar G__19244__delegate \x3d function (x,y,z,args){\r\nvar or__4253__auto__ \x3d cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.core.some((function (p1__15599_SHARP_){\r\nvar or__4253__auto____$1 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__15599_SHARP_) : p1.call(null,p1__15599_SHARP_));\r\nif(cljs.core.truth_(or__4253__auto____$1)){\r\nreturn or__4253__auto____$1;\r\n} else {\r\nvar or__4253__auto____$2 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__15599_SHARP_) : p2.call(null,p1__15599_SHARP_));\r\nif(cljs.core.truth_(or__4253__auto____$2)){\r\nreturn or__4253__auto____$2;\r\n} else {\r\nreturn (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__15599_SHARP_) : p3.call(null,p1__15599_SHARP_));\r\n}\r\n}\r\n}),args);\r\n}\r\n};\r\nvar G__19244 \x3d function (x,y,z,var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__19246__i \x3d 0, G__19246__a \x3d new Array(arguments.length -  3);\r\nwhile (G__19246__i \x3c G__19246__a.length) {G__19246__a[G__19246__i] \x3d arguments[G__19246__i + 3]; ++G__19246__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__19246__a,0,null);\r\n} \r\nreturn G__19244__delegate.call(this,x,y,z,args);};\r\nG__19244.cljs$lang$maxFixedArity \x3d 3;\r\nG__19244.cljs$lang$applyTo \x3d (function (arglist__19248){\r\nvar x \x3d cljs.core.first(arglist__19248);\r\narglist__19248 \x3d cljs.core.next(arglist__19248);\r\nvar y \x3d cljs.core.first(arglist__19248);\r\narglist__19248 \x3d cljs.core.next(arglist__19248);\r\nvar z \x3d cljs.core.first(arglist__19248);\r\nvar args \x3d cljs.core.rest(arglist__19248);\r\nreturn G__19244__delegate(x,y,z,args);\r\n});\r\nG__19244.cljs$core$IFn$_invoke$arity$variadic \x3d G__19244__delegate;\r\nreturn G__19244;\r\n})()\r\n;\r\ncljs$core$sp3 \x3d function(x,y,z,var_args){\r\nvar args \x3d var_args;\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn cljs$core$sp3__0.call(this);\r\ncase 1:\r\nreturn cljs$core$sp3__1.call(this,x);\r\ncase 2:\r\nreturn cljs$core$sp3__2.call(this,x,y);\r\ncase 3:\r\nreturn cljs$core$sp3__3.call(this,x,y,z);\r\ndefault:\r\nvar G__19249 \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__19250__i \x3d 0, G__19250__a \x3d new Array(arguments.length -  3);\r\nwhile (G__19250__i \x3c G__19250__a.length) {G__19250__a[G__19250__i] \x3d arguments[G__19250__i + 3]; ++G__19250__i;}\r\nG__19249 \x3d new cljs.core.IndexedSeq(G__19250__a,0,null);\r\n}\r\nreturn cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19249);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\ncljs$core$sp3.cljs$lang$maxFixedArity \x3d 3;\r\ncljs$core$sp3.cljs$lang$applyTo \x3d cljs$core$sp3__4.cljs$lang$applyTo;\r\ncljs$core$sp3.cljs$core$IFn$_invoke$arity$0 \x3d cljs$core$sp3__0;\r\ncljs$core$sp3.cljs$core$IFn$_invoke$arity$1 \x3d cljs$core$sp3__1;\r\ncljs$core$sp3.cljs$core$IFn$_invoke$arity$2 \x3d cljs$core$sp3__2;\r\ncljs$core$sp3.cljs$core$IFn$_invoke$arity$3 \x3d cljs$core$sp3__3;\r\ncljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic \x3d cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;\r\nreturn cljs$core$sp3;\r\n})()\r\n}));\r\n\r\n(cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic \x3d (function (p1,p2,p3,ps){\r\nvar ps__$1 \x3d cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);\r\nreturn (function() {\r\nvar cljs$core$spn \x3d null;\r\nvar cljs$core$spn__0 \x3d (function (){\r\nreturn null;\r\n});\r\nvar cljs$core$spn__1 \x3d (function (x){\r\nreturn cljs.core.some((function (p1__15600_SHARP_){\r\nreturn (p1__15600_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15600_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__15600_SHARP_.call(null,x));\r\n}),ps__$1);\r\n});\r\nvar cljs$core$spn__2 \x3d (function (x,y){\r\nreturn cljs.core.some((function (p1__15601_SHARP_){\r\nvar or__4253__auto__ \x3d (p1__15601_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15601_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__15601_SHARP_.call(null,x));\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn (p1__15601_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15601_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__15601_SHARP_.call(null,y));\r\n}\r\n}),ps__$1);\r\n});\r\nvar cljs$core$spn__3 \x3d (function (x,y,z){\r\nreturn cljs.core.some((function (p1__15602_SHARP_){\r\nvar or__4253__auto__ \x3d (p1__15602_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15602_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__15602_SHARP_.call(null,x));\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar or__4253__auto____$1 \x3d (p1__15602_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15602_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__15602_SHARP_.call(null,y));\r\nif(cljs.core.truth_(or__4253__auto____$1)){\r\nreturn or__4253__auto____$1;\r\n} else {\r\nreturn (p1__15602_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15602_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__15602_SHARP_.call(null,z));\r\n}\r\n}\r\n}),ps__$1);\r\n});\r\nvar cljs$core$spn__4 \x3d (function() { \r\nvar G__19304__delegate \x3d function (x,y,z,args){\r\nvar or__4253__auto__ \x3d cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x,y,z);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.core.some((function (p1__15603_SHARP_){\r\nreturn cljs.core.some(p1__15603_SHARP_,args);\r\n}),ps__$1);\r\n}\r\n};\r\nvar G__19304 \x3d function (x,y,z,var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__19306__i \x3d 0, G__19306__a \x3d new Array(arguments.length -  3);\r\nwhile (G__19306__i \x3c G__19306__a.length) {G__19306__a[G__19306__i] \x3d arguments[G__19306__i + 3]; ++G__19306__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__19306__a,0,null);\r\n} \r\nreturn G__19304__delegate.call(this,x,y,z,args);};\r\nG__19304.cljs$lang$maxFixedArity \x3d 3;\r\nG__19304.cljs$lang$applyTo \x3d (function (arglist__19308){\r\nvar x \x3d cljs.core.first(arglist__19308);\r\narglist__19308 \x3d cljs.core.next(arglist__19308);\r\nvar y \x3d cljs.core.first(arglist__19308);\r\narglist__19308 \x3d cljs.core.next(arglist__19308);\r\nvar z \x3d cljs.core.first(arglist__19308);\r\nvar args \x3d cljs.core.rest(arglist__19308);\r\nreturn G__19304__delegate(x,y,z,args);\r\n});\r\nG__19304.cljs$core$IFn$_invoke$arity$variadic \x3d G__19304__delegate;\r\nreturn G__19304;\r\n})()\r\n;\r\ncljs$core$spn \x3d function(x,y,z,var_args){\r\nvar args \x3d var_args;\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn cljs$core$spn__0.call(this);\r\ncase 1:\r\nreturn cljs$core$spn__1.call(this,x);\r\ncase 2:\r\nreturn cljs$core$spn__2.call(this,x,y);\r\ncase 3:\r\nreturn cljs$core$spn__3.call(this,x,y,z);\r\ndefault:\r\nvar G__19310 \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__19311__i \x3d 0, G__19311__a \x3d new Array(arguments.length -  3);\r\nwhile (G__19311__i \x3c G__19311__a.length) {G__19311__a[G__19311__i] \x3d arguments[G__19311__i + 3]; ++G__19311__i;}\r\nG__19310 \x3d new cljs.core.IndexedSeq(G__19311__a,0,null);\r\n}\r\nreturn cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19310);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\ncljs$core$spn.cljs$lang$maxFixedArity \x3d 3;\r\ncljs$core$spn.cljs$lang$applyTo \x3d cljs$core$spn__4.cljs$lang$applyTo;\r\ncljs$core$spn.cljs$core$IFn$_invoke$arity$0 \x3d cljs$core$spn__0;\r\ncljs$core$spn.cljs$core$IFn$_invoke$arity$1 \x3d cljs$core$spn__1;\r\ncljs$core$spn.cljs$core$IFn$_invoke$arity$2 \x3d cljs$core$spn__2;\r\ncljs$core$spn.cljs$core$IFn$_invoke$arity$3 \x3d cljs$core$spn__3;\r\ncljs$core$spn.cljs$core$IFn$_invoke$arity$variadic \x3d cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;\r\nreturn cljs$core$spn;\r\n})()\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.some_fn.cljs$lang$applyTo \x3d (function (seq15605){\r\nvar G__15606 \x3d cljs.core.first(seq15605);\r\nvar seq15605__$1 \x3d cljs.core.next(seq15605);\r\nvar G__15607 \x3d cljs.core.first(seq15605__$1);\r\nvar seq15605__$2 \x3d cljs.core.next(seq15605__$1);\r\nvar G__15608 \x3d cljs.core.first(seq15605__$2);\r\nvar seq15605__$3 \x3d cljs.core.next(seq15605__$2);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15606,G__15607,G__15608,seq15605__$3);\r\n}));\r\n\r\n(cljs.core.some_fn.cljs$lang$maxFixedArity \x3d (3));\r\n\r\n/**\r\n * Returns a lazy sequence consisting of the result of applying f to\r\n *   the set of first items of each coll, followed by applying f to the\r\n *   set of second items in each coll, until any one of the colls is\r\n *   exhausted.  Any remaining items in other colls are ignored. Function\r\n *   f should accept number-of-colls arguments. Returns a transducer when\r\n *   no collection is provided.\r\n */\r\ncljs.core.map \x3d (function cljs$core$map(var_args){\r\nvar G__15617 \x3d arguments.length;\r\nswitch (G__15617) {\r\ncase 1:\r\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___19320 \x3d arguments.length;\r\nvar i__4865__auto___19321 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___19321 \x3c len__4864__auto___19320)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___19321]));\r\n\r\nvar G__19323 \x3d (i__4865__auto___19321 + (1));\r\ni__4865__auto___19321 \x3d G__19323;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((4)),(0),null));\r\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.map.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\r\nreturn (function (rf){\r\nreturn (function() {\r\nvar G__19325 \x3d null;\r\nvar G__19325__0 \x3d (function (){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\r\n});\r\nvar G__19325__1 \x3d (function (result){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\r\n});\r\nvar G__19325__2 \x3d (function (result,input){\r\nvar G__15618 \x3d result;\r\nvar G__15619 \x3d (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null,input));\r\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15618,G__15619) : rf.call(null,G__15618,G__15619));\r\n});\r\nvar G__19325__3 \x3d (function() { \r\nvar G__19328__delegate \x3d function (result,input,inputs){\r\nvar G__15620 \x3d result;\r\nvar G__15621 \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);\r\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15620,G__15621) : rf.call(null,G__15620,G__15621));\r\n};\r\nvar G__19328 \x3d function (result,input,var_args){\r\nvar inputs \x3d null;\r\nif (arguments.length \x3e 2) {\r\nvar G__19329__i \x3d 0, G__19329__a \x3d new Array(arguments.length -  2);\r\nwhile (G__19329__i \x3c G__19329__a.length) {G__19329__a[G__19329__i] \x3d arguments[G__19329__i + 2]; ++G__19329__i;}\r\n  inputs \x3d new cljs.core.IndexedSeq(G__19329__a,0,null);\r\n} \r\nreturn G__19328__delegate.call(this,result,input,inputs);};\r\nG__19328.cljs$lang$maxFixedArity \x3d 2;\r\nG__19328.cljs$lang$applyTo \x3d (function (arglist__19331){\r\nvar result \x3d cljs.core.first(arglist__19331);\r\narglist__19331 \x3d cljs.core.next(arglist__19331);\r\nvar input \x3d cljs.core.first(arglist__19331);\r\nvar inputs \x3d cljs.core.rest(arglist__19331);\r\nreturn G__19328__delegate(result,input,inputs);\r\n});\r\nG__19328.cljs$core$IFn$_invoke$arity$variadic \x3d G__19328__delegate;\r\nreturn G__19328;\r\n})()\r\n;\r\nG__19325 \x3d function(result,input,var_args){\r\nvar inputs \x3d var_args;\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__19325__0.call(this);\r\ncase 1:\r\nreturn G__19325__1.call(this,result);\r\ncase 2:\r\nreturn G__19325__2.call(this,result,input);\r\ndefault:\r\nvar G__19332 \x3d null;\r\nif (arguments.length \x3e 2) {\r\nvar G__19333__i \x3d 0, G__19333__a \x3d new Array(arguments.length -  2);\r\nwhile (G__19333__i \x3c G__19333__a.length) {G__19333__a[G__19333__i] \x3d arguments[G__19333__i + 2]; ++G__19333__i;}\r\nG__19332 \x3d new cljs.core.IndexedSeq(G__19333__a,0,null);\r\n}\r\nreturn G__19325__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__19332);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__19325.cljs$lang$maxFixedArity \x3d 2;\r\nG__19325.cljs$lang$applyTo \x3d G__19325__3.cljs$lang$applyTo;\r\nG__19325.cljs$core$IFn$_invoke$arity$0 \x3d G__19325__0;\r\nG__19325.cljs$core$IFn$_invoke$arity$1 \x3d G__19325__1;\r\nG__19325.cljs$core$IFn$_invoke$arity$2 \x3d G__19325__2;\r\nG__19325.cljs$core$IFn$_invoke$arity$variadic \x3d G__19325__3.cljs$core$IFn$_invoke$arity$variadic;\r\nreturn G__19325;\r\n})()\r\n});\r\n}));\r\n\r\n(cljs.core.map.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,coll){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(coll);\r\nif(temp__5753__auto__){\r\nvar s \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s)){\r\nvar c \x3d cljs.core.chunk_first(s);\r\nvar size \x3d cljs.core.count(c);\r\nvar b \x3d cljs.core.chunk_buffer(size);\r\nvar n__4741__auto___19337 \x3d size;\r\nvar i_19338 \x3d (0);\r\nwhile(true){\r\nif((i_19338 \x3c n__4741__auto___19337)){\r\ncljs.core.chunk_append(b,(function (){var G__15622 \x3d cljs.core._nth(c,i_19338);\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15622) : f.call(null,G__15622));\r\n})());\r\n\r\nvar G__19343 \x3d (i_19338 + (1));\r\ni_19338 \x3d G__19343;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b),cljs.core.map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));\r\n} else {\r\nreturn cljs.core.cons((function (){var G__15623 \x3d cljs.core.first(s);\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15623) : f.call(null,G__15623));\r\n})(),cljs.core.map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}),null,null));\r\n}));\r\n\r\n(cljs.core.map.cljs$core$IFn$_invoke$arity$3 \x3d (function (f,c1,c2){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s1 \x3d cljs.core.seq(c1);\r\nvar s2 \x3d cljs.core.seq(c2);\r\nif(((s1) \x26\x26 (s2))){\r\nreturn cljs.core.cons((function (){var G__15624 \x3d cljs.core.first(s1);\r\nvar G__15625 \x3d cljs.core.first(s2);\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15624,G__15625) : f.call(null,G__15624,G__15625));\r\n})(),cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));\r\n} else {\r\nreturn null;\r\n}\r\n}),null,null));\r\n}));\r\n\r\n(cljs.core.map.cljs$core$IFn$_invoke$arity$4 \x3d (function (f,c1,c2,c3){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s1 \x3d cljs.core.seq(c1);\r\nvar s2 \x3d cljs.core.seq(c2);\r\nvar s3 \x3d cljs.core.seq(c3);\r\nif(((s1) \x26\x26 (((s2) \x26\x26 (s3))))){\r\nreturn cljs.core.cons((function (){var G__15626 \x3d cljs.core.first(s1);\r\nvar G__15627 \x3d cljs.core.first(s2);\r\nvar G__15628 \x3d cljs.core.first(s3);\r\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15626,G__15627,G__15628) : f.call(null,G__15626,G__15627,G__15628));\r\n})(),cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));\r\n} else {\r\nreturn null;\r\n}\r\n}),null,null));\r\n}));\r\n\r\n(cljs.core.map.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,c1,c2,c3,colls){\r\nvar step \x3d (function cljs$core$step(cs){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar ss \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);\r\nif(cljs.core.every_QMARK_(cljs.core.identity,ss)){\r\nreturn cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));\r\n} else {\r\nreturn null;\r\n}\r\n}),null,null));\r\n});\r\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__15610_SHARP_){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__15610_SHARP_);\r\n}),step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c2,c1], 0))));\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.map.cljs$lang$applyTo \x3d (function (seq15612){\r\nvar G__15613 \x3d cljs.core.first(seq15612);\r\nvar seq15612__$1 \x3d cljs.core.next(seq15612);\r\nvar G__15614 \x3d cljs.core.first(seq15612__$1);\r\nvar seq15612__$2 \x3d cljs.core.next(seq15612__$1);\r\nvar G__15615 \x3d cljs.core.first(seq15612__$2);\r\nvar seq15612__$3 \x3d cljs.core.next(seq15612__$2);\r\nvar G__15616 \x3d cljs.core.first(seq15612__$3);\r\nvar seq15612__$4 \x3d cljs.core.next(seq15612__$3);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15613,G__15614,G__15615,G__15616,seq15612__$4);\r\n}));\r\n\r\n(cljs.core.map.cljs$lang$maxFixedArity \x3d (4));\r\n\r\n/**\r\n * Returns a lazy sequence of the first n items in coll, or all items if\r\n *   there are fewer than n.  Returns a stateful transducer when\r\n *   no collection is provided.\r\n */\r\ncljs.core.take \x3d (function cljs$core$take(var_args){\r\nvar G__15630 \x3d arguments.length;\r\nswitch (G__15630) {\r\ncase 1:\r\nreturn cljs.core.take.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.take.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.take.cljs$core$IFn$_invoke$arity$1 \x3d (function (n){\r\nif(typeof n \x3d\x3d\x3d \x27number\x27){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (number? n)\x22));\r\n}\r\n\r\nreturn (function (rf){\r\nvar na \x3d cljs.core.volatile_BANG_(n);\r\nreturn (function() {\r\nvar G__19388 \x3d null;\r\nvar G__19388__0 \x3d (function (){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\r\n});\r\nvar G__19388__1 \x3d (function (result){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\r\n});\r\nvar G__19388__2 \x3d (function (result,input){\r\nvar n__$1 \x3d cljs.core.deref(na);\r\nvar nn \x3d na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));\r\nvar result__$1 \x3d (((n__$1 \x3e (0)))?(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,input) : rf.call(null,result,input)):result);\r\nif((!((nn \x3e (0))))){\r\nreturn cljs.core.ensure_reduced(result__$1);\r\n} else {\r\nreturn result__$1;\r\n}\r\n});\r\nG__19388 \x3d function(result,input){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__19388__0.call(this);\r\ncase 1:\r\nreturn G__19388__1.call(this,result);\r\ncase 2:\r\nreturn G__19388__2.call(this,result,input);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__19388.cljs$core$IFn$_invoke$arity$0 \x3d G__19388__0;\r\nG__19388.cljs$core$IFn$_invoke$arity$1 \x3d G__19388__1;\r\nG__19388.cljs$core$IFn$_invoke$arity$2 \x3d G__19388__2;\r\nreturn G__19388;\r\n})()\r\n});\r\n}));\r\n\r\n(cljs.core.take.cljs$core$IFn$_invoke$arity$2 \x3d (function (n,coll){\r\nif(typeof n \x3d\x3d\x3d \x27number\x27){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (number? n)\x22));\r\n}\r\n\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nif((n \x3e (0))){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(coll);\r\nif(temp__5753__auto__){\r\nvar s \x3d temp__5753__auto__;\r\nreturn cljs.core.cons(cljs.core.first(s),cljs.core.take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}),null,null));\r\n}));\r\n\r\n(cljs.core.take.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Returns a lazy sequence of all but the first n items in coll.\r\n *   Returns a stateful transducer when no collection is provided.\r\n */\r\ncljs.core.drop \x3d (function cljs$core$drop(var_args){\r\nvar G__15632 \x3d arguments.length;\r\nswitch (G__15632) {\r\ncase 1:\r\nreturn cljs.core.drop.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.drop.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.drop.cljs$core$IFn$_invoke$arity$1 \x3d (function (n){\r\nif(typeof n \x3d\x3d\x3d \x27number\x27){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (number? n)\x22));\r\n}\r\n\r\nreturn (function (rf){\r\nvar na \x3d cljs.core.volatile_BANG_(n);\r\nreturn (function() {\r\nvar G__19394 \x3d null;\r\nvar G__19394__0 \x3d (function (){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\r\n});\r\nvar G__19394__1 \x3d (function (result){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\r\n});\r\nvar G__19394__2 \x3d (function (result,input){\r\nvar n__$1 \x3d cljs.core.deref(na);\r\nna.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));\r\n\r\nif((n__$1 \x3e (0))){\r\nreturn result;\r\n} else {\r\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,input) : rf.call(null,result,input));\r\n}\r\n});\r\nG__19394 \x3d function(result,input){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__19394__0.call(this);\r\ncase 1:\r\nreturn G__19394__1.call(this,result);\r\ncase 2:\r\nreturn G__19394__2.call(this,result,input);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__19394.cljs$core$IFn$_invoke$arity$0 \x3d G__19394__0;\r\nG__19394.cljs$core$IFn$_invoke$arity$1 \x3d G__19394__1;\r\nG__19394.cljs$core$IFn$_invoke$arity$2 \x3d G__19394__2;\r\nreturn G__19394;\r\n})()\r\n});\r\n}));\r\n\r\n(cljs.core.drop.cljs$core$IFn$_invoke$arity$2 \x3d (function (n,coll){\r\nif(typeof n \x3d\x3d\x3d \x27number\x27){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (number? n)\x22));\r\n}\r\n\r\nvar step \x3d (function (n__$1,coll__$1){\r\nwhile(true){\r\nvar s \x3d cljs.core.seq(coll__$1);\r\nif((((n__$1 \x3e (0))) \x26\x26 (s))){\r\nvar G__19398 \x3d (n__$1 - (1));\r\nvar G__19399 \x3d cljs.core.rest(s);\r\nn__$1 \x3d G__19398;\r\ncoll__$1 \x3d G__19399;\r\ncontinue;\r\n} else {\r\nreturn s;\r\n}\r\nbreak;\r\n}\r\n});\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nreturn step(n,coll);\r\n}),null,null));\r\n}));\r\n\r\n(cljs.core.drop.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Return a lazy sequence of all but the last n (default 1) items in coll\r\n */\r\ncljs.core.drop_last \x3d (function cljs$core$drop_last(var_args){\r\nvar G__15634 \x3d arguments.length;\r\nswitch (G__15634) {\r\ncase 1:\r\nreturn cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 \x3d (function (s){\r\nreturn cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2((1),s);\r\n}));\r\n\r\n(cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 \x3d (function (n,s){\r\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){\r\nreturn x;\r\n}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));\r\n}));\r\n\r\n(cljs.core.drop_last.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Returns a seq of the last n items in coll.  Depending on the type\r\n *   of coll may be no better than linear time.  For vectors, see also subvec.\r\n */\r\ncljs.core.take_last \x3d (function cljs$core$take_last(n,coll){\r\nvar s \x3d cljs.core.seq(coll);\r\nvar lead \x3d cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));\r\nwhile(true){\r\nif(lead){\r\nvar G__19407 \x3d cljs.core.next(s);\r\nvar G__19408 \x3d cljs.core.next(lead);\r\ns \x3d G__19407;\r\nlead \x3d G__19408;\r\ncontinue;\r\n} else {\r\nreturn s;\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Returns a lazy sequence of the items in coll starting from the\r\n *   first item for which (pred item) returns logical false.  Returns a\r\n *   stateful transducer when no collection is provided.\r\n */\r\ncljs.core.drop_while \x3d (function cljs$core$drop_while(var_args){\r\nvar G__15636 \x3d arguments.length;\r\nswitch (G__15636) {\r\ncase 1:\r\nreturn cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 \x3d (function (pred){\r\nreturn (function (rf){\r\nvar da \x3d cljs.core.volatile_BANG_(true);\r\nreturn (function() {\r\nvar G__19413 \x3d null;\r\nvar G__19413__0 \x3d (function (){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\r\n});\r\nvar G__19413__1 \x3d (function (result){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\r\n});\r\nvar G__19413__2 \x3d (function (result,input){\r\nvar drop_QMARK_ \x3d cljs.core.deref(da);\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d drop_QMARK_;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null,input));\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nreturn result;\r\n} else {\r\ncljs.core.vreset_BANG_(da,null);\r\n\r\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,input) : rf.call(null,result,input));\r\n}\r\n});\r\nG__19413 \x3d function(result,input){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__19413__0.call(this);\r\ncase 1:\r\nreturn G__19413__1.call(this,result);\r\ncase 2:\r\nreturn G__19413__2.call(this,result,input);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__19413.cljs$core$IFn$_invoke$arity$0 \x3d G__19413__0;\r\nG__19413.cljs$core$IFn$_invoke$arity$1 \x3d G__19413__1;\r\nG__19413.cljs$core$IFn$_invoke$arity$2 \x3d G__19413__2;\r\nreturn G__19413;\r\n})()\r\n});\r\n}));\r\n\r\n(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 \x3d (function (pred,coll){\r\nvar step \x3d (function (pred__$1,coll__$1){\r\nwhile(true){\r\nvar s \x3d cljs.core.seq(coll__$1);\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d s;\r\nif(and__4251__auto__){\r\nvar G__15637 \x3d cljs.core.first(s);\r\nreturn (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__15637) : pred__$1.call(null,G__15637));\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nvar G__19419 \x3d pred__$1;\r\nvar G__19420 \x3d cljs.core.rest(s);\r\npred__$1 \x3d G__19419;\r\ncoll__$1 \x3d G__19420;\r\ncontinue;\r\n} else {\r\nreturn s;\r\n}\r\nbreak;\r\n}\r\n});\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nreturn step(pred,coll);\r\n}),null,null));\r\n}));\r\n\r\n(cljs.core.drop_while.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IPending}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.INext}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.Cycle \x3d (function (meta,all,prev,current,_next){\r\nthis.meta \x3d meta;\r\nthis.all \x3d all;\r\nthis.prev \x3d prev;\r\nthis.current \x3d current;\r\nthis._next \x3d _next;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 26083532;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 1;\r\n});\r\n(cljs.core.Cycle.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.Cycle.prototype.currentval \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nif(self__.current){\r\n} else {\r\nvar temp__5751__auto___19421 \x3d cljs.core.next(self__.prev);\r\nif(temp__5751__auto___19421){\r\nvar c_19422 \x3d temp__5751__auto___19421;\r\n(self__.current \x3d c_19422);\r\n} else {\r\n(self__.current \x3d self__.all);\r\n}\r\n}\r\n\r\nreturn self__.current;\r\n}));\r\n\r\n(cljs.core.Cycle.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.Cycle.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1.cljs$core$ISeq$_rest$arity$1(null);\r\n}));\r\n\r\n(cljs.core.Cycle.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.List.EMPTY;\r\n}));\r\n\r\n(cljs.core.Cycle.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (!((self__.current \x3d\x3d null)));\r\n}));\r\n\r\n(cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar s \x3d coll__$1.currentval();\r\nvar ret \x3d cljs.core.first(s);\r\nwhile(true){\r\nvar s__$1 \x3d (function (){var or__4253__auto__ \x3d cljs.core.next(s);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn self__.all;\r\n}\r\n})();\r\nvar ret__$1 \x3d (function (){var G__15640 \x3d ret;\r\nvar G__15641 \x3d cljs.core.first(s__$1);\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15640,G__15641) : f.call(null,G__15640,G__15641));\r\n})();\r\nif(cljs.core.reduced_QMARK_(ret__$1)){\r\nreturn cljs.core.deref(ret__$1);\r\n} else {\r\nvar G__19426 \x3d s__$1;\r\nvar G__19427 \x3d ret__$1;\r\ns \x3d G__19426;\r\nret \x3d G__19427;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar s \x3d coll__$1.currentval();\r\nvar ret \x3d start;\r\nwhile(true){\r\nvar ret__$1 \x3d (function (){var G__15642 \x3d ret;\r\nvar G__15643 \x3d cljs.core.first(s);\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15642,G__15643) : f.call(null,G__15642,G__15643));\r\n})();\r\nif(cljs.core.reduced_QMARK_(ret__$1)){\r\nreturn cljs.core.deref(ret__$1);\r\n} else {\r\nvar G__19430 \x3d (function (){var or__4253__auto__ \x3d cljs.core.next(s);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn self__.all;\r\n}\r\n})();\r\nvar G__19431 \x3d ret__$1;\r\ns \x3d G__19430;\r\nret \x3d G__19431;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.Cycle.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.first(coll__$1.currentval());\r\n}));\r\n\r\n(cljs.core.Cycle.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__._next \x3d\x3d null)){\r\n(self__._next \x3d (new cljs.core.Cycle(null,self__.all,coll__$1.currentval(),null,null)));\r\n} else {\r\n}\r\n\r\nreturn self__._next;\r\n}));\r\n\r\n(cljs.core.Cycle.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1;\r\n}));\r\n\r\n(cljs.core.Cycle.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.Cycle(new_meta,self__.all,self__.prev,self__.current,self__._next));\r\n}\r\n}));\r\n\r\n(cljs.core.Cycle.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.cons(o,coll__$1);\r\n}));\r\n\r\n(cljs.core.Cycle.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22all\x22,\x22all\x22,-1762306027,null),new cljs.core.Symbol(null,\x22prev\x22,\x22prev\x22,43462301,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22current\x22,\x22current\x22,552492924,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22_next\x22,\x22_next\x22,101877036,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.Cycle.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.Cycle.cljs$lang$ctorStr \x3d \x22cljs.core/Cycle\x22);\r\n\r\n(cljs.core.Cycle.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/Cycle\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/Cycle.\r\n */\r\ncljs.core.__GT_Cycle \x3d (function cljs$core$__GT_Cycle(meta,all,prev,current,_next){\r\nreturn (new cljs.core.Cycle(meta,all,prev,current,_next));\r\n});\r\n\r\n/**\r\n * Returns a lazy (infinite!) sequence of repetitions of the items in coll.\r\n */\r\ncljs.core.cycle \x3d (function cljs$core$cycle(coll){\r\nvar temp__5751__auto__ \x3d cljs.core.seq(coll);\r\nif(temp__5751__auto__){\r\nvar vals \x3d temp__5751__auto__;\r\nreturn (new cljs.core.Cycle(null,vals,null,vals,null));\r\n} else {\r\nreturn cljs.core.List.EMPTY;\r\n}\r\n});\r\n/**\r\n * Returns a vector of [(take n coll) (drop n coll)]\r\n */\r\ncljs.core.split_at \x3d (function cljs$core$split_at(n,coll){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IPending}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.INext}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.Repeat \x3d (function (meta,count,val,next,__hash){\r\nthis.meta \x3d meta;\r\nthis.count \x3d count;\r\nthis.val \x3d val;\r\nthis.next \x3d next;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32374988;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 1;\r\n});\r\n(cljs.core.Repeat.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.Repeat.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.Repeat.prototype.indexOf \x3d (function() {\r\nvar G__19441 \x3d null;\r\nvar G__19441__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__19441__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__19441 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__19441__1.call(this,x);\r\ncase 2:\r\nreturn G__19441__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__19441.cljs$core$IFn$_invoke$arity$1 \x3d G__19441__1;\r\nG__19441.cljs$core$IFn$_invoke$arity$2 \x3d G__19441__2;\r\nreturn G__19441;\r\n})()\r\n);\r\n\r\n(cljs.core.Repeat.prototype.lastIndexOf \x3d (function() {\r\nvar G__19442 \x3d null;\r\nvar G__19442__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,self__.count);\r\n});\r\nvar G__19442__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__19442 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__19442__1.call(this,x);\r\ncase 2:\r\nreturn G__19442__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__19442.cljs$core$IFn$_invoke$arity$1 \x3d G__19442__1;\r\nG__19442.cljs$core$IFn$_invoke$arity$2 \x3d G__19442__2;\r\nreturn G__19442;\r\n})()\r\n);\r\n\r\n(cljs.core.Repeat.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.Repeat.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.next \x3d\x3d null)){\r\nif((self__.count \x3e (1))){\r\n(self__.next \x3d (new cljs.core.Repeat(null,(self__.count - (1)),self__.val,null,null)));\r\n\r\nreturn self__.next;\r\n} else {\r\nif(((-1) \x3d\x3d\x3d self__.count)){\r\nreturn coll__$1;\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n} else {\r\nreturn self__.next;\r\n}\r\n}));\r\n\r\n(cljs.core.Repeat.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.Repeat.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.equiv_sequential(coll__$1,other);\r\n}));\r\n\r\n(cljs.core.Repeat.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.List.EMPTY;\r\n}));\r\n\r\n(cljs.core.Repeat.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn false;\r\n}));\r\n\r\n(cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.count \x3d\x3d\x3d (-1))){\r\nvar ret \x3d (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.val,self__.val) : f.call(null,self__.val,self__.val));\r\nwhile(true){\r\nif(cljs.core.reduced_QMARK_(ret)){\r\nreturn cljs.core.deref(ret);\r\n} else {\r\nvar G__19449 \x3d (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret,self__.val) : f.call(null,ret,self__.val));\r\nret \x3d G__19449;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n} else {\r\nvar i \x3d (1);\r\nvar ret \x3d self__.val;\r\nwhile(true){\r\nif((i \x3c self__.count)){\r\nvar ret__$1 \x3d (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret,self__.val) : f.call(null,ret,self__.val));\r\nif(cljs.core.reduced_QMARK_(ret__$1)){\r\nreturn cljs.core.deref(ret__$1);\r\n} else {\r\nvar G__19450 \x3d (i + (1));\r\nvar G__19451 \x3d ret__$1;\r\ni \x3d G__19450;\r\nret \x3d G__19451;\r\ncontinue;\r\n}\r\n} else {\r\nreturn ret;\r\n}\r\nbreak;\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.count \x3d\x3d\x3d (-1))){\r\nvar ret \x3d (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(start,self__.val) : f.call(null,start,self__.val));\r\nwhile(true){\r\nif(cljs.core.reduced_QMARK_(ret)){\r\nreturn cljs.core.deref(ret);\r\n} else {\r\nvar G__19453 \x3d (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret,self__.val) : f.call(null,ret,self__.val));\r\nret \x3d G__19453;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n} else {\r\nvar i \x3d (0);\r\nvar ret \x3d start;\r\nwhile(true){\r\nif((i \x3c self__.count)){\r\nvar ret__$1 \x3d (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret,self__.val) : f.call(null,ret,self__.val));\r\nif(cljs.core.reduced_QMARK_(ret__$1)){\r\nreturn cljs.core.deref(ret__$1);\r\n} else {\r\nvar G__19454 \x3d (i + (1));\r\nvar G__19455 \x3d ret__$1;\r\ni \x3d G__19454;\r\nret \x3d G__19455;\r\ncontinue;\r\n}\r\n} else {\r\nreturn ret;\r\n}\r\nbreak;\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.Repeat.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.val;\r\n}));\r\n\r\n(cljs.core.Repeat.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.next \x3d\x3d null)){\r\nif((self__.count \x3e (1))){\r\n(self__.next \x3d (new cljs.core.Repeat(null,(self__.count - (1)),self__.val,null,null)));\r\n\r\nreturn self__.next;\r\n} else {\r\nif(((-1) \x3d\x3d\x3d self__.count)){\r\nreturn coll__$1;\r\n} else {\r\nreturn cljs.core.List.EMPTY;\r\n}\r\n}\r\n} else {\r\nreturn self__.next;\r\n}\r\n}));\r\n\r\n(cljs.core.Repeat.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1;\r\n}));\r\n\r\n(cljs.core.Repeat.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.Repeat(new_meta,self__.count,self__.val,self__.next,null));\r\n}\r\n}));\r\n\r\n(cljs.core.Repeat.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.cons(o,coll__$1);\r\n}));\r\n\r\n(cljs.core.Repeat.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22count\x22,\x22count\x22,-514511684,null),new cljs.core.Symbol(null,\x22val\x22,\x22val\x22,1769233139,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22next\x22,\x22next\x22,1522830042,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.Repeat.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.Repeat.cljs$lang$ctorStr \x3d \x22cljs.core/Repeat\x22);\r\n\r\n(cljs.core.Repeat.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/Repeat\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/Repeat.\r\n */\r\ncljs.core.__GT_Repeat \x3d (function cljs$core$__GT_Repeat(meta,count,val,next,__hash){\r\nreturn (new cljs.core.Repeat(meta,count,val,next,__hash));\r\n});\r\n\r\n/**\r\n * Returns a lazy (infinite!, or length n if supplied) sequence of xs.\r\n */\r\ncljs.core.repeat \x3d (function cljs$core$repeat(var_args){\r\nvar G__15645 \x3d arguments.length;\r\nswitch (G__15645) {\r\ncase 1:\r\nreturn cljs.core.repeat.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn (new cljs.core.Repeat(null,(-1),x,null,null));\r\n}));\r\n\r\n(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 \x3d (function (n,x){\r\nif((n \x3e (0))){\r\nreturn (new cljs.core.Repeat(null,n,x,null,null));\r\n} else {\r\nreturn cljs.core.List.EMPTY;\r\n}\r\n}));\r\n\r\n(cljs.core.repeat.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * DEPRECATED: Use \x27repeat\x27 instead.\r\n *   Returns a lazy seq of n xs.\r\n */\r\ncljs.core.replicate \x3d (function cljs$core$replicate(n,x){\r\nreturn cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));\r\n});\r\n/**\r\n * Takes a function of no args, presumably with side effects, and\r\n *   returns an infinite (or length n if supplied) lazy sequence of calls\r\n *   to it\r\n */\r\ncljs.core.repeatedly \x3d (function cljs$core$repeatedly(var_args){\r\nvar G__15647 \x3d arguments.length;\r\nswitch (G__15647) {\r\ncase 1:\r\nreturn cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nreturn cljs.core.cons((f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)),cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));\r\n}),null,null));\r\n}));\r\n\r\n(cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 \x3d (function (n,f){\r\nreturn cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));\r\n}));\r\n\r\n(cljs.core.repeatedly.cljs$lang$maxFixedArity \x3d 2);\r\n\r\ncljs.core.UNREALIZED_SEED \x3d ({});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IPending}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.INext}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.Iterate \x3d (function (meta,f,prev_seed,seed,next){\r\nthis.meta \x3d meta;\r\nthis.f \x3d f;\r\nthis.prev_seed \x3d prev_seed;\r\nthis.seed \x3d seed;\r\nthis.next \x3d next;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 26083532;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 1;\r\n});\r\n(cljs.core.Iterate.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.Iterate.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.Iterate.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1.cljs$core$ISeq$_rest$arity$1(null);\r\n}));\r\n\r\n(cljs.core.Iterate.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.List.EMPTY;\r\n}));\r\n\r\n(cljs.core.Iterate.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (!((self__.seed \x3d\x3d\x3d cljs.core.UNREALIZED_SEED)));\r\n}));\r\n\r\n(cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,rf){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar first \x3d coll__$1.cljs$core$ISeq$_first$arity$1(null);\r\nvar v \x3d (self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(first) : self__.f.call(null,first));\r\nvar ret \x3d (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(first,v) : rf.call(null,first,v));\r\nvar v__$1 \x3d v;\r\nwhile(true){\r\nif(cljs.core.reduced_QMARK_(ret)){\r\nreturn cljs.core.deref(ret);\r\n} else {\r\nvar v__$2 \x3d (self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(v__$1) : self__.f.call(null,v__$1));\r\nvar G__19459 \x3d (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(ret,v__$2) : rf.call(null,ret,v__$2));\r\nvar G__19460 \x3d v__$2;\r\nret \x3d G__19459;\r\nv__$1 \x3d G__19460;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,rf,start){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar v \x3d coll__$1.cljs$core$ISeq$_first$arity$1(null);\r\nvar ret \x3d (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(start,v) : rf.call(null,start,v));\r\nvar v__$1 \x3d v;\r\nwhile(true){\r\nif(cljs.core.reduced_QMARK_(ret)){\r\nreturn cljs.core.deref(ret);\r\n} else {\r\nvar v__$2 \x3d (self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(v__$1) : self__.f.call(null,v__$1));\r\nvar G__19461 \x3d (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(ret,v__$2) : rf.call(null,ret,v__$2));\r\nvar G__19462 \x3d v__$2;\r\nret \x3d G__19461;\r\nv__$1 \x3d G__19462;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.Iterate.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((cljs.core.UNREALIZED_SEED \x3d\x3d\x3d self__.seed)){\r\n(self__.seed \x3d (self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(self__.prev_seed) : self__.f.call(null,self__.prev_seed)));\r\n} else {\r\n}\r\n\r\nreturn self__.seed;\r\n}));\r\n\r\n(cljs.core.Iterate.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.next \x3d\x3d null)){\r\n(self__.next \x3d (new cljs.core.Iterate(null,self__.f,coll__$1.cljs$core$ISeq$_first$arity$1(null),cljs.core.UNREALIZED_SEED,null)));\r\n} else {\r\n}\r\n\r\nreturn self__.next;\r\n}));\r\n\r\n(cljs.core.Iterate.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1;\r\n}));\r\n\r\n(cljs.core.Iterate.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.Iterate(new_meta,self__.f,self__.prev_seed,self__.seed,self__.next));\r\n}\r\n}));\r\n\r\n(cljs.core.Iterate.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.cons(o,coll__$1);\r\n}));\r\n\r\n(cljs.core.Iterate.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22f\x22,\x22f\x22,43394975,null),new cljs.core.Symbol(null,\x22prev-seed\x22,\x22prev-seed\x22,2126381367,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22seed\x22,\x22seed\x22,1709144854,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22next\x22,\x22next\x22,1522830042,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.Iterate.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.Iterate.cljs$lang$ctorStr \x3d \x22cljs.core/Iterate\x22);\r\n\r\n(cljs.core.Iterate.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/Iterate\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/Iterate.\r\n */\r\ncljs.core.__GT_Iterate \x3d (function cljs$core$__GT_Iterate(meta,f,prev_seed,seed,next){\r\nreturn (new cljs.core.Iterate(meta,f,prev_seed,seed,next));\r\n});\r\n\r\n/**\r\n * Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects\r\n */\r\ncljs.core.iterate \x3d (function cljs$core$iterate(f,x){\r\nreturn (new cljs.core.Iterate(null,f,null,x,null));\r\n});\r\n/**\r\n * Returns a lazy seq of the first item in each coll, then the second etc.\r\n */\r\ncljs.core.interleave \x3d (function cljs$core$interleave(var_args){\r\nvar G__15652 \x3d arguments.length;\r\nswitch (G__15652) {\r\ncase 0:\r\nreturn cljs.core.interleave.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.core.interleave.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.interleave.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___19467 \x3d arguments.length;\r\nvar i__4865__auto___19468 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___19468 \x3c len__4864__auto___19467)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___19468]));\r\n\r\nvar G__19469 \x3d (i__4865__auto___19468 + (1));\r\ni__4865__auto___19468 \x3d G__19469;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\r\nreturn cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.interleave.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nreturn cljs.core.List.EMPTY;\r\n}));\r\n\r\n(cljs.core.interleave.cljs$core$IFn$_invoke$arity$1 \x3d (function (c1){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nreturn c1;\r\n}),null,null));\r\n}));\r\n\r\n(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 \x3d (function (c1,c2){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s1 \x3d cljs.core.seq(c1);\r\nvar s2 \x3d cljs.core.seq(c2);\r\nif(((s1) \x26\x26 (s2))){\r\nreturn cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));\r\n} else {\r\nreturn null;\r\n}\r\n}),null,null));\r\n}));\r\n\r\n(cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic \x3d (function (c1,c2,colls){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar ss \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c1], 0)));\r\nif(cljs.core.every_QMARK_(cljs.core.identity,ss)){\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));\r\n} else {\r\nreturn null;\r\n}\r\n}),null,null));\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.interleave.cljs$lang$applyTo \x3d (function (seq15649){\r\nvar G__15650 \x3d cljs.core.first(seq15649);\r\nvar seq15649__$1 \x3d cljs.core.next(seq15649);\r\nvar G__15651 \x3d cljs.core.first(seq15649__$1);\r\nvar seq15649__$2 \x3d cljs.core.next(seq15649__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15650,G__15651,seq15649__$2);\r\n}));\r\n\r\n(cljs.core.interleave.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/**\r\n * Returns a lazy seq of the elements of coll separated by sep.\r\n *   Returns a stateful transducer when no collection is provided.\r\n */\r\ncljs.core.interpose \x3d (function cljs$core$interpose(var_args){\r\nvar G__15654 \x3d arguments.length;\r\nswitch (G__15654) {\r\ncase 1:\r\nreturn cljs.core.interpose.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.interpose.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 \x3d (function (sep){\r\nreturn (function (rf){\r\nvar started \x3d cljs.core.volatile_BANG_(false);\r\nreturn (function() {\r\nvar G__19475 \x3d null;\r\nvar G__19475__0 \x3d (function (){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\r\n});\r\nvar G__19475__1 \x3d (function (result){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\r\n});\r\nvar G__19475__2 \x3d (function (result,input){\r\nif(cljs.core.truth_(cljs.core.deref(started))){\r\nvar sepr \x3d (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,sep) : rf.call(null,result,sep));\r\nif(cljs.core.reduced_QMARK_(sepr)){\r\nreturn sepr;\r\n} else {\r\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr,input) : rf.call(null,sepr,input));\r\n}\r\n} else {\r\ncljs.core.vreset_BANG_(started,true);\r\n\r\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,input) : rf.call(null,result,input));\r\n}\r\n});\r\nG__19475 \x3d function(result,input){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__19475__0.call(this);\r\ncase 1:\r\nreturn G__19475__1.call(this,result);\r\ncase 2:\r\nreturn G__19475__2.call(this,result,input);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__19475.cljs$core$IFn$_invoke$arity$0 \x3d G__19475__0;\r\nG__19475.cljs$core$IFn$_invoke$arity$1 \x3d G__19475__1;\r\nG__19475.cljs$core$IFn$_invoke$arity$2 \x3d G__19475__2;\r\nreturn G__19475;\r\n})()\r\n});\r\n}));\r\n\r\n(cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 \x3d (function (sep,coll){\r\nreturn cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));\r\n}));\r\n\r\n(cljs.core.interpose.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Take a collection of collections, and return a lazy seq\r\n *   of items from the inner collection\r\n */\r\ncljs.core.flatten1 \x3d (function cljs$core$flatten1(colls){\r\nvar cat \x3d (function cljs$core$flatten1_$_cat(coll,colls__$1){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar temp__5751__auto__ \x3d cljs.core.seq(coll);\r\nif(temp__5751__auto__){\r\nvar coll__$1 \x3d temp__5751__auto__;\r\nreturn cljs.core.cons(cljs.core.first(coll__$1),cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1),colls__$1));\r\n} else {\r\nif(cljs.core.seq(colls__$1)){\r\nreturn cljs$core$flatten1_$_cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}),null,null));\r\n});\r\nreturn cat(null,colls);\r\n});\r\n/**\r\n * Returns the result of applying concat to the result of applying map\r\n *   to f and colls.  Thus function f should return a collection. Returns\r\n *   a transducer when no collections are provided\r\n */\r\ncljs.core.mapcat \x3d (function cljs$core$mapcat(var_args){\r\nvar G__15658 \x3d arguments.length;\r\nswitch (G__15658) {\r\ncase 1:\r\nreturn cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___19479 \x3d arguments.length;\r\nvar i__4865__auto___19480 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___19480 \x3c len__4864__auto___19479)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___19480]));\r\n\r\nvar G__19481 \x3d (i__4865__auto___19480 + (1));\r\ni__4865__auto___19480 \x3d G__19481;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((1)),(0),null));\r\nreturn cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\r\nreturn cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);\r\n}));\r\n\r\n(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,colls){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.mapcat.cljs$lang$applyTo \x3d (function (seq15656){\r\nvar G__15657 \x3d cljs.core.first(seq15656);\r\nvar seq15656__$1 \x3d cljs.core.next(seq15656);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15657,seq15656__$1);\r\n}));\r\n\r\n(cljs.core.mapcat.cljs$lang$maxFixedArity \x3d (1));\r\n\r\n/**\r\n * Returns a lazy sequence of the items in coll for which\r\n *   (pred item) returns logical true. pred must be free of side-effects.\r\n *   Returns a transducer when no collection is provided.\r\n */\r\ncljs.core.filter \x3d (function cljs$core$filter(var_args){\r\nvar G__15660 \x3d arguments.length;\r\nswitch (G__15660) {\r\ncase 1:\r\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.filter.cljs$core$IFn$_invoke$arity$1 \x3d (function (pred){\r\nreturn (function (rf){\r\nreturn (function() {\r\nvar G__19484 \x3d null;\r\nvar G__19484__0 \x3d (function (){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\r\n});\r\nvar G__19484__1 \x3d (function (result){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\r\n});\r\nvar G__19484__2 \x3d (function (result,input){\r\nif(cljs.core.truth_((pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null,input)))){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,input) : rf.call(null,result,input));\r\n} else {\r\nreturn result;\r\n}\r\n});\r\nG__19484 \x3d function(result,input){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__19484__0.call(this);\r\ncase 1:\r\nreturn G__19484__1.call(this,result);\r\ncase 2:\r\nreturn G__19484__2.call(this,result,input);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__19484.cljs$core$IFn$_invoke$arity$0 \x3d G__19484__0;\r\nG__19484.cljs$core$IFn$_invoke$arity$1 \x3d G__19484__1;\r\nG__19484.cljs$core$IFn$_invoke$arity$2 \x3d G__19484__2;\r\nreturn G__19484;\r\n})()\r\n});\r\n}));\r\n\r\n(cljs.core.filter.cljs$core$IFn$_invoke$arity$2 \x3d (function (pred,coll){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(coll);\r\nif(temp__5753__auto__){\r\nvar s \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s)){\r\nvar c \x3d cljs.core.chunk_first(s);\r\nvar size \x3d cljs.core.count(c);\r\nvar b \x3d cljs.core.chunk_buffer(size);\r\nvar n__4741__auto___19487 \x3d size;\r\nvar i_19488 \x3d (0);\r\nwhile(true){\r\nif((i_19488 \x3c n__4741__auto___19487)){\r\nif(cljs.core.truth_((function (){var G__15661 \x3d cljs.core._nth(c,i_19488);\r\nreturn (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15661) : pred.call(null,G__15661));\r\n})())){\r\ncljs.core.chunk_append(b,cljs.core._nth(c,i_19488));\r\n} else {\r\n}\r\n\r\nvar G__19489 \x3d (i_19488 + (1));\r\ni_19488 \x3d G__19489;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b),cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));\r\n} else {\r\nvar f \x3d cljs.core.first(s);\r\nvar r \x3d cljs.core.rest(s);\r\nif(cljs.core.truth_((pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null,f)))){\r\nreturn cljs.core.cons(f,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred,r));\r\n} else {\r\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred,r);\r\n}\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}),null,null));\r\n}));\r\n\r\n(cljs.core.filter.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Returns a lazy sequence of the items in coll for which\r\n *   (pred item) returns logical false. pred must be free of side-effects.\r\n *   Returns a transducer when no collection is provided.\r\n */\r\ncljs.core.remove \x3d (function cljs$core$remove(var_args){\r\nvar G__15663 \x3d arguments.length;\r\nswitch (G__15663) {\r\ncase 1:\r\nreturn cljs.core.remove.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.remove.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.remove.cljs$core$IFn$_invoke$arity$1 \x3d (function (pred){\r\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));\r\n}));\r\n\r\n(cljs.core.remove.cljs$core$IFn$_invoke$arity$2 \x3d (function (pred,coll){\r\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);\r\n}));\r\n\r\n(cljs.core.remove.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Returns a lazy sequence of the nodes in a tree, via a depth-first walk.\r\n *   branch? must be a fn of one arg that returns true if passed a node\r\n *   that can have children (but may not).  children must be a fn of one\r\n *   arg that returns a sequence of the children. Will only be called on\r\n *   nodes for which branch? returns true. Root is the root node of the\r\n *   tree.\r\n */\r\ncljs.core.tree_seq \x3d (function cljs$core$tree_seq(branch_QMARK_,children,root){\r\nvar walk \x3d (function cljs$core$tree_seq_$_walk(node){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nreturn cljs.core.cons(node,(cljs.core.truth_((branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null,node)))?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null,node))], 0)):null));\r\n}),null,null));\r\n});\r\nreturn walk(root);\r\n});\r\n/**\r\n * Takes any nested combination of sequential things (lists, vectors,\r\n *   etc.) and returns their contents as a single, flat sequence.\r\n *   (flatten nil) returns nil.\r\n */\r\ncljs.core.flatten \x3d (function cljs$core$flatten(x){\r\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__15664_SHARP_){\r\nreturn (!(cljs.core.sequential_QMARK_(p1__15664_SHARP_)));\r\n}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));\r\n});\r\n/**\r\n * Returns a new coll consisting of to-coll with all of the items of\r\n *   from-coll conjoined. A transducer may be supplied.\r\n */\r\ncljs.core.into \x3d (function cljs$core$into(var_args){\r\nvar G__15666 \x3d arguments.length;\r\nswitch (G__15666) {\r\ncase 0:\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.into.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n}));\r\n\r\n(cljs.core.into.cljs$core$IFn$_invoke$arity$1 \x3d (function (to){\r\nreturn to;\r\n}));\r\n\r\n(cljs.core.into.cljs$core$IFn$_invoke$arity$2 \x3d (function (to,from){\r\nif((!((to \x3d\x3d null)))){\r\nif((((!((to \x3d\x3d null))))?(((((to.cljs$lang$protocol_mask$partition1$ \x26 (4))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d to.cljs$core$IEditableCollection$))))?true:false):false)){\r\nreturn cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);\r\n}\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,to,from);\r\n}\r\n}));\r\n\r\n(cljs.core.into.cljs$core$IFn$_invoke$arity$3 \x3d (function (to,xform,from){\r\nif((((!((to \x3d\x3d null))))?(((((to.cljs$lang$protocol_mask$partition1$ \x26 (4))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d to.cljs$core$IEditableCollection$))))?true:false):false)){\r\nreturn cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));\r\n} else {\r\nreturn cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);\r\n}\r\n}));\r\n\r\n(cljs.core.into.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n/**\r\n * Returns a vector consisting of the result of applying f to the\r\n *   set of first items of each coll, followed by applying f to the set\r\n *   of second items in each coll, until any one of the colls is\r\n *   exhausted.  Any remaining items in other colls are ignored. Function\r\n *   f should accept number-of-colls arguments.\r\n */\r\ncljs.core.mapv \x3d (function cljs$core$mapv(var_args){\r\nvar G__15675 \x3d arguments.length;\r\nswitch (G__15675) {\r\ncase 2:\r\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___19497 \x3d arguments.length;\r\nvar i__4865__auto___19498 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___19498 \x3c len__4864__auto___19497)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___19498]));\r\n\r\nvar G__19500 \x3d (i__4865__auto___19498 + (1));\r\ni__4865__auto___19498 \x3d G__19500;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((4)),(0),null));\r\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,coll){\r\nreturn cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){\r\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null,o)));\r\n}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));\r\n}));\r\n\r\n(cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 \x3d (function (f,c1,c2){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));\r\n}));\r\n\r\n(cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 \x3d (function (f,c1,c2,c3){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));\r\n}));\r\n\r\n(cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,c1,c2,c3,colls){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([colls], 0)));\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.mapv.cljs$lang$applyTo \x3d (function (seq15670){\r\nvar G__15671 \x3d cljs.core.first(seq15670);\r\nvar seq15670__$1 \x3d cljs.core.next(seq15670);\r\nvar G__15672 \x3d cljs.core.first(seq15670__$1);\r\nvar seq15670__$2 \x3d cljs.core.next(seq15670__$1);\r\nvar G__15673 \x3d cljs.core.first(seq15670__$2);\r\nvar seq15670__$3 \x3d cljs.core.next(seq15670__$2);\r\nvar G__15674 \x3d cljs.core.first(seq15670__$3);\r\nvar seq15670__$4 \x3d cljs.core.next(seq15670__$3);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15671,G__15672,G__15673,G__15674,seq15670__$4);\r\n}));\r\n\r\n(cljs.core.mapv.cljs$lang$maxFixedArity \x3d (4));\r\n\r\n/**\r\n * Returns a vector of the items in coll for which\r\n *   (pred item) returns logical true. pred must be free of side-effects.\r\n */\r\ncljs.core.filterv \x3d (function cljs$core$filterv(pred,coll){\r\nreturn cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){\r\nif(cljs.core.truth_((pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null,o)))){\r\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);\r\n} else {\r\nreturn v;\r\n}\r\n}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));\r\n});\r\n/**\r\n * Returns a lazy sequence of lists of n items each, at offsets step\r\n *   apart. If step is not supplied, defaults to n, i.e. the partitions\r\n *   do not overlap. If a pad collection is supplied, use its elements as\r\n *   necessary to complete last partition up to n items. In case there are\r\n *   not enough padding elements, return a partition with less than n items.\r\n */\r\ncljs.core.partition \x3d (function cljs$core$partition(var_args){\r\nvar G__15677 \x3d arguments.length;\r\nswitch (G__15677) {\r\ncase 2:\r\nreturn cljs.core.partition.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.partition.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn cljs.core.partition.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.partition.cljs$core$IFn$_invoke$arity$2 \x3d (function (n,coll){\r\nreturn cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);\r\n}));\r\n\r\n(cljs.core.partition.cljs$core$IFn$_invoke$arity$3 \x3d (function (n,step,coll){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(coll);\r\nif(temp__5753__auto__){\r\nvar s \x3d temp__5753__auto__;\r\nvar p \x3d cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);\r\nif((n \x3d\x3d\x3d cljs.core.count(p))){\r\nreturn cljs.core.cons(p,cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}),null,null));\r\n}));\r\n\r\n(cljs.core.partition.cljs$core$IFn$_invoke$arity$4 \x3d (function (n,step,pad,coll){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(coll);\r\nif(temp__5753__auto__){\r\nvar s \x3d temp__5753__auto__;\r\nvar p \x3d cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);\r\nif((n \x3d\x3d\x3d cljs.core.count(p))){\r\nreturn cljs.core.cons(p,cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));\r\n} else {\r\nreturn (new cljs.core.List(null,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)),null,(1),null));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}),null,null));\r\n}));\r\n\r\n(cljs.core.partition.cljs$lang$maxFixedArity \x3d 4);\r\n\r\n/**\r\n * Returns the value in a nested associative structure,\r\n *   where ks is a sequence of keys. Returns nil if the key is not present,\r\n *   or the not-found value if supplied.\r\n */\r\ncljs.core.get_in \x3d (function cljs$core$get_in(var_args){\r\nvar G__15679 \x3d arguments.length;\r\nswitch (G__15679) {\r\ncase 2:\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 \x3d (function (m,ks){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get,m,ks);\r\n}));\r\n\r\n(cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 \x3d (function (m,ks,not_found){\r\nvar sentinel \x3d cljs.core.lookup_sentinel;\r\nvar m__$1 \x3d m;\r\nvar ks__$1 \x3d cljs.core.seq(ks);\r\nwhile(true){\r\nif((!((ks__$1 \x3d\x3d null)))){\r\nvar m__$2 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);\r\nif((sentinel \x3d\x3d\x3d m__$2)){\r\nreturn not_found;\r\n} else {\r\nvar G__19520 \x3d sentinel;\r\nvar G__19521 \x3d m__$2;\r\nvar G__19522 \x3d cljs.core.next(ks__$1);\r\nsentinel \x3d G__19520;\r\nm__$1 \x3d G__19521;\r\nks__$1 \x3d G__19522;\r\ncontinue;\r\n}\r\n} else {\r\nreturn m__$1;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.get_in.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n/**\r\n * Associates a value in a nested associative structure, where ks is a\r\n *   sequence of keys and v is the new value and returns a new nested structure.\r\n *   If any levels do not exist, hash-maps will be created.\r\n */\r\ncljs.core.assoc_in \x3d (function cljs$core$assoc_in(m,p__15680,v){\r\nvar vec__15681 \x3d p__15680;\r\nvar seq__15682 \x3d cljs.core.seq(vec__15681);\r\nvar first__15683 \x3d cljs.core.first(seq__15682);\r\nvar seq__15682__$1 \x3d cljs.core.next(seq__15682);\r\nvar k \x3d first__15683;\r\nvar ks \x3d seq__15682__$1;\r\nif(ks){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15684 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);\r\nvar G__15685 \x3d ks;\r\nvar G__15686 \x3d v;\r\nreturn (cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3 ? cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3(G__15684,G__15685,G__15686) : cljs.core.assoc_in.call(null,G__15684,G__15685,G__15686));\r\n})());\r\n} else {\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);\r\n}\r\n});\r\n/**\r\n * \x27Updates\x27 a value in a nested associative structure, where ks is a\r\n *   sequence of keys and f is a function that will take the old value\r\n *   and any supplied args and return the new value, and returns a new\r\n *   nested structure.  If any levels do not exist, hash-maps will be\r\n *   created.\r\n */\r\ncljs.core.update_in \x3d (function cljs$core$update_in(var_args){\r\nvar G__15695 \x3d arguments.length;\r\nswitch (G__15695) {\r\ncase 3:\r\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ncase 5:\r\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ncase 6:\r\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___19524 \x3d arguments.length;\r\nvar i__4865__auto___19525 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___19525 \x3c len__4864__auto___19524)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___19525]));\r\n\r\nvar G__19526 \x3d (i__4865__auto___19525 + (1));\r\ni__4865__auto___19525 \x3d G__19526;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((6)),(0),null));\r\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 \x3d (function (m,p__15696,f){\r\nvar vec__15697 \x3d p__15696;\r\nvar seq__15698 \x3d cljs.core.seq(vec__15697);\r\nvar first__15699 \x3d cljs.core.first(seq__15698);\r\nvar seq__15698__$1 \x3d cljs.core.next(seq__15698);\r\nvar k \x3d first__15699;\r\nvar ks \x3d seq__15698__$1;\r\nif(ks){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));\r\n} else {\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15700 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15700) : f.call(null,G__15700));\r\n})());\r\n}\r\n}));\r\n\r\n(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 \x3d (function (m,p__15701,f,a){\r\nvar vec__15702 \x3d p__15701;\r\nvar seq__15703 \x3d cljs.core.seq(vec__15702);\r\nvar first__15704 \x3d cljs.core.first(seq__15703);\r\nvar seq__15703__$1 \x3d cljs.core.next(seq__15703);\r\nvar k \x3d first__15704;\r\nvar ks \x3d seq__15703__$1;\r\nif(ks){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));\r\n} else {\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15705 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);\r\nvar G__15706 \x3d a;\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15705,G__15706) : f.call(null,G__15705,G__15706));\r\n})());\r\n}\r\n}));\r\n\r\n(cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 \x3d (function (m,p__15707,f,a,b){\r\nvar vec__15708 \x3d p__15707;\r\nvar seq__15709 \x3d cljs.core.seq(vec__15708);\r\nvar first__15710 \x3d cljs.core.first(seq__15709);\r\nvar seq__15709__$1 \x3d cljs.core.next(seq__15709);\r\nvar k \x3d first__15710;\r\nvar ks \x3d seq__15709__$1;\r\nif(ks){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));\r\n} else {\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15711 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);\r\nvar G__15712 \x3d a;\r\nvar G__15713 \x3d b;\r\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15711,G__15712,G__15713) : f.call(null,G__15711,G__15712,G__15713));\r\n})());\r\n}\r\n}));\r\n\r\n(cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 \x3d (function (m,p__15714,f,a,b,c){\r\nvar vec__15715 \x3d p__15714;\r\nvar seq__15716 \x3d cljs.core.seq(vec__15715);\r\nvar first__15717 \x3d cljs.core.first(seq__15716);\r\nvar seq__15716__$1 \x3d cljs.core.next(seq__15716);\r\nvar k \x3d first__15717;\r\nvar ks \x3d seq__15716__$1;\r\nif(ks){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));\r\n} else {\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15718 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);\r\nvar G__15719 \x3d a;\r\nvar G__15720 \x3d b;\r\nvar G__15721 \x3d c;\r\nreturn (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15718,G__15719,G__15720,G__15721) : f.call(null,G__15718,G__15719,G__15720,G__15721));\r\n})());\r\n}\r\n}));\r\n\r\n(cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic \x3d (function (m,p__15722,f,a,b,c,args){\r\nvar vec__15723 \x3d p__15722;\r\nvar seq__15724 \x3d cljs.core.seq(vec__15723);\r\nvar first__15725 \x3d cljs.core.first(seq__15724);\r\nvar seq__15724__$1 \x3d cljs.core.next(seq__15724);\r\nvar k \x3d first__15725;\r\nvar ks \x3d seq__15724__$1;\r\nif(ks){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([b,c,args], 0)));\r\n} else {\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0)));\r\n}\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.update_in.cljs$lang$applyTo \x3d (function (seq15688){\r\nvar G__15689 \x3d cljs.core.first(seq15688);\r\nvar seq15688__$1 \x3d cljs.core.next(seq15688);\r\nvar G__15690 \x3d cljs.core.first(seq15688__$1);\r\nvar seq15688__$2 \x3d cljs.core.next(seq15688__$1);\r\nvar G__15691 \x3d cljs.core.first(seq15688__$2);\r\nvar seq15688__$3 \x3d cljs.core.next(seq15688__$2);\r\nvar G__15692 \x3d cljs.core.first(seq15688__$3);\r\nvar seq15688__$4 \x3d cljs.core.next(seq15688__$3);\r\nvar G__15693 \x3d cljs.core.first(seq15688__$4);\r\nvar seq15688__$5 \x3d cljs.core.next(seq15688__$4);\r\nvar G__15694 \x3d cljs.core.first(seq15688__$5);\r\nvar seq15688__$6 \x3d cljs.core.next(seq15688__$5);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15689,G__15690,G__15691,G__15692,G__15693,G__15694,seq15688__$6);\r\n}));\r\n\r\n(cljs.core.update_in.cljs$lang$maxFixedArity \x3d (6));\r\n\r\n/**\r\n * \x27Updates\x27 a value in an associative structure, where k is a\r\n *   key and f is a function that will take the old value\r\n *   and any supplied args and return the new value, and returns a new\r\n *   structure.  If the key does not exist, nil is passed as the old value.\r\n */\r\ncljs.core.update \x3d (function cljs$core$update(var_args){\r\nvar G__15734 \x3d arguments.length;\r\nswitch (G__15734) {\r\ncase 3:\r\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ncase 5:\r\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ncase 6:\r\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___19531 \x3d arguments.length;\r\nvar i__4865__auto___19532 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___19532 \x3c len__4864__auto___19531)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___19532]));\r\n\r\nvar G__19533 \x3d (i__4865__auto___19532 + (1));\r\ni__4865__auto___19532 \x3d G__19533;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((6)),(0),null));\r\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.update.cljs$core$IFn$_invoke$arity$3 \x3d (function (m,k,f){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15735 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15735) : f.call(null,G__15735));\r\n})());\r\n}));\r\n\r\n(cljs.core.update.cljs$core$IFn$_invoke$arity$4 \x3d (function (m,k,f,x){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15736 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);\r\nvar G__15737 \x3d x;\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15736,G__15737) : f.call(null,G__15736,G__15737));\r\n})());\r\n}));\r\n\r\n(cljs.core.update.cljs$core$IFn$_invoke$arity$5 \x3d (function (m,k,f,x,y){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15738 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);\r\nvar G__15739 \x3d x;\r\nvar G__15740 \x3d y;\r\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15738,G__15739,G__15740) : f.call(null,G__15738,G__15739,G__15740));\r\n})());\r\n}));\r\n\r\n(cljs.core.update.cljs$core$IFn$_invoke$arity$6 \x3d (function (m,k,f,x,y,z){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15741 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);\r\nvar G__15742 \x3d x;\r\nvar G__15743 \x3d y;\r\nvar G__15744 \x3d z;\r\nreturn (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15741,G__15742,G__15743,G__15744) : f.call(null,G__15741,G__15742,G__15743,G__15744));\r\n})());\r\n}));\r\n\r\n(cljs.core.update.cljs$core$IFn$_invoke$arity$variadic \x3d (function (m,k,f,x,y,z,more){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([more], 0)));\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.update.cljs$lang$applyTo \x3d (function (seq15727){\r\nvar G__15728 \x3d cljs.core.first(seq15727);\r\nvar seq15727__$1 \x3d cljs.core.next(seq15727);\r\nvar G__15729 \x3d cljs.core.first(seq15727__$1);\r\nvar seq15727__$2 \x3d cljs.core.next(seq15727__$1);\r\nvar G__15730 \x3d cljs.core.first(seq15727__$2);\r\nvar seq15727__$3 \x3d cljs.core.next(seq15727__$2);\r\nvar G__15731 \x3d cljs.core.first(seq15727__$3);\r\nvar seq15727__$4 \x3d cljs.core.next(seq15727__$3);\r\nvar G__15732 \x3d cljs.core.first(seq15727__$4);\r\nvar seq15727__$5 \x3d cljs.core.next(seq15727__$4);\r\nvar G__15733 \x3d cljs.core.first(seq15727__$5);\r\nvar seq15727__$6 \x3d cljs.core.next(seq15727__$5);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15728,G__15729,G__15730,G__15731,G__15732,G__15733,seq15727__$6);\r\n}));\r\n\r\n(cljs.core.update.cljs$lang$maxFixedArity \x3d (6));\r\n\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.VectorNode \x3d (function (edit,arr){\r\nthis.edit \x3d edit;\r\nthis.arr \x3d arr;\r\n});\r\n\r\n(cljs.core.VectorNode.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22edit\x22,\x22edit\x22,-1302639,null),new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null)], null);\r\n}));\r\n\r\n(cljs.core.VectorNode.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.VectorNode.cljs$lang$ctorStr \x3d \x22cljs.core/VectorNode\x22);\r\n\r\n(cljs.core.VectorNode.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/VectorNode\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/VectorNode.\r\n */\r\ncljs.core.__GT_VectorNode \x3d (function cljs$core$__GT_VectorNode(edit,arr){\r\nreturn (new cljs.core.VectorNode(edit,arr));\r\n});\r\n\r\ncljs.core.pv_fresh_node \x3d (function cljs$core$pv_fresh_node(edit){\r\nreturn (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));\r\n});\r\ncljs.core.pv_aget \x3d (function cljs$core$pv_aget(node,idx){\r\nreturn (node.arr[idx]);\r\n});\r\ncljs.core.pv_aset \x3d (function cljs$core$pv_aset(node,idx,val){\r\nreturn (node.arr[idx] \x3d val);\r\n});\r\ncljs.core.pv_clone_node \x3d (function cljs$core$pv_clone_node(node){\r\nreturn (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));\r\n});\r\ncljs.core.tail_off \x3d (function cljs$core$tail_off(pv){\r\nvar cnt \x3d pv.cnt;\r\nif((cnt \x3c (32))){\r\nreturn (0);\r\n} else {\r\nreturn (((cnt - (1)) \x3e\x3e\x3e (5)) \x3c\x3c (5));\r\n}\r\n});\r\ncljs.core.new_path \x3d (function cljs$core$new_path(edit,level,node){\r\nvar ll \x3d level;\r\nvar ret \x3d node;\r\nwhile(true){\r\nif((ll \x3d\x3d\x3d (0))){\r\nreturn ret;\r\n} else {\r\nvar embed \x3d ret;\r\nvar r \x3d cljs.core.pv_fresh_node(edit);\r\nvar _ \x3d cljs.core.pv_aset(r,(0),embed);\r\nvar G__19537 \x3d (ll - (5));\r\nvar G__19538 \x3d r;\r\nll \x3d G__19537;\r\nret \x3d G__19538;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.core.push_tail \x3d (function cljs$core$push_tail(pv,level,parent,tailnode){\r\nvar ret \x3d cljs.core.pv_clone_node(parent);\r\nvar subidx \x3d (((pv.cnt - (1)) \x3e\x3e\x3e level) \x26 (31));\r\nif(((5) \x3d\x3d\x3d level)){\r\ncljs.core.pv_aset(ret,subidx,tailnode);\r\n\r\nreturn ret;\r\n} else {\r\nvar child \x3d cljs.core.pv_aget(parent,subidx);\r\nif((!((child \x3d\x3d null)))){\r\nvar node_to_insert \x3d (function (){var G__15745 \x3d pv;\r\nvar G__15746 \x3d (level - (5));\r\nvar G__15747 \x3d child;\r\nvar G__15748 \x3d tailnode;\r\nreturn (cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4(G__15745,G__15746,G__15747,G__15748) : cljs.core.push_tail.call(null,G__15745,G__15746,G__15747,G__15748));\r\n})();\r\ncljs.core.pv_aset(ret,subidx,node_to_insert);\r\n\r\nreturn ret;\r\n} else {\r\nvar node_to_insert \x3d cljs.core.new_path(null,(level - (5)),tailnode);\r\ncljs.core.pv_aset(ret,subidx,node_to_insert);\r\n\r\nreturn ret;\r\n}\r\n}\r\n});\r\ncljs.core.vector_index_out_of_bounds \x3d (function cljs$core$vector_index_out_of_bounds(i,cnt){\r\nthrow (new Error([\x22No item \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(i),\x22 in vector of length \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt)].join(\x27\x27)));\r\n});\r\ncljs.core.first_array_for_longvec \x3d (function cljs$core$first_array_for_longvec(pv){\r\nvar node \x3d pv.root;\r\nvar level \x3d pv.shift;\r\nwhile(true){\r\nif((level \x3e (0))){\r\nvar G__19539 \x3d cljs.core.pv_aget(node,(0));\r\nvar G__19540 \x3d (level - (5));\r\nnode \x3d G__19539;\r\nlevel \x3d G__19540;\r\ncontinue;\r\n} else {\r\nreturn node.arr;\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.core.unchecked_array_for \x3d (function cljs$core$unchecked_array_for(pv,i){\r\nif((i \x3e\x3d cljs.core.tail_off(pv))){\r\nreturn pv.tail;\r\n} else {\r\nvar node \x3d pv.root;\r\nvar level \x3d pv.shift;\r\nwhile(true){\r\nif((level \x3e (0))){\r\nvar G__19541 \x3d cljs.core.pv_aget(node,((i \x3e\x3e\x3e level) \x26 (31)));\r\nvar G__19542 \x3d (level - (5));\r\nnode \x3d G__19541;\r\nlevel \x3d G__19542;\r\ncontinue;\r\n} else {\r\nreturn node.arr;\r\n}\r\nbreak;\r\n}\r\n}\r\n});\r\ncljs.core.array_for \x3d (function cljs$core$array_for(pv,i){\r\nif(((((0) \x3c\x3d i)) \x26\x26 ((i \x3c pv.cnt)))){\r\nreturn cljs.core.unchecked_array_for(pv,i);\r\n} else {\r\nreturn cljs.core.vector_index_out_of_bounds(i,pv.cnt);\r\n}\r\n});\r\ncljs.core.do_assoc \x3d (function cljs$core$do_assoc(pv,level,node,i,val){\r\nvar ret \x3d cljs.core.pv_clone_node(node);\r\nif((level \x3d\x3d\x3d (0))){\r\ncljs.core.pv_aset(ret,(i \x26 (31)),val);\r\n\r\nreturn ret;\r\n} else {\r\nvar subidx \x3d ((i \x3e\x3e\x3e level) \x26 (31));\r\ncljs.core.pv_aset(ret,subidx,(function (){var G__15749 \x3d pv;\r\nvar G__15750 \x3d (level - (5));\r\nvar G__15751 \x3d cljs.core.pv_aget(node,subidx);\r\nvar G__15752 \x3d i;\r\nvar G__15753 \x3d val;\r\nreturn (cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5 ? cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5(G__15749,G__15750,G__15751,G__15752,G__15753) : cljs.core.do_assoc.call(null,G__15749,G__15750,G__15751,G__15752,G__15753));\r\n})());\r\n\r\nreturn ret;\r\n}\r\n});\r\ncljs.core.pop_tail \x3d (function cljs$core$pop_tail(pv,level,node){\r\nvar subidx \x3d (((pv.cnt - (2)) \x3e\x3e\x3e level) \x26 (31));\r\nif((level \x3e (5))){\r\nvar new_child \x3d (function (){var G__15754 \x3d pv;\r\nvar G__15755 \x3d (level - (5));\r\nvar G__15756 \x3d cljs.core.pv_aget(node,subidx);\r\nreturn (cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3(G__15754,G__15755,G__15756) : cljs.core.pop_tail.call(null,G__15754,G__15755,G__15756));\r\n})();\r\nif((((new_child \x3d\x3d null)) \x26\x26 ((subidx \x3d\x3d\x3d (0))))){\r\nreturn null;\r\n} else {\r\nvar ret \x3d cljs.core.pv_clone_node(node);\r\ncljs.core.pv_aset(ret,subidx,new_child);\r\n\r\nreturn ret;\r\n}\r\n} else {\r\nif((subidx \x3d\x3d\x3d (0))){\r\nreturn null;\r\n} else {\r\nvar ret \x3d cljs.core.pv_clone_node(node);\r\ncljs.core.pv_aset(ret,subidx,null);\r\n\r\nreturn ret;\r\n\r\n}\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.RangedIterator \x3d (function (i,base,arr,v,start,end){\r\nthis.i \x3d i;\r\nthis.base \x3d base;\r\nthis.arr \x3d arr;\r\nthis.v \x3d v;\r\nthis.start \x3d start;\r\nthis.end \x3d end;\r\n});\r\n(cljs.core.RangedIterator.prototype.hasNext \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn (self__.i \x3c self__.end);\r\n}));\r\n\r\n(cljs.core.RangedIterator.prototype.next \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nif(((self__.i - self__.base) \x3d\x3d\x3d (32))){\r\n(self__.arr \x3d cljs.core.unchecked_array_for(self__.v,self__.i));\r\n\r\n(self__.base \x3d (self__.base + (32)));\r\n} else {\r\n}\r\n\r\nvar ret \x3d (self__.arr[(self__.i \x26 (31))]);\r\n(self__.i \x3d (self__.i + (1)));\r\n\r\nreturn ret;\r\n}));\r\n\r\n(cljs.core.RangedIterator.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22base\x22,\x22base\x22,1825810849,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22v\x22,\x22v\x22,1661996586,null),new cljs.core.Symbol(null,\x22start\x22,\x22start\x22,1285322546,null),new cljs.core.Symbol(null,\x22end\x22,\x22end\x22,1372345569,null)], null);\r\n}));\r\n\r\n(cljs.core.RangedIterator.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.RangedIterator.cljs$lang$ctorStr \x3d \x22cljs.core/RangedIterator\x22);\r\n\r\n(cljs.core.RangedIterator.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/RangedIterator\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/RangedIterator.\r\n */\r\ncljs.core.__GT_RangedIterator \x3d (function cljs$core$__GT_RangedIterator(i,base,arr,v,start,end){\r\nreturn (new cljs.core.RangedIterator(i,base,arr,v,start,end));\r\n});\r\n\r\ncljs.core.ranged_iterator \x3d (function cljs$core$ranged_iterator(v,start,end){\r\nvar i \x3d start;\r\nreturn (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start \x3c cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));\r\n});\r\ncljs.core.pv_reduce \x3d (function cljs$core$pv_reduce(var_args){\r\nvar G__15758 \x3d arguments.length;\r\nswitch (G__15758) {\r\ncase 4:\r\nreturn cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ncase 5:\r\nreturn cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4 \x3d (function (pv,f,start,end){\r\nif((start \x3c end)){\r\nreturn cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(pv,f,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(pv,start),(start + (1)),end);\r\n} else {\r\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\n}\r\n}));\r\n\r\n(cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5 \x3d (function (pv,f,init,start,end){\r\nvar acc \x3d init;\r\nvar i \x3d start;\r\nvar arr \x3d cljs.core.unchecked_array_for(pv,start);\r\nwhile(true){\r\nif((i \x3c end)){\r\nvar j \x3d (i \x26 (31));\r\nvar arr__$1 \x3d (((j \x3d\x3d\x3d (0)))?cljs.core.unchecked_array_for(pv,i):arr);\r\nvar nacc \x3d (function (){var G__15759 \x3d acc;\r\nvar G__15760 \x3d (arr__$1[j]);\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15759,G__15760) : f.call(null,G__15759,G__15760));\r\n})();\r\nif(cljs.core.reduced_QMARK_(nacc)){\r\nreturn cljs.core.deref(nacc);\r\n} else {\r\nvar G__19557 \x3d nacc;\r\nvar G__19558 \x3d (i + (1));\r\nvar G__19559 \x3d arr__$1;\r\nacc \x3d G__19557;\r\ni \x3d G__19558;\r\narr \x3d G__19559;\r\ncontinue;\r\n}\r\n} else {\r\nreturn acc;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.pv_reduce.cljs$lang$maxFixedArity \x3d 5);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Marker protocol\r\n * @interface\r\n */\r\ncljs.core.APersistentVector \x3d function(){};\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.APersistentVector}\r\n * @implements {cljs.core.IIndexed}\r\n * @implements {cljs.core.IVector}\r\n * @implements {cljs.core.IReversible}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IFn}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IEditableCollection}\r\n * @implements {cljs.core.IFind}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IStack}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.ILookup}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.PersistentVector \x3d (function (meta,cnt,shift,root,tail,__hash){\r\nthis.meta \x3d meta;\r\nthis.cnt \x3d cnt;\r\nthis.shift \x3d shift;\r\nthis.root \x3d root;\r\nthis.tail \x3d tail;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 167666463;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139268;\r\n});\r\n(cljs.core.PersistentVector.prototype.cljs$core$IFind$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IFind$_find$arity$2 \x3d (function (coll,n){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(((((0) \x3c\x3d n)) \x26\x26 ((n \x3c self__.cnt)))){\r\nreturn (new cljs.core.MapEntry(n,(cljs.core.unchecked_array_for(coll__$1,n)[(n \x26 (31))]),null));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.indexOf \x3d (function() {\r\nvar G__19563 \x3d null;\r\nvar G__19563__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__19563__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__19563 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__19563__1.call(this,x);\r\ncase 2:\r\nreturn G__19563__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__19563.cljs$core$IFn$_invoke$arity$1 \x3d G__19563__1;\r\nG__19563.cljs$core$IFn$_invoke$arity$2 \x3d G__19563__2;\r\nreturn G__19563;\r\n})()\r\n);\r\n\r\n(cljs.core.PersistentVector.prototype.lastIndexOf \x3d (function() {\r\nvar G__19564 \x3d null;\r\nvar G__19564__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\r\n});\r\nvar G__19564__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__19564 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__19564__1.call(this,x);\r\ncase 2:\r\nreturn G__19564__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__19564.cljs$core$IFn$_invoke$arity$1 \x3d G__19564__1;\r\nG__19564.cljs$core$IFn$_invoke$arity$2 \x3d G__19564__2;\r\nreturn G__19564;\r\n})()\r\n);\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (coll,k){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null);\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (coll,k,not_found){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(typeof k \x3d\x3d\x3d \x27number\x27){\r\nreturn coll__$1.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);\r\n} else {\r\nreturn not_found;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (v,f,init){\r\nvar self__ \x3d this;\r\nvar v__$1 \x3d this;\r\nvar i \x3d (0);\r\nvar init__$1 \x3d init;\r\nwhile(true){\r\nif((i \x3c self__.cnt)){\r\nvar arr \x3d cljs.core.unchecked_array_for(v__$1,i);\r\nvar len \x3d arr.length;\r\nvar init__$2 \x3d (function (){var j \x3d (0);\r\nvar init__$2 \x3d init__$1;\r\nwhile(true){\r\nif((j \x3c len)){\r\nvar init__$3 \x3d (function (){var G__15762 \x3d init__$2;\r\nvar G__15763 \x3d (j + i);\r\nvar G__15764 \x3d (arr[j]);\r\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15762,G__15763,G__15764) : f.call(null,G__15762,G__15763,G__15764));\r\n})();\r\nif(cljs.core.reduced_QMARK_(init__$3)){\r\nreturn init__$3;\r\n} else {\r\nvar G__19565 \x3d (j + (1));\r\nvar G__19566 \x3d init__$3;\r\nj \x3d G__19565;\r\ninit__$2 \x3d G__19566;\r\ncontinue;\r\n}\r\n} else {\r\nreturn init__$2;\r\n}\r\nbreak;\r\n}\r\n})();\r\nif(cljs.core.reduced_QMARK_(init__$2)){\r\nreturn cljs.core.deref(init__$2);\r\n} else {\r\nvar G__19573 \x3d (i + len);\r\nvar G__19574 \x3d init__$2;\r\ni \x3d G__19573;\r\ninit__$1 \x3d G__19574;\r\ncontinue;\r\n}\r\n} else {\r\nreturn init__$1;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$APersistentVector$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 \x3d (function (coll,n){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (cljs.core.array_for(coll__$1,n)[(n \x26 (31))]);\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 \x3d (function (coll,n,not_found){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(((((0) \x3c\x3d n)) \x26\x26 ((n \x3c self__.cnt)))){\r\nreturn (cljs.core.unchecked_array_for(coll__$1,n)[(n \x26 (31))]);\r\n} else {\r\nreturn not_found;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 \x3d (function (coll,n,val){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(((((0) \x3c\x3d n)) \x26\x26 ((n \x3c self__.cnt)))){\r\nif((cljs.core.tail_off(coll__$1) \x3c\x3d n)){\r\nvar new_tail \x3d cljs.core.aclone(self__.tail);\r\n(new_tail[(n \x26 (31))] \x3d val);\r\n\r\nreturn (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));\r\n} else {\r\nreturn (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));\r\n}\r\n} else {\r\nif((n \x3d\x3d\x3d self__.cnt)){\r\nreturn coll__$1.cljs$core$ICollection$_conj$arity$2(null,val);\r\n} else {\r\nthrow (new Error([\x22Index \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(n),\x22 out of bounds  [0,\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt),\x22]\x22].join(\x27\x27)));\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (this$){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nreturn cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.cnt;\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.cnt \x3e (0))){\r\nreturn coll__$1.cljs$core$IIndexed$_nth$arity$2(null,(self__.cnt - (1)));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.cnt \x3d\x3d\x3d (0))){\r\nthrow (new Error(\x22Can\x27t pop empty vector\x22));\r\n} else {\r\nif(((1) \x3d\x3d\x3d self__.cnt)){\r\nreturn cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);\r\n} else {\r\nif(((1) \x3c (self__.cnt - cljs.core.tail_off(coll__$1)))){\r\nreturn (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));\r\n} else {\r\nvar new_tail \x3d cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));\r\nvar nr \x3d cljs.core.pop_tail(coll__$1,self__.shift,self__.root);\r\nvar new_root \x3d (((nr \x3d\x3d null))?cljs.core.PersistentVector.EMPTY_NODE:nr);\r\nvar cnt_1 \x3d (self__.cnt - (1));\r\nif(((((5) \x3c self__.shift)) \x26\x26 ((cljs.core.pv_aget(new_root,(1)) \x3d\x3d null)))){\r\nreturn (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));\r\n} else {\r\nreturn (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));\r\n}\r\n\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.cnt \x3e (0))){\r\nreturn (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((other instanceof cljs.core.PersistentVector)){\r\nif((self__.cnt \x3d\x3d\x3d cljs.core.count(other))){\r\nvar me_iter \x3d coll__$1.cljs$core$IIterable$_iterator$arity$1(null);\r\nvar you_iter \x3d other.cljs$core$IIterable$_iterator$arity$1(null);\r\nwhile(true){\r\nif(me_iter.hasNext()){\r\nvar x \x3d me_iter.next();\r\nvar y \x3d you_iter.next();\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){\r\ncontinue;\r\n} else {\r\nreturn false;\r\n}\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn false;\r\n}\r\n} else {\r\nreturn cljs.core.equiv_sequential(coll__$1,other);\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (new cljs.core.TransientVector(self__.cnt,self__.shift,(cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null,self__.root)),(cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null,self__.tail))));\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (v,f){\r\nvar self__ \x3d this;\r\nvar v__$1 \x3d this;\r\nreturn cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(v__$1,f,(0),self__.cnt);\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (v,f,init){\r\nvar self__ \x3d this;\r\nvar v__$1 \x3d this;\r\nvar i \x3d (0);\r\nvar init__$1 \x3d init;\r\nwhile(true){\r\nif((i \x3c self__.cnt)){\r\nvar arr \x3d cljs.core.unchecked_array_for(v__$1,i);\r\nvar len \x3d arr.length;\r\nvar init__$2 \x3d (function (){var j \x3d (0);\r\nvar init__$2 \x3d init__$1;\r\nwhile(true){\r\nif((j \x3c len)){\r\nvar init__$3 \x3d (function (){var G__15765 \x3d init__$2;\r\nvar G__15766 \x3d (arr[j]);\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15765,G__15766) : f.call(null,G__15765,G__15766));\r\n})();\r\nif(cljs.core.reduced_QMARK_(init__$3)){\r\nreturn init__$3;\r\n} else {\r\nvar G__19581 \x3d (j + (1));\r\nvar G__19582 \x3d init__$3;\r\nj \x3d G__19581;\r\ninit__$2 \x3d G__19582;\r\ncontinue;\r\n}\r\n} else {\r\nreturn init__$2;\r\n}\r\nbreak;\r\n}\r\n})();\r\nif(cljs.core.reduced_QMARK_(init__$2)){\r\nreturn cljs.core.deref(init__$2);\r\n} else {\r\nvar G__19583 \x3d (i + len);\r\nvar G__19584 \x3d init__$2;\r\ni \x3d G__19583;\r\ninit__$1 \x3d G__19584;\r\ncontinue;\r\n}\r\n} else {\r\nreturn init__$1;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (coll,k,v){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(typeof k \x3d\x3d\x3d \x27number\x27){\r\nreturn coll__$1.cljs$core$IVector$_assoc_n$arity$3(null,k,v);\r\n} else {\r\nthrow (new Error(\x22Vector\x27s key for assoc must be a number.\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (coll,k){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(cljs.core.integer_QMARK_(k)){\r\nreturn ((((0) \x3c\x3d k)) \x26\x26 ((k \x3c self__.cnt)));\r\n} else {\r\nreturn false;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.cnt \x3d\x3d\x3d (0))){\r\nreturn null;\r\n} else {\r\nif((self__.cnt \x3c\x3d (32))){\r\nreturn (new cljs.core.IndexedSeq(self__.tail,(0),null));\r\n} else {\r\nvar G__15767 \x3d coll__$1;\r\nvar G__15768 \x3d cljs.core.first_array_for_longvec(coll__$1);\r\nvar G__15769 \x3d (0);\r\nvar G__15770 \x3d (0);\r\nreturn (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15767,G__15768,G__15769,G__15770) : cljs.core.chunked_seq.call(null,G__15767,G__15768,G__15769,G__15770));\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.PersistentVector(new_meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(((self__.cnt - cljs.core.tail_off(coll__$1)) \x3c (32))){\r\nvar len \x3d self__.tail.length;\r\nvar new_tail \x3d (new Array((len + (1))));\r\nvar n__4741__auto___19593 \x3d len;\r\nvar i_19594 \x3d (0);\r\nwhile(true){\r\nif((i_19594 \x3c n__4741__auto___19593)){\r\n(new_tail[i_19594] \x3d (self__.tail[i_19594]));\r\n\r\nvar G__19595 \x3d (i_19594 + (1));\r\ni_19594 \x3d G__19595;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\n(new_tail[len] \x3d o);\r\n\r\nreturn (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));\r\n} else {\r\nvar root_overflow_QMARK_ \x3d ((self__.cnt \x3e\x3e\x3e (5)) \x3e ((1) \x3c\x3c self__.shift));\r\nvar new_shift \x3d ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);\r\nvar new_root \x3d ((root_overflow_QMARK_)?(function (){var n_r \x3d cljs.core.pv_fresh_node(null);\r\ncljs.core.pv_aset(n_r,(0),self__.root);\r\n\r\ncljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));\r\n\r\nreturn n_r;\r\n})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));\r\nreturn (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.call \x3d (function (unused__9633__auto__){\r\nvar self__ \x3d this;\r\nvar self__ \x3d this;\r\nvar G__15771 \x3d (arguments.length - (1));\r\nswitch (G__15771) {\r\ncase (1):\r\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.apply \x3d (function (self__,args15761){\r\nvar self__ \x3d this;\r\nvar self____$1 \x3d this;\r\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15761)));\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nif(typeof k \x3d\x3d\x3d \x27number\x27){\r\nreturn coll.cljs$core$IIndexed$_nth$arity$2(null,k);\r\n} else {\r\nthrow (new Error(\x22Key must be integer\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentVector.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22cnt\x22,\x22cnt\x22,1924510325,null),new cljs.core.Symbol(null,\x22shift\x22,\x22shift\x22,-1657295705,null),new cljs.core.Symbol(null,\x22root\x22,\x22root\x22,1191874074,null),new cljs.core.Symbol(null,\x22tail\x22,\x22tail\x22,494507963,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.PersistentVector.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.PersistentVector.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentVector\x22);\r\n\r\n(cljs.core.PersistentVector.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/PersistentVector\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/PersistentVector.\r\n */\r\ncljs.core.__GT_PersistentVector \x3d (function cljs$core$__GT_PersistentVector(meta,cnt,shift,root,tail,__hash){\r\nreturn (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));\r\n});\r\n\r\n(cljs.core.PersistentVector.EMPTY_NODE \x3d (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null])));\r\n(cljs.core.PersistentVector.EMPTY \x3d (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash)));\r\n(cljs.core.PersistentVector.fromArray \x3d (function (xs,no_clone){\r\nvar l \x3d xs.length;\r\nvar xs__$1 \x3d ((no_clone)?xs:cljs.core.aclone(xs));\r\nif((l \x3c (32))){\r\nreturn (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));\r\n} else {\r\nvar node \x3d xs__$1.slice((0),(32));\r\nvar v \x3d (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));\r\nvar i \x3d (32);\r\nvar out \x3d v.cljs$core$IEditableCollection$_as_transient$arity$1(null);\r\nwhile(true){\r\nif((i \x3c l)){\r\nvar G__19618 \x3d (i + (1));\r\nvar G__19619 \x3d cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));\r\ni \x3d G__19618;\r\nout \x3d G__19619;\r\ncontinue;\r\n} else {\r\nreturn cljs.core.persistent_BANG_(out);\r\n}\r\nbreak;\r\n}\r\n}\r\n}));\r\n(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\n/**\r\n * Creates a new vector containing the contents of coll. JavaScript arrays\r\n *   will be aliased and should not be modified.\r\n */\r\ncljs.core.vec \x3d (function cljs$core$vec(coll){\r\nif(cljs.core.truth_((cljs.core.map_entry_QMARK_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.map_entry_QMARK_.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.map_entry_QMARK_.call(null,coll)))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.key.call(null,coll)),(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.val.call(null,coll))], null);\r\n} else {\r\nif(cljs.core.vector_QMARK_(coll)){\r\nreturn cljs.core.with_meta(coll,null);\r\n} else {\r\nif(cljs.core.array_QMARK_(coll)){\r\nreturn cljs.core.PersistentVector.fromArray(coll,true);\r\n} else {\r\nreturn cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));\r\n\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Creates a new vector containing the args.\r\n */\r\ncljs.core.vector \x3d (function cljs$core$vector(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___19620 \x3d arguments.length;\r\nvar i__4865__auto___19621 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___19621 \x3c len__4864__auto___19620)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___19621]));\r\n\r\nvar G__19622 \x3d (i__4865__auto___19621 + (1));\r\ni__4865__auto___19621 \x3d G__19622;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic \x3d (function (args){\r\nif((((args instanceof cljs.core.IndexedSeq)) \x26\x26 ((args.i \x3d\x3d\x3d (0))))){\r\nreturn cljs.core.PersistentVector.fromArray(args.arr,(!(cljs.core.array_QMARK_(args.arr))));\r\n} else {\r\nreturn cljs.core.vec(args);\r\n}\r\n}));\r\n\r\n(cljs.core.vector.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(cljs.core.vector.cljs$lang$applyTo \x3d (function (seq15772){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15772));\r\n}));\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ASeq}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IChunkedNext}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.INext}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.IChunkedSeq}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.ChunkedSeq \x3d (function (vec,node,i,off,meta,__hash){\r\nthis.vec \x3d vec;\r\nthis.node \x3d node;\r\nthis.i \x3d i;\r\nthis.off \x3d off;\r\nthis.meta \x3d meta;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32375020;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 1536;\r\n});\r\n(cljs.core.ChunkedSeq.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.ChunkedSeq.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.ChunkedSeq.prototype.indexOf \x3d (function() {\r\nvar G__19626 \x3d null;\r\nvar G__19626__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__19626__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__19626 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__19626__1.call(this,x);\r\ncase 2:\r\nreturn G__19626__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__19626.cljs$core$IFn$_invoke$arity$1 \x3d G__19626__1;\r\nG__19626.cljs$core$IFn$_invoke$arity$2 \x3d G__19626__2;\r\nreturn G__19626;\r\n})()\r\n);\r\n\r\n(cljs.core.ChunkedSeq.prototype.lastIndexOf \x3d (function() {\r\nvar G__19627 \x3d null;\r\nvar G__19627__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\r\n});\r\nvar G__19627__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__19627 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__19627__1.call(this,x);\r\ncase 2:\r\nreturn G__19627__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__19627.cljs$core$IFn$_invoke$arity$1 \x3d G__19627__1;\r\nG__19627.cljs$core$IFn$_invoke$arity$2 \x3d G__19627__2;\r\nreturn G__19627;\r\n})()\r\n);\r\n\r\n(cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(((self__.off + (1)) \x3c self__.node.length)){\r\nvar s \x3d (function (){var G__15773 \x3d self__.vec;\r\nvar G__15774 \x3d self__.node;\r\nvar G__15775 \x3d self__.i;\r\nvar G__15776 \x3d (self__.off + (1));\r\nreturn (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15773,G__15774,G__15775,G__15776) : cljs.core.chunked_seq.call(null,G__15773,G__15774,G__15775,G__15776));\r\n})();\r\nif((s \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn s;\r\n}\r\n} else {\r\nreturn coll__$1.cljs$core$IChunkedNext$_chunked_next$arity$1(null);\r\n}\r\n}));\r\n\r\n(cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.equiv_sequential(coll__$1,other);\r\n}));\r\n\r\n(cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.List.EMPTY;\r\n}));\r\n\r\n(cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.vec,f,(self__.i + self__.off),cljs.core.count(self__.vec));\r\n}));\r\n\r\n(cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.vec,f,start,(self__.i + self__.off),cljs.core.count(self__.vec));\r\n}));\r\n\r\n(cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (self__.node[self__.off]);\r\n}));\r\n\r\n(cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(((self__.off + (1)) \x3c self__.node.length)){\r\nvar s \x3d (function (){var G__15777 \x3d self__.vec;\r\nvar G__15778 \x3d self__.node;\r\nvar G__15779 \x3d self__.i;\r\nvar G__15780 \x3d (self__.off + (1));\r\nreturn (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15777,G__15778,G__15779,G__15780) : cljs.core.chunked_seq.call(null,G__15777,G__15778,G__15779,G__15780));\r\n})();\r\nif((s \x3d\x3d null)){\r\nreturn cljs.core.List.EMPTY;\r\n} else {\r\nreturn s;\r\n}\r\n} else {\r\nreturn coll__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null);\r\n}\r\n}));\r\n\r\n(cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1;\r\n}));\r\n\r\n(cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);\r\n}));\r\n\r\n(cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar end \x3d (self__.i + self__.node.length);\r\nif((end \x3c cljs.core._count(self__.vec))){\r\nvar G__15781 \x3d self__.vec;\r\nvar G__15782 \x3d cljs.core.unchecked_array_for(self__.vec,end);\r\nvar G__15783 \x3d end;\r\nvar G__15784 \x3d (0);\r\nreturn (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15781,G__15782,G__15783,G__15784) : cljs.core.chunked_seq.call(null,G__15781,G__15782,G__15783,G__15784));\r\n} else {\r\nreturn cljs.core.List.EMPTY;\r\n}\r\n}));\r\n\r\n(cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec,self__.node,self__.i,self__.off,new_meta) : cljs.core.chunked_seq.call(null,self__.vec,self__.node,self__.i,self__.off,new_meta));\r\n}\r\n}));\r\n\r\n(cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.cons(o,coll__$1);\r\n}));\r\n\r\n(cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar end \x3d (self__.i + self__.node.length);\r\nif((end \x3c cljs.core._count(self__.vec))){\r\nvar G__15785 \x3d self__.vec;\r\nvar G__15786 \x3d cljs.core.unchecked_array_for(self__.vec,end);\r\nvar G__15787 \x3d end;\r\nvar G__15788 \x3d (0);\r\nreturn (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15785,G__15786,G__15787,G__15788) : cljs.core.chunked_seq.call(null,G__15785,G__15786,G__15787,G__15788));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.ChunkedSeq.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22vec\x22,\x22vec\x22,982683596,null),new cljs.core.Symbol(null,\x22node\x22,\x22node\x22,-2073234571,null),new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.Symbol(null,\x22off\x22,\x22off\x22,-2047994980,null),new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.ChunkedSeq.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.ChunkedSeq.cljs$lang$ctorStr \x3d \x22cljs.core/ChunkedSeq\x22);\r\n\r\n(cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/ChunkedSeq\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/ChunkedSeq.\r\n */\r\ncljs.core.__GT_ChunkedSeq \x3d (function cljs$core$__GT_ChunkedSeq(vec,node,i,off,meta,__hash){\r\nreturn (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));\r\n});\r\n\r\n(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\ncljs.core.chunked_seq \x3d (function cljs$core$chunked_seq(var_args){\r\nvar G__15790 \x3d arguments.length;\r\nswitch (G__15790) {\r\ncase 3:\r\nreturn cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ncase 5:\r\nreturn cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 \x3d (function (vec,i,off){\r\nreturn (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));\r\n}));\r\n\r\n(cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 \x3d (function (vec,node,i,off){\r\nreturn (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));\r\n}));\r\n\r\n(cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 \x3d (function (vec,node,i,off,meta){\r\nreturn (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));\r\n}));\r\n\r\n(cljs.core.chunked_seq.cljs$lang$maxFixedArity \x3d 5);\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IIndexed}\r\n * @implements {cljs.core.IVector}\r\n * @implements {cljs.core.IReversible}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IFn}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IFind}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IStack}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.ILookup}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.Subvec \x3d (function (meta,v,start,end,__hash){\r\nthis.meta \x3d meta;\r\nthis.v \x3d v;\r\nthis.start \x3d start;\r\nthis.end \x3d end;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 167666463;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\r\n});\r\n(cljs.core.Subvec.prototype.cljs$core$IFind$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IFind$_find$arity$2 \x3d (function (coll,n){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((n \x3c (0))){\r\nreturn null;\r\n} else {\r\nvar idx \x3d (self__.start + n);\r\nif((idx \x3c self__.end)){\r\nreturn (new cljs.core.MapEntry(n,cljs.core._lookup(self__.v,idx),null));\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.indexOf \x3d (function() {\r\nvar G__19641 \x3d null;\r\nvar G__19641__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__19641__2 \x3d (function (x,start__$1){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start__$1);\r\n});\r\nG__19641 \x3d function(x,start__$1){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__19641__1.call(this,x);\r\ncase 2:\r\nreturn G__19641__2.call(this,x,start__$1);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__19641.cljs$core$IFn$_invoke$arity$1 \x3d G__19641__1;\r\nG__19641.cljs$core$IFn$_invoke$arity$2 \x3d G__19641__2;\r\nreturn G__19641;\r\n})()\r\n);\r\n\r\n(cljs.core.Subvec.prototype.lastIndexOf \x3d (function() {\r\nvar G__19642 \x3d null;\r\nvar G__19642__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\r\n});\r\nvar G__19642__2 \x3d (function (x,start__$1){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start__$1);\r\n});\r\nG__19642 \x3d function(x,start__$1){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__19642__1.call(this,x);\r\ncase 2:\r\nreturn G__19642__2.call(this,x,start__$1);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__19642.cljs$core$IFn$_invoke$arity$1 \x3d G__19642__1;\r\nG__19642.cljs$core$IFn$_invoke$arity$2 \x3d G__19642__2;\r\nreturn G__19642;\r\n})()\r\n);\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (coll,k){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null);\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (coll,k,not_found){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(typeof k \x3d\x3d\x3d \x27number\x27){\r\nreturn coll__$1.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);\r\n} else {\r\nreturn not_found;\r\n}\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (coll,f,init){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar i \x3d self__.start;\r\nvar j \x3d (0);\r\nvar init__$1 \x3d init;\r\nwhile(true){\r\nif((i \x3c self__.end)){\r\nvar init__$2 \x3d (function (){var G__15792 \x3d init__$1;\r\nvar G__15793 \x3d j;\r\nvar G__15794 \x3d cljs.core._nth(self__.v,i);\r\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15792,G__15793,G__15794) : f.call(null,G__15792,G__15793,G__15794));\r\n})();\r\nif(cljs.core.reduced_QMARK_(init__$2)){\r\nreturn cljs.core.deref(init__$2);\r\n} else {\r\nvar G__19643 \x3d (i + (1));\r\nvar G__19644 \x3d (j + (1));\r\nvar G__19645 \x3d init__$2;\r\ni \x3d G__19643;\r\nj \x3d G__19644;\r\ninit__$1 \x3d G__19645;\r\ncontinue;\r\n}\r\n} else {\r\nreturn init__$1;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 \x3d (function (coll,n){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((((n \x3c (0))) || ((self__.end \x3c\x3d (self__.start + n))))){\r\nreturn cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));\r\n} else {\r\nreturn cljs.core._nth(self__.v,(self__.start + n));\r\n}\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 \x3d (function (coll,n,not_found){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((((n \x3c (0))) || ((self__.end \x3c\x3d (self__.start + n))))){\r\nreturn not_found;\r\n} else {\r\nreturn cljs.core._nth(self__.v,(self__.start + n),not_found);\r\n}\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 \x3d (function (coll,n,val){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar v_pos \x3d (self__.start + n);\r\nif((((n \x3c (0))) || (((self__.end + (1)) \x3c\x3d v_pos)))){\r\nthrow (new Error([\x22Index \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(n),\x22 out of bounds [0,\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll__$1.cljs$core$ICounted$_count$arity$1(null)),\x22]\x22].join(\x27\x27)));\r\n} else {\r\nvar G__15795 \x3d self__.meta;\r\nvar G__15796 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);\r\nvar G__15797 \x3d self__.start;\r\nvar G__15798 \x3d (function (){var x__4336__auto__ \x3d self__.end;\r\nvar y__4337__auto__ \x3d (v_pos + (1));\r\nreturn ((x__4336__auto__ \x3e y__4337__auto__) ? x__4336__auto__ : y__4337__auto__);\r\n})();\r\nvar G__15799 \x3d null;\r\nreturn (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15795,G__15796,G__15797,G__15798,G__15799) : cljs.core.build_subvec.call(null,G__15795,G__15796,G__15797,G__15798,G__15799));\r\n}\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((((!((self__.v \x3d\x3d null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d self__.v.cljs$core$APersistentVector$))))?true:false):false)){\r\nreturn cljs.core.ranged_iterator(self__.v,self__.start,self__.end);\r\n} else {\r\nreturn cljs.core.seq_iter(coll__$1);\r\n}\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (self__.end - self__.start);\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.start \x3d\x3d\x3d self__.end)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core._nth(self__.v,(self__.end - (1)));\r\n}\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.start \x3d\x3d\x3d self__.end)){\r\nthrow (new Error(\x22Can\x27t pop empty vector\x22));\r\n} else {\r\nvar G__15801 \x3d self__.meta;\r\nvar G__15802 \x3d self__.v;\r\nvar G__15803 \x3d self__.start;\r\nvar G__15804 \x3d (self__.end - (1));\r\nvar G__15805 \x3d null;\r\nreturn (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15801,G__15802,G__15803,G__15804,G__15805) : cljs.core.build_subvec.call(null,G__15801,G__15802,G__15803,G__15804,G__15805));\r\n}\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((!((self__.start \x3d\x3d\x3d self__.end)))){\r\nreturn (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.equiv_sequential(coll__$1,other);\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((((!((self__.v \x3d\x3d null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d self__.v.cljs$core$APersistentVector$))))?true:false):false)){\r\nreturn cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.v,f,self__.start,self__.end);\r\n} else {\r\nreturn cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);\r\n}\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,init){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((((!((self__.v \x3d\x3d null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d self__.v.cljs$core$APersistentVector$))))?true:false):false)){\r\nreturn cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.v,f,init,self__.start,self__.end);\r\n} else {\r\nreturn cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,init);\r\n}\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (coll,key,val){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(typeof key \x3d\x3d\x3d \x27number\x27){\r\nreturn coll__$1.cljs$core$IVector$_assoc_n$arity$3(null,key,val);\r\n} else {\r\nthrow (new Error(\x22Subvec\x27s key for assoc must be a number.\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (coll,key){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(cljs.core.integer_QMARK_(key)){\r\nreturn ((((0) \x3c\x3d key)) \x26\x26 ((key \x3c (self__.end - self__.start))));\r\n} else {\r\nreturn false;\r\n}\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar subvec_seq \x3d (function cljs$core$subvec_seq(i){\r\nif((i \x3d\x3d\x3d self__.end)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core.cons(cljs.core._nth(self__.v,i),(new cljs.core.LazySeq(null,(function (){\r\nreturn cljs$core$subvec_seq((i + (1)));\r\n}),null,null)));\r\n}\r\n});\r\nreturn subvec_seq(self__.start);\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(new_meta,self__.v,self__.start,self__.end,self__.__hash) : cljs.core.build_subvec.call(null,new_meta,self__.v,self__.start,self__.end,self__.__hash));\r\n}\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar G__15808 \x3d self__.meta;\r\nvar G__15809 \x3d cljs.core._assoc_n(self__.v,self__.end,o);\r\nvar G__15810 \x3d self__.start;\r\nvar G__15811 \x3d (self__.end + (1));\r\nvar G__15812 \x3d null;\r\nreturn (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15808,G__15809,G__15810,G__15811,G__15812) : cljs.core.build_subvec.call(null,G__15808,G__15809,G__15810,G__15811,G__15812));\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.call \x3d (function (unused__9633__auto__){\r\nvar self__ \x3d this;\r\nvar self__ \x3d this;\r\nvar G__15813 \x3d (arguments.length - (1));\r\nswitch (G__15813) {\r\ncase (1):\r\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\r\n\r\nbreak;\r\ncase (2):\r\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.apply \x3d (function (self__,args15791){\r\nvar self__ \x3d this;\r\nvar self____$1 \x3d this;\r\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15791)));\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn coll.cljs$core$IIndexed$_nth$arity$2(null,k);\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);\r\n}));\r\n\r\n(cljs.core.Subvec.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22v\x22,\x22v\x22,1661996586,null),new cljs.core.Symbol(null,\x22start\x22,\x22start\x22,1285322546,null),new cljs.core.Symbol(null,\x22end\x22,\x22end\x22,1372345569,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.Subvec.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.Subvec.cljs$lang$ctorStr \x3d \x22cljs.core/Subvec\x22);\r\n\r\n(cljs.core.Subvec.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/Subvec\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/Subvec.\r\n */\r\ncljs.core.__GT_Subvec \x3d (function cljs$core$__GT_Subvec(meta,v,start,end,__hash){\r\nreturn (new cljs.core.Subvec(meta,v,start,end,__hash));\r\n});\r\n\r\n(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\ncljs.core.build_subvec \x3d (function cljs$core$build_subvec(meta,v,start,end,__hash){\r\nwhile(true){\r\nif((v instanceof cljs.core.Subvec)){\r\nvar G__19768 \x3d meta;\r\nvar G__19769 \x3d v.v;\r\nvar G__19770 \x3d (v.start + start);\r\nvar G__19771 \x3d (v.start + end);\r\nvar G__19772 \x3d __hash;\r\nmeta \x3d G__19768;\r\nv \x3d G__19769;\r\nstart \x3d G__19770;\r\nend \x3d G__19771;\r\n__hash \x3d G__19772;\r\ncontinue;\r\n} else {\r\nif(cljs.core.vector_QMARK_(v)){\r\n} else {\r\nthrow (new Error(\x22v must satisfy IVector\x22));\r\n}\r\n\r\nif((((start \x3c (0))) || ((((end \x3c start)) || ((end \x3e cljs.core.count(v))))))){\r\nthrow (new Error(\x22Index out of bounds\x22));\r\n} else {\r\n}\r\n\r\nreturn (new cljs.core.Subvec(meta,v,start,end,__hash));\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Returns a persistent vector of the items in vector from\r\n *   start (inclusive) to end (exclusive).  If end is not supplied,\r\n *   defaults to (count vector). This operation is O(1) and very fast, as\r\n *   the resulting vector shares structure with the original and no\r\n *   trimming is done.\r\n */\r\ncljs.core.subvec \x3d (function cljs$core$subvec(var_args){\r\nvar G__15815 \x3d arguments.length;\r\nswitch (G__15815) {\r\ncase 2:\r\nreturn cljs.core.subvec.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.subvec.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 \x3d (function (v,start){\r\nreturn cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));\r\n}));\r\n\r\n(cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 \x3d (function (v,start,end){\r\nif((((!((start \x3d\x3d null)))) \x26\x26 ((!((end \x3d\x3d null)))))){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (and (not (nil? start)) (not (nil? end)))\x22));\r\n}\r\n\r\nreturn cljs.core.build_subvec(null,v,(start | (0)),(end | (0)),null);\r\n}));\r\n\r\n(cljs.core.subvec.cljs$lang$maxFixedArity \x3d 3);\r\n\r\ncljs.core.tv_ensure_editable \x3d (function cljs$core$tv_ensure_editable(edit,node){\r\nif((edit \x3d\x3d\x3d node.edit)){\r\nreturn node;\r\n} else {\r\nreturn (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));\r\n}\r\n});\r\ncljs.core.tv_editable_root \x3d (function cljs$core$tv_editable_root(node){\r\nreturn (new cljs.core.VectorNode(({}),cljs.core.aclone(node.arr)));\r\n});\r\ncljs.core.tv_editable_tail \x3d (function cljs$core$tv_editable_tail(tl){\r\nvar ret \x3d [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\r\ncljs.core.array_copy(tl,(0),ret,(0),tl.length);\r\n\r\nreturn ret;\r\n});\r\ncljs.core.tv_push_tail \x3d (function cljs$core$tv_push_tail(tv,level,parent,tail_node){\r\nvar ret \x3d cljs.core.tv_ensure_editable(tv.root.edit,parent);\r\nvar subidx \x3d (((tv.cnt - (1)) \x3e\x3e\x3e level) \x26 (31));\r\ncljs.core.pv_aset(ret,subidx,(((level \x3d\x3d\x3d (5)))?tail_node:(function (){var child \x3d cljs.core.pv_aget(ret,subidx);\r\nif((!((child \x3d\x3d null)))){\r\nvar G__15818 \x3d tv;\r\nvar G__15819 \x3d (level - (5));\r\nvar G__15820 \x3d child;\r\nvar G__15821 \x3d tail_node;\r\nreturn (cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4(G__15818,G__15819,G__15820,G__15821) : cljs.core.tv_push_tail.call(null,G__15818,G__15819,G__15820,G__15821));\r\n} else {\r\nreturn cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);\r\n}\r\n})()));\r\n\r\nreturn ret;\r\n});\r\ncljs.core.tv_pop_tail \x3d (function cljs$core$tv_pop_tail(tv,level,node){\r\nvar node__$1 \x3d cljs.core.tv_ensure_editable(tv.root.edit,node);\r\nvar subidx \x3d (((tv.cnt - (2)) \x3e\x3e\x3e level) \x26 (31));\r\nif((level \x3e (5))){\r\nvar new_child \x3d (function (){var G__15822 \x3d tv;\r\nvar G__15823 \x3d (level - (5));\r\nvar G__15824 \x3d cljs.core.pv_aget(node__$1,subidx);\r\nreturn (cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3(G__15822,G__15823,G__15824) : cljs.core.tv_pop_tail.call(null,G__15822,G__15823,G__15824));\r\n})();\r\nif((((new_child \x3d\x3d null)) \x26\x26 ((subidx \x3d\x3d\x3d (0))))){\r\nreturn null;\r\n} else {\r\ncljs.core.pv_aset(node__$1,subidx,new_child);\r\n\r\nreturn node__$1;\r\n}\r\n} else {\r\nif((subidx \x3d\x3d\x3d (0))){\r\nreturn null;\r\n} else {\r\ncljs.core.pv_aset(node__$1,subidx,null);\r\n\r\nreturn node__$1;\r\n\r\n}\r\n}\r\n});\r\ncljs.core.unchecked_editable_array_for \x3d (function cljs$core$unchecked_editable_array_for(tv,i){\r\nif((i \x3e\x3d cljs.core.tail_off(tv))){\r\nreturn tv.tail;\r\n} else {\r\nvar root \x3d tv.root;\r\nvar node \x3d root;\r\nvar level \x3d tv.shift;\r\nwhile(true){\r\nif((level \x3e (0))){\r\nvar G__19780 \x3d cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i \x3e\x3e\x3e level) \x26 (31))));\r\nvar G__19781 \x3d (level - (5));\r\nnode \x3d G__19780;\r\nlevel \x3d G__19781;\r\ncontinue;\r\n} else {\r\nreturn node.arr;\r\n}\r\nbreak;\r\n}\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IIndexed}\r\n * @implements {cljs.core.IFn}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ITransientCollection}\r\n * @implements {cljs.core.ITransientVector}\r\n * @implements {cljs.core.ITransientAssociative}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ncljs.core.TransientVector \x3d (function (cnt,shift,root,tail){\r\nthis.cnt \x3d cnt;\r\nthis.shift \x3d shift;\r\nthis.root \x3d root;\r\nthis.tail \x3d tail;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 88;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 275;\r\n});\r\n(cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 \x3d (function (tcoll,o){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\nif(self__.root.edit){\r\nif(((self__.cnt - cljs.core.tail_off(tcoll__$1)) \x3c (32))){\r\n(self__.tail[(self__.cnt \x26 (31))] \x3d o);\r\n\r\n(self__.cnt \x3d (self__.cnt + (1)));\r\n\r\nreturn tcoll__$1;\r\n} else {\r\nvar tail_node \x3d (new cljs.core.VectorNode(self__.root.edit,self__.tail));\r\nvar new_tail \x3d [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\r\n(new_tail[(0)] \x3d o);\r\n\r\n(self__.tail \x3d new_tail);\r\n\r\nif(((self__.cnt \x3e\x3e\x3e (5)) \x3e ((1) \x3c\x3c self__.shift))){\r\nvar new_root_array \x3d [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\r\nvar new_shift \x3d (self__.shift + (5));\r\n(new_root_array[(0)] \x3d self__.root);\r\n\r\n(new_root_array[(1)] \x3d cljs.core.new_path(self__.root.edit,self__.shift,tail_node));\r\n\r\n(self__.root \x3d (new cljs.core.VectorNode(self__.root.edit,new_root_array)));\r\n\r\n(self__.shift \x3d new_shift);\r\n\r\n(self__.cnt \x3d (self__.cnt + (1)));\r\n\r\nreturn tcoll__$1;\r\n} else {\r\nvar new_root \x3d cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);\r\n(self__.root \x3d new_root);\r\n\r\n(self__.cnt \x3d (self__.cnt + (1)));\r\n\r\nreturn tcoll__$1;\r\n}\r\n}\r\n} else {\r\nthrow (new Error(\x22conj! after persistent!\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 \x3d (function (tcoll){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\nif(self__.root.edit){\r\n(self__.root.edit \x3d null);\r\n\r\nvar len \x3d (self__.cnt - cljs.core.tail_off(tcoll__$1));\r\nvar trimmed_tail \x3d (new Array(len));\r\ncljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);\r\n\r\nreturn (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));\r\n} else {\r\nthrow (new Error(\x22persistent! called twice\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 \x3d (function (tcoll,key,val){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\nif(typeof key \x3d\x3d\x3d \x27number\x27){\r\nreturn tcoll__$1.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(null,key,val);\r\n} else {\r\nthrow (new Error(\x22TransientVector\x27s key for assoc! must be a number.\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 \x3d (function (tcoll,n,val){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\nif(self__.root.edit){\r\nif(((((0) \x3c\x3d n)) \x26\x26 ((n \x3c self__.cnt)))){\r\nif((cljs.core.tail_off(tcoll__$1) \x3c\x3d n)){\r\n(self__.tail[(n \x26 (31))] \x3d val);\r\n\r\nreturn tcoll__$1;\r\n} else {\r\nvar new_root \x3d (function cljs$core$go(level,node){\r\nvar node__$1 \x3d cljs.core.tv_ensure_editable(self__.root.edit,node);\r\nif((level \x3d\x3d\x3d (0))){\r\ncljs.core.pv_aset(node__$1,(n \x26 (31)),val);\r\n\r\nreturn node__$1;\r\n} else {\r\nvar subidx \x3d ((n \x3e\x3e\x3e level) \x26 (31));\r\ncljs.core.pv_aset(node__$1,subidx,cljs$core$go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));\r\n\r\nreturn node__$1;\r\n}\r\n})(self__.shift,self__.root);\r\n(self__.root \x3d new_root);\r\n\r\nreturn tcoll__$1;\r\n}\r\n} else {\r\nif((n \x3d\x3d\x3d self__.cnt)){\r\nreturn tcoll__$1.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,val);\r\n} else {\r\nthrow (new Error([\x22Index \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(n),\x22 out of bounds for TransientVector of length\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt)].join(\x27\x27)));\r\n\r\n}\r\n}\r\n} else {\r\nthrow (new Error(\x22assoc! after persistent!\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 \x3d (function (tcoll){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\nif(self__.root.edit){\r\nif((self__.cnt \x3d\x3d\x3d (0))){\r\nthrow (new Error(\x22Can\x27t pop empty vector\x22));\r\n} else {\r\nif(((1) \x3d\x3d\x3d self__.cnt)){\r\n(self__.cnt \x3d (0));\r\n\r\nreturn tcoll__$1;\r\n} else {\r\nif((((self__.cnt - (1)) \x26 (31)) \x3e (0))){\r\n(self__.cnt \x3d (self__.cnt - (1)));\r\n\r\nreturn tcoll__$1;\r\n} else {\r\nvar new_tail \x3d cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));\r\nvar new_root \x3d (function (){var nr \x3d cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);\r\nif((!((nr \x3d\x3d null)))){\r\nreturn nr;\r\n} else {\r\nreturn (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));\r\n}\r\n})();\r\nif(((((5) \x3c self__.shift)) \x26\x26 ((cljs.core.pv_aget(new_root,(1)) \x3d\x3d null)))){\r\nvar new_root__$1 \x3d cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));\r\n(self__.root \x3d new_root__$1);\r\n\r\n(self__.shift \x3d (self__.shift - (5)));\r\n\r\n(self__.cnt \x3d (self__.cnt - (1)));\r\n\r\n(self__.tail \x3d new_tail);\r\n\r\nreturn tcoll__$1;\r\n} else {\r\n(self__.root \x3d new_root);\r\n\r\n(self__.cnt \x3d (self__.cnt - (1)));\r\n\r\n(self__.tail \x3d new_tail);\r\n\r\nreturn tcoll__$1;\r\n}\r\n\r\n}\r\n}\r\n}\r\n} else {\r\nthrow (new Error(\x22pop! after persistent!\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(self__.root.edit){\r\nreturn self__.cnt;\r\n} else {\r\nthrow (new Error(\x22count after persistent!\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 \x3d (function (coll,n){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(self__.root.edit){\r\nreturn (cljs.core.array_for(coll__$1,n)[(n \x26 (31))]);\r\n} else {\r\nthrow (new Error(\x22nth after persistent!\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 \x3d (function (coll,n,not_found){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(((((0) \x3c\x3d n)) \x26\x26 ((n \x3c self__.cnt)))){\r\nreturn coll__$1.cljs$core$IIndexed$_nth$arity$2(null,n);\r\n} else {\r\nreturn not_found;\r\n}\r\n}));\r\n\r\n(cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (coll,k){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null);\r\n}));\r\n\r\n(cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (coll,k,not_found){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((!(self__.root.edit))){\r\nthrow (new Error(\x22lookup after persistent!\x22));\r\n} else {\r\nif(typeof k \x3d\x3d\x3d \x27number\x27){\r\nreturn coll__$1.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);\r\n} else {\r\nreturn not_found;\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.TransientVector.prototype.call \x3d (function (unused__9633__auto__){\r\nvar self__ \x3d this;\r\nvar self__ \x3d this;\r\nvar G__15826 \x3d (arguments.length - (1));\r\nswitch (G__15826) {\r\ncase (1):\r\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\r\n\r\nbreak;\r\ncase (2):\r\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.TransientVector.prototype.apply \x3d (function (self__,args15825){\r\nvar self__ \x3d this;\r\nvar self____$1 \x3d this;\r\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15825)));\r\n}));\r\n\r\n(cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn coll.cljs$core$ILookup$_lookup$arity$2(null,k);\r\n}));\r\n\r\n(cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);\r\n}));\r\n\r\n(cljs.core.TransientVector.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22cnt\x22,\x22cnt\x22,1924510325,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22shift\x22,\x22shift\x22,-1657295705,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22root\x22,\x22root\x22,1191874074,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22tail\x22,\x22tail\x22,494507963,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.TransientVector.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.TransientVector.cljs$lang$ctorStr \x3d \x22cljs.core/TransientVector\x22);\r\n\r\n(cljs.core.TransientVector.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/TransientVector\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/TransientVector.\r\n */\r\ncljs.core.__GT_TransientVector \x3d (function cljs$core$__GT_TransientVector(cnt,shift,root,tail){\r\nreturn (new cljs.core.TransientVector(cnt,shift,root,tail));\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.PersistentQueueIter \x3d (function (fseq,riter){\r\nthis.fseq \x3d fseq;\r\nthis.riter \x3d riter;\r\n});\r\n(cljs.core.PersistentQueueIter.prototype.hasNext \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar or__4253__auto__ \x3d (((!((self__.fseq \x3d\x3d null)))) \x26\x26 (cljs.core.seq(self__.fseq)));\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar and__4251__auto__ \x3d (!((self__.riter \x3d\x3d null)));\r\nif(and__4251__auto__){\r\nreturn self__.riter.hasNext();\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentQueueIter.prototype.next \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nif((!((self__.fseq \x3d\x3d null)))){\r\nvar ret \x3d cljs.core.first(self__.fseq);\r\n(self__.fseq \x3d cljs.core.next(self__.fseq));\r\n\r\nreturn ret;\r\n} else {\r\nif((((!((self__.riter \x3d\x3d null)))) \x26\x26 (self__.riter.hasNext()))){\r\nreturn self__.riter.next();\r\n} else {\r\nthrow (new Error(\x22No such element\x22));\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentQueueIter.prototype.remove \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (new Error(\x22Unsupported operation\x22));\r\n}));\r\n\r\n(cljs.core.PersistentQueueIter.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22fseq\x22,\x22fseq\x22,-1466412450,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22riter\x22,\x22riter\x22,-237834262,null)], null);\r\n}));\r\n\r\n(cljs.core.PersistentQueueIter.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.PersistentQueueIter.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentQueueIter\x22);\r\n\r\n(cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/PersistentQueueIter\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/PersistentQueueIter.\r\n */\r\ncljs.core.__GT_PersistentQueueIter \x3d (function cljs$core$__GT_PersistentQueueIter(fseq,riter){\r\nreturn (new cljs.core.PersistentQueueIter(fseq,riter));\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.INext}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n*/\r\ncljs.core.PersistentQueueSeq \x3d (function (meta,front,rear,__hash){\r\nthis.meta \x3d meta;\r\nthis.front \x3d front;\r\nthis.rear \x3d rear;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 31850700;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.PersistentQueueSeq.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.PersistentQueueSeq.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.PersistentQueueSeq.prototype.indexOf \x3d (function() {\r\nvar G__19792 \x3d null;\r\nvar G__19792__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__19792__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__19792 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__19792__1.call(this,x);\r\ncase 2:\r\nreturn G__19792__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__19792.cljs$core$IFn$_invoke$arity$1 \x3d G__19792__1;\r\nG__19792.cljs$core$IFn$_invoke$arity$2 \x3d G__19792__2;\r\nreturn G__19792;\r\n})()\r\n);\r\n\r\n(cljs.core.PersistentQueueSeq.prototype.lastIndexOf \x3d (function() {\r\nvar G__19796 \x3d null;\r\nvar G__19796__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\r\n});\r\nvar G__19796__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__19796 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__19796__1.call(this,x);\r\ncase 2:\r\nreturn G__19796__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__19796.cljs$core$IFn$_invoke$arity$1 \x3d G__19796__1;\r\nG__19796.cljs$core$IFn$_invoke$arity$2 \x3d G__19796__2;\r\nreturn G__19796;\r\n})()\r\n);\r\n\r\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar temp__5751__auto__ \x3d cljs.core.next(self__.front);\r\nif(temp__5751__auto__){\r\nvar f1 \x3d temp__5751__auto__;\r\nreturn (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));\r\n} else {\r\nif((!((self__.rear \x3d\x3d null)))){\r\nreturn (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.equiv_sequential(coll__$1,other);\r\n}));\r\n\r\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);\r\n}));\r\n\r\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.first(self__.front);\r\n}));\r\n\r\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar temp__5751__auto__ \x3d cljs.core.next(self__.front);\r\nif(temp__5751__auto__){\r\nvar f1 \x3d temp__5751__auto__;\r\nreturn (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));\r\n} else {\r\nif((self__.rear \x3d\x3d null)){\r\nreturn coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);\r\n} else {\r\nreturn (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1;\r\n}));\r\n\r\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.PersistentQueueSeq(new_meta,self__.front,self__.rear,self__.__hash));\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.cons(o,coll__$1);\r\n}));\r\n\r\n(cljs.core.PersistentQueueSeq.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22front\x22,\x22front\x22,117022539,null),new cljs.core.Symbol(null,\x22rear\x22,\x22rear\x22,-900164830,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.PersistentQueueSeq.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.PersistentQueueSeq.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentQueueSeq\x22);\r\n\r\n(cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/PersistentQueueSeq\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/PersistentQueueSeq.\r\n */\r\ncljs.core.__GT_PersistentQueueSeq \x3d (function cljs$core$__GT_PersistentQueueSeq(meta,front,rear,__hash){\r\nreturn (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));\r\n});\r\n\r\n(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IStack}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n*/\r\ncljs.core.PersistentQueue \x3d (function (meta,count,front,rear,__hash){\r\nthis.meta \x3d meta;\r\nthis.count \x3d count;\r\nthis.front \x3d front;\r\nthis.rear \x3d rear;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 31858766;\r\n});\r\n(cljs.core.PersistentQueue.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.PersistentQueue.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.PersistentQueue.prototype.indexOf \x3d (function() {\r\nvar G__19802 \x3d null;\r\nvar G__19802__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__19802__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__19802 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__19802__1.call(this,x);\r\ncase 2:\r\nreturn G__19802__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__19802.cljs$core$IFn$_invoke$arity$1 \x3d G__19802__1;\r\nG__19802.cljs$core$IFn$_invoke$arity$2 \x3d G__19802__2;\r\nreturn G__19802;\r\n})()\r\n);\r\n\r\n(cljs.core.PersistentQueue.prototype.lastIndexOf \x3d (function() {\r\nvar G__19806 \x3d null;\r\nvar G__19806__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(self__.count.cljs$core$IFn$_invoke$arity$1 ? self__.count.cljs$core$IFn$_invoke$arity$1(coll) : self__.count.call(null,coll)));\r\n});\r\nvar G__19806__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__19806 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__19806__1.call(this,x);\r\ncase 2:\r\nreturn G__19806__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__19806.cljs$core$IFn$_invoke$arity$1 \x3d G__19806__1;\r\nG__19806.cljs$core$IFn$_invoke$arity$2 \x3d G__19806__2;\r\nreturn G__19806;\r\n})()\r\n);\r\n\r\n(cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (new cljs.core.PersistentQueueIter(self__.front,cljs.core._iterator(self__.rear)));\r\n}));\r\n\r\n(cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));\r\n}));\r\n\r\n(cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.count;\r\n}));\r\n\r\n(cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.first(self__.front);\r\n}));\r\n\r\n(cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(cljs.core.truth_(self__.front)){\r\nvar temp__5751__auto__ \x3d cljs.core.next(self__.front);\r\nif(temp__5751__auto__){\r\nvar f1 \x3d temp__5751__auto__;\r\nreturn (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));\r\n} else {\r\nreturn (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));\r\n}\r\n} else {\r\nreturn coll__$1;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.equiv_sequential(coll__$1,other);\r\n}));\r\n\r\n(cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core._with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);\r\n}));\r\n\r\n(cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.first(self__.front);\r\n}));\r\n\r\n(cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.rest(cljs.core.seq(coll__$1));\r\n}));\r\n\r\n(cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar rear__$1 \x3d cljs.core.seq(self__.rear);\r\nif(cljs.core.truth_((function (){var or__4253__auto__ \x3d self__.front;\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn rear__$1;\r\n}\r\n})())){\r\nreturn (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.PersistentQueue(new_meta,self__.count,self__.front,self__.rear,self__.__hash));\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(cljs.core.truth_(self__.front)){\r\nreturn (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__4253__auto__ \x3d self__.rear;\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n}\r\n})(),o),null));\r\n} else {\r\nreturn (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentQueue.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22count\x22,\x22count\x22,-514511684,null),new cljs.core.Symbol(null,\x22front\x22,\x22front\x22,117022539,null),new cljs.core.Symbol(null,\x22rear\x22,\x22rear\x22,-900164830,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.PersistentQueue.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.PersistentQueue.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentQueue\x22);\r\n\r\n(cljs.core.PersistentQueue.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/PersistentQueue\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/PersistentQueue.\r\n */\r\ncljs.core.__GT_PersistentQueue \x3d (function cljs$core$__GT_PersistentQueue(meta,count,front,rear,__hash){\r\nreturn (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));\r\n});\r\n\r\n(cljs.core.PersistentQueue.EMPTY \x3d (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash)));\r\n(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n*/\r\ncljs.core.NeverEquiv \x3d (function (){\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2097152;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.NeverEquiv.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (o,other){\r\nvar self__ \x3d this;\r\nvar o__$1 \x3d this;\r\nreturn false;\r\n}));\r\n\r\n(cljs.core.NeverEquiv.getBasis \x3d (function (){\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n}));\r\n\r\n(cljs.core.NeverEquiv.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.NeverEquiv.cljs$lang$ctorStr \x3d \x22cljs.core/NeverEquiv\x22);\r\n\r\n(cljs.core.NeverEquiv.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/NeverEquiv\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/NeverEquiv.\r\n */\r\ncljs.core.__GT_NeverEquiv \x3d (function cljs$core$__GT_NeverEquiv(){\r\nreturn (new cljs.core.NeverEquiv());\r\n});\r\n\r\ncljs.core.never_equiv \x3d (new cljs.core.NeverEquiv());\r\n/**\r\n * Test map equivalence. Returns true if x equals y, otherwise returns false.\r\n */\r\ncljs.core.equiv_map \x3d (function cljs$core$equiv_map(x,y){\r\nreturn cljs.core.boolean$(((((cljs.core.map_QMARK_(y)) \x26\x26 ((!(cljs.core.record_QMARK_(y))))))?(((cljs.core.count(x) \x3d\x3d\x3d cljs.core.count(y)))?(((((!((x \x3d\x3d null))))?(((((x.cljs$lang$protocol_mask$partition0$ \x26 (1048576))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IKVReduce$))))?true:(((!x.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce,x):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce,x)))?cljs.core.reduce_kv((function (_,k,v){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,k,cljs.core.never_equiv),v)){\r\nreturn true;\r\n} else {\r\nreturn cljs.core.reduced(false);\r\n}\r\n}),true,x):cljs.core.every_QMARK_((function (xkv){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));\r\n}),x)):null):null));\r\n});\r\ncljs.core.scan_array \x3d (function cljs$core$scan_array(incr,k,array){\r\nvar len \x3d array.length;\r\nvar i \x3d (0);\r\nwhile(true){\r\nif((i \x3c len)){\r\nif((k \x3d\x3d\x3d (array[i]))){\r\nreturn i;\r\n} else {\r\nvar G__19837 \x3d (i + incr);\r\ni \x3d G__19837;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.core.obj_map_compare_keys \x3d (function cljs$core$obj_map_compare_keys(a,b){\r\nvar a__$1 \x3d cljs.core.hash(a);\r\nvar b__$1 \x3d cljs.core.hash(b);\r\nif((a__$1 \x3c b__$1)){\r\nreturn (-1);\r\n} else {\r\nif((a__$1 \x3e b__$1)){\r\nreturn (1);\r\n} else {\r\nreturn (0);\r\n\r\n}\r\n}\r\n});\r\ncljs.core.obj_map__GT_hash_map \x3d (function cljs$core$obj_map__GT_hash_map(m,k,v){\r\nvar ks \x3d m.keys;\r\nvar len \x3d ks.length;\r\nvar so \x3d m.strobj;\r\nvar mm \x3d cljs.core.meta(m);\r\nvar i \x3d (0);\r\nvar out \x3d cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);\r\nwhile(true){\r\nif((i \x3c len)){\r\nvar k__$1 \x3d (ks[i]);\r\nvar G__19842 \x3d (i + (1));\r\nvar G__19843 \x3d cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,cljs.core.goog$module$goog$object.get(so,k__$1));\r\ni \x3d G__19842;\r\nout \x3d G__19843;\r\ncontinue;\r\n} else {\r\nreturn cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.core.obj_clone \x3d (function cljs$core$obj_clone(obj,ks){\r\nvar new_obj \x3d ({});\r\nvar l \x3d ks.length;\r\nvar i_19844 \x3d (0);\r\nwhile(true){\r\nif((i_19844 \x3c l)){\r\nvar k_19845 \x3d (ks[i_19844]);\r\ncljs.core.goog$module$goog$object.set(new_obj,k_19845,cljs.core.goog$module$goog$object.get(obj,k_19845));\r\n\r\nvar G__19851 \x3d (i_19844 + (1));\r\ni_19844 \x3d G__19851;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn new_obj;\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IFn}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IEditableCollection}\r\n * @implements {cljs.core.IFind}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ncljs.core.ObjMap \x3d (function (meta,keys,strobj,update_count,__hash){\r\nthis.meta \x3d meta;\r\nthis.keys \x3d keys;\r\nthis.strobj \x3d strobj;\r\nthis.update_count \x3d update_count;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 16123663;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 4;\r\n});\r\n(cljs.core.ObjMap.prototype.cljs$core$IFind$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.ObjMap.prototype.cljs$core$IFind$_find$arity$2 \x3d (function (coll,k){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(((typeof k \x3d\x3d\x3d \x27string\x27) \x26\x26 ((!((cljs.core.scan_array((1),k,self__.keys) \x3d\x3d null)))))){\r\nreturn (new cljs.core.MapEntry(k,(self__.strobj[k]),null));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.ObjMap.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.ObjMap.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (coll,k){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null);\r\n}));\r\n\r\n(cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (coll,k,not_found){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(((typeof k \x3d\x3d\x3d \x27string\x27) \x26\x26 ((!((cljs.core.scan_array((1),k,self__.keys) \x3d\x3d null)))))){\r\nreturn (self__.strobj[k]);\r\n} else {\r\nreturn not_found;\r\n}\r\n}));\r\n\r\n(cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (coll,f,init){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar len \x3d self__.keys.length;\r\nvar keys__$1 \x3d self__.keys.sort(cljs.core.obj_map_compare_keys);\r\nvar init__$1 \x3d init;\r\nwhile(true){\r\nif(cljs.core.seq(keys__$1)){\r\nvar k \x3d cljs.core.first(keys__$1);\r\nvar init__$2 \x3d (function (){var G__15832 \x3d init__$1;\r\nvar G__15833 \x3d k;\r\nvar G__15834 \x3d (self__.strobj[k]);\r\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15832,G__15833,G__15834) : f.call(null,G__15832,G__15833,G__15834));\r\n})();\r\nif(cljs.core.reduced_QMARK_(init__$2)){\r\nreturn cljs.core.deref(init__$2);\r\n} else {\r\nvar G__19873 \x3d cljs.core.rest(keys__$1);\r\nvar G__19874 \x3d init__$2;\r\nkeys__$1 \x3d G__19873;\r\ninit__$1 \x3d G__19874;\r\ncontinue;\r\n}\r\n} else {\r\nreturn init__$1;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.keys.length;\r\n}));\r\n\r\n(cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_unordered_coll(coll__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.equiv_map(coll__$1,other);\r\n}));\r\n\r\n(cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));\r\n}));\r\n\r\n(cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core._with_meta(cljs.core.ObjMap.EMPTY,self__.meta);\r\n}));\r\n\r\n(cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (coll,k){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(((typeof k \x3d\x3d\x3d \x27string\x27) \x26\x26 ((!((cljs.core.scan_array((1),k,self__.keys) \x3d\x3d null)))))){\r\nvar new_keys \x3d cljs.core.aclone(self__.keys);\r\nvar new_strobj \x3d cljs.core.obj_clone(self__.strobj,self__.keys);\r\nnew_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));\r\n\r\ndelete new_strobj[k];\r\n\r\nreturn (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));\r\n} else {\r\nreturn coll__$1;\r\n}\r\n}));\r\n\r\n(cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (coll,k,v){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(typeof k \x3d\x3d\x3d \x27string\x27){\r\nif((((self__.update_count \x3e cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length \x3e\x3d cljs.core.ObjMap.HASHMAP_THRESHOLD)))){\r\nreturn cljs.core.obj_map__GT_hash_map(coll__$1,k,v);\r\n} else {\r\nif((!((cljs.core.scan_array((1),k,self__.keys) \x3d\x3d null)))){\r\nvar new_strobj \x3d cljs.core.obj_clone(self__.strobj,self__.keys);\r\ncljs.core.goog$module$goog$object.set(new_strobj,k,v);\r\n\r\nreturn (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));\r\n} else {\r\nvar new_strobj \x3d cljs.core.obj_clone(self__.strobj,self__.keys);\r\nvar new_keys \x3d cljs.core.aclone(self__.keys);\r\ncljs.core.goog$module$goog$object.set(new_strobj,k,v);\r\n\r\nnew_keys.push(k);\r\n\r\nreturn (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.obj_map__GT_hash_map(coll__$1,k,v);\r\n}\r\n}));\r\n\r\n(cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (coll,k){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(((typeof k \x3d\x3d\x3d \x27string\x27) \x26\x26 ((!((cljs.core.scan_array((1),k,self__.keys) \x3d\x3d null)))))){\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n}));\r\n\r\n(cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.keys.length \x3e (0))){\r\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__15830_SHARP_){\r\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__15830_SHARP_,(self__.strobj[p1__15830_SHARP_])],null));\r\n}),self__.keys.sort(cljs.core.obj_map_compare_keys));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.ObjMap(new_meta,self__.keys,self__.strobj,self__.update_count,self__.__hash));\r\n}\r\n}));\r\n\r\n(cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,entry){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(entry)){\r\nreturn coll__$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry,(0)),cljs.core._nth(entry,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);\r\n}\r\n}));\r\n\r\n(cljs.core.ObjMap.prototype.call \x3d (function (unused__9633__auto__){\r\nvar self__ \x3d this;\r\nvar self__ \x3d this;\r\nvar G__15835 \x3d (arguments.length - (1));\r\nswitch (G__15835) {\r\ncase (1):\r\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\r\n\r\nbreak;\r\ncase (2):\r\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.ObjMap.prototype.apply \x3d (function (self__,args15831){\r\nvar self__ \x3d this;\r\nvar self____$1 \x3d this;\r\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15831)));\r\n}));\r\n\r\n(cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn coll.cljs$core$ILookup$_lookup$arity$2(null,k);\r\n}));\r\n\r\n(cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);\r\n}));\r\n\r\n(cljs.core.ObjMap.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22keys\x22,\x22keys\x22,-1586012071,null),new cljs.core.Symbol(null,\x22strobj\x22,\x22strobj\x22,1088091283,null),new cljs.core.Symbol(null,\x22update-count\x22,\x22update-count\x22,-411982269,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.ObjMap.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.ObjMap.cljs$lang$ctorStr \x3d \x22cljs.core/ObjMap\x22);\r\n\r\n(cljs.core.ObjMap.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/ObjMap\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/ObjMap.\r\n */\r\ncljs.core.__GT_ObjMap \x3d (function cljs$core$__GT_ObjMap(meta,keys,strobj,update_count,__hash){\r\nreturn (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));\r\n});\r\n\r\n(cljs.core.ObjMap.EMPTY \x3d (new cljs.core.ObjMap(null,[],({}),(0),cljs.core.empty_unordered_hash)));\r\n(cljs.core.ObjMap.HASHMAP_THRESHOLD \x3d (8));\r\n(cljs.core.ObjMap.fromObject \x3d (function (ks,obj){\r\nreturn (new cljs.core.ObjMap(null,ks,obj,(0),null));\r\n}));\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.RecordIter \x3d (function (i,record,base_count,fields,ext_map_iter){\r\nthis.i \x3d i;\r\nthis.record \x3d record;\r\nthis.base_count \x3d base_count;\r\nthis.fields \x3d fields;\r\nthis.ext_map_iter \x3d ext_map_iter;\r\n});\r\n(cljs.core.RecordIter.prototype.hasNext \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar or__4253__auto__ \x3d (self__.i \x3c self__.base_count);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn self__.ext_map_iter.hasNext();\r\n}\r\n}));\r\n\r\n(cljs.core.RecordIter.prototype.next \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nif((self__.i \x3c self__.base_count)){\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields,self__.i);\r\n(self__.i \x3d (self__.i + (1)));\r\n\r\nreturn (new cljs.core.MapEntry(k,cljs.core._lookup(self__.record,k),null));\r\n} else {\r\nreturn self__.ext_map_iter.next();\r\n}\r\n}));\r\n\r\n(cljs.core.RecordIter.prototype.remove \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (new Error(\x22Unsupported operation\x22));\r\n}));\r\n\r\n(cljs.core.RecordIter.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22record\x22,\x22record\x22,861424668,null),new cljs.core.Symbol(null,\x22base-count\x22,\x22base-count\x22,-1180647182,null),new cljs.core.Symbol(null,\x22fields\x22,\x22fields\x22,-291534703,null),new cljs.core.Symbol(null,\x22ext-map-iter\x22,\x22ext-map-iter\x22,-1215982757,null)], null);\r\n}));\r\n\r\n(cljs.core.RecordIter.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.RecordIter.cljs$lang$ctorStr \x3d \x22cljs.core/RecordIter\x22);\r\n\r\n(cljs.core.RecordIter.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/RecordIter\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/RecordIter.\r\n */\r\ncljs.core.__GT_RecordIter \x3d (function cljs$core$__GT_RecordIter(i,record,base_count,fields,ext_map_iter){\r\nreturn (new cljs.core.RecordIter(i,record,base_count,fields,ext_map_iter));\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.ES6EntriesIterator \x3d (function (s){\r\nthis.s \x3d s;\r\n});\r\n(cljs.core.ES6EntriesIterator.prototype.next \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nif((!((self__.s \x3d\x3d null)))){\r\nvar vec__15838 \x3d cljs.core.first(self__.s);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15838,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15838,(1),null);\r\n(self__.s \x3d cljs.core.next(self__.s));\r\n\r\nreturn ({\x22value\x22: [k,v], \x22done\x22: false});\r\n} else {\r\nreturn ({\x22value\x22: null, \x22done\x22: true});\r\n}\r\n}));\r\n\r\n(cljs.core.ES6EntriesIterator.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22s\x22,\x22s\x22,-948495851,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.ES6EntriesIterator.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.ES6EntriesIterator.cljs$lang$ctorStr \x3d \x22cljs.core/ES6EntriesIterator\x22);\r\n\r\n(cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/ES6EntriesIterator\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/ES6EntriesIterator.\r\n */\r\ncljs.core.__GT_ES6EntriesIterator \x3d (function cljs$core$__GT_ES6EntriesIterator(s){\r\nreturn (new cljs.core.ES6EntriesIterator(s));\r\n});\r\n\r\ncljs.core.es6_entries_iterator \x3d (function cljs$core$es6_entries_iterator(coll){\r\nreturn (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));\r\n});\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.ES6SetEntriesIterator \x3d (function (s){\r\nthis.s \x3d s;\r\n});\r\n(cljs.core.ES6SetEntriesIterator.prototype.next \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nif((!((self__.s \x3d\x3d null)))){\r\nvar x \x3d cljs.core.first(self__.s);\r\n(self__.s \x3d cljs.core.next(self__.s));\r\n\r\nreturn ({\x22value\x22: [x,x], \x22done\x22: false});\r\n} else {\r\nreturn ({\x22value\x22: null, \x22done\x22: true});\r\n}\r\n}));\r\n\r\n(cljs.core.ES6SetEntriesIterator.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22s\x22,\x22s\x22,-948495851,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.ES6SetEntriesIterator.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr \x3d \x22cljs.core/ES6SetEntriesIterator\x22);\r\n\r\n(cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/ES6SetEntriesIterator\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/ES6SetEntriesIterator.\r\n */\r\ncljs.core.__GT_ES6SetEntriesIterator \x3d (function cljs$core$__GT_ES6SetEntriesIterator(s){\r\nreturn (new cljs.core.ES6SetEntriesIterator(s));\r\n});\r\n\r\ncljs.core.es6_set_entries_iterator \x3d (function cljs$core$es6_set_entries_iterator(coll){\r\nreturn (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));\r\n});\r\ncljs.core.array_index_of_nil_QMARK_ \x3d (function cljs$core$array_index_of_nil_QMARK_(arr){\r\nvar len \x3d arr.length;\r\nvar i \x3d (0);\r\nwhile(true){\r\nif((len \x3c\x3d i)){\r\nreturn (-1);\r\n} else {\r\nif(((arr[i]) \x3d\x3d null)){\r\nreturn i;\r\n} else {\r\nvar G__19914 \x3d (i + (2));\r\ni \x3d G__19914;\r\ncontinue;\r\n\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.core.array_index_of_keyword_QMARK_ \x3d (function cljs$core$array_index_of_keyword_QMARK_(arr,k){\r\nvar len \x3d arr.length;\r\nvar kstr \x3d k.fqn;\r\nvar i \x3d (0);\r\nwhile(true){\r\nif((len \x3c\x3d i)){\r\nreturn (-1);\r\n} else {\r\nif(((((arr[i]) instanceof cljs.core.Keyword)) \x26\x26 ((kstr \x3d\x3d\x3d (arr[i]).fqn)))){\r\nreturn i;\r\n} else {\r\nvar G__19915 \x3d (i + (2));\r\ni \x3d G__19915;\r\ncontinue;\r\n\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.core.array_index_of_symbol_QMARK_ \x3d (function cljs$core$array_index_of_symbol_QMARK_(arr,k){\r\nvar len \x3d arr.length;\r\nvar kstr \x3d k.str;\r\nvar i \x3d (0);\r\nwhile(true){\r\nif((len \x3c\x3d i)){\r\nreturn (-1);\r\n} else {\r\nif(((((arr[i]) instanceof cljs.core.Symbol)) \x26\x26 ((kstr \x3d\x3d\x3d (arr[i]).str)))){\r\nreturn i;\r\n} else {\r\nvar G__19916 \x3d (i + (2));\r\ni \x3d G__19916;\r\ncontinue;\r\n\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.core.array_index_of_identical_QMARK_ \x3d (function cljs$core$array_index_of_identical_QMARK_(arr,k){\r\nvar len \x3d arr.length;\r\nvar i \x3d (0);\r\nwhile(true){\r\nif((len \x3c\x3d i)){\r\nreturn (-1);\r\n} else {\r\nif((k \x3d\x3d\x3d (arr[i]))){\r\nreturn i;\r\n} else {\r\nvar G__19917 \x3d (i + (2));\r\ni \x3d G__19917;\r\ncontinue;\r\n\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.core.array_index_of_equiv_QMARK_ \x3d (function cljs$core$array_index_of_equiv_QMARK_(arr,k){\r\nvar len \x3d arr.length;\r\nvar i \x3d (0);\r\nwhile(true){\r\nif((len \x3c\x3d i)){\r\nreturn (-1);\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){\r\nreturn i;\r\n} else {\r\nvar G__19918 \x3d (i + (2));\r\ni \x3d G__19918;\r\ncontinue;\r\n\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.core.array_index_of \x3d (function cljs$core$array_index_of(arr,k){\r\nif((k instanceof cljs.core.Keyword)){\r\nreturn cljs.core.array_index_of_keyword_QMARK_(arr,k);\r\n} else {\r\nif(((typeof k \x3d\x3d\x3d \x27string\x27) || (typeof k \x3d\x3d\x3d \x27number\x27))){\r\nreturn cljs.core.array_index_of_identical_QMARK_(arr,k);\r\n} else {\r\nif((k instanceof cljs.core.Symbol)){\r\nreturn cljs.core.array_index_of_symbol_QMARK_(arr,k);\r\n} else {\r\nif((k \x3d\x3d null)){\r\nreturn cljs.core.array_index_of_nil_QMARK_(arr);\r\n} else {\r\nreturn cljs.core.array_index_of_equiv_QMARK_(arr,k);\r\n\r\n}\r\n}\r\n}\r\n}\r\n});\r\ncljs.core.array_map_index_of \x3d (function cljs$core$array_map_index_of(m,k){\r\nreturn cljs.core.array_index_of(m.arr,k);\r\n});\r\ncljs.core.array_extend_kv \x3d (function cljs$core$array_extend_kv(arr,k,v){\r\nvar l \x3d arr.length;\r\nvar narr \x3d (new Array((l + (2))));\r\nvar i_19919 \x3d (0);\r\nwhile(true){\r\nif((i_19919 \x3c l)){\r\n(narr[i_19919] \x3d (arr[i_19919]));\r\n\r\nvar G__19920 \x3d (i_19919 + (1));\r\ni_19919 \x3d G__19920;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\n(narr[l] \x3d k);\r\n\r\n(narr[(l + (1))] \x3d v);\r\n\r\nreturn narr;\r\n});\r\ncljs.core.array_map_extend_kv \x3d (function cljs$core$array_map_extend_kv(m,k,v){\r\nreturn cljs.core.array_extend_kv(m.arr,k,v);\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IIndexed}\r\n * @implements {cljs.core.IVector}\r\n * @implements {cljs.core.IReversible}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IFn}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IFind}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.IStack}\r\n * @implements {cljs.core.IMapEntry}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.ILookup}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.MapEntry \x3d (function (key,val,__hash){\r\nthis.key \x3d key;\r\nthis.val \x3d val;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 166619935;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.MapEntry.prototype.cljs$core$IFind$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IFind$_find$arity$2 \x3d (function (node,k){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nvar G__15842 \x3d k;\r\nswitch (G__15842) {\r\ncase (0):\r\nreturn (new cljs.core.MapEntry((0),self__.key,null));\r\n\r\nbreak;\r\ncase (1):\r\nreturn (new cljs.core.MapEntry((1),self__.val,null));\r\n\r\nbreak;\r\ndefault:\r\nreturn null;\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.indexOf \x3d (function() {\r\nvar G__19922 \x3d null;\r\nvar G__19922__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__19922__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__19922 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__19922__1.call(this,x);\r\ncase 2:\r\nreturn G__19922__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__19922.cljs$core$IFn$_invoke$arity$1 \x3d G__19922__1;\r\nG__19922.cljs$core$IFn$_invoke$arity$2 \x3d G__19922__2;\r\nreturn G__19922;\r\n})()\r\n);\r\n\r\n(cljs.core.MapEntry.prototype.lastIndexOf \x3d (function() {\r\nvar G__19923 \x3d null;\r\nvar G__19923__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\r\n});\r\nvar G__19923__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__19923 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__19923__1.call(this,x);\r\ncase 2:\r\nreturn G__19923__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__19923.cljs$core$IFn$_invoke$arity$1 \x3d G__19923__1;\r\nG__19923.cljs$core$IFn$_invoke$arity$2 \x3d G__19923__2;\r\nreturn G__19923;\r\n})()\r\n);\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (node,k){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn node__$1.cljs$core$IIndexed$_nth$arity$3(null,k,null);\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (node,k,not_found){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn node__$1.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$2 \x3d (function (node,n){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nif((n \x3d\x3d\x3d (0))){\r\nreturn self__.key;\r\n} else {\r\nif((n \x3d\x3d\x3d (1))){\r\nreturn self__.val;\r\n} else {\r\nthrow (new Error(\x22Index out of bounds\x22));\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$3 \x3d (function (node,n,not_found){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nif((n \x3d\x3d\x3d (0))){\r\nreturn self__.key;\r\n} else {\r\nif((n \x3d\x3d\x3d (1))){\r\nreturn self__.val;\r\n} else {\r\nreturn not_found;\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IVector$_assoc_n$arity$3 \x3d (function (node,n,v){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn null;\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn (2);\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_key$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn self__.key;\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_val$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn self__.val;\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IStack$_peek$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn self__.val;\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IStack$_pop$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IReversible$_rseq$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn (new cljs.core.IndexedSeq([self__.val,self__.key],(0),null));\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.equiv_sequential(coll__$1,other);\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn null;\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (node,f){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (node,f,start){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (node,k,v){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (node,k){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn (((k \x3d\x3d\x3d (0))) || ((k \x3d\x3d\x3d (1))));\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn (new cljs.core.IndexedSeq([self__.key,self__.val],(0),null));\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (node,meta){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (node,o){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.call \x3d (function (unused__9633__auto__){\r\nvar self__ \x3d this;\r\nvar self__ \x3d this;\r\nvar G__15843 \x3d (arguments.length - (1));\r\nswitch (G__15843) {\r\ncase (1):\r\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\r\n\r\nbreak;\r\ncase (2):\r\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.apply \x3d (function (self__,args15841){\r\nvar self__ \x3d this;\r\nvar self____$1 \x3d this;\r\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15841)));\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn node.cljs$core$IIndexed$_nth$arity$2(null,k);\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn node.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);\r\n}));\r\n\r\n(cljs.core.MapEntry.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22key\x22,\x22key\x22,124488940,null),new cljs.core.Symbol(null,\x22val\x22,\x22val\x22,1769233139,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.MapEntry.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.MapEntry.cljs$lang$ctorStr \x3d \x22cljs.core/MapEntry\x22);\r\n\r\n(cljs.core.MapEntry.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/MapEntry\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/MapEntry.\r\n */\r\ncljs.core.__GT_MapEntry \x3d (function cljs$core$__GT_MapEntry(key,val,__hash){\r\nreturn (new cljs.core.MapEntry(key,val,__hash));\r\n});\r\n\r\n/**\r\n * Returns true if x satisfies IMapEntry\r\n */\r\ncljs.core.map_entry_QMARK_ \x3d (function cljs$core$map_entry_QMARK_(x){\r\nif((!((x \x3d\x3d null)))){\r\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (2048))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IMapEntry$)))){\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n} else {\r\nreturn false;\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.INext}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.PersistentArrayMapSeq \x3d (function (arr,i,_meta){\r\nthis.arr \x3d arr;\r\nthis.i \x3d i;\r\nthis._meta \x3d _meta;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32374990;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.PersistentArrayMapSeq.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMapSeq.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMapSeq.prototype.indexOf \x3d (function() {\r\nvar G__19935 \x3d null;\r\nvar G__19935__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__19935__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__19935 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__19935__1.call(this,x);\r\ncase 2:\r\nreturn G__19935__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__19935.cljs$core$IFn$_invoke$arity$1 \x3d G__19935__1;\r\nG__19935.cljs$core$IFn$_invoke$arity$2 \x3d G__19935__2;\r\nreturn G__19935;\r\n})()\r\n);\r\n\r\n(cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf \x3d (function() {\r\nvar G__19937 \x3d null;\r\nvar G__19937__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\r\n});\r\nvar G__19937__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__19937 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__19937__1.call(this,x);\r\ncase 2:\r\nreturn G__19937__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__19937.cljs$core$IFn$_invoke$arity$1 \x3d G__19937__1;\r\nG__19937.cljs$core$IFn$_invoke$arity$2 \x3d G__19937__2;\r\nreturn G__19937;\r\n})()\r\n);\r\n\r\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__._meta;\r\n}));\r\n\r\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.i \x3c (self__.arr.length - (2)))){\r\nreturn (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),null));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn ((self__.arr.length - self__.i) / (2));\r\n}));\r\n\r\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.hash_ordered_coll(coll__$1);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.equiv_sequential(coll__$1,other);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.List.EMPTY;\r\n}));\r\n\r\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (new cljs.core.MapEntry((self__.arr[self__.i]),(self__.arr[(self__.i + (1))]),null));\r\n}));\r\n\r\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.i \x3c (self__.arr.length - (2)))){\r\nreturn (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),null));\r\n} else {\r\nreturn cljs.core.List.EMPTY;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1;\r\n}));\r\n\r\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__._meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.cons(o,coll__$1);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMapSeq.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.Symbol(null,\x22_meta\x22,\x22_meta\x22,-1716892533,null)], null);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMapSeq.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentArrayMapSeq\x22);\r\n\r\n(cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/PersistentArrayMapSeq\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/PersistentArrayMapSeq.\r\n */\r\ncljs.core.__GT_PersistentArrayMapSeq \x3d (function cljs$core$__GT_PersistentArrayMapSeq(arr,i,_meta){\r\nreturn (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));\r\n});\r\n\r\n(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\ncljs.core.persistent_array_map_seq \x3d (function cljs$core$persistent_array_map_seq(arr,i,_meta){\r\nif((i \x3c\x3d (arr.length - (2)))){\r\nreturn (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.PersistentArrayMapIterator \x3d (function (arr,i,cnt){\r\nthis.arr \x3d arr;\r\nthis.i \x3d i;\r\nthis.cnt \x3d cnt;\r\n});\r\n(cljs.core.PersistentArrayMapIterator.prototype.hasNext \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.i \x3c self__.cnt);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMapIterator.prototype.next \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar ret \x3d (new cljs.core.MapEntry((self__.arr[self__.i]),(self__.arr[(self__.i + (1))]),null));\r\n(self__.i \x3d (self__.i + (2)));\r\n\r\nreturn ret;\r\n}));\r\n\r\n(cljs.core.PersistentArrayMapIterator.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22cnt\x22,\x22cnt\x22,1924510325,null)], null);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMapIterator.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentArrayMapIterator\x22);\r\n\r\n(cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/PersistentArrayMapIterator\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/PersistentArrayMapIterator.\r\n */\r\ncljs.core.__GT_PersistentArrayMapIterator \x3d (function cljs$core$__GT_PersistentArrayMapIterator(arr,i,cnt){\r\nreturn (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IFn}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IEditableCollection}\r\n * @implements {cljs.core.IFind}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.PersistentArrayMap \x3d (function (meta,cnt,arr,__hash){\r\nthis.meta \x3d meta;\r\nthis.cnt \x3d cnt;\r\nthis.arr \x3d arr;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 16647951;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139268;\r\n});\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$_find$arity$2 \x3d (function (coll,k){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar idx \x3d cljs.core.array_map_index_of(coll__$1,k);\r\nif((idx \x3d\x3d\x3d (-1))){\r\nreturn null;\r\n} else {\r\nreturn (new cljs.core.MapEntry((self__.arr[idx]),(self__.arr[(idx + (1))]),null));\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.keys \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.es6_iterator((cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null,coll)));\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.entries \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.es6_entries_iterator(cljs.core.seq(coll));\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.values \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.es6_iterator((cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null,coll)));\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.has \x3d (function (k){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.contains_QMARK_(coll,k);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.get \x3d (function (k,not_found){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.forEach \x3d (function (f){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nvar seq__15846 \x3d cljs.core.seq(coll);\r\nvar chunk__15847 \x3d null;\r\nvar count__15848 \x3d (0);\r\nvar i__15849 \x3d (0);\r\nwhile(true){\r\nif((i__15849 \x3c count__15848)){\r\nvar vec__15856 \x3d chunk__15847.cljs$core$IIndexed$_nth$arity$2(null,i__15849);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15856,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15856,(1),null);\r\n(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v,k) : f.call(null,v,k));\r\n\r\n\r\nvar G__19952 \x3d seq__15846;\r\nvar G__19953 \x3d chunk__15847;\r\nvar G__19954 \x3d count__15848;\r\nvar G__19955 \x3d (i__15849 + (1));\r\nseq__15846 \x3d G__19952;\r\nchunk__15847 \x3d G__19953;\r\ncount__15848 \x3d G__19954;\r\ni__15849 \x3d G__19955;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto__ \x3d cljs.core.seq(seq__15846);\r\nif(temp__5753__auto__){\r\nvar seq__15846__$1 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__15846__$1)){\r\nvar c__4679__auto__ \x3d cljs.core.chunk_first(seq__15846__$1);\r\nvar G__19956 \x3d cljs.core.chunk_rest(seq__15846__$1);\r\nvar G__19957 \x3d c__4679__auto__;\r\nvar G__19958 \x3d cljs.core.count(c__4679__auto__);\r\nvar G__19959 \x3d (0);\r\nseq__15846 \x3d G__19956;\r\nchunk__15847 \x3d G__19957;\r\ncount__15848 \x3d G__19958;\r\ni__15849 \x3d G__19959;\r\ncontinue;\r\n} else {\r\nvar vec__15859 \x3d cljs.core.first(seq__15846__$1);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15859,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15859,(1),null);\r\n(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v,k) : f.call(null,v,k));\r\n\r\n\r\nvar G__19960 \x3d cljs.core.next(seq__15846__$1);\r\nvar G__19961 \x3d null;\r\nvar G__19962 \x3d (0);\r\nvar G__19963 \x3d (0);\r\nseq__15846 \x3d G__19960;\r\nchunk__15847 \x3d G__19961;\r\ncount__15848 \x3d G__19962;\r\ni__15849 \x3d G__19963;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (coll,k){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (coll,k,not_found){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar idx \x3d cljs.core.array_map_index_of(coll__$1,k);\r\nif((idx \x3d\x3d\x3d (-1))){\r\nreturn not_found;\r\n} else {\r\nreturn (self__.arr[(idx + (1))]);\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (coll,f,init){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar len \x3d self__.arr.length;\r\nvar i \x3d (0);\r\nvar init__$1 \x3d init;\r\nwhile(true){\r\nif((i \x3c len)){\r\nvar init__$2 \x3d (function (){var G__15862 \x3d init__$1;\r\nvar G__15863 \x3d (self__.arr[i]);\r\nvar G__15864 \x3d (self__.arr[(i + (1))]);\r\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15862,G__15863,G__15864) : f.call(null,G__15862,G__15863,G__15864));\r\n})();\r\nif(cljs.core.reduced_QMARK_(init__$2)){\r\nreturn cljs.core.deref(init__$2);\r\n} else {\r\nvar G__19966 \x3d (i + (2));\r\nvar G__19967 \x3d init__$2;\r\ni \x3d G__19966;\r\ninit__$1 \x3d G__19967;\r\ncontinue;\r\n}\r\n} else {\r\nreturn init__$1;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (this$){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nreturn (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.cnt;\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_unordered_coll(coll__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(((cljs.core.map_QMARK_(other)) \x26\x26 ((!(cljs.core.record_QMARK_(other)))))){\r\nvar alen \x3d self__.arr.length;\r\nvar other__$1 \x3d other;\r\nif((self__.cnt \x3d\x3d\x3d other__$1.cljs$core$ICounted$_count$arity$1(null))){\r\nvar i \x3d (0);\r\nwhile(true){\r\nif((i \x3c alen)){\r\nvar v \x3d other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);\r\nif((!((v \x3d\x3d\x3d cljs.core.lookup_sentinel)))){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){\r\nvar G__19969 \x3d (i + (2));\r\ni \x3d G__19969;\r\ncontinue;\r\n} else {\r\nreturn false;\r\n}\r\n} else {\r\nreturn false;\r\n}\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn false;\r\n}\r\n} else {\r\nreturn false;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (new cljs.core.TransientArrayMap(({}),self__.arr.length,cljs.core.aclone(self__.arr)));\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (coll,k){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar idx \x3d cljs.core.array_map_index_of(coll__$1,k);\r\nif((idx \x3e\x3d (0))){\r\nvar len \x3d self__.arr.length;\r\nvar new_len \x3d (len - (2));\r\nif((new_len \x3d\x3d\x3d (0))){\r\nreturn coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);\r\n} else {\r\nvar new_arr \x3d (new Array(new_len));\r\nvar s \x3d (0);\r\nvar d \x3d (0);\r\nwhile(true){\r\nif((s \x3e\x3d len)){\r\nreturn (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){\r\nvar G__19970 \x3d (s + (2));\r\nvar G__19971 \x3d d;\r\ns \x3d G__19970;\r\nd \x3d G__19971;\r\ncontinue;\r\n} else {\r\n(new_arr[d] \x3d (self__.arr[s]));\r\n\r\n(new_arr[(d + (1))] \x3d (self__.arr[(s + (1))]));\r\n\r\nvar G__19972 \x3d (s + (2));\r\nvar G__19973 \x3d (d + (2));\r\ns \x3d G__19972;\r\nd \x3d G__19973;\r\ncontinue;\r\n\r\n}\r\n}\r\nbreak;\r\n}\r\n}\r\n} else {\r\nreturn coll__$1;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (coll,k,v){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar idx \x3d cljs.core.array_map_index_of(coll__$1,k);\r\nif((idx \x3d\x3d\x3d (-1))){\r\nif((self__.cnt \x3c cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){\r\nvar arr__$1 \x3d cljs.core.array_map_extend_kv(coll__$1,k,v);\r\nreturn (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));\r\n} else {\r\nreturn cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);\r\n}\r\n} else {\r\nif((v \x3d\x3d\x3d (self__.arr[(idx + (1))]))){\r\nreturn coll__$1;\r\n} else {\r\nvar arr__$1 \x3d (function (){var G__15867 \x3d cljs.core.aclone(self__.arr);\r\n(G__15867[(idx + (1))] \x3d v);\r\n\r\nreturn G__15867;\r\n})();\r\nreturn (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (coll,k){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (!((cljs.core.array_map_index_of(coll__$1,k) \x3d\x3d\x3d (-1))));\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.persistent_array_map_seq(self__.arr,(0),null);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.PersistentArrayMap(new_meta,self__.cnt,self__.arr,self__.__hash));\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,entry){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(entry)){\r\nreturn coll__$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry,(0)),cljs.core._nth(entry,(1)));\r\n} else {\r\nvar ret \x3d coll__$1;\r\nvar es \x3d cljs.core.seq(entry);\r\nwhile(true){\r\nif((es \x3d\x3d null)){\r\nreturn ret;\r\n} else {\r\nvar e \x3d cljs.core.first(es);\r\nif(cljs.core.vector_QMARK_(e)){\r\nvar G__19977 \x3d cljs.core._assoc(ret,cljs.core._nth(e,(0)),cljs.core._nth(e,(1)));\r\nvar G__19978 \x3d cljs.core.next(es);\r\nret \x3d G__19977;\r\nes \x3d G__19978;\r\ncontinue;\r\n} else {\r\nthrow (new Error(\x22conj on a map takes map entries or seqables of map entries\x22));\r\n}\r\n}\r\nbreak;\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.call \x3d (function (unused__9633__auto__){\r\nvar self__ \x3d this;\r\nvar self__ \x3d this;\r\nvar G__15868 \x3d (arguments.length - (1));\r\nswitch (G__15868) {\r\ncase (1):\r\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\r\n\r\nbreak;\r\ncase (2):\r\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.apply \x3d (function (self__,args15845){\r\nvar self__ \x3d this;\r\nvar self____$1 \x3d this;\r\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15845)));\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn coll.cljs$core$ILookup$_lookup$arity$2(null,k);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22cnt\x22,\x22cnt\x22,1924510325,null),new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.PersistentArrayMap.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentArrayMap\x22);\r\n\r\n(cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/PersistentArrayMap\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/PersistentArrayMap.\r\n */\r\ncljs.core.__GT_PersistentArrayMap \x3d (function cljs$core$__GT_PersistentArrayMap(meta,cnt,arr,__hash){\r\nreturn (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));\r\n});\r\n\r\n(cljs.core.PersistentArrayMap.EMPTY \x3d (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash)));\r\n(cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD \x3d (8));\r\n(cljs.core.PersistentArrayMap.fromArray \x3d (function (arr,no_clone,no_check){\r\nvar arr__$1 \x3d ((no_clone)?arr:cljs.core.aclone(arr));\r\nvar arr__$2 \x3d ((no_check)?arr__$1:(function (){var ret \x3d [];\r\nvar i_19982 \x3d (0);\r\nwhile(true){\r\nif((i_19982 \x3c arr__$1.length)){\r\nvar k_19983 \x3d (arr__$1[i_19982]);\r\nvar v_19984 \x3d (arr__$1[(i_19982 + (1))]);\r\nvar idx_19985 \x3d cljs.core.array_index_of(ret,k_19983);\r\nif((idx_19985 \x3d\x3d\x3d (-1))){\r\nret.push(k_19983);\r\n\r\nret.push(v_19984);\r\n} else {\r\n}\r\n\r\nvar G__19989 \x3d (i_19982 + (2));\r\ni_19982 \x3d G__19989;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn ret;\r\n})());\r\nvar cnt \x3d (arr__$2.length / (2));\r\nreturn (new cljs.core.PersistentArrayMap(null,cnt,arr__$2,null));\r\n}));\r\n(cljs.core.PersistentArrayMap.createWithCheck \x3d (function (arr){\r\nvar ret \x3d [];\r\nvar i_19990 \x3d (0);\r\nwhile(true){\r\nif((i_19990 \x3c arr.length)){\r\nvar k_19991 \x3d (arr[i_19990]);\r\nvar v_19992 \x3d (arr[(i_19990 + (1))]);\r\nvar idx_19993 \x3d cljs.core.array_index_of(ret,k_19991);\r\nif((idx_19993 \x3d\x3d\x3d (-1))){\r\nvar G__15869_19997 \x3d ret;\r\nG__15869_19997.push(k_19991);\r\n\r\nG__15869_19997.push(v_19992);\r\n\r\n} else {\r\nthrow (new Error([\x22Duplicate key: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(k_19991)].join(\x27\x27)));\r\n}\r\n\r\nvar G__19998 \x3d (i_19990 + (2));\r\ni_19990 \x3d G__19998;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar cnt \x3d (arr.length / (2));\r\nreturn (new cljs.core.PersistentArrayMap(null,cnt,arr,null));\r\n}));\r\n(cljs.core.PersistentArrayMap.createAsIfByAssoc \x3d (function (arr){\r\nvar ret \x3d [];\r\nvar i_19999 \x3d (0);\r\nwhile(true){\r\nif((i_19999 \x3c arr.length)){\r\nvar k_20000 \x3d (arr[i_19999]);\r\nvar v_20001 \x3d (arr[(i_19999 + (1))]);\r\nvar idx_20002 \x3d cljs.core.array_index_of(ret,k_20000);\r\nif((idx_20002 \x3d\x3d\x3d (-1))){\r\nvar G__15870_20003 \x3d ret;\r\nG__15870_20003.push(k_20000);\r\n\r\nG__15870_20003.push(v_20001);\r\n\r\n} else {\r\n(ret[(idx_20002 + (1))] \x3d v_20001);\r\n}\r\n\r\nvar G__20008 \x3d (i_19999 + (2));\r\ni_19999 \x3d G__20008;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn (new cljs.core.PersistentArrayMap(null,(ret.length / (2)),ret,null));\r\n}));\r\n(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IFn}\r\n * @implements {cljs.core.ITransientMap}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ITransientCollection}\r\n * @implements {cljs.core.ITransientAssociative}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ncljs.core.TransientArrayMap \x3d (function (editable_QMARK_,len,arr){\r\nthis.editable_QMARK_ \x3d editable_QMARK_;\r\nthis.len \x3d len;\r\nthis.arr \x3d arr;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 259;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 56;\r\n});\r\n(cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (tcoll){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\nif(self__.editable_QMARK_){\r\nreturn cljs.core.quot(self__.len,(2));\r\n} else {\r\nthrow (new Error(\x22count after persistent!\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (tcoll,k){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\nreturn tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null);\r\n}));\r\n\r\n(cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (tcoll,k,not_found){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\nif(self__.editable_QMARK_){\r\nvar idx \x3d cljs.core.array_map_index_of(tcoll__$1,k);\r\nif((idx \x3d\x3d\x3d (-1))){\r\nreturn not_found;\r\n} else {\r\nreturn (self__.arr[(idx + (1))]);\r\n}\r\n} else {\r\nthrow (new Error(\x22lookup after persistent!\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 \x3d (function (tcoll,o){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\nif(self__.editable_QMARK_){\r\nif(cljs.core.map_entry_QMARK_(o)){\r\nreturn tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null,o)),(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null,o)));\r\n} else {\r\nif(cljs.core.vector_QMARK_(o)){\r\nreturn tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1((0)) : o.call(null,(0))),(o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1((1)) : o.call(null,(1))));\r\n} else {\r\nvar es \x3d cljs.core.seq(o);\r\nvar tcoll__$2 \x3d tcoll__$1;\r\nwhile(true){\r\nvar temp__5751__auto__ \x3d cljs.core.first(es);\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar e \x3d temp__5751__auto__;\r\nvar G__20009 \x3d cljs.core.next(es);\r\nvar G__20010 \x3d cljs.core._assoc_BANG_(tcoll__$2,(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null,e)),(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null,e)));\r\nes \x3d G__20009;\r\ntcoll__$2 \x3d G__20010;\r\ncontinue;\r\n} else {\r\nreturn tcoll__$2;\r\n}\r\nbreak;\r\n}\r\n\r\n}\r\n}\r\n} else {\r\nthrow (new Error(\x22conj! after persistent!\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 \x3d (function (tcoll){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\nif(self__.editable_QMARK_){\r\n(self__.editable_QMARK_ \x3d false);\r\n\r\nreturn (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));\r\n} else {\r\nthrow (new Error(\x22persistent! called twice\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 \x3d (function (tcoll,key,val){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\nif(self__.editable_QMARK_){\r\nvar idx \x3d cljs.core.array_map_index_of(tcoll__$1,key);\r\nif((idx \x3d\x3d\x3d (-1))){\r\nif(((self__.len + (2)) \x3c\x3d ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){\r\n(self__.len \x3d (self__.len + (2)));\r\n\r\nself__.arr.push(key);\r\n\r\nself__.arr.push(val);\r\n\r\nreturn tcoll__$1;\r\n} else {\r\nreturn cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len,self__.arr) : cljs.core.array__GT_transient_hash_map.call(null,self__.len,self__.arr)),key,val);\r\n}\r\n} else {\r\nif((val \x3d\x3d\x3d (self__.arr[(idx + (1))]))){\r\nreturn tcoll__$1;\r\n} else {\r\n(self__.arr[(idx + (1))] \x3d val);\r\n\r\nreturn tcoll__$1;\r\n}\r\n}\r\n} else {\r\nthrow (new Error(\x22assoc! after persistent!\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 \x3d (function (tcoll,key){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\nif(self__.editable_QMARK_){\r\nvar idx \x3d cljs.core.array_map_index_of(tcoll__$1,key);\r\nif((idx \x3e\x3d (0))){\r\n(self__.arr[idx] \x3d (self__.arr[(self__.len - (2))]));\r\n\r\n(self__.arr[(idx + (1))] \x3d (self__.arr[(self__.len - (1))]));\r\n\r\nvar G__15872_20028 \x3d self__.arr;\r\nG__15872_20028.pop();\r\n\r\nG__15872_20028.pop();\r\n\r\n\r\n(self__.len \x3d (self__.len - (2)));\r\n} else {\r\n}\r\n\r\nreturn tcoll__$1;\r\n} else {\r\nthrow (new Error(\x22dissoc! after persistent!\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.TransientArrayMap.prototype.call \x3d (function (unused__9633__auto__){\r\nvar self__ \x3d this;\r\nvar self__ \x3d this;\r\nvar G__15873 \x3d (arguments.length - (1));\r\nswitch (G__15873) {\r\ncase (1):\r\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\r\n\r\nbreak;\r\ncase (2):\r\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.TransientArrayMap.prototype.apply \x3d (function (self__,args15871){\r\nvar self__ \x3d this;\r\nvar self____$1 \x3d this;\r\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15871)));\r\n}));\r\n\r\n(cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (key){\r\nvar self__ \x3d this;\r\nvar tcoll \x3d this;\r\nreturn tcoll.cljs$core$ILookup$_lookup$arity$3(null,key,null);\r\n}));\r\n\r\n(cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (key,not_found){\r\nvar self__ \x3d this;\r\nvar tcoll \x3d this;\r\nreturn tcoll.cljs$core$ILookup$_lookup$arity$3(null,key,not_found);\r\n}));\r\n\r\n(cljs.core.TransientArrayMap.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22editable?\x22,\x22editable?\x22,-164945806,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22boolean\x22,\x22boolean\x22,-278886877,null),new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22len\x22,\x22len\x22,-1230778691,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null)], null);\r\n}));\r\n\r\n(cljs.core.TransientArrayMap.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.TransientArrayMap.cljs$lang$ctorStr \x3d \x22cljs.core/TransientArrayMap\x22);\r\n\r\n(cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/TransientArrayMap\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/TransientArrayMap.\r\n */\r\ncljs.core.__GT_TransientArrayMap \x3d (function cljs$core$__GT_TransientArrayMap(editable_QMARK_,len,arr){\r\nreturn (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));\r\n});\r\n\r\ncljs.core.array__GT_transient_hash_map \x3d (function cljs$core$array__GT_transient_hash_map(len,arr){\r\nvar out \x3d cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);\r\nvar i \x3d (0);\r\nwhile(true){\r\nif((i \x3c len)){\r\nvar G__20055 \x3d cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));\r\nvar G__20056 \x3d (i + (2));\r\nout \x3d G__20055;\r\ni \x3d G__20056;\r\ncontinue;\r\n} else {\r\nreturn out;\r\n}\r\nbreak;\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.Box \x3d (function (val){\r\nthis.val \x3d val;\r\n});\r\n\r\n(cljs.core.Box.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22val\x22,\x22val\x22,1769233139,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.Box.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.Box.cljs$lang$ctorStr \x3d \x22cljs.core/Box\x22);\r\n\r\n(cljs.core.Box.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/Box\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/Box.\r\n */\r\ncljs.core.__GT_Box \x3d (function cljs$core$__GT_Box(val){\r\nreturn (new cljs.core.Box(val));\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\ncljs.core.key_test \x3d (function cljs$core$key_test(key,other){\r\nif((key \x3d\x3d\x3d other)){\r\nreturn true;\r\n} else {\r\nif(cljs.core.keyword_identical_QMARK_(key,other)){\r\nreturn true;\r\n} else {\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);\r\n\r\n}\r\n}\r\n});\r\ncljs.core.mask \x3d (function cljs$core$mask(hash,shift){\r\nreturn ((hash \x3e\x3e\x3e shift) \x26 (31));\r\n});\r\ncljs.core.clone_and_set \x3d (function cljs$core$clone_and_set(var_args){\r\nvar G__15875 \x3d arguments.length;\r\nswitch (G__15875) {\r\ncase 3:\r\nreturn cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 5:\r\nreturn cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 \x3d (function (arr,i,a){\r\nvar G__15876 \x3d cljs.core.aclone(arr);\r\n(G__15876[i] \x3d a);\r\n\r\nreturn G__15876;\r\n}));\r\n\r\n(cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 \x3d (function (arr,i,a,j,b){\r\nvar G__15877 \x3d cljs.core.aclone(arr);\r\n(G__15877[i] \x3d a);\r\n\r\n(G__15877[j] \x3d b);\r\n\r\nreturn G__15877;\r\n}));\r\n\r\n(cljs.core.clone_and_set.cljs$lang$maxFixedArity \x3d 5);\r\n\r\ncljs.core.remove_pair \x3d (function cljs$core$remove_pair(arr,i){\r\nvar new_arr \x3d (new Array((arr.length - (2))));\r\ncljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));\r\n\r\ncljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));\r\n\r\nreturn new_arr;\r\n});\r\ncljs.core.bitmap_indexed_node_index \x3d (function cljs$core$bitmap_indexed_node_index(bitmap,bit){\r\nreturn cljs.core.bit_count((bitmap \x26 (bit - (1))));\r\n});\r\ncljs.core.bitpos \x3d (function cljs$core$bitpos(hash,shift){\r\nreturn ((1) \x3c\x3c ((hash \x3e\x3e\x3e shift) \x26 0x01f));\r\n});\r\ncljs.core.edit_and_set \x3d (function cljs$core$edit_and_set(var_args){\r\nvar G__15879 \x3d arguments.length;\r\nswitch (G__15879) {\r\ncase 4:\r\nreturn cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ncase 6:\r\nreturn cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 \x3d (function (inode,edit,i,a){\r\nvar editable \x3d inode.ensure_editable(edit);\r\n(editable.arr[i] \x3d a);\r\n\r\nreturn editable;\r\n}));\r\n\r\n(cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 \x3d (function (inode,edit,i,a,j,b){\r\nvar editable \x3d inode.ensure_editable(edit);\r\n(editable.arr[i] \x3d a);\r\n\r\n(editable.arr[j] \x3d b);\r\n\r\nreturn editable;\r\n}));\r\n\r\n(cljs.core.edit_and_set.cljs$lang$maxFixedArity \x3d 6);\r\n\r\ncljs.core.inode_kv_reduce \x3d (function cljs$core$inode_kv_reduce(arr,f,init){\r\nvar len \x3d arr.length;\r\nvar i \x3d (0);\r\nvar init__$1 \x3d init;\r\nwhile(true){\r\nif((i \x3c len)){\r\nvar init__$2 \x3d (function (){var k \x3d (arr[i]);\r\nif((!((k \x3d\x3d null)))){\r\nvar G__15880 \x3d init__$1;\r\nvar G__15881 \x3d k;\r\nvar G__15882 \x3d (arr[(i + (1))]);\r\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15880,G__15881,G__15882) : f.call(null,G__15880,G__15881,G__15882));\r\n} else {\r\nvar node \x3d (arr[(i + (1))]);\r\nif((!((node \x3d\x3d null)))){\r\nreturn node.kv_reduce(f,init__$1);\r\n} else {\r\nreturn init__$1;\r\n}\r\n}\r\n})();\r\nif(cljs.core.reduced_QMARK_(init__$2)){\r\nreturn init__$2;\r\n} else {\r\nvar G__20071 \x3d (i + (2));\r\nvar G__20072 \x3d init__$2;\r\ni \x3d G__20071;\r\ninit__$1 \x3d G__20072;\r\ncontinue;\r\n}\r\n} else {\r\nreturn init__$1;\r\n}\r\nbreak;\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.NodeIterator \x3d (function (arr,i,next_entry,next_iter){\r\nthis.arr \x3d arr;\r\nthis.i \x3d i;\r\nthis.next_entry \x3d next_entry;\r\nthis.next_iter \x3d next_iter;\r\n});\r\n(cljs.core.NodeIterator.prototype.advance \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nvar len \x3d self__.arr.length;\r\nwhile(true){\r\nif((self__.i \x3c len)){\r\nvar key \x3d (self__.arr[self__.i]);\r\nvar node_or_val \x3d (self__.arr[(self__.i + (1))]);\r\nvar found \x3d (((!((key \x3d\x3d null))))?(self__.next_entry \x3d (new cljs.core.MapEntry(key,node_or_val,null))):(((!((node_or_val \x3d\x3d null))))?(function (){var new_iter \x3d cljs.core._iterator(node_or_val);\r\nif(new_iter.hasNext()){\r\nreturn (self__.next_iter \x3d new_iter);\r\n} else {\r\nreturn false;\r\n}\r\n})():false\r\n));\r\n(self__.i \x3d (self__.i + (2)));\r\n\r\nif(found){\r\nreturn true;\r\n} else {\r\ncontinue;\r\n}\r\n} else {\r\nreturn false;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.NodeIterator.prototype.hasNext \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nvar or__4253__auto__ \x3d (!((self__.next_entry \x3d\x3d null)));\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar or__4253__auto____$1 \x3d (!((self__.next_iter \x3d\x3d null)));\r\nif(or__4253__auto____$1){\r\nreturn or__4253__auto____$1;\r\n} else {\r\nreturn this$.advance();\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.NodeIterator.prototype.next \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nif((!((self__.next_entry \x3d\x3d null)))){\r\nvar ret \x3d self__.next_entry;\r\n(self__.next_entry \x3d null);\r\n\r\nreturn ret;\r\n} else {\r\nif((!((self__.next_iter \x3d\x3d null)))){\r\nvar ret \x3d self__.next_iter.next();\r\nif(self__.next_iter.hasNext()){\r\n} else {\r\n(self__.next_iter \x3d null);\r\n}\r\n\r\nreturn ret;\r\n} else {\r\nif(this$.advance()){\r\nreturn this$.next();\r\n} else {\r\nthrow (new Error(\x22No such element\x22));\r\n\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.NodeIterator.prototype.remove \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (new Error(\x22Unsupported operation\x22));\r\n}));\r\n\r\n(cljs.core.NodeIterator.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22next-entry\x22,\x22next-entry\x22,1091342476,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22next-iter\x22,\x22next-iter\x22,1526626239,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.NodeIterator.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.NodeIterator.cljs$lang$ctorStr \x3d \x22cljs.core/NodeIterator\x22);\r\n\r\n(cljs.core.NodeIterator.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/NodeIterator\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/NodeIterator.\r\n */\r\ncljs.core.__GT_NodeIterator \x3d (function cljs$core$__GT_NodeIterator(arr,i,next_entry,next_iter){\r\nreturn (new cljs.core.NodeIterator(arr,i,next_entry,next_iter));\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IIterable}\r\n*/\r\ncljs.core.BitmapIndexedNode \x3d (function (edit,bitmap,arr){\r\nthis.edit \x3d edit;\r\nthis.bitmap \x3d bitmap;\r\nthis.arr \x3d arr;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 131072;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 0;\r\n});\r\n(cljs.core.BitmapIndexedNode.prototype.ensure_editable \x3d (function (e){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nif((e \x3d\x3d\x3d self__.edit)){\r\nreturn inode;\r\n} else {\r\nvar n \x3d cljs.core.bit_count(self__.bitmap);\r\nvar new_arr \x3d (new Array((((n \x3c (0)))?(4):((2) * (n + (1))))));\r\ncljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));\r\n\r\nreturn (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));\r\n}\r\n}));\r\n\r\n(cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ \x3d (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nvar bit \x3d (1 \x3c\x3c ((hash \x3e\x3e\x3e shift) \x26 0x01f));\r\nif(((self__.bitmap \x26 bit) \x3d\x3d\x3d (0))){\r\nreturn inode;\r\n} else {\r\nvar idx \x3d cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);\r\nvar key_or_nil \x3d (self__.arr[((2) * idx)]);\r\nvar val_or_node \x3d (self__.arr[(((2) * idx) + (1))]);\r\nif((key_or_nil \x3d\x3d null)){\r\nvar n \x3d val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);\r\nif((n \x3d\x3d\x3d val_or_node)){\r\nreturn inode;\r\n} else {\r\nif((!((n \x3d\x3d null)))){\r\nreturn cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);\r\n} else {\r\nif((self__.bitmap \x3d\x3d\x3d bit)){\r\nreturn null;\r\n} else {\r\nreturn inode.edit_and_remove_pair(edit__$1,bit,idx);\r\n\r\n}\r\n}\r\n}\r\n} else {\r\nif(cljs.core.key_test(key,key_or_nil)){\r\n(removed_leaf_QMARK_.val \x3d true);\r\n\r\nreturn inode.edit_and_remove_pair(edit__$1,bit,idx);\r\n} else {\r\nreturn inode;\r\n\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair \x3d (function (e,bit,i){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nif((self__.bitmap \x3d\x3d\x3d bit)){\r\nreturn null;\r\n} else {\r\nvar editable \x3d inode.ensure_editable(e);\r\nvar earr \x3d editable.arr;\r\nvar len \x3d earr.length;\r\n(editable.bitmap \x3d (bit ^ editable.bitmap));\r\n\r\ncljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));\r\n\r\n(earr[(len - (2))] \x3d null);\r\n\r\n(earr[(len - (1))] \x3d null);\r\n\r\nreturn editable;\r\n}\r\n}));\r\n\r\n(cljs.core.BitmapIndexedNode.prototype.inode_seq \x3d (function (){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nreturn (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null,self__.arr));\r\n}));\r\n\r\n(cljs.core.BitmapIndexedNode.prototype.kv_reduce \x3d (function (f,init){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nreturn cljs.core.inode_kv_reduce(self__.arr,f,init);\r\n}));\r\n\r\n(cljs.core.BitmapIndexedNode.prototype.inode_lookup \x3d (function (shift,hash,key,not_found){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nvar bit \x3d (1 \x3c\x3c ((hash \x3e\x3e\x3e shift) \x26 0x01f));\r\nif(((self__.bitmap \x26 bit) \x3d\x3d\x3d (0))){\r\nreturn not_found;\r\n} else {\r\nvar idx \x3d cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);\r\nvar key_or_nil \x3d (self__.arr[((2) * idx)]);\r\nvar val_or_node \x3d (self__.arr[(((2) * idx) + (1))]);\r\nif((key_or_nil \x3d\x3d null)){\r\nreturn val_or_node.inode_lookup((shift + (5)),hash,key,not_found);\r\n} else {\r\nif(cljs.core.key_test(key,key_or_nil)){\r\nreturn val_or_node;\r\n} else {\r\nreturn not_found;\r\n\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ \x3d (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nvar bit \x3d (1 \x3c\x3c ((hash \x3e\x3e\x3e shift) \x26 0x01f));\r\nvar idx \x3d cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);\r\nif(((self__.bitmap \x26 bit) \x3d\x3d\x3d (0))){\r\nvar n \x3d cljs.core.bit_count(self__.bitmap);\r\nif((((2) * n) \x3c self__.arr.length)){\r\nvar editable \x3d inode.ensure_editable(edit__$1);\r\nvar earr \x3d editable.arr;\r\n(added_leaf_QMARK_.val \x3d true);\r\n\r\ncljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));\r\n\r\n(earr[((2) * idx)] \x3d key);\r\n\r\n(earr[(((2) * idx) + (1))] \x3d val);\r\n\r\n(editable.bitmap \x3d (editable.bitmap | bit));\r\n\r\nreturn editable;\r\n} else {\r\nif((n \x3e\x3d (16))){\r\nvar nodes \x3d [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\r\nvar jdx \x3d ((hash \x3e\x3e\x3e shift) \x26 0x01f);\r\n(nodes[jdx] \x3d cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));\r\n\r\nvar i_20083 \x3d (0);\r\nvar j_20084 \x3d (0);\r\nwhile(true){\r\nif((i_20083 \x3c (32))){\r\nif((((self__.bitmap \x3e\x3e\x3e i_20083) \x26 (1)) \x3d\x3d\x3d (0))){\r\nvar G__20085 \x3d (i_20083 + (1));\r\nvar G__20086 \x3d j_20084;\r\ni_20083 \x3d G__20085;\r\nj_20084 \x3d G__20086;\r\ncontinue;\r\n} else {\r\n(nodes[i_20083] \x3d (((!(((self__.arr[j_20084]) \x3d\x3d null))))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_20084])),(self__.arr[j_20084]),(self__.arr[(j_20084 + (1))]),added_leaf_QMARK_):(self__.arr[(j_20084 + (1))])));\r\n\r\nvar G__20087 \x3d (i_20083 + (1));\r\nvar G__20088 \x3d (j_20084 + (2));\r\ni_20083 \x3d G__20087;\r\nj_20084 \x3d G__20088;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));\r\n} else {\r\nvar new_arr \x3d (new Array(((2) * (n + (4)))));\r\ncljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));\r\n\r\n(new_arr[((2) * idx)] \x3d key);\r\n\r\n(new_arr[(((2) * idx) + (1))] \x3d val);\r\n\r\ncljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));\r\n\r\n(added_leaf_QMARK_.val \x3d true);\r\n\r\nvar editable \x3d inode.ensure_editable(edit__$1);\r\n(editable.arr \x3d new_arr);\r\n\r\n(editable.bitmap \x3d (editable.bitmap | bit));\r\n\r\nreturn editable;\r\n\r\n}\r\n}\r\n} else {\r\nvar key_or_nil \x3d (self__.arr[((2) * idx)]);\r\nvar val_or_node \x3d (self__.arr[(((2) * idx) + (1))]);\r\nif((key_or_nil \x3d\x3d null)){\r\nvar n \x3d val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);\r\nif((n \x3d\x3d\x3d val_or_node)){\r\nreturn inode;\r\n} else {\r\nreturn cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);\r\n}\r\n} else {\r\nif(cljs.core.key_test(key,key_or_nil)){\r\nif((val \x3d\x3d\x3d val_or_node)){\r\nreturn inode;\r\n} else {\r\nreturn cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);\r\n}\r\n} else {\r\n(added_leaf_QMARK_.val \x3d true);\r\n\r\nreturn cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__15883 \x3d edit__$1;\r\nvar G__15884 \x3d (shift + (5));\r\nvar G__15885 \x3d key_or_nil;\r\nvar G__15886 \x3d val_or_node;\r\nvar G__15887 \x3d hash;\r\nvar G__15888 \x3d key;\r\nvar G__15889 \x3d val;\r\nreturn (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__15883,G__15884,G__15885,G__15886,G__15887,G__15888,G__15889) : cljs.core.create_node.call(null,G__15883,G__15884,G__15885,G__15886,G__15887,G__15888,G__15889));\r\n})());\r\n\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.BitmapIndexedNode.prototype.inode_assoc \x3d (function (shift,hash,key,val,added_leaf_QMARK_){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nvar bit \x3d (1 \x3c\x3c ((hash \x3e\x3e\x3e shift) \x26 0x01f));\r\nvar idx \x3d cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);\r\nif(((self__.bitmap \x26 bit) \x3d\x3d\x3d (0))){\r\nvar n \x3d cljs.core.bit_count(self__.bitmap);\r\nif((n \x3e\x3d (16))){\r\nvar nodes \x3d [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\r\nvar jdx \x3d ((hash \x3e\x3e\x3e shift) \x26 0x01f);\r\n(nodes[jdx] \x3d cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));\r\n\r\nvar i_20112 \x3d (0);\r\nvar j_20113 \x3d (0);\r\nwhile(true){\r\nif((i_20112 \x3c (32))){\r\nif((((self__.bitmap \x3e\x3e\x3e i_20112) \x26 (1)) \x3d\x3d\x3d (0))){\r\nvar G__20117 \x3d (i_20112 + (1));\r\nvar G__20118 \x3d j_20113;\r\ni_20112 \x3d G__20117;\r\nj_20113 \x3d G__20118;\r\ncontinue;\r\n} else {\r\n(nodes[i_20112] \x3d (((!(((self__.arr[j_20113]) \x3d\x3d null))))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_20113])),(self__.arr[j_20113]),(self__.arr[(j_20113 + (1))]),added_leaf_QMARK_):(self__.arr[(j_20113 + (1))])));\r\n\r\nvar G__20119 \x3d (i_20112 + (1));\r\nvar G__20120 \x3d (j_20113 + (2));\r\ni_20112 \x3d G__20119;\r\nj_20113 \x3d G__20120;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn (new cljs.core.ArrayNode(null,(n + (1)),nodes));\r\n} else {\r\nvar new_arr \x3d (new Array(((2) * (n + (1)))));\r\ncljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));\r\n\r\n(new_arr[((2) * idx)] \x3d key);\r\n\r\n(new_arr[(((2) * idx) + (1))] \x3d val);\r\n\r\ncljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));\r\n\r\n(added_leaf_QMARK_.val \x3d true);\r\n\r\nreturn (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));\r\n}\r\n} else {\r\nvar key_or_nil \x3d (self__.arr[((2) * idx)]);\r\nvar val_or_node \x3d (self__.arr[(((2) * idx) + (1))]);\r\nif((key_or_nil \x3d\x3d null)){\r\nvar n \x3d val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);\r\nif((n \x3d\x3d\x3d val_or_node)){\r\nreturn inode;\r\n} else {\r\nreturn (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));\r\n}\r\n} else {\r\nif(cljs.core.key_test(key,key_or_nil)){\r\nif((val \x3d\x3d\x3d val_or_node)){\r\nreturn inode;\r\n} else {\r\nreturn (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));\r\n}\r\n} else {\r\n(added_leaf_QMARK_.val \x3d true);\r\n\r\nreturn (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__15890 \x3d (shift + (5));\r\nvar G__15891 \x3d key_or_nil;\r\nvar G__15892 \x3d val_or_node;\r\nvar G__15893 \x3d hash;\r\nvar G__15894 \x3d key;\r\nvar G__15895 \x3d val;\r\nreturn (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__15890,G__15891,G__15892,G__15893,G__15894,G__15895) : cljs.core.create_node.call(null,G__15890,G__15891,G__15892,G__15893,G__15894,G__15895));\r\n})())));\r\n\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.BitmapIndexedNode.prototype.inode_find \x3d (function (shift,hash,key,not_found){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nvar bit \x3d (1 \x3c\x3c ((hash \x3e\x3e\x3e shift) \x26 0x01f));\r\nif(((self__.bitmap \x26 bit) \x3d\x3d\x3d (0))){\r\nreturn not_found;\r\n} else {\r\nvar idx \x3d cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);\r\nvar key_or_nil \x3d (self__.arr[((2) * idx)]);\r\nvar val_or_node \x3d (self__.arr[(((2) * idx) + (1))]);\r\nif((key_or_nil \x3d\x3d null)){\r\nreturn val_or_node.inode_find((shift + (5)),hash,key,not_found);\r\n} else {\r\nif(cljs.core.key_test(key,key_or_nil)){\r\nreturn (new cljs.core.MapEntry(key_or_nil,val_or_node,null));\r\n} else {\r\nreturn not_found;\r\n\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.BitmapIndexedNode.prototype.inode_without \x3d (function (shift,hash,key){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nvar bit \x3d (1 \x3c\x3c ((hash \x3e\x3e\x3e shift) \x26 0x01f));\r\nif(((self__.bitmap \x26 bit) \x3d\x3d\x3d (0))){\r\nreturn inode;\r\n} else {\r\nvar idx \x3d cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);\r\nvar key_or_nil \x3d (self__.arr[((2) * idx)]);\r\nvar val_or_node \x3d (self__.arr[(((2) * idx) + (1))]);\r\nif((key_or_nil \x3d\x3d null)){\r\nvar n \x3d val_or_node.inode_without((shift + (5)),hash,key);\r\nif((n \x3d\x3d\x3d val_or_node)){\r\nreturn inode;\r\n} else {\r\nif((!((n \x3d\x3d null)))){\r\nreturn (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));\r\n} else {\r\nif((self__.bitmap \x3d\x3d\x3d bit)){\r\nreturn null;\r\n} else {\r\nreturn (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));\r\n\r\n}\r\n}\r\n}\r\n} else {\r\nif(cljs.core.key_test(key,key_or_nil)){\r\nreturn (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));\r\n} else {\r\nreturn inode;\r\n\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (new cljs.core.NodeIterator(self__.arr,(0),null,null));\r\n}));\r\n\r\n(cljs.core.BitmapIndexedNode.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22edit\x22,\x22edit\x22,-1302639,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22bitmap\x22,\x22bitmap\x22,501334601,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.BitmapIndexedNode.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.BitmapIndexedNode.cljs$lang$ctorStr \x3d \x22cljs.core/BitmapIndexedNode\x22);\r\n\r\n(cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/BitmapIndexedNode\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/BitmapIndexedNode.\r\n */\r\ncljs.core.__GT_BitmapIndexedNode \x3d (function cljs$core$__GT_BitmapIndexedNode(edit,bitmap,arr){\r\nreturn (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));\r\n});\r\n\r\n(cljs.core.BitmapIndexedNode.EMPTY \x3d (new cljs.core.BitmapIndexedNode(null,(0),[])));\r\ncljs.core.pack_array_node \x3d (function cljs$core$pack_array_node(array_node,edit,idx){\r\nvar arr \x3d array_node.arr;\r\nvar len \x3d arr.length;\r\nvar new_arr \x3d (new Array(((2) * (array_node.cnt - (1)))));\r\nvar i \x3d (0);\r\nvar j \x3d (1);\r\nvar bitmap \x3d (0);\r\nwhile(true){\r\nif((i \x3c len)){\r\nif((((!((i \x3d\x3d\x3d idx)))) \x26\x26 ((!(((arr[i]) \x3d\x3d null)))))){\r\n(new_arr[j] \x3d (arr[i]));\r\n\r\nvar G__20128 \x3d (i + (1));\r\nvar G__20129 \x3d (j + (2));\r\nvar G__20130 \x3d (bitmap | ((1) \x3c\x3c i));\r\ni \x3d G__20128;\r\nj \x3d G__20129;\r\nbitmap \x3d G__20130;\r\ncontinue;\r\n} else {\r\nvar G__20131 \x3d (i + (1));\r\nvar G__20132 \x3d j;\r\nvar G__20133 \x3d bitmap;\r\ni \x3d G__20131;\r\nj \x3d G__20132;\r\nbitmap \x3d G__20133;\r\ncontinue;\r\n}\r\n} else {\r\nreturn (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));\r\n}\r\nbreak;\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.ArrayNodeIterator \x3d (function (arr,i,next_iter){\r\nthis.arr \x3d arr;\r\nthis.i \x3d i;\r\nthis.next_iter \x3d next_iter;\r\n});\r\n(cljs.core.ArrayNodeIterator.prototype.hasNext \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nvar len \x3d self__.arr.length;\r\nwhile(true){\r\nif((!((((!((self__.next_iter \x3d\x3d null)))) \x26\x26 (self__.next_iter.hasNext()))))){\r\nif((self__.i \x3c len)){\r\nvar node \x3d (self__.arr[self__.i]);\r\n(self__.i \x3d (self__.i + (1)));\r\n\r\nif((!((node \x3d\x3d null)))){\r\n(self__.next_iter \x3d cljs.core._iterator(node));\r\n} else {\r\n}\r\n\r\ncontinue;\r\n} else {\r\nreturn false;\r\n}\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.ArrayNodeIterator.prototype.next \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nif(this$.hasNext()){\r\nreturn self__.next_iter.next();\r\n} else {\r\nthrow (new Error(\x22No such element\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.ArrayNodeIterator.prototype.remove \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (new Error(\x22Unsupported operation\x22));\r\n}));\r\n\r\n(cljs.core.ArrayNodeIterator.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22next-iter\x22,\x22next-iter\x22,1526626239,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.ArrayNodeIterator.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.ArrayNodeIterator.cljs$lang$ctorStr \x3d \x22cljs.core/ArrayNodeIterator\x22);\r\n\r\n(cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/ArrayNodeIterator\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/ArrayNodeIterator.\r\n */\r\ncljs.core.__GT_ArrayNodeIterator \x3d (function cljs$core$__GT_ArrayNodeIterator(arr,i,next_iter){\r\nreturn (new cljs.core.ArrayNodeIterator(arr,i,next_iter));\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IIterable}\r\n*/\r\ncljs.core.ArrayNode \x3d (function (edit,cnt,arr){\r\nthis.edit \x3d edit;\r\nthis.cnt \x3d cnt;\r\nthis.arr \x3d arr;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 131072;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 0;\r\n});\r\n(cljs.core.ArrayNode.prototype.ensure_editable \x3d (function (e){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nif((e \x3d\x3d\x3d self__.edit)){\r\nreturn inode;\r\n} else {\r\nreturn (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));\r\n}\r\n}));\r\n\r\n(cljs.core.ArrayNode.prototype.inode_without_BANG_ \x3d (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nvar idx \x3d ((hash \x3e\x3e\x3e shift) \x26 0x01f);\r\nvar node \x3d (self__.arr[idx]);\r\nif((node \x3d\x3d null)){\r\nreturn inode;\r\n} else {\r\nvar n \x3d node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);\r\nif((n \x3d\x3d\x3d node)){\r\nreturn inode;\r\n} else {\r\nif((n \x3d\x3d null)){\r\nif((self__.cnt \x3c\x3d (8))){\r\nreturn cljs.core.pack_array_node(inode,edit__$1,idx);\r\n} else {\r\nvar editable \x3d cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);\r\n(editable.cnt \x3d (editable.cnt - (1)));\r\n\r\nreturn editable;\r\n}\r\n} else {\r\nreturn cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);\r\n\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.ArrayNode.prototype.inode_seq \x3d (function (){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nreturn (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null,self__.arr));\r\n}));\r\n\r\n(cljs.core.ArrayNode.prototype.kv_reduce \x3d (function (f,init){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nvar len \x3d self__.arr.length;\r\nvar i \x3d (0);\r\nvar init__$1 \x3d init;\r\nwhile(true){\r\nif((i \x3c len)){\r\nvar node \x3d (self__.arr[i]);\r\nif((!((node \x3d\x3d null)))){\r\nvar init__$2 \x3d node.kv_reduce(f,init__$1);\r\nif(cljs.core.reduced_QMARK_(init__$2)){\r\nreturn init__$2;\r\n} else {\r\nvar G__20147 \x3d (i + (1));\r\nvar G__20148 \x3d init__$2;\r\ni \x3d G__20147;\r\ninit__$1 \x3d G__20148;\r\ncontinue;\r\n}\r\n} else {\r\nvar G__20149 \x3d (i + (1));\r\nvar G__20150 \x3d init__$1;\r\ni \x3d G__20149;\r\ninit__$1 \x3d G__20150;\r\ncontinue;\r\n}\r\n} else {\r\nreturn init__$1;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.ArrayNode.prototype.inode_lookup \x3d (function (shift,hash,key,not_found){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nvar idx \x3d ((hash \x3e\x3e\x3e shift) \x26 0x01f);\r\nvar node \x3d (self__.arr[idx]);\r\nif((!((node \x3d\x3d null)))){\r\nreturn node.inode_lookup((shift + (5)),hash,key,not_found);\r\n} else {\r\nreturn not_found;\r\n}\r\n}));\r\n\r\n(cljs.core.ArrayNode.prototype.inode_assoc_BANG_ \x3d (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nvar idx \x3d ((hash \x3e\x3e\x3e shift) \x26 0x01f);\r\nvar node \x3d (self__.arr[idx]);\r\nif((node \x3d\x3d null)){\r\nvar editable \x3d cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));\r\n(editable.cnt \x3d (editable.cnt + (1)));\r\n\r\nreturn editable;\r\n} else {\r\nvar n \x3d node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);\r\nif((n \x3d\x3d\x3d node)){\r\nreturn inode;\r\n} else {\r\nreturn cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.ArrayNode.prototype.inode_assoc \x3d (function (shift,hash,key,val,added_leaf_QMARK_){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nvar idx \x3d ((hash \x3e\x3e\x3e shift) \x26 0x01f);\r\nvar node \x3d (self__.arr[idx]);\r\nif((node \x3d\x3d null)){\r\nreturn (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));\r\n} else {\r\nvar n \x3d node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);\r\nif((n \x3d\x3d\x3d node)){\r\nreturn inode;\r\n} else {\r\nreturn (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.ArrayNode.prototype.inode_find \x3d (function (shift,hash,key,not_found){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nvar idx \x3d ((hash \x3e\x3e\x3e shift) \x26 0x01f);\r\nvar node \x3d (self__.arr[idx]);\r\nif((!((node \x3d\x3d null)))){\r\nreturn node.inode_find((shift + (5)),hash,key,not_found);\r\n} else {\r\nreturn not_found;\r\n}\r\n}));\r\n\r\n(cljs.core.ArrayNode.prototype.inode_without \x3d (function (shift,hash,key){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nvar idx \x3d ((hash \x3e\x3e\x3e shift) \x26 0x01f);\r\nvar node \x3d (self__.arr[idx]);\r\nif((!((node \x3d\x3d null)))){\r\nvar n \x3d node.inode_without((shift + (5)),hash,key);\r\nif((n \x3d\x3d\x3d node)){\r\nreturn inode;\r\n} else {\r\nif((n \x3d\x3d null)){\r\nif((self__.cnt \x3c\x3d (8))){\r\nreturn cljs.core.pack_array_node(inode,null,idx);\r\n} else {\r\nreturn (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));\r\n}\r\n} else {\r\nreturn (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));\r\n\r\n}\r\n}\r\n} else {\r\nreturn inode;\r\n}\r\n}));\r\n\r\n(cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (new cljs.core.ArrayNodeIterator(self__.arr,(0),null));\r\n}));\r\n\r\n(cljs.core.ArrayNode.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22edit\x22,\x22edit\x22,-1302639,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22cnt\x22,\x22cnt\x22,1924510325,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.ArrayNode.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.ArrayNode.cljs$lang$ctorStr \x3d \x22cljs.core/ArrayNode\x22);\r\n\r\n(cljs.core.ArrayNode.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/ArrayNode\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/ArrayNode.\r\n */\r\ncljs.core.__GT_ArrayNode \x3d (function cljs$core$__GT_ArrayNode(edit,cnt,arr){\r\nreturn (new cljs.core.ArrayNode(edit,cnt,arr));\r\n});\r\n\r\ncljs.core.hash_collision_node_find_index \x3d (function cljs$core$hash_collision_node_find_index(arr,cnt,key){\r\nvar lim \x3d ((2) * cnt);\r\nvar i \x3d (0);\r\nwhile(true){\r\nif((i \x3c lim)){\r\nif(cljs.core.key_test(key,(arr[i]))){\r\nreturn i;\r\n} else {\r\nvar G__20164 \x3d (i + (2));\r\ni \x3d G__20164;\r\ncontinue;\r\n}\r\n} else {\r\nreturn (-1);\r\n}\r\nbreak;\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IIterable}\r\n*/\r\ncljs.core.HashCollisionNode \x3d (function (edit,collision_hash,cnt,arr){\r\nthis.edit \x3d edit;\r\nthis.collision_hash \x3d collision_hash;\r\nthis.cnt \x3d cnt;\r\nthis.arr \x3d arr;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 131072;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 0;\r\n});\r\n(cljs.core.HashCollisionNode.prototype.ensure_editable \x3d (function (e){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nif((e \x3d\x3d\x3d self__.edit)){\r\nreturn inode;\r\n} else {\r\nvar new_arr \x3d (new Array(((2) * (self__.cnt + (1)))));\r\ncljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));\r\n\r\nreturn (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));\r\n}\r\n}));\r\n\r\n(cljs.core.HashCollisionNode.prototype.inode_without_BANG_ \x3d (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nvar idx \x3d cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);\r\nif((idx \x3d\x3d\x3d (-1))){\r\nreturn inode;\r\n} else {\r\n(removed_leaf_QMARK_.val \x3d true);\r\n\r\nif((self__.cnt \x3d\x3d\x3d (1))){\r\nreturn null;\r\n} else {\r\nvar editable \x3d inode.ensure_editable(edit__$1);\r\nvar earr \x3d editable.arr;\r\n(earr[idx] \x3d (earr[(((2) * self__.cnt) - (2))]));\r\n\r\n(earr[(idx + (1))] \x3d (earr[(((2) * self__.cnt) - (1))]));\r\n\r\n(earr[(((2) * self__.cnt) - (1))] \x3d null);\r\n\r\n(earr[(((2) * self__.cnt) - (2))] \x3d null);\r\n\r\n(editable.cnt \x3d (editable.cnt - (1)));\r\n\r\nreturn editable;\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.HashCollisionNode.prototype.inode_seq \x3d (function (){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nreturn (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null,self__.arr));\r\n}));\r\n\r\n(cljs.core.HashCollisionNode.prototype.kv_reduce \x3d (function (f,init){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nreturn cljs.core.inode_kv_reduce(self__.arr,f,init);\r\n}));\r\n\r\n(cljs.core.HashCollisionNode.prototype.inode_lookup \x3d (function (shift,hash,key,not_found){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nvar idx \x3d cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);\r\nif((idx \x3c (0))){\r\nreturn not_found;\r\n} else {\r\nif(cljs.core.key_test(key,(self__.arr[idx]))){\r\nreturn (self__.arr[(idx + (1))]);\r\n} else {\r\nreturn not_found;\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ \x3d (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nif((hash \x3d\x3d\x3d self__.collision_hash)){\r\nvar idx \x3d cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);\r\nif((idx \x3d\x3d\x3d (-1))){\r\nif((self__.arr.length \x3e ((2) * self__.cnt))){\r\nvar editable \x3d cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);\r\n(added_leaf_QMARK_.val \x3d true);\r\n\r\n(editable.cnt \x3d (editable.cnt + (1)));\r\n\r\nreturn editable;\r\n} else {\r\nvar len \x3d self__.arr.length;\r\nvar new_arr \x3d (new Array((len + (2))));\r\ncljs.core.array_copy(self__.arr,(0),new_arr,(0),len);\r\n\r\n(new_arr[len] \x3d key);\r\n\r\n(new_arr[(len + (1))] \x3d val);\r\n\r\n(added_leaf_QMARK_.val \x3d true);\r\n\r\nreturn inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);\r\n}\r\n} else {\r\nif(((self__.arr[(idx + (1))]) \x3d\x3d\x3d val)){\r\nreturn inode;\r\n} else {\r\nreturn cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);\r\n}\r\n}\r\n} else {\r\nreturn (new cljs.core.BitmapIndexedNode(edit__$1,(1 \x3c\x3c ((self__.collision_hash \x3e\x3e\x3e shift) \x26 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);\r\n}\r\n}));\r\n\r\n(cljs.core.HashCollisionNode.prototype.inode_assoc \x3d (function (shift,hash,key,val,added_leaf_QMARK_){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nif((hash \x3d\x3d\x3d self__.collision_hash)){\r\nvar idx \x3d cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);\r\nif((idx \x3d\x3d\x3d (-1))){\r\nvar len \x3d ((2) * self__.cnt);\r\nvar new_arr \x3d (new Array((len + (2))));\r\ncljs.core.array_copy(self__.arr,(0),new_arr,(0),len);\r\n\r\n(new_arr[len] \x3d key);\r\n\r\n(new_arr[(len + (1))] \x3d val);\r\n\r\n(added_leaf_QMARK_.val \x3d true);\r\n\r\nreturn (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(idx + (1))]),val)){\r\nreturn inode;\r\n} else {\r\nreturn (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));\r\n}\r\n}\r\n} else {\r\nreturn (new cljs.core.BitmapIndexedNode(null,(1 \x3c\x3c ((self__.collision_hash \x3e\x3e\x3e shift) \x26 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);\r\n}\r\n}));\r\n\r\n(cljs.core.HashCollisionNode.prototype.ensure_editable_array \x3d (function (e,count,array){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nif((e \x3d\x3d\x3d self__.edit)){\r\n(self__.arr \x3d array);\r\n\r\n(self__.cnt \x3d count);\r\n\r\nreturn inode;\r\n} else {\r\nreturn (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));\r\n}\r\n}));\r\n\r\n(cljs.core.HashCollisionNode.prototype.inode_find \x3d (function (shift,hash,key,not_found){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nvar idx \x3d cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);\r\nif((idx \x3c (0))){\r\nreturn not_found;\r\n} else {\r\nif(cljs.core.key_test(key,(self__.arr[idx]))){\r\nreturn (new cljs.core.MapEntry((self__.arr[idx]),(self__.arr[(idx + (1))]),null));\r\n} else {\r\nreturn not_found;\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.HashCollisionNode.prototype.inode_without \x3d (function (shift,hash,key){\r\nvar self__ \x3d this;\r\nvar inode \x3d this;\r\nvar idx \x3d cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);\r\nif((idx \x3d\x3d\x3d (-1))){\r\nreturn inode;\r\n} else {\r\nif((self__.cnt \x3d\x3d\x3d (1))){\r\nreturn null;\r\n} else {\r\nreturn (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (new cljs.core.NodeIterator(self__.arr,(0),null,null));\r\n}));\r\n\r\n(cljs.core.HashCollisionNode.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22edit\x22,\x22edit\x22,-1302639,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22collision-hash\x22,\x22collision-hash\x22,-35831342,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22cnt\x22,\x22cnt\x22,1924510325,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.HashCollisionNode.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.HashCollisionNode.cljs$lang$ctorStr \x3d \x22cljs.core/HashCollisionNode\x22);\r\n\r\n(cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/HashCollisionNode\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/HashCollisionNode.\r\n */\r\ncljs.core.__GT_HashCollisionNode \x3d (function cljs$core$__GT_HashCollisionNode(edit,collision_hash,cnt,arr){\r\nreturn (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));\r\n});\r\n\r\ncljs.core.create_node \x3d (function cljs$core$create_node(var_args){\r\nvar G__15897 \x3d arguments.length;\r\nswitch (G__15897) {\r\ncase 6:\r\nreturn cljs.core.create_node.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\r\n\r\nbreak;\r\ncase 7:\r\nreturn cljs.core.create_node.cljs$core$IFn$_invoke$arity$7((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 \x3d (function (shift,key1,val1,key2hash,key2,val2){\r\nvar key1hash \x3d cljs.core.hash(key1);\r\nif((key1hash \x3d\x3d\x3d key2hash)){\r\nreturn (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));\r\n} else {\r\nvar added_leaf_QMARK_ \x3d (new cljs.core.Box(false));\r\nreturn cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);\r\n}\r\n}));\r\n\r\n(cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 \x3d (function (edit,shift,key1,val1,key2hash,key2,val2){\r\nvar key1hash \x3d cljs.core.hash(key1);\r\nif((key1hash \x3d\x3d\x3d key2hash)){\r\nreturn (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));\r\n} else {\r\nvar added_leaf_QMARK_ \x3d (new cljs.core.Box(false));\r\nreturn cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);\r\n}\r\n}));\r\n\r\n(cljs.core.create_node.cljs$lang$maxFixedArity \x3d 7);\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.INext}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.NodeSeq \x3d (function (meta,nodes,i,s,__hash){\r\nthis.meta \x3d meta;\r\nthis.nodes \x3d nodes;\r\nthis.i \x3d i;\r\nthis.s \x3d s;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32374988;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.NodeSeq.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.NodeSeq.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.NodeSeq.prototype.indexOf \x3d (function() {\r\nvar G__20234 \x3d null;\r\nvar G__20234__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__20234__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__20234 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__20234__1.call(this,x);\r\ncase 2:\r\nreturn G__20234__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__20234.cljs$core$IFn$_invoke$arity$1 \x3d G__20234__1;\r\nG__20234.cljs$core$IFn$_invoke$arity$2 \x3d G__20234__2;\r\nreturn G__20234;\r\n})()\r\n);\r\n\r\n(cljs.core.NodeSeq.prototype.lastIndexOf \x3d (function() {\r\nvar G__20239 \x3d null;\r\nvar G__20239__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\r\n});\r\nvar G__20239__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__20239 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__20239__1.call(this,x);\r\ncase 2:\r\nreturn G__20239__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__20239.cljs$core$IFn$_invoke$arity$1 \x3d G__20239__1;\r\nG__20239.cljs$core$IFn$_invoke$arity$2 \x3d G__20239__2;\r\nreturn G__20239;\r\n})()\r\n);\r\n\r\n(cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.NodeSeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.s \x3d\x3d null)){\r\nvar G__15898 \x3d self__.nodes;\r\nvar G__15899 \x3d (self__.i + (2));\r\nvar G__15900 \x3d null;\r\nreturn (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15898,G__15899,G__15900) : cljs.core.create_inode_seq.call(null,G__15898,G__15899,G__15900));\r\n} else {\r\nvar G__15901 \x3d self__.nodes;\r\nvar G__15902 \x3d self__.i;\r\nvar G__15903 \x3d cljs.core.next(self__.s);\r\nreturn (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15901,G__15902,G__15903) : cljs.core.create_inode_seq.call(null,G__15901,G__15902,G__15903));\r\n}\r\n}));\r\n\r\n(cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.equiv_sequential(coll__$1,other);\r\n}));\r\n\r\n(cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.List.EMPTY;\r\n}));\r\n\r\n(cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);\r\n}));\r\n\r\n(cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);\r\n}));\r\n\r\n(cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.s \x3d\x3d null)){\r\nreturn (new cljs.core.MapEntry((self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))]),null));\r\n} else {\r\nreturn cljs.core.first(self__.s);\r\n}\r\n}));\r\n\r\n(cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar ret \x3d (((self__.s \x3d\x3d null))?(function (){var G__15904 \x3d self__.nodes;\r\nvar G__15905 \x3d (self__.i + (2));\r\nvar G__15906 \x3d null;\r\nreturn (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15904,G__15905,G__15906) : cljs.core.create_inode_seq.call(null,G__15904,G__15905,G__15906));\r\n})():(function (){var G__15907 \x3d self__.nodes;\r\nvar G__15908 \x3d self__.i;\r\nvar G__15909 \x3d cljs.core.next(self__.s);\r\nreturn (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15907,G__15908,G__15909) : cljs.core.create_inode_seq.call(null,G__15907,G__15908,G__15909));\r\n})());\r\nif((!((ret \x3d\x3d null)))){\r\nreturn ret;\r\n} else {\r\nreturn cljs.core.List.EMPTY;\r\n}\r\n}));\r\n\r\n(cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this$){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nreturn this$__$1;\r\n}));\r\n\r\n(cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.NodeSeq(new_meta,self__.nodes,self__.i,self__.s,self__.__hash));\r\n}\r\n}));\r\n\r\n(cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.cons(o,coll__$1);\r\n}));\r\n\r\n(cljs.core.NodeSeq.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22nodes\x22,\x22nodes\x22,-459054278,null),new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.Symbol(null,\x22s\x22,\x22s\x22,-948495851,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.NodeSeq.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.NodeSeq.cljs$lang$ctorStr \x3d \x22cljs.core/NodeSeq\x22);\r\n\r\n(cljs.core.NodeSeq.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/NodeSeq\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/NodeSeq.\r\n */\r\ncljs.core.__GT_NodeSeq \x3d (function cljs$core$__GT_NodeSeq(meta,nodes,i,s,__hash){\r\nreturn (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));\r\n});\r\n\r\n(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\ncljs.core.create_inode_seq \x3d (function cljs$core$create_inode_seq(var_args){\r\nvar G__15911 \x3d arguments.length;\r\nswitch (G__15911) {\r\ncase 1:\r\nreturn cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 \x3d (function (nodes){\r\nreturn cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);\r\n}));\r\n\r\n(cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 \x3d (function (nodes,i,s){\r\nif((s \x3d\x3d null)){\r\nvar len \x3d nodes.length;\r\nvar j \x3d i;\r\nwhile(true){\r\nif((j \x3c len)){\r\nif((!(((nodes[j]) \x3d\x3d null)))){\r\nreturn (new cljs.core.NodeSeq(null,nodes,j,null,null));\r\n} else {\r\nvar temp__5751__auto__ \x3d (nodes[(j + (1))]);\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar node \x3d temp__5751__auto__;\r\nvar temp__5751__auto____$1 \x3d node.inode_seq();\r\nif(cljs.core.truth_(temp__5751__auto____$1)){\r\nvar node_seq \x3d temp__5751__auto____$1;\r\nreturn (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));\r\n} else {\r\nvar G__20285 \x3d (j + (2));\r\nj \x3d G__20285;\r\ncontinue;\r\n}\r\n} else {\r\nvar G__20287 \x3d (j + (2));\r\nj \x3d G__20287;\r\ncontinue;\r\n}\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn (new cljs.core.NodeSeq(null,nodes,i,s,null));\r\n}\r\n}));\r\n\r\n(cljs.core.create_inode_seq.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.INext}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.ArrayNodeSeq \x3d (function (meta,nodes,i,s,__hash){\r\nthis.meta \x3d meta;\r\nthis.nodes \x3d nodes;\r\nthis.i \x3d i;\r\nthis.s \x3d s;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32374988;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.ArrayNodeSeq.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.ArrayNodeSeq.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.ArrayNodeSeq.prototype.indexOf \x3d (function() {\r\nvar G__20292 \x3d null;\r\nvar G__20292__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__20292__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__20292 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__20292__1.call(this,x);\r\ncase 2:\r\nreturn G__20292__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__20292.cljs$core$IFn$_invoke$arity$1 \x3d G__20292__1;\r\nG__20292.cljs$core$IFn$_invoke$arity$2 \x3d G__20292__2;\r\nreturn G__20292;\r\n})()\r\n);\r\n\r\n(cljs.core.ArrayNodeSeq.prototype.lastIndexOf \x3d (function() {\r\nvar G__20305 \x3d null;\r\nvar G__20305__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\r\n});\r\nvar G__20305__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__20305 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__20305__1.call(this,x);\r\ncase 2:\r\nreturn G__20305__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__20305.cljs$core$IFn$_invoke$arity$1 \x3d G__20305__1;\r\nG__20305.cljs$core$IFn$_invoke$arity$2 \x3d G__20305__2;\r\nreturn G__20305;\r\n})()\r\n);\r\n\r\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar G__15912 \x3d self__.nodes;\r\nvar G__15913 \x3d self__.i;\r\nvar G__15914 \x3d cljs.core.next(self__.s);\r\nreturn (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(G__15912,G__15913,G__15914) : cljs.core.create_array_node_seq.call(null,G__15912,G__15913,G__15914));\r\n}));\r\n\r\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.equiv_sequential(coll__$1,other);\r\n}));\r\n\r\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.List.EMPTY;\r\n}));\r\n\r\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);\r\n}));\r\n\r\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);\r\n}));\r\n\r\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.first(self__.s);\r\n}));\r\n\r\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar ret \x3d (function (){var G__15915 \x3d self__.nodes;\r\nvar G__15916 \x3d self__.i;\r\nvar G__15917 \x3d cljs.core.next(self__.s);\r\nreturn (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(G__15915,G__15916,G__15917) : cljs.core.create_array_node_seq.call(null,G__15915,G__15916,G__15917));\r\n})();\r\nif((!((ret \x3d\x3d null)))){\r\nreturn ret;\r\n} else {\r\nreturn cljs.core.List.EMPTY;\r\n}\r\n}));\r\n\r\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this$){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nreturn this$__$1;\r\n}));\r\n\r\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.ArrayNodeSeq(new_meta,self__.nodes,self__.i,self__.s,self__.__hash));\r\n}\r\n}));\r\n\r\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.cons(o,coll__$1);\r\n}));\r\n\r\n(cljs.core.ArrayNodeSeq.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22nodes\x22,\x22nodes\x22,-459054278,null),new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.Symbol(null,\x22s\x22,\x22s\x22,-948495851,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.ArrayNodeSeq.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.ArrayNodeSeq.cljs$lang$ctorStr \x3d \x22cljs.core/ArrayNodeSeq\x22);\r\n\r\n(cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/ArrayNodeSeq\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/ArrayNodeSeq.\r\n */\r\ncljs.core.__GT_ArrayNodeSeq \x3d (function cljs$core$__GT_ArrayNodeSeq(meta,nodes,i,s,__hash){\r\nreturn (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));\r\n});\r\n\r\n(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\ncljs.core.create_array_node_seq \x3d (function cljs$core$create_array_node_seq(var_args){\r\nvar G__15919 \x3d arguments.length;\r\nswitch (G__15919) {\r\ncase 1:\r\nreturn cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 \x3d (function (nodes){\r\nreturn cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);\r\n}));\r\n\r\n(cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3 \x3d (function (nodes,i,s){\r\nif((s \x3d\x3d null)){\r\nvar len \x3d nodes.length;\r\nvar j \x3d i;\r\nwhile(true){\r\nif((j \x3c len)){\r\nvar temp__5751__auto__ \x3d (nodes[j]);\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar nj \x3d temp__5751__auto__;\r\nvar temp__5751__auto____$1 \x3d nj.inode_seq();\r\nif(cljs.core.truth_(temp__5751__auto____$1)){\r\nvar ns \x3d temp__5751__auto____$1;\r\nreturn (new cljs.core.ArrayNodeSeq(null,nodes,(j + (1)),ns,null));\r\n} else {\r\nvar G__20320 \x3d (j + (1));\r\nj \x3d G__20320;\r\ncontinue;\r\n}\r\n} else {\r\nvar G__20321 \x3d (j + (1));\r\nj \x3d G__20321;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn (new cljs.core.ArrayNodeSeq(null,nodes,i,s,null));\r\n}\r\n}));\r\n\r\n(cljs.core.create_array_node_seq.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.HashMapIter \x3d (function (nil_val,root_iter,seen){\r\nthis.nil_val \x3d nil_val;\r\nthis.root_iter \x3d root_iter;\r\nthis.seen \x3d seen;\r\n});\r\n(cljs.core.HashMapIter.prototype.hasNext \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (((!(self__.seen))) || (self__.root_iter.hasNext()));\r\n}));\r\n\r\n(cljs.core.HashMapIter.prototype.next \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nif((!(self__.seen))){\r\n(self__.seen \x3d true);\r\n\r\nreturn (new cljs.core.MapEntry(null,self__.nil_val,null));\r\n} else {\r\nreturn self__.root_iter.next();\r\n}\r\n}));\r\n\r\n(cljs.core.HashMapIter.prototype.remove \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (new Error(\x22Unsupported operation\x22));\r\n}));\r\n\r\n(cljs.core.HashMapIter.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22nil-val\x22,\x22nil-val\x22,-513933559,null),new cljs.core.Symbol(null,\x22root-iter\x22,\x22root-iter\x22,1974672108,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22seen\x22,\x22seen\x22,1121531738,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.HashMapIter.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.HashMapIter.cljs$lang$ctorStr \x3d \x22cljs.core/HashMapIter\x22);\r\n\r\n(cljs.core.HashMapIter.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/HashMapIter\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/HashMapIter.\r\n */\r\ncljs.core.__GT_HashMapIter \x3d (function cljs$core$__GT_HashMapIter(nil_val,root_iter,seen){\r\nreturn (new cljs.core.HashMapIter(nil_val,root_iter,seen));\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IFn}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IEditableCollection}\r\n * @implements {cljs.core.IFind}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ncljs.core.PersistentHashMap \x3d (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){\r\nthis.meta \x3d meta;\r\nthis.cnt \x3d cnt;\r\nthis.root \x3d root;\r\nthis.has_nil_QMARK_ \x3d has_nil_QMARK_;\r\nthis.nil_val \x3d nil_val;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 16123663;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139268;\r\n});\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$IFind$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$IFind$_find$arity$2 \x3d (function (coll,k){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((k \x3d\x3d null)){\r\nif(self__.has_nil_QMARK_){\r\nreturn (new cljs.core.MapEntry(null,self__.nil_val,null));\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nif((self__.root \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn self__.root.inode_find((0),cljs.core.hash(k),k,null);\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.keys \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.es6_iterator((cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null,coll)));\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.entries \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.es6_entries_iterator(cljs.core.seq(coll));\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.values \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.es6_iterator((cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null,coll)));\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.has \x3d (function (k){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.contains_QMARK_(coll,k);\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.get \x3d (function (k,not_found){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.forEach \x3d (function (f){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nvar seq__15921 \x3d cljs.core.seq(coll);\r\nvar chunk__15922 \x3d null;\r\nvar count__15923 \x3d (0);\r\nvar i__15924 \x3d (0);\r\nwhile(true){\r\nif((i__15924 \x3c count__15923)){\r\nvar vec__15931 \x3d chunk__15922.cljs$core$IIndexed$_nth$arity$2(null,i__15924);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15931,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15931,(1),null);\r\n(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v,k) : f.call(null,v,k));\r\n\r\n\r\nvar G__20330 \x3d seq__15921;\r\nvar G__20331 \x3d chunk__15922;\r\nvar G__20332 \x3d count__15923;\r\nvar G__20333 \x3d (i__15924 + (1));\r\nseq__15921 \x3d G__20330;\r\nchunk__15922 \x3d G__20331;\r\ncount__15923 \x3d G__20332;\r\ni__15924 \x3d G__20333;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto__ \x3d cljs.core.seq(seq__15921);\r\nif(temp__5753__auto__){\r\nvar seq__15921__$1 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__15921__$1)){\r\nvar c__4679__auto__ \x3d cljs.core.chunk_first(seq__15921__$1);\r\nvar G__20335 \x3d cljs.core.chunk_rest(seq__15921__$1);\r\nvar G__20336 \x3d c__4679__auto__;\r\nvar G__20337 \x3d cljs.core.count(c__4679__auto__);\r\nvar G__20338 \x3d (0);\r\nseq__15921 \x3d G__20335;\r\nchunk__15922 \x3d G__20336;\r\ncount__15923 \x3d G__20337;\r\ni__15924 \x3d G__20338;\r\ncontinue;\r\n} else {\r\nvar vec__15934 \x3d cljs.core.first(seq__15921__$1);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15934,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15934,(1),null);\r\n(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v,k) : f.call(null,v,k));\r\n\r\n\r\nvar G__20343 \x3d cljs.core.next(seq__15921__$1);\r\nvar G__20344 \x3d null;\r\nvar G__20345 \x3d (0);\r\nvar G__20346 \x3d (0);\r\nseq__15921 \x3d G__20343;\r\nchunk__15922 \x3d G__20344;\r\ncount__15923 \x3d G__20345;\r\ni__15924 \x3d G__20346;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (coll,k){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null);\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (coll,k,not_found){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((k \x3d\x3d null)){\r\nif(self__.has_nil_QMARK_){\r\nreturn self__.nil_val;\r\n} else {\r\nreturn not_found;\r\n}\r\n} else {\r\nif((self__.root \x3d\x3d null)){\r\nreturn not_found;\r\n} else {\r\nreturn self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (coll,f,init){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar init__$1 \x3d ((self__.has_nil_QMARK_)?(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init,null,self__.nil_val) : f.call(null,init,null,self__.nil_val)):init);\r\nif(cljs.core.reduced_QMARK_(init__$1)){\r\nreturn cljs.core.deref(init__$1);\r\n} else {\r\nif((!((self__.root \x3d\x3d null)))){\r\nreturn cljs.core.unreduced(self__.root.kv_reduce(f,init__$1));\r\n} else {\r\nreturn init__$1;\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar root_iter \x3d ((self__.root)?cljs.core._iterator(self__.root):cljs.core.nil_iter());\r\nif(self__.has_nil_QMARK_){\r\nreturn (new cljs.core.HashMapIter(self__.nil_val,root_iter,false));\r\n} else {\r\nreturn root_iter;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.cnt;\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_unordered_coll(coll__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.equiv_map(coll__$1,other);\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (new cljs.core.TransientHashMap(({}),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (coll,k){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((k \x3d\x3d null)){\r\nif(self__.has_nil_QMARK_){\r\nreturn (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));\r\n} else {\r\nreturn coll__$1;\r\n}\r\n} else {\r\nif((self__.root \x3d\x3d null)){\r\nreturn coll__$1;\r\n} else {\r\nvar new_root \x3d self__.root.inode_without((0),cljs.core.hash(k),k);\r\nif((new_root \x3d\x3d\x3d self__.root)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));\r\n}\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (coll,k,v){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((k \x3d\x3d null)){\r\nif(((self__.has_nil_QMARK_) \x26\x26 ((v \x3d\x3d\x3d self__.nil_val)))){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));\r\n}\r\n} else {\r\nvar added_leaf_QMARK_ \x3d (new cljs.core.Box(false));\r\nvar new_root \x3d (((self__.root \x3d\x3d null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);\r\nif((new_root \x3d\x3d\x3d self__.root)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (coll,k){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((k \x3d\x3d null)){\r\nreturn self__.has_nil_QMARK_;\r\n} else {\r\nif((self__.root \x3d\x3d null)){\r\nreturn false;\r\n} else {\r\nreturn (!((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) \x3d\x3d\x3d cljs.core.lookup_sentinel)));\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.cnt \x3e (0))){\r\nvar s \x3d (((!((self__.root \x3d\x3d null))))?self__.root.inode_seq():null);\r\nif(self__.has_nil_QMARK_){\r\nreturn cljs.core.cons((new cljs.core.MapEntry(null,self__.nil_val,null)),s);\r\n} else {\r\nreturn s;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.PersistentHashMap(new_meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,entry){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(entry)){\r\nreturn coll__$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry,(0)),cljs.core._nth(entry,(1)));\r\n} else {\r\nvar ret \x3d coll__$1;\r\nvar es \x3d cljs.core.seq(entry);\r\nwhile(true){\r\nif((es \x3d\x3d null)){\r\nreturn ret;\r\n} else {\r\nvar e \x3d cljs.core.first(es);\r\nif(cljs.core.vector_QMARK_(e)){\r\nvar G__20440 \x3d cljs.core._assoc(ret,cljs.core._nth(e,(0)),cljs.core._nth(e,(1)));\r\nvar G__20441 \x3d cljs.core.next(es);\r\nret \x3d G__20440;\r\nes \x3d G__20441;\r\ncontinue;\r\n} else {\r\nthrow (new Error(\x22conj on a map takes map entries or seqables of map entries\x22));\r\n}\r\n}\r\nbreak;\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.call \x3d (function (unused__9633__auto__){\r\nvar self__ \x3d this;\r\nvar self__ \x3d this;\r\nvar G__15939 \x3d (arguments.length - (1));\r\nswitch (G__15939) {\r\ncase (1):\r\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\r\n\r\nbreak;\r\ncase (2):\r\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.apply \x3d (function (self__,args15920){\r\nvar self__ \x3d this;\r\nvar self____$1 \x3d this;\r\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15920)));\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn coll.cljs$core$ILookup$_lookup$arity$2(null,k);\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22cnt\x22,\x22cnt\x22,1924510325,null),new cljs.core.Symbol(null,\x22root\x22,\x22root\x22,1191874074,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22has-nil?\x22,\x22has-nil?\x22,825886722,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22boolean\x22,\x22boolean\x22,-278886877,null)], null)),new cljs.core.Symbol(null,\x22nil-val\x22,\x22nil-val\x22,-513933559,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.PersistentHashMap.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentHashMap\x22);\r\n\r\n(cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/PersistentHashMap\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/PersistentHashMap.\r\n */\r\ncljs.core.__GT_PersistentHashMap \x3d (function cljs$core$__GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){\r\nreturn (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));\r\n});\r\n\r\n(cljs.core.PersistentHashMap.EMPTY \x3d (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash)));\r\n(cljs.core.PersistentHashMap.fromArray \x3d (function (arr,no_clone){\r\nvar arr__$1 \x3d ((no_clone)?arr:cljs.core.aclone(arr));\r\nvar len \x3d arr__$1.length;\r\nvar i \x3d (0);\r\nvar ret \x3d cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);\r\nwhile(true){\r\nif((i \x3c len)){\r\nvar G__20452 \x3d (i + (2));\r\nvar G__20453 \x3d cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));\r\ni \x3d G__20452;\r\nret \x3d G__20453;\r\ncontinue;\r\n} else {\r\nreturn cljs.core._persistent_BANG_(ret);\r\n}\r\nbreak;\r\n}\r\n}));\r\n(cljs.core.PersistentHashMap.fromArrays \x3d (function (ks,vs){\r\nvar len \x3d ks.length;\r\nvar i \x3d (0);\r\nvar out \x3d cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);\r\nwhile(true){\r\nif((i \x3c len)){\r\nif((vs.length \x3c\x3d i)){\r\nthrow (new Error([\x22No value supplied for key: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((ks[i]))].join(\x27\x27)));\r\n} else {\r\nvar G__20454 \x3d (i + (1));\r\nvar G__20455 \x3d cljs.core._assoc_BANG_(out,(ks[i]),(vs[i]));\r\ni \x3d G__20454;\r\nout \x3d G__20455;\r\ncontinue;\r\n}\r\n} else {\r\nreturn cljs.core.persistent_BANG_(out);\r\n}\r\nbreak;\r\n}\r\n}));\r\n(cljs.core.PersistentHashMap.createWithCheck \x3d (function (arr){\r\nvar len \x3d arr.length;\r\nvar ret \x3d cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);\r\nvar i_20456 \x3d (0);\r\nwhile(true){\r\nif((i_20456 \x3c len)){\r\ncljs.core._assoc_BANG_(ret,(arr[i_20456]),(arr[(i_20456 + (1))]));\r\n\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._count(ret),((i_20456 / (2)) + (1)))){\r\nthrow (new Error([\x22Duplicate key: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arr[i_20456]))].join(\x27\x27)));\r\n} else {\r\nvar G__20463 \x3d (i_20456 + (2));\r\ni_20456 \x3d G__20463;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn cljs.core._persistent_BANG_(ret);\r\n}));\r\n(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IFn}\r\n * @implements {cljs.core.ITransientMap}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ITransientCollection}\r\n * @implements {cljs.core.ITransientAssociative}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ncljs.core.TransientHashMap \x3d (function (edit,root,count,has_nil_QMARK_,nil_val){\r\nthis.edit \x3d edit;\r\nthis.root \x3d root;\r\nthis.count \x3d count;\r\nthis.has_nil_QMARK_ \x3d has_nil_QMARK_;\r\nthis.nil_val \x3d nil_val;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 259;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 56;\r\n});\r\n(cljs.core.TransientHashMap.prototype.conj_BANG_ \x3d (function (o){\r\nvar self__ \x3d this;\r\nvar tcoll \x3d this;\r\nif(self__.edit){\r\nif(cljs.core.map_entry_QMARK_(o)){\r\nreturn tcoll.assoc_BANG_((cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null,o)),(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null,o)));\r\n} else {\r\nif(cljs.core.vector_QMARK_(o)){\r\nreturn tcoll.assoc_BANG_((o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1((0)) : o.call(null,(0))),(o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1((1)) : o.call(null,(1))));\r\n} else {\r\nvar es \x3d cljs.core.seq(o);\r\nvar tcoll__$1 \x3d tcoll;\r\nwhile(true){\r\nvar temp__5751__auto__ \x3d cljs.core.first(es);\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar e \x3d temp__5751__auto__;\r\nvar G__20483 \x3d cljs.core.next(es);\r\nvar G__20484 \x3d tcoll__$1.assoc_BANG_((cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null,e)),(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null,e)));\r\nes \x3d G__20483;\r\ntcoll__$1 \x3d G__20484;\r\ncontinue;\r\n} else {\r\nreturn tcoll__$1;\r\n}\r\nbreak;\r\n}\r\n\r\n}\r\n}\r\n} else {\r\nthrow (new Error(\x22conj! after persistent\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.TransientHashMap.prototype.assoc_BANG_ \x3d (function (k,v){\r\nvar self__ \x3d this;\r\nvar tcoll \x3d this;\r\nif(self__.edit){\r\nif((k \x3d\x3d null)){\r\nif((self__.nil_val \x3d\x3d\x3d v)){\r\n} else {\r\n(self__.nil_val \x3d v);\r\n}\r\n\r\nif(self__.has_nil_QMARK_){\r\n} else {\r\n(self__.count \x3d (self__.count + (1)));\r\n\r\n(self__.has_nil_QMARK_ \x3d true);\r\n}\r\n\r\nreturn tcoll;\r\n} else {\r\nvar added_leaf_QMARK_ \x3d (new cljs.core.Box(false));\r\nvar node \x3d (((self__.root \x3d\x3d null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);\r\nif((node \x3d\x3d\x3d self__.root)){\r\n} else {\r\n(self__.root \x3d node);\r\n}\r\n\r\nif(added_leaf_QMARK_.val){\r\n(self__.count \x3d (self__.count + (1)));\r\n} else {\r\n}\r\n\r\nreturn tcoll;\r\n}\r\n} else {\r\nthrow (new Error(\x22assoc! after persistent!\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.TransientHashMap.prototype.without_BANG_ \x3d (function (k){\r\nvar self__ \x3d this;\r\nvar tcoll \x3d this;\r\nif(self__.edit){\r\nif((k \x3d\x3d null)){\r\nif(self__.has_nil_QMARK_){\r\n(self__.has_nil_QMARK_ \x3d false);\r\n\r\n(self__.nil_val \x3d null);\r\n\r\n(self__.count \x3d (self__.count - (1)));\r\n\r\nreturn tcoll;\r\n} else {\r\nreturn tcoll;\r\n}\r\n} else {\r\nif((self__.root \x3d\x3d null)){\r\nreturn tcoll;\r\n} else {\r\nvar removed_leaf_QMARK_ \x3d (new cljs.core.Box(false));\r\nvar node \x3d self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);\r\nif((node \x3d\x3d\x3d self__.root)){\r\n} else {\r\n(self__.root \x3d node);\r\n}\r\n\r\nif(removed_leaf_QMARK_.val){\r\n(self__.count \x3d (self__.count - (1)));\r\n} else {\r\n}\r\n\r\nreturn tcoll;\r\n}\r\n}\r\n} else {\r\nthrow (new Error(\x22dissoc! after persistent!\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.TransientHashMap.prototype.persistent_BANG_ \x3d (function (){\r\nvar self__ \x3d this;\r\nvar tcoll \x3d this;\r\nif(self__.edit){\r\n(self__.edit \x3d null);\r\n\r\nreturn (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));\r\n} else {\r\nthrow (new Error(\x22persistent! called twice\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(self__.edit){\r\nreturn self__.count;\r\n} else {\r\nthrow (new Error(\x22count after persistent!\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (tcoll,k){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\nif((k \x3d\x3d null)){\r\nif(self__.has_nil_QMARK_){\r\nreturn self__.nil_val;\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nif((self__.root \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn self__.root.inode_lookup((0),cljs.core.hash(k),k);\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (tcoll,k,not_found){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\nif((k \x3d\x3d null)){\r\nif(self__.has_nil_QMARK_){\r\nreturn self__.nil_val;\r\n} else {\r\nreturn not_found;\r\n}\r\n} else {\r\nif((self__.root \x3d\x3d null)){\r\nreturn not_found;\r\n} else {\r\nreturn self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 \x3d (function (tcoll,val){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\nreturn tcoll__$1.conj_BANG_(val);\r\n}));\r\n\r\n(cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 \x3d (function (tcoll){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\nreturn tcoll__$1.persistent_BANG_();\r\n}));\r\n\r\n(cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 \x3d (function (tcoll,key,val){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\nreturn tcoll__$1.assoc_BANG_(key,val);\r\n}));\r\n\r\n(cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 \x3d (function (tcoll,key){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\nreturn tcoll__$1.without_BANG_(key);\r\n}));\r\n\r\n(cljs.core.TransientHashMap.prototype.call \x3d (function (unused__9633__auto__){\r\nvar self__ \x3d this;\r\nvar self__ \x3d this;\r\nvar G__15941 \x3d (arguments.length - (1));\r\nswitch (G__15941) {\r\ncase (1):\r\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\r\n\r\nbreak;\r\ncase (2):\r\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.TransientHashMap.prototype.apply \x3d (function (self__,args15940){\r\nvar self__ \x3d this;\r\nvar self____$1 \x3d this;\r\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15940)));\r\n}));\r\n\r\n(cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (key){\r\nvar self__ \x3d this;\r\nvar tcoll \x3d this;\r\nreturn tcoll.cljs$core$ILookup$_lookup$arity$2(null,key);\r\n}));\r\n\r\n(cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (key,not_found){\r\nvar self__ \x3d this;\r\nvar tcoll \x3d this;\r\nreturn tcoll.cljs$core$ILookup$_lookup$arity$3(null,key,not_found);\r\n}));\r\n\r\n(cljs.core.TransientHashMap.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22edit\x22,\x22edit\x22,-1302639,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22boolean\x22,\x22boolean\x22,-278886877,null),new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22root\x22,\x22root\x22,1191874074,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22count\x22,\x22count\x22,-514511684,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22has-nil?\x22,\x22has-nil?\x22,825886722,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22boolean\x22,\x22boolean\x22,-278886877,null),new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22nil-val\x22,\x22nil-val\x22,-513933559,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.TransientHashMap.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.TransientHashMap.cljs$lang$ctorStr \x3d \x22cljs.core/TransientHashMap\x22);\r\n\r\n(cljs.core.TransientHashMap.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/TransientHashMap\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/TransientHashMap.\r\n */\r\ncljs.core.__GT_TransientHashMap \x3d (function cljs$core$__GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){\r\nreturn (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));\r\n});\r\n\r\ncljs.core.tree_map_seq_push \x3d (function cljs$core$tree_map_seq_push(node,stack,ascending_QMARK_){\r\nvar t \x3d node;\r\nvar stack__$1 \x3d stack;\r\nwhile(true){\r\nif((!((t \x3d\x3d null)))){\r\nvar G__20544 \x3d ((ascending_QMARK_)?t.left:t.right);\r\nvar G__20545 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);\r\nt \x3d G__20544;\r\nstack__$1 \x3d G__20545;\r\ncontinue;\r\n} else {\r\nreturn stack__$1;\r\n}\r\nbreak;\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.INext}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.PersistentTreeMapSeq \x3d (function (meta,stack,ascending_QMARK_,cnt,__hash){\r\nthis.meta \x3d meta;\r\nthis.stack \x3d stack;\r\nthis.ascending_QMARK_ \x3d ascending_QMARK_;\r\nthis.cnt \x3d cnt;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32374990;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.PersistentTreeMapSeq.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.PersistentTreeMapSeq.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.PersistentTreeMapSeq.prototype.indexOf \x3d (function() {\r\nvar G__20549 \x3d null;\r\nvar G__20549__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__20549__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__20549 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__20549__1.call(this,x);\r\ncase 2:\r\nreturn G__20549__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__20549.cljs$core$IFn$_invoke$arity$1 \x3d G__20549__1;\r\nG__20549.cljs$core$IFn$_invoke$arity$2 \x3d G__20549__2;\r\nreturn G__20549;\r\n})()\r\n);\r\n\r\n(cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf \x3d (function() {\r\nvar G__20553 \x3d null;\r\nvar G__20553__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\r\n});\r\nvar G__20553__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__20553 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__20553__1.call(this,x);\r\ncase 2:\r\nreturn G__20553__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__20553.cljs$core$IFn$_invoke$arity$1 \x3d G__20553__1;\r\nG__20553.cljs$core$IFn$_invoke$arity$2 \x3d G__20553__2;\r\nreturn G__20553;\r\n})()\r\n);\r\n\r\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (this$){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nvar t \x3d cljs.core.first(self__.stack);\r\nvar next_stack \x3d cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);\r\nif((next_stack \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.cnt \x3c (0))){\r\nreturn (cljs.core.count(cljs.core.next(coll__$1)) + (1));\r\n} else {\r\nreturn self__.cnt;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.equiv_sequential(coll__$1,other);\r\n}));\r\n\r\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.List.EMPTY;\r\n}));\r\n\r\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);\r\n}));\r\n\r\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);\r\n}));\r\n\r\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (this$){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nreturn cljs.core.peek(self__.stack);\r\n}));\r\n\r\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (this$){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nvar t \x3d cljs.core.first(self__.stack);\r\nvar next_stack \x3d cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);\r\nif((!((next_stack \x3d\x3d null)))){\r\nreturn (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));\r\n} else {\r\nreturn cljs.core.List.EMPTY;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this$){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nreturn this$__$1;\r\n}));\r\n\r\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.PersistentTreeMapSeq(new_meta,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.cons(o,coll__$1);\r\n}));\r\n\r\n(cljs.core.PersistentTreeMapSeq.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22stack\x22,\x22stack\x22,847125597,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22ascending?\x22,\x22ascending?\x22,-1938452653,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22boolean\x22,\x22boolean\x22,-278886877,null)], null)),new cljs.core.Symbol(null,\x22cnt\x22,\x22cnt\x22,1924510325,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.PersistentTreeMapSeq.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentTreeMapSeq\x22);\r\n\r\n(cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/PersistentTreeMapSeq\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/PersistentTreeMapSeq.\r\n */\r\ncljs.core.__GT_PersistentTreeMapSeq \x3d (function cljs$core$__GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){\r\nreturn (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));\r\n});\r\n\r\n(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\ncljs.core.create_tree_map_seq \x3d (function cljs$core$create_tree_map_seq(tree,ascending_QMARK_,cnt){\r\nreturn (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));\r\n});\r\n\r\ncljs.core.balance_left \x3d (function cljs$core$balance_left(key,val,ins,right){\r\nif((ins instanceof cljs.core.RedNode)){\r\nif((ins.left instanceof cljs.core.RedNode)){\r\nreturn (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));\r\n} else {\r\nif((ins.right instanceof cljs.core.RedNode)){\r\nreturn (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));\r\n} else {\r\nreturn (new cljs.core.BlackNode(key,val,ins,right,null));\r\n\r\n}\r\n}\r\n} else {\r\nreturn (new cljs.core.BlackNode(key,val,ins,right,null));\r\n}\r\n});\r\ncljs.core.balance_right \x3d (function cljs$core$balance_right(key,val,left,ins){\r\nif((ins instanceof cljs.core.RedNode)){\r\nif((ins.right instanceof cljs.core.RedNode)){\r\nreturn (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));\r\n} else {\r\nif((ins.left instanceof cljs.core.RedNode)){\r\nreturn (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));\r\n} else {\r\nreturn (new cljs.core.BlackNode(key,val,left,ins,null));\r\n\r\n}\r\n}\r\n} else {\r\nreturn (new cljs.core.BlackNode(key,val,left,ins,null));\r\n}\r\n});\r\ncljs.core.balance_left_del \x3d (function cljs$core$balance_left_del(key,val,del,right){\r\nif((del instanceof cljs.core.RedNode)){\r\nreturn (new cljs.core.RedNode(key,val,del.blacken(),right,null));\r\n} else {\r\nif((right instanceof cljs.core.BlackNode)){\r\nreturn cljs.core.balance_right(key,val,del,right.redden());\r\n} else {\r\nif((((right instanceof cljs.core.RedNode)) \x26\x26 ((right.left instanceof cljs.core.BlackNode)))){\r\nreturn (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));\r\n} else {\r\nthrow (new Error(\x22red-black tree invariant violation\x22));\r\n\r\n}\r\n}\r\n}\r\n});\r\ncljs.core.balance_right_del \x3d (function cljs$core$balance_right_del(key,val,left,del){\r\nif((del instanceof cljs.core.RedNode)){\r\nreturn (new cljs.core.RedNode(key,val,left,del.blacken(),null));\r\n} else {\r\nif((left instanceof cljs.core.BlackNode)){\r\nreturn cljs.core.balance_left(key,val,left.redden(),del);\r\n} else {\r\nif((((left instanceof cljs.core.RedNode)) \x26\x26 ((left.right instanceof cljs.core.BlackNode)))){\r\nreturn (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));\r\n} else {\r\nthrow (new Error(\x22red-black tree invariant violation\x22));\r\n\r\n}\r\n}\r\n}\r\n});\r\ncljs.core.tree_map_kv_reduce \x3d (function cljs$core$tree_map_kv_reduce(node,f,init){\r\nvar init__$1 \x3d (((!((node.left \x3d\x3d null))))?(function (){var G__15942 \x3d node.left;\r\nvar G__15943 \x3d f;\r\nvar G__15944 \x3d init;\r\nreturn (cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__15942,G__15943,G__15944) : cljs.core.tree_map_kv_reduce.call(null,G__15942,G__15943,G__15944));\r\n})():init);\r\nif(cljs.core.reduced_QMARK_(init__$1)){\r\nreturn init__$1;\r\n} else {\r\nvar init__$2 \x3d (function (){var G__15945 \x3d init__$1;\r\nvar G__15946 \x3d node.key;\r\nvar G__15947 \x3d node.val;\r\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15945,G__15946,G__15947) : f.call(null,G__15945,G__15946,G__15947));\r\n})();\r\nif(cljs.core.reduced_QMARK_(init__$2)){\r\nreturn init__$2;\r\n} else {\r\nif((!((node.right \x3d\x3d null)))){\r\nvar G__15948 \x3d node.right;\r\nvar G__15949 \x3d f;\r\nvar G__15950 \x3d init__$2;\r\nreturn (cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__15948,G__15949,G__15950) : cljs.core.tree_map_kv_reduce.call(null,G__15948,G__15949,G__15950));\r\n} else {\r\nreturn init__$2;\r\n}\r\n}\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IIndexed}\r\n * @implements {cljs.core.IVector}\r\n * @implements {cljs.core.IReversible}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IFn}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IFind}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.IStack}\r\n * @implements {cljs.core.IMapEntry}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.ILookup}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.BlackNode \x3d (function (key,val,left,right,__hash){\r\nthis.key \x3d key;\r\nthis.val \x3d val;\r\nthis.left \x3d left;\r\nthis.right \x3d right;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 166619935;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.BlackNode.prototype.cljs$core$IFind$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IFind$_find$arity$2 \x3d (function (node,k){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nvar G__15952 \x3d k;\r\nswitch (G__15952) {\r\ncase (0):\r\nreturn (new cljs.core.MapEntry((0),self__.key,null));\r\n\r\nbreak;\r\ncase (1):\r\nreturn (new cljs.core.MapEntry((1),self__.val,null));\r\n\r\nbreak;\r\ndefault:\r\nreturn null;\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.lastIndexOf \x3d (function() {\r\nvar G__20586 \x3d null;\r\nvar G__20586__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\r\n});\r\nvar G__20586__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__20586 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__20586__1.call(this,x);\r\ncase 2:\r\nreturn G__20586__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__20586.cljs$core$IFn$_invoke$arity$1 \x3d G__20586__1;\r\nG__20586.cljs$core$IFn$_invoke$arity$2 \x3d G__20586__2;\r\nreturn G__20586;\r\n})()\r\n);\r\n\r\n(cljs.core.BlackNode.prototype.indexOf \x3d (function() {\r\nvar G__20587 \x3d null;\r\nvar G__20587__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__20587__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__20587 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__20587__1.call(this,x);\r\ncase 2:\r\nreturn G__20587__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__20587.cljs$core$IFn$_invoke$arity$1 \x3d G__20587__1;\r\nG__20587.cljs$core$IFn$_invoke$arity$2 \x3d G__20587__2;\r\nreturn G__20587;\r\n})()\r\n);\r\n\r\n(cljs.core.BlackNode.prototype.add_right \x3d (function (ins){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn ins.balance_right(node);\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.redden \x3d (function (){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.blacken \x3d (function (){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn node;\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.add_left \x3d (function (ins){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn ins.balance_left(node);\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.replace \x3d (function (key__$1,val__$1,left__$1,right__$1){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.balance_left \x3d (function (parent){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.balance_right \x3d (function (parent){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.remove_left \x3d (function (del){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.kv_reduce \x3d (function (f,init){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn cljs.core.tree_map_kv_reduce(node,f,init);\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.remove_right \x3d (function (del){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (node,k){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn node__$1.cljs$core$IIndexed$_nth$arity$3(null,k,null);\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (node,k,not_found){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn node__$1.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 \x3d (function (node,n){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nif((n \x3d\x3d\x3d (0))){\r\nreturn self__.key;\r\n} else {\r\nif((n \x3d\x3d\x3d (1))){\r\nreturn self__.val;\r\n} else {\r\nthrow (new Error(\x22Index out of bounds\x22));\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 \x3d (function (node,n,not_found){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nif((n \x3d\x3d\x3d (0))){\r\nreturn self__.key;\r\n} else {\r\nif((n \x3d\x3d\x3d (1))){\r\nreturn self__.val;\r\n} else {\r\nreturn not_found;\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 \x3d (function (node,n,v){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn null;\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn (2);\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn self__.key;\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn self__.val;\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn self__.val;\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IReversible$_rseq$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn (new cljs.core.IndexedSeq([self__.val,self__.key],(0),null));\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.equiv_sequential(coll__$1,other);\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn null;\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (node,f){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (node,f,start){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (node,k,v){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (node,k){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn (((k \x3d\x3d\x3d (0))) || ((k \x3d\x3d\x3d (1))));\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn (new cljs.core.IndexedSeq([self__.key,self__.val],(0),null));\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (node,meta){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (node,o){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.call \x3d (function (unused__9633__auto__){\r\nvar self__ \x3d this;\r\nvar self__ \x3d this;\r\nvar G__15953 \x3d (arguments.length - (1));\r\nswitch (G__15953) {\r\ncase (1):\r\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\r\n\r\nbreak;\r\ncase (2):\r\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.apply \x3d (function (self__,args15951){\r\nvar self__ \x3d this;\r\nvar self____$1 \x3d this;\r\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15951)));\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn node.cljs$core$IIndexed$_nth$arity$2(null,k);\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn node.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);\r\n}));\r\n\r\n(cljs.core.BlackNode.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22key\x22,\x22key\x22,124488940,null),new cljs.core.Symbol(null,\x22val\x22,\x22val\x22,1769233139,null),new cljs.core.Symbol(null,\x22left\x22,\x22left\x22,1241415590,null),new cljs.core.Symbol(null,\x22right\x22,\x22right\x22,1187949694,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.BlackNode.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.BlackNode.cljs$lang$ctorStr \x3d \x22cljs.core/BlackNode\x22);\r\n\r\n(cljs.core.BlackNode.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/BlackNode\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/BlackNode.\r\n */\r\ncljs.core.__GT_BlackNode \x3d (function cljs$core$__GT_BlackNode(key,val,left,right,__hash){\r\nreturn (new cljs.core.BlackNode(key,val,left,right,__hash));\r\n});\r\n\r\n(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IIndexed}\r\n * @implements {cljs.core.IVector}\r\n * @implements {cljs.core.IReversible}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IFn}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IFind}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.IStack}\r\n * @implements {cljs.core.IMapEntry}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.ILookup}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.RedNode \x3d (function (key,val,left,right,__hash){\r\nthis.key \x3d key;\r\nthis.val \x3d val;\r\nthis.left \x3d left;\r\nthis.right \x3d right;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 166619935;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.RedNode.prototype.cljs$core$IFind$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IFind$_find$arity$2 \x3d (function (node,k){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nvar G__15955 \x3d k;\r\nswitch (G__15955) {\r\ncase (0):\r\nreturn (new cljs.core.MapEntry((0),self__.key,null));\r\n\r\nbreak;\r\ncase (1):\r\nreturn (new cljs.core.MapEntry((1),self__.val,null));\r\n\r\nbreak;\r\ndefault:\r\nreturn null;\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.lastIndexOf \x3d (function() {\r\nvar G__20638 \x3d null;\r\nvar G__20638__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\r\n});\r\nvar G__20638__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__20638 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__20638__1.call(this,x);\r\ncase 2:\r\nreturn G__20638__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__20638.cljs$core$IFn$_invoke$arity$1 \x3d G__20638__1;\r\nG__20638.cljs$core$IFn$_invoke$arity$2 \x3d G__20638__2;\r\nreturn G__20638;\r\n})()\r\n);\r\n\r\n(cljs.core.RedNode.prototype.indexOf \x3d (function() {\r\nvar G__20640 \x3d null;\r\nvar G__20640__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__20640__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__20640 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__20640__1.call(this,x);\r\ncase 2:\r\nreturn G__20640__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__20640.cljs$core$IFn$_invoke$arity$1 \x3d G__20640__1;\r\nG__20640.cljs$core$IFn$_invoke$arity$2 \x3d G__20640__2;\r\nreturn G__20640;\r\n})()\r\n);\r\n\r\n(cljs.core.RedNode.prototype.add_right \x3d (function (ins){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.redden \x3d (function (){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nthrow (new Error(\x22red-black tree invariant violation\x22));\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.blacken \x3d (function (){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.add_left \x3d (function (ins){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.replace \x3d (function (key__$1,val__$1,left__$1,right__$1){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.balance_left \x3d (function (parent){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nif((self__.left instanceof cljs.core.RedNode)){\r\nreturn (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));\r\n} else {\r\nif((self__.right instanceof cljs.core.RedNode)){\r\nreturn (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));\r\n} else {\r\nreturn (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.balance_right \x3d (function (parent){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nif((self__.right instanceof cljs.core.RedNode)){\r\nreturn (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));\r\n} else {\r\nif((self__.left instanceof cljs.core.RedNode)){\r\nreturn (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));\r\n} else {\r\nreturn (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.remove_left \x3d (function (del){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.kv_reduce \x3d (function (f,init){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn cljs.core.tree_map_kv_reduce(node,f,init);\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.remove_right \x3d (function (del){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (node,k){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn node__$1.cljs$core$IIndexed$_nth$arity$3(null,k,null);\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (node,k,not_found){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn node__$1.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 \x3d (function (node,n){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nif((n \x3d\x3d\x3d (0))){\r\nreturn self__.key;\r\n} else {\r\nif((n \x3d\x3d\x3d (1))){\r\nreturn self__.val;\r\n} else {\r\nthrow (new Error(\x22Index out of bounds\x22));\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 \x3d (function (node,n,not_found){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nif((n \x3d\x3d\x3d (0))){\r\nreturn self__.key;\r\n} else {\r\nif((n \x3d\x3d\x3d (1))){\r\nreturn self__.val;\r\n} else {\r\nreturn not_found;\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 \x3d (function (node,n,v){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn null;\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn (2);\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn self__.key;\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn self__.val;\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn self__.val;\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IReversible$_rseq$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn (new cljs.core.IndexedSeq([self__.val,self__.key],(0),null));\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.equiv_sequential(coll__$1,other);\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn null;\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (node,f){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (node,f,start){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (node,k,v){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (node,k){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn (((k \x3d\x3d\x3d (0))) || ((k \x3d\x3d\x3d (1))));\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (node){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn (new cljs.core.IndexedSeq([self__.key,self__.val],(0),null));\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (node,meta){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (node,o){\r\nvar self__ \x3d this;\r\nvar node__$1 \x3d this;\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.call \x3d (function (unused__9633__auto__){\r\nvar self__ \x3d this;\r\nvar self__ \x3d this;\r\nvar G__15956 \x3d (arguments.length - (1));\r\nswitch (G__15956) {\r\ncase (1):\r\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\r\n\r\nbreak;\r\ncase (2):\r\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.apply \x3d (function (self__,args15954){\r\nvar self__ \x3d this;\r\nvar self____$1 \x3d this;\r\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15954)));\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn node.cljs$core$IIndexed$_nth$arity$2(null,k);\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\r\nvar self__ \x3d this;\r\nvar node \x3d this;\r\nreturn node.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);\r\n}));\r\n\r\n(cljs.core.RedNode.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22key\x22,\x22key\x22,124488940,null),new cljs.core.Symbol(null,\x22val\x22,\x22val\x22,1769233139,null),new cljs.core.Symbol(null,\x22left\x22,\x22left\x22,1241415590,null),new cljs.core.Symbol(null,\x22right\x22,\x22right\x22,1187949694,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.RedNode.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.RedNode.cljs$lang$ctorStr \x3d \x22cljs.core/RedNode\x22);\r\n\r\n(cljs.core.RedNode.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/RedNode\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/RedNode.\r\n */\r\ncljs.core.__GT_RedNode \x3d (function cljs$core$__GT_RedNode(key,val,left,right,__hash){\r\nreturn (new cljs.core.RedNode(key,val,left,right,__hash));\r\n});\r\n\r\n(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\ncljs.core.tree_map_add \x3d (function cljs$core$tree_map_add(comp,tree,k,v,found){\r\nif((tree \x3d\x3d null)){\r\nreturn (new cljs.core.RedNode(k,v,null,null,null));\r\n} else {\r\nvar c \x3d (function (){var G__15957 \x3d k;\r\nvar G__15958 \x3d tree.key;\r\nreturn (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15957,G__15958) : comp.call(null,G__15957,G__15958));\r\n})();\r\nif((c \x3d\x3d\x3d (0))){\r\n(found[(0)] \x3d tree);\r\n\r\nreturn null;\r\n} else {\r\nif((c \x3c (0))){\r\nvar ins \x3d (function (){var G__15959 \x3d comp;\r\nvar G__15960 \x3d tree.left;\r\nvar G__15961 \x3d k;\r\nvar G__15962 \x3d v;\r\nvar G__15963 \x3d found;\r\nreturn (cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__15959,G__15960,G__15961,G__15962,G__15963) : cljs.core.tree_map_add.call(null,G__15959,G__15960,G__15961,G__15962,G__15963));\r\n})();\r\nif((!((ins \x3d\x3d null)))){\r\nreturn tree.add_left(ins);\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nvar ins \x3d (function (){var G__15964 \x3d comp;\r\nvar G__15965 \x3d tree.right;\r\nvar G__15966 \x3d k;\r\nvar G__15967 \x3d v;\r\nvar G__15968 \x3d found;\r\nreturn (cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__15964,G__15965,G__15966,G__15967,G__15968) : cljs.core.tree_map_add.call(null,G__15964,G__15965,G__15966,G__15967,G__15968));\r\n})();\r\nif((!((ins \x3d\x3d null)))){\r\nreturn tree.add_right(ins);\r\n} else {\r\nreturn null;\r\n}\r\n\r\n}\r\n}\r\n}\r\n});\r\ncljs.core.tree_map_append \x3d (function cljs$core$tree_map_append(left,right){\r\nif((left \x3d\x3d null)){\r\nreturn right;\r\n} else {\r\nif((right \x3d\x3d null)){\r\nreturn left;\r\n} else {\r\nif((left instanceof cljs.core.RedNode)){\r\nif((right instanceof cljs.core.RedNode)){\r\nvar app \x3d (function (){var G__15969 \x3d left.right;\r\nvar G__15970 \x3d right.left;\r\nreturn (cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__15969,G__15970) : cljs.core.tree_map_append.call(null,G__15969,G__15970));\r\n})();\r\nif((app instanceof cljs.core.RedNode)){\r\nreturn (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));\r\n} else {\r\nreturn (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));\r\n}\r\n} else {\r\nreturn (new cljs.core.RedNode(left.key,left.val,left.left,(function (){var G__15971 \x3d left.right;\r\nvar G__15972 \x3d right;\r\nreturn (cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__15971,G__15972) : cljs.core.tree_map_append.call(null,G__15971,G__15972));\r\n})(),null));\r\n}\r\n} else {\r\nif((right instanceof cljs.core.RedNode)){\r\nreturn (new cljs.core.RedNode(right.key,right.val,(function (){var G__15973 \x3d left;\r\nvar G__15974 \x3d right.left;\r\nreturn (cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__15973,G__15974) : cljs.core.tree_map_append.call(null,G__15973,G__15974));\r\n})(),right.right,null));\r\n} else {\r\nvar app \x3d (function (){var G__15975 \x3d left.right;\r\nvar G__15976 \x3d right.left;\r\nreturn (cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__15975,G__15976) : cljs.core.tree_map_append.call(null,G__15975,G__15976));\r\n})();\r\nif((app instanceof cljs.core.RedNode)){\r\nreturn (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));\r\n} else {\r\nreturn cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));\r\n}\r\n\r\n}\r\n}\r\n}\r\n}\r\n});\r\ncljs.core.tree_map_remove \x3d (function cljs$core$tree_map_remove(comp,tree,k,found){\r\nif((!((tree \x3d\x3d null)))){\r\nvar c \x3d (function (){var G__15977 \x3d k;\r\nvar G__15978 \x3d tree.key;\r\nreturn (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15977,G__15978) : comp.call(null,G__15977,G__15978));\r\n})();\r\nif((c \x3d\x3d\x3d (0))){\r\n(found[(0)] \x3d tree);\r\n\r\nreturn cljs.core.tree_map_append(tree.left,tree.right);\r\n} else {\r\nif((c \x3c (0))){\r\nvar del \x3d (function (){var G__15979 \x3d comp;\r\nvar G__15980 \x3d tree.left;\r\nvar G__15981 \x3d k;\r\nvar G__15982 \x3d found;\r\nreturn (cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__15979,G__15980,G__15981,G__15982) : cljs.core.tree_map_remove.call(null,G__15979,G__15980,G__15981,G__15982));\r\n})();\r\nif((((!((del \x3d\x3d null)))) || ((!(((found[(0)]) \x3d\x3d null)))))){\r\nif((tree.left instanceof cljs.core.BlackNode)){\r\nreturn cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);\r\n} else {\r\nreturn (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nvar del \x3d (function (){var G__15983 \x3d comp;\r\nvar G__15984 \x3d tree.right;\r\nvar G__15985 \x3d k;\r\nvar G__15986 \x3d found;\r\nreturn (cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__15983,G__15984,G__15985,G__15986) : cljs.core.tree_map_remove.call(null,G__15983,G__15984,G__15985,G__15986));\r\n})();\r\nif((((!((del \x3d\x3d null)))) || ((!(((found[(0)]) \x3d\x3d null)))))){\r\nif((tree.right instanceof cljs.core.BlackNode)){\r\nreturn cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);\r\n} else {\r\nreturn (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n\r\n}\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ncljs.core.tree_map_replace \x3d (function cljs$core$tree_map_replace(comp,tree,k,v){\r\nvar tk \x3d tree.key;\r\nvar c \x3d (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k,tk) : comp.call(null,k,tk));\r\nif((c \x3d\x3d\x3d (0))){\r\nreturn tree.replace(tk,v,tree.left,tree.right);\r\n} else {\r\nif((c \x3c (0))){\r\nreturn tree.replace(tk,tree.val,(function (){var G__15987 \x3d comp;\r\nvar G__15988 \x3d tree.left;\r\nvar G__15989 \x3d k;\r\nvar G__15990 \x3d v;\r\nreturn (cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__15987,G__15988,G__15989,G__15990) : cljs.core.tree_map_replace.call(null,G__15987,G__15988,G__15989,G__15990));\r\n})(),tree.right);\r\n} else {\r\nreturn tree.replace(tk,tree.val,tree.left,(function (){var G__15991 \x3d comp;\r\nvar G__15992 \x3d tree.right;\r\nvar G__15993 \x3d k;\r\nvar G__15994 \x3d v;\r\nreturn (cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__15991,G__15992,G__15993,G__15994) : cljs.core.tree_map_replace.call(null,G__15991,G__15992,G__15993,G__15994));\r\n})());\r\n\r\n}\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IReversible}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IFn}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IFind}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISorted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ncljs.core.PersistentTreeMap \x3d (function (comp,tree,cnt,meta,__hash){\r\nthis.comp \x3d comp;\r\nthis.tree \x3d tree;\r\nthis.cnt \x3d cnt;\r\nthis.meta \x3d meta;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 418776847;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 8192;\r\n});\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$_find$arity$2 \x3d (function (coll,k){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1.entry_at(k);\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.forEach \x3d (function (f){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nvar seq__15996 \x3d cljs.core.seq(coll);\r\nvar chunk__15997 \x3d null;\r\nvar count__15998 \x3d (0);\r\nvar i__15999 \x3d (0);\r\nwhile(true){\r\nif((i__15999 \x3c count__15998)){\r\nvar vec__16006 \x3d chunk__15997.cljs$core$IIndexed$_nth$arity$2(null,i__15999);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16006,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16006,(1),null);\r\n(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v,k) : f.call(null,v,k));\r\n\r\n\r\nvar G__20711 \x3d seq__15996;\r\nvar G__20712 \x3d chunk__15997;\r\nvar G__20713 \x3d count__15998;\r\nvar G__20714 \x3d (i__15999 + (1));\r\nseq__15996 \x3d G__20711;\r\nchunk__15997 \x3d G__20712;\r\ncount__15998 \x3d G__20713;\r\ni__15999 \x3d G__20714;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto__ \x3d cljs.core.seq(seq__15996);\r\nif(temp__5753__auto__){\r\nvar seq__15996__$1 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__15996__$1)){\r\nvar c__4679__auto__ \x3d cljs.core.chunk_first(seq__15996__$1);\r\nvar G__20720 \x3d cljs.core.chunk_rest(seq__15996__$1);\r\nvar G__20721 \x3d c__4679__auto__;\r\nvar G__20722 \x3d cljs.core.count(c__4679__auto__);\r\nvar G__20723 \x3d (0);\r\nseq__15996 \x3d G__20720;\r\nchunk__15997 \x3d G__20721;\r\ncount__15998 \x3d G__20722;\r\ni__15999 \x3d G__20723;\r\ncontinue;\r\n} else {\r\nvar vec__16009 \x3d cljs.core.first(seq__15996__$1);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16009,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16009,(1),null);\r\n(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v,k) : f.call(null,v,k));\r\n\r\n\r\nvar G__20724 \x3d cljs.core.next(seq__15996__$1);\r\nvar G__20725 \x3d null;\r\nvar G__20726 \x3d (0);\r\nvar G__20727 \x3d (0);\r\nseq__15996 \x3d G__20724;\r\nchunk__15997 \x3d G__20725;\r\ncount__15998 \x3d G__20726;\r\ni__15999 \x3d G__20727;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.get \x3d (function (k,not_found){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.entries \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.es6_entries_iterator(cljs.core.seq(coll));\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.keys \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.es6_iterator((cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null,coll)));\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.values \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.es6_iterator((cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null,coll)));\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.entry_at \x3d (function (k){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nvar t \x3d self__.tree;\r\nwhile(true){\r\nif((!((t \x3d\x3d null)))){\r\nvar c \x3d (function (){var G__16012 \x3d k;\r\nvar G__16013 \x3d t.key;\r\nreturn (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__16012,G__16013) : self__.comp.call(null,G__16012,G__16013));\r\n})();\r\nif((c \x3d\x3d\x3d (0))){\r\nreturn t;\r\n} else {\r\nif((c \x3c (0))){\r\nvar G__20729 \x3d t.left;\r\nt \x3d G__20729;\r\ncontinue;\r\n} else {\r\nvar G__20730 \x3d t.right;\r\nt \x3d G__20730;\r\ncontinue;\r\n\r\n}\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.has \x3d (function (k){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.contains_QMARK_(coll,k);\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (coll,k){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null);\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (coll,k,not_found){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar n \x3d coll__$1.entry_at(k);\r\nif((!((n \x3d\x3d null)))){\r\nreturn n.val;\r\n} else {\r\nreturn not_found;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (coll,f,init){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((!((self__.tree \x3d\x3d null)))){\r\nreturn cljs.core.unreduced(cljs.core.tree_map_kv_reduce(self__.tree,f,init));\r\n} else {\r\nreturn init;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.cnt;\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.cnt \x3e (0))){\r\nreturn cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_unordered_coll(coll__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.equiv_map(coll__$1,other);\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (coll,k){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar found \x3d [null];\r\nvar t \x3d cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);\r\nif((t \x3d\x3d null)){\r\nif((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) \x3d\x3d null)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));\r\n}\r\n} else {\r\nreturn (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (coll,k,v){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar found \x3d [null];\r\nvar t \x3d cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);\r\nif((t \x3d\x3d null)){\r\nvar found_node \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));\r\n}\r\n} else {\r\nreturn (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (coll,k){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (!((coll__$1.entry_at(k) \x3d\x3d null)));\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.cnt \x3e (0))){\r\nreturn cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,new_meta,self__.__hash));\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,entry){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(entry)){\r\nreturn coll__$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry,(0)),cljs.core._nth(entry,(1)));\r\n} else {\r\nvar ret \x3d coll__$1;\r\nvar es \x3d cljs.core.seq(entry);\r\nwhile(true){\r\nif((es \x3d\x3d null)){\r\nreturn ret;\r\n} else {\r\nvar e \x3d cljs.core.first(es);\r\nif(cljs.core.vector_QMARK_(e)){\r\nvar G__20741 \x3d cljs.core._assoc(ret,cljs.core._nth(e,(0)),cljs.core._nth(e,(1)));\r\nvar G__20742 \x3d cljs.core.next(es);\r\nret \x3d G__20741;\r\nes \x3d G__20742;\r\ncontinue;\r\n} else {\r\nthrow (new Error(\x22conj on a map takes map entries or seqables of map entries\x22));\r\n}\r\n}\r\nbreak;\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.call \x3d (function (unused__9633__auto__){\r\nvar self__ \x3d this;\r\nvar self__ \x3d this;\r\nvar G__16014 \x3d (arguments.length - (1));\r\nswitch (G__16014) {\r\ncase (1):\r\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\r\n\r\nbreak;\r\ncase (2):\r\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.apply \x3d (function (self__,args15995){\r\nvar self__ \x3d this;\r\nvar self____$1 \x3d this;\r\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15995)));\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn coll.cljs$core$ILookup$_lookup$arity$2(null,k);\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 \x3d (function (coll,ascending_QMARK_){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.cnt \x3e (0))){\r\nreturn cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 \x3d (function (coll,k,ascending_QMARK_){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.cnt \x3e (0))){\r\nvar stack \x3d null;\r\nvar t \x3d self__.tree;\r\nwhile(true){\r\nif((!((t \x3d\x3d null)))){\r\nvar c \x3d (function (){var G__16017 \x3d k;\r\nvar G__16018 \x3d t.key;\r\nreturn (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__16017,G__16018) : self__.comp.call(null,G__16017,G__16018));\r\n})();\r\nif((c \x3d\x3d\x3d (0))){\r\nreturn (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));\r\n} else {\r\nif(cljs.core.truth_(ascending_QMARK_)){\r\nif((c \x3c (0))){\r\nvar G__20753 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);\r\nvar G__20754 \x3d t.left;\r\nstack \x3d G__20753;\r\nt \x3d G__20754;\r\ncontinue;\r\n} else {\r\nvar G__20755 \x3d stack;\r\nvar G__20756 \x3d t.right;\r\nstack \x3d G__20755;\r\nt \x3d G__20756;\r\ncontinue;\r\n}\r\n} else {\r\nif((c \x3e (0))){\r\nvar G__20757 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);\r\nvar G__20758 \x3d t.right;\r\nstack \x3d G__20757;\r\nt \x3d G__20758;\r\ncontinue;\r\n} else {\r\nvar G__20759 \x3d stack;\r\nvar G__20760 \x3d t.left;\r\nstack \x3d G__20759;\r\nt \x3d G__20760;\r\ncontinue;\r\n}\r\n\r\n}\r\n}\r\n} else {\r\nif((stack \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));\r\n}\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 \x3d (function (coll,entry){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null,entry));\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.comp;\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22comp\x22,\x22comp\x22,-1462482139,null),new cljs.core.Symbol(null,\x22tree\x22,\x22tree\x22,1444219499,null),new cljs.core.Symbol(null,\x22cnt\x22,\x22cnt\x22,1924510325,null),new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.PersistentTreeMap.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentTreeMap\x22);\r\n\r\n(cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/PersistentTreeMap\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/PersistentTreeMap.\r\n */\r\ncljs.core.__GT_PersistentTreeMap \x3d (function cljs$core$__GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){\r\nreturn (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));\r\n});\r\n\r\n(cljs.core.PersistentTreeMap.EMPTY \x3d (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash)));\r\n(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\n/**\r\n * keyval \x3d\x3e key val\r\n *   Returns a new hash map with supplied mappings.\r\n */\r\ncljs.core.hash_map \x3d (function cljs$core$hash_map(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___20775 \x3d arguments.length;\r\nvar i__4865__auto___20776 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___20776 \x3c len__4864__auto___20775)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___20776]));\r\n\r\nvar G__20786 \x3d (i__4865__auto___20776 + (1));\r\ni__4865__auto___20776 \x3d G__20786;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic \x3d (function (keyvals){\r\nvar in$ \x3d cljs.core.seq(keyvals);\r\nvar out \x3d cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);\r\nwhile(true){\r\nif(in$){\r\nvar in_SINGLEQUOTE_ \x3d cljs.core.next(in$);\r\nif((in_SINGLEQUOTE_ \x3d\x3d null)){\r\nthrow (new Error([\x22No value supplied for key: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(in$))].join(\x27\x27)));\r\n} else {\r\nvar G__20791 \x3d cljs.core.next(in_SINGLEQUOTE_);\r\nvar G__20792 \x3d cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.first(in_SINGLEQUOTE_));\r\nin$ \x3d G__20791;\r\nout \x3d G__20792;\r\ncontinue;\r\n}\r\n} else {\r\nreturn cljs.core.persistent_BANG_(out);\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.hash_map.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(cljs.core.hash_map.cljs$lang$applyTo \x3d (function (seq16019){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16019));\r\n}));\r\n\r\n/**\r\n * keyval \x3d\x3e key val\r\n *   Returns a new array map with supplied mappings.\r\n */\r\ncljs.core.array_map \x3d (function cljs$core$array_map(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___20794 \x3d arguments.length;\r\nvar i__4865__auto___20795 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___20795 \x3c len__4864__auto___20794)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___20795]));\r\n\r\nvar G__20797 \x3d (i__4865__auto___20795 + (1));\r\ni__4865__auto___20795 \x3d G__20797;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic \x3d (function (keyvals){\r\nvar arr \x3d (((((keyvals instanceof cljs.core.IndexedSeq)) \x26\x26 ((keyvals.i \x3d\x3d\x3d (0)))))?keyvals.arr:cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals));\r\nreturn cljs.core.PersistentArrayMap.createAsIfByAssoc(arr);\r\n}));\r\n\r\n(cljs.core.array_map.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(cljs.core.array_map.cljs$lang$applyTo \x3d (function (seq16020){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16020));\r\n}));\r\n\r\n/**\r\n * keyval \x3d\x3e key val\r\n *   Returns a new object map with supplied mappings.\r\n */\r\ncljs.core.obj_map \x3d (function cljs$core$obj_map(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___20799 \x3d arguments.length;\r\nvar i__4865__auto___20801 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___20801 \x3c len__4864__auto___20799)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___20801]));\r\n\r\nvar G__20803 \x3d (i__4865__auto___20801 + (1));\r\ni__4865__auto___20801 \x3d G__20803;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic \x3d (function (keyvals){\r\nvar ks \x3d [];\r\nvar obj \x3d ({});\r\nvar kvs \x3d cljs.core.seq(keyvals);\r\nwhile(true){\r\nif(kvs){\r\nks.push(cljs.core.first(kvs));\r\n\r\ncljs.core.goog$module$goog$object.set(obj,cljs.core.first(kvs),cljs.core.second(kvs));\r\n\r\nvar G__20806 \x3d cljs.core.nnext(kvs);\r\nkvs \x3d G__20806;\r\ncontinue;\r\n} else {\r\nreturn cljs.core.ObjMap.fromObject(ks,obj);\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.obj_map.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(cljs.core.obj_map.cljs$lang$applyTo \x3d (function (seq16021){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16021));\r\n}));\r\n\r\n/**\r\n * keyval \x3d\x3e key val\r\n *   Returns a new sorted map with supplied mappings.\r\n */\r\ncljs.core.sorted_map \x3d (function cljs$core$sorted_map(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___20807 \x3d arguments.length;\r\nvar i__4865__auto___20808 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___20808 \x3c len__4864__auto___20807)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___20808]));\r\n\r\nvar G__20810 \x3d (i__4865__auto___20808 + (1));\r\ni__4865__auto___20808 \x3d G__20810;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic \x3d (function (keyvals){\r\nvar in$ \x3d cljs.core.seq(keyvals);\r\nvar out \x3d cljs.core.PersistentTreeMap.EMPTY;\r\nwhile(true){\r\nif(in$){\r\nvar G__20813 \x3d cljs.core.nnext(in$);\r\nvar G__20814 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));\r\nin$ \x3d G__20813;\r\nout \x3d G__20814;\r\ncontinue;\r\n} else {\r\nreturn out;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.sorted_map.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(cljs.core.sorted_map.cljs$lang$applyTo \x3d (function (seq16024){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16024));\r\n}));\r\n\r\n/**\r\n * keyval \x3d\x3e key val\r\n *   Returns a new sorted map with supplied mappings, using the supplied comparator.\r\n */\r\ncljs.core.sorted_map_by \x3d (function cljs$core$sorted_map_by(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___20816 \x3d arguments.length;\r\nvar i__4865__auto___20817 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___20817 \x3c len__4864__auto___20816)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___20817]));\r\n\r\nvar G__20818 \x3d (i__4865__auto___20817 + (1));\r\ni__4865__auto___20817 \x3d G__20818;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((1) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((1)),(0),null)):null);\r\nreturn cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic \x3d (function (comparator,keyvals){\r\nvar in$ \x3d cljs.core.seq(keyvals);\r\nvar out \x3d (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));\r\nwhile(true){\r\nif(in$){\r\nvar G__20827 \x3d cljs.core.nnext(in$);\r\nvar G__20828 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));\r\nin$ \x3d G__20827;\r\nout \x3d G__20828;\r\ncontinue;\r\n} else {\r\nreturn out;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.sorted_map_by.cljs$lang$maxFixedArity \x3d (1));\r\n\r\n/** @this {Function} */\r\n(cljs.core.sorted_map_by.cljs$lang$applyTo \x3d (function (seq16025){\r\nvar G__16026 \x3d cljs.core.first(seq16025);\r\nvar seq16025__$1 \x3d cljs.core.next(seq16025);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__16026,seq16025__$1);\r\n}));\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.INext}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.KeySeq \x3d (function (mseq,_meta){\r\nthis.mseq \x3d mseq;\r\nthis._meta \x3d _meta;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32374988;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.KeySeq.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.KeySeq.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.KeySeq.prototype.indexOf \x3d (function() {\r\nvar G__20837 \x3d null;\r\nvar G__20837__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__20837__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__20837 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__20837__1.call(this,x);\r\ncase 2:\r\nreturn G__20837__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__20837.cljs$core$IFn$_invoke$arity$1 \x3d G__20837__1;\r\nG__20837.cljs$core$IFn$_invoke$arity$2 \x3d G__20837__2;\r\nreturn G__20837;\r\n})()\r\n);\r\n\r\n(cljs.core.KeySeq.prototype.lastIndexOf \x3d (function() {\r\nvar G__20839 \x3d null;\r\nvar G__20839__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\r\n});\r\nvar G__20839__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__20839 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__20839__1.call(this,x);\r\ncase 2:\r\nreturn G__20839__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__20839.cljs$core$IFn$_invoke$arity$1 \x3d G__20839__1;\r\nG__20839.cljs$core$IFn$_invoke$arity$2 \x3d G__20839__2;\r\nreturn G__20839;\r\n})()\r\n);\r\n\r\n(cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__._meta;\r\n}));\r\n\r\n(cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar nseq \x3d (((((!((self__.mseq \x3d\x3d null))))?(((((self__.mseq.cljs$lang$protocol_mask$partition0$ \x26 (128))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d self__.mseq.cljs$core$INext$))))?true:(((!self__.mseq.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq):false)):cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq)))?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));\r\nif((nseq \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn (new cljs.core.KeySeq(nseq,null));\r\n}\r\n}));\r\n\r\n(cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.hash_ordered_coll(coll__$1);\r\n}));\r\n\r\n(cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.equiv_sequential(coll__$1,other);\r\n}));\r\n\r\n(cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.List.EMPTY;\r\n}));\r\n\r\n(cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);\r\n}));\r\n\r\n(cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);\r\n}));\r\n\r\n(cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar me \x3d self__.mseq.cljs$core$ISeq$_first$arity$1(null);\r\nreturn me.cljs$core$IMapEntry$_key$arity$1(null);\r\n}));\r\n\r\n(cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar nseq \x3d (((((!((self__.mseq \x3d\x3d null))))?(((((self__.mseq.cljs$lang$protocol_mask$partition0$ \x26 (128))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d self__.mseq.cljs$core$INext$))))?true:(((!self__.mseq.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq):false)):cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq)))?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));\r\nif((!((nseq \x3d\x3d null)))){\r\nreturn (new cljs.core.KeySeq(nseq,null));\r\n} else {\r\nreturn cljs.core.List.EMPTY;\r\n}\r\n}));\r\n\r\n(cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1;\r\n}));\r\n\r\n(cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__._meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.KeySeq(self__.mseq,new_meta));\r\n}\r\n}));\r\n\r\n(cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.cons(o,coll__$1);\r\n}));\r\n\r\n(cljs.core.KeySeq.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22mseq\x22,\x22mseq\x22,1602647196,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22not-native\x22,\x22not-native\x22,-236392494,null)], null)),new cljs.core.Symbol(null,\x22_meta\x22,\x22_meta\x22,-1716892533,null)], null);\r\n}));\r\n\r\n(cljs.core.KeySeq.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.KeySeq.cljs$lang$ctorStr \x3d \x22cljs.core/KeySeq\x22);\r\n\r\n(cljs.core.KeySeq.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/KeySeq\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/KeySeq.\r\n */\r\ncljs.core.__GT_KeySeq \x3d (function cljs$core$__GT_KeySeq(mseq,_meta){\r\nreturn (new cljs.core.KeySeq(mseq,_meta));\r\n});\r\n\r\n(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\n/**\r\n * Returns a sequence of the map\x27s keys, in the same order as (seq map).\r\n */\r\ncljs.core.keys \x3d (function cljs$core$keys(map){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(map);\r\nif(temp__5753__auto__){\r\nvar mseq \x3d temp__5753__auto__;\r\nreturn (new cljs.core.KeySeq(mseq,null));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Returns the key of the map entry.\r\n */\r\ncljs.core.key \x3d (function cljs$core$key(map_entry){\r\nreturn cljs.core._key(map_entry);\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.INext}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.ValSeq \x3d (function (mseq,_meta){\r\nthis.mseq \x3d mseq;\r\nthis._meta \x3d _meta;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32374988;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.ValSeq.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.ValSeq.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.ValSeq.prototype.indexOf \x3d (function() {\r\nvar G__20856 \x3d null;\r\nvar G__20856__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__20856__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__20856 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__20856__1.call(this,x);\r\ncase 2:\r\nreturn G__20856__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__20856.cljs$core$IFn$_invoke$arity$1 \x3d G__20856__1;\r\nG__20856.cljs$core$IFn$_invoke$arity$2 \x3d G__20856__2;\r\nreturn G__20856;\r\n})()\r\n);\r\n\r\n(cljs.core.ValSeq.prototype.lastIndexOf \x3d (function() {\r\nvar G__20857 \x3d null;\r\nvar G__20857__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\r\n});\r\nvar G__20857__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\r\n});\r\nG__20857 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__20857__1.call(this,x);\r\ncase 2:\r\nreturn G__20857__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__20857.cljs$core$IFn$_invoke$arity$1 \x3d G__20857__1;\r\nG__20857.cljs$core$IFn$_invoke$arity$2 \x3d G__20857__2;\r\nreturn G__20857;\r\n})()\r\n);\r\n\r\n(cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__._meta;\r\n}));\r\n\r\n(cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar nseq \x3d (((((!((self__.mseq \x3d\x3d null))))?(((((self__.mseq.cljs$lang$protocol_mask$partition0$ \x26 (128))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d self__.mseq.cljs$core$INext$))))?true:(((!self__.mseq.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq):false)):cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq)))?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));\r\nif((nseq \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn (new cljs.core.ValSeq(nseq,null));\r\n}\r\n}));\r\n\r\n(cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.hash_ordered_coll(coll__$1);\r\n}));\r\n\r\n(cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.equiv_sequential(coll__$1,other);\r\n}));\r\n\r\n(cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.List.EMPTY;\r\n}));\r\n\r\n(cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);\r\n}));\r\n\r\n(cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);\r\n}));\r\n\r\n(cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar me \x3d self__.mseq.cljs$core$ISeq$_first$arity$1(null);\r\nreturn me.cljs$core$IMapEntry$_val$arity$1(null);\r\n}));\r\n\r\n(cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar nseq \x3d (((((!((self__.mseq \x3d\x3d null))))?(((((self__.mseq.cljs$lang$protocol_mask$partition0$ \x26 (128))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d self__.mseq.cljs$core$INext$))))?true:(((!self__.mseq.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq):false)):cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq)))?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));\r\nif((!((nseq \x3d\x3d null)))){\r\nreturn (new cljs.core.ValSeq(nseq,null));\r\n} else {\r\nreturn cljs.core.List.EMPTY;\r\n}\r\n}));\r\n\r\n(cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1;\r\n}));\r\n\r\n(cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__._meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.ValSeq(self__.mseq,new_meta));\r\n}\r\n}));\r\n\r\n(cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.cons(o,coll__$1);\r\n}));\r\n\r\n(cljs.core.ValSeq.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22mseq\x22,\x22mseq\x22,1602647196,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22not-native\x22,\x22not-native\x22,-236392494,null)], null)),new cljs.core.Symbol(null,\x22_meta\x22,\x22_meta\x22,-1716892533,null)], null);\r\n}));\r\n\r\n(cljs.core.ValSeq.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.ValSeq.cljs$lang$ctorStr \x3d \x22cljs.core/ValSeq\x22);\r\n\r\n(cljs.core.ValSeq.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/ValSeq\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/ValSeq.\r\n */\r\ncljs.core.__GT_ValSeq \x3d (function cljs$core$__GT_ValSeq(mseq,_meta){\r\nreturn (new cljs.core.ValSeq(mseq,_meta));\r\n});\r\n\r\n(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\n/**\r\n * Returns a sequence of the map\x27s values, in the same order as (seq map).\r\n */\r\ncljs.core.vals \x3d (function cljs$core$vals(map){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(map);\r\nif(temp__5753__auto__){\r\nvar mseq \x3d temp__5753__auto__;\r\nreturn (new cljs.core.ValSeq(mseq,null));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Returns the value in the map entry.\r\n */\r\ncljs.core.val \x3d (function cljs$core$val(map_entry){\r\nreturn cljs.core._val(map_entry);\r\n});\r\n/**\r\n * Returns a map that consists of the rest of the maps conj-ed onto\r\n *   the first.  If a key occurs in more than one map, the mapping from\r\n *   the latter (left-to-right) will be the mapping in the result.\r\n */\r\ncljs.core.merge \x3d (function cljs$core$merge(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___20871 \x3d arguments.length;\r\nvar i__4865__auto___20872 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___20872 \x3c len__4864__auto___20871)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___20872]));\r\n\r\nvar G__20873 \x3d (i__4865__auto___20872 + (1));\r\ni__4865__auto___20872 \x3d G__20873;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic \x3d (function (maps){\r\nif(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__16031_SHARP_,p2__16032_SHARP_){\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__4253__auto__ \x3d p1__16031_SHARP_;\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.core.PersistentArrayMap.EMPTY;\r\n}\r\n})(),p2__16032_SHARP_);\r\n}),maps);\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.merge.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(cljs.core.merge.cljs$lang$applyTo \x3d (function (seq16033){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16033));\r\n}));\r\n\r\n/**\r\n * Returns a map that consists of the rest of the maps conj-ed onto\r\n *   the first.  If a key occurs in more than one map, the mapping(s)\r\n *   from the latter (left-to-right) will be combined with the mapping in\r\n *   the result by calling (f val-in-result val-in-latter).\r\n */\r\ncljs.core.merge_with \x3d (function cljs$core$merge_with(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___20874 \x3d arguments.length;\r\nvar i__4865__auto___20875 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___20875 \x3c len__4864__auto___20874)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___20875]));\r\n\r\nvar G__20876 \x3d (i__4865__auto___20875 + (1));\r\ni__4865__auto___20875 \x3d G__20876;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((1) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((1)),(0),null)):null);\r\nreturn cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,maps){\r\nif(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){\r\nvar merge_entry \x3d (function (m,e){\r\nvar k \x3d cljs.core.key(e);\r\nvar v \x3d cljs.core.val(e);\r\nif(cljs.core.contains_QMARK_(m,k)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16036 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);\r\nvar G__16037 \x3d v;\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16036,G__16037) : f.call(null,G__16036,G__16037));\r\n})());\r\n} else {\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);\r\n}\r\n});\r\nvar merge2 \x3d (function (m1,m2){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__4253__auto__ \x3d m1;\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.core.PersistentArrayMap.EMPTY;\r\n}\r\n})(),cljs.core.seq(m2));\r\n});\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.merge_with.cljs$lang$maxFixedArity \x3d (1));\r\n\r\n/** @this {Function} */\r\n(cljs.core.merge_with.cljs$lang$applyTo \x3d (function (seq16034){\r\nvar G__16035 \x3d cljs.core.first(seq16034);\r\nvar seq16034__$1 \x3d cljs.core.next(seq16034);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__16035,seq16034__$1);\r\n}));\r\n\r\n/**\r\n * Returns a map containing only those entries in map whose key is in keys\r\n */\r\ncljs.core.select_keys \x3d (function cljs$core$select_keys(map,keyseq){\r\nvar ret \x3d cljs.core.PersistentArrayMap.EMPTY;\r\nvar keys \x3d cljs.core.seq(keyseq);\r\nwhile(true){\r\nif(keys){\r\nvar key \x3d cljs.core.first(keys);\r\nvar entry \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword(\x22cljs.core\x22,\x22not-found\x22,\x22cljs.core/not-found\x22,-1572889185));\r\nvar G__20877 \x3d ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword(\x22cljs.core\x22,\x22not-found\x22,\x22cljs.core/not-found\x22,-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);\r\nvar G__20878 \x3d cljs.core.next(keys);\r\nret \x3d G__20877;\r\nkeys \x3d G__20878;\r\ncontinue;\r\n} else {\r\nreturn cljs.core._with_meta(ret,cljs.core.meta(map));\r\n}\r\nbreak;\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.HashSetIter \x3d (function (iter){\r\nthis.iter \x3d iter;\r\n});\r\n(cljs.core.HashSetIter.prototype.hasNext \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn self__.iter.hasNext();\r\n}));\r\n\r\n(cljs.core.HashSetIter.prototype.next \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nif(self__.iter.hasNext()){\r\nreturn self__.iter.next().key;\r\n} else {\r\nthrow (new Error(\x22No such element\x22));\r\n}\r\n}));\r\n\r\n(cljs.core.HashSetIter.prototype.remove \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (new Error(\x22Unsupported operation\x22));\r\n}));\r\n\r\n(cljs.core.HashSetIter.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22iter\x22,\x22iter\x22,-1346195486,null)], null);\r\n}));\r\n\r\n(cljs.core.HashSetIter.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.HashSetIter.cljs$lang$ctorStr \x3d \x22cljs.core/HashSetIter\x22);\r\n\r\n(cljs.core.HashSetIter.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/HashSetIter\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/HashSetIter.\r\n */\r\ncljs.core.__GT_HashSetIter \x3d (function cljs$core$__GT_HashSetIter(iter){\r\nreturn (new cljs.core.HashSetIter(iter));\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IFn}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IEditableCollection}\r\n * @implements {cljs.core.ISet}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ncljs.core.PersistentHashSet \x3d (function (meta,hash_map,__hash){\r\nthis.meta \x3d meta;\r\nthis.hash_map \x3d hash_map;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 15077647;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139268;\r\n});\r\n(cljs.core.PersistentHashSet.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.keys \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.es6_iterator(cljs.core.seq(coll));\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.entries \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.values \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.es6_iterator(cljs.core.seq(coll));\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.has \x3d (function (k){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.contains_QMARK_(coll,k);\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.forEach \x3d (function (f){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nvar seq__16041 \x3d cljs.core.seq(coll);\r\nvar chunk__16042 \x3d null;\r\nvar count__16043 \x3d (0);\r\nvar i__16044 \x3d (0);\r\nwhile(true){\r\nif((i__16044 \x3c count__16043)){\r\nvar vec__16051 \x3d chunk__16042.cljs$core$IIndexed$_nth$arity$2(null,i__16044);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16051,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16051,(1),null);\r\n(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v,k) : f.call(null,v,k));\r\n\r\n\r\nvar G__20882 \x3d seq__16041;\r\nvar G__20883 \x3d chunk__16042;\r\nvar G__20884 \x3d count__16043;\r\nvar G__20885 \x3d (i__16044 + (1));\r\nseq__16041 \x3d G__20882;\r\nchunk__16042 \x3d G__20883;\r\ncount__16043 \x3d G__20884;\r\ni__16044 \x3d G__20885;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto__ \x3d cljs.core.seq(seq__16041);\r\nif(temp__5753__auto__){\r\nvar seq__16041__$1 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__16041__$1)){\r\nvar c__4679__auto__ \x3d cljs.core.chunk_first(seq__16041__$1);\r\nvar G__20886 \x3d cljs.core.chunk_rest(seq__16041__$1);\r\nvar G__20887 \x3d c__4679__auto__;\r\nvar G__20888 \x3d cljs.core.count(c__4679__auto__);\r\nvar G__20889 \x3d (0);\r\nseq__16041 \x3d G__20886;\r\nchunk__16042 \x3d G__20887;\r\ncount__16043 \x3d G__20888;\r\ni__16044 \x3d G__20889;\r\ncontinue;\r\n} else {\r\nvar vec__16054 \x3d cljs.core.first(seq__16041__$1);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16054,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16054,(1),null);\r\n(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v,k) : f.call(null,v,k));\r\n\r\n\r\nvar G__20890 \x3d cljs.core.next(seq__16041__$1);\r\nvar G__20891 \x3d null;\r\nvar G__20892 \x3d (0);\r\nvar G__20893 \x3d (0);\r\nseq__16041 \x3d G__20890;\r\nchunk__16042 \x3d G__20891;\r\ncount__16043 \x3d G__20892;\r\ni__16044 \x3d G__20893;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (coll,v){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1.cljs$core$ILookup$_lookup$arity$3(null,v,null);\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (coll,v,not_found){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar temp__5751__auto__ \x3d cljs.core._find(self__.hash_map,v);\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar entry \x3d temp__5751__auto__;\r\nreturn cljs.core.key(entry);\r\n} else {\r\nreturn not_found;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map)));\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core._count(self__.hash_map);\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_unordered_coll(coll__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar and__4251__auto__ \x3d cljs.core.set_QMARK_(other);\r\nif(and__4251__auto__){\r\nvar and__4251__auto____$1 \x3d (cljs.core.count(coll__$1) \x3d\x3d\x3d cljs.core.count(other));\r\nif(and__4251__auto____$1){\r\ntry{return cljs.core.reduce_kv((function (p1__16039_SHARP_,p2__16038_SHARP_){\r\nvar or__4253__auto__ \x3d cljs.core.contains_QMARK_(other,p2__16038_SHARP_);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.core.reduced(false);\r\n}\r\n}),true,self__.hash_map);\r\n}catch (e16057){if((e16057 instanceof Error)){\r\nvar ex \x3d e16057;\r\nreturn false;\r\n} else {\r\nthrow e16057;\r\n\r\n}\r\n}} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core._with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 \x3d (function (coll,v){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.keys(self__.hash_map);\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.PersistentHashSet(new_meta,self__.hash_map,self__.__hash));\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.call \x3d (function (unused__9633__auto__){\r\nvar self__ \x3d this;\r\nvar self__ \x3d this;\r\nvar G__16058 \x3d (arguments.length - (1));\r\nswitch (G__16058) {\r\ncase (1):\r\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\r\n\r\nbreak;\r\ncase (2):\r\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.apply \x3d (function (self__,args16040){\r\nvar self__ \x3d this;\r\nvar self____$1 \x3d this;\r\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16040)));\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn coll.cljs$core$ILookup$_lookup$arity$2(null,k);\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22hash-map\x22,\x22hash-map\x22,-439030950,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.PersistentHashSet.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentHashSet\x22);\r\n\r\n(cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/PersistentHashSet\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/PersistentHashSet.\r\n */\r\ncljs.core.__GT_PersistentHashSet \x3d (function cljs$core$__GT_PersistentHashSet(meta,hash_map,__hash){\r\nreturn (new cljs.core.PersistentHashSet(meta,hash_map,__hash));\r\n});\r\n\r\n(cljs.core.PersistentHashSet.EMPTY \x3d (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash)));\r\n(cljs.core.PersistentHashSet.fromArray \x3d (function (items,no_clone){\r\nvar len \x3d items.length;\r\nif((len \x3c\x3d cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){\r\nvar arr \x3d ((no_clone)?items:cljs.core.aclone(items));\r\nvar i \x3d (0);\r\nvar out \x3d cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);\r\nwhile(true){\r\nif((i \x3c len)){\r\nvar G__20946 \x3d (i + (1));\r\nvar G__20947 \x3d cljs.core._assoc_BANG_(out,(items[i]),null);\r\ni \x3d G__20946;\r\nout \x3d G__20947;\r\ncontinue;\r\n} else {\r\nreturn (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));\r\n}\r\nbreak;\r\n}\r\n} else {\r\nvar i \x3d (0);\r\nvar out \x3d cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);\r\nwhile(true){\r\nif((i \x3c len)){\r\nvar G__20955 \x3d (i + (1));\r\nvar G__20956 \x3d cljs.core._conj_BANG_(out,(items[i]));\r\ni \x3d G__20955;\r\nout \x3d G__20956;\r\ncontinue;\r\n} else {\r\nreturn cljs.core._persistent_BANG_(out);\r\n}\r\nbreak;\r\n}\r\n}\r\n}));\r\n(cljs.core.PersistentHashSet.createWithCheck \x3d (function (items){\r\nvar len \x3d items.length;\r\nvar t \x3d cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);\r\nvar n__4741__auto___20960 \x3d len;\r\nvar i_20962 \x3d (0);\r\nwhile(true){\r\nif((i_20962 \x3c n__4741__auto___20960)){\r\ncljs.core._conj_BANG_(t,(items[i_20962]));\r\n\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(t),(i_20962 + (1)))){\r\n} else {\r\nthrow (new Error([\x22Duplicate key: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((items[i_20962]))].join(\x27\x27)));\r\n}\r\n\r\nvar G__20979 \x3d (i_20962 + (1));\r\ni_20962 \x3d G__20979;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn cljs.core._persistent_BANG_(t);\r\n}));\r\n(cljs.core.PersistentHashSet.createAsIfByAssoc \x3d (function (items){\r\nvar len \x3d items.length;\r\nvar t \x3d cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);\r\nvar n__4741__auto___20989 \x3d len;\r\nvar i_20994 \x3d (0);\r\nwhile(true){\r\nif((i_20994 \x3c n__4741__auto___20989)){\r\ncljs.core._conj_BANG_(t,(items[i_20994]));\r\n\r\nvar G__20998 \x3d (i_20994 + (1));\r\ni_20994 \x3d G__20998;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn cljs.core._persistent_BANG_(t);\r\n}));\r\n(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.ITransientSet}\r\n * @implements {cljs.core.IFn}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ITransientCollection}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ncljs.core.TransientHashSet \x3d (function (transient_map){\r\nthis.transient_map \x3d transient_map;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 136;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 259;\r\n});\r\n(cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 \x3d (function (tcoll,o){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\n(self__.transient_map \x3d cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null));\r\n\r\nreturn tcoll__$1;\r\n}));\r\n\r\n(cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 \x3d (function (tcoll){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\nreturn (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));\r\n}));\r\n\r\n(cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 \x3d (function (tcoll,v){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\n(self__.transient_map \x3d cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v));\r\n\r\nreturn tcoll__$1;\r\n}));\r\n\r\n(cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (tcoll){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\nreturn cljs.core.count(self__.transient_map);\r\n}));\r\n\r\n(cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (tcoll,v){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\nreturn tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null,v,null);\r\n}));\r\n\r\n(cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (tcoll,v,not_found){\r\nvar self__ \x3d this;\r\nvar tcoll__$1 \x3d this;\r\nif((cljs.core._lookup(self__.transient_map,v,cljs.core.lookup_sentinel) \x3d\x3d\x3d cljs.core.lookup_sentinel)){\r\nreturn not_found;\r\n} else {\r\nreturn v;\r\n}\r\n}));\r\n\r\n(cljs.core.TransientHashSet.prototype.call \x3d (function (unused__9633__auto__){\r\nvar self__ \x3d this;\r\nvar self__ \x3d this;\r\nvar G__16060 \x3d (arguments.length - (1));\r\nswitch (G__16060) {\r\ncase (1):\r\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\r\n\r\nbreak;\r\ncase (2):\r\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.TransientHashSet.prototype.apply \x3d (function (self__,args16059){\r\nvar self__ \x3d this;\r\nvar self____$1 \x3d this;\r\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16059)));\r\n}));\r\n\r\n(cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\r\nvar self__ \x3d this;\r\nvar tcoll \x3d this;\r\nif((cljs.core._lookup(self__.transient_map,k,cljs.core.lookup_sentinel) \x3d\x3d\x3d cljs.core.lookup_sentinel)){\r\nreturn null;\r\n} else {\r\nreturn k;\r\n}\r\n}));\r\n\r\n(cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\r\nvar self__ \x3d this;\r\nvar tcoll \x3d this;\r\nif((cljs.core._lookup(self__.transient_map,k,cljs.core.lookup_sentinel) \x3d\x3d\x3d cljs.core.lookup_sentinel)){\r\nreturn not_found;\r\n} else {\r\nreturn k;\r\n}\r\n}));\r\n\r\n(cljs.core.TransientHashSet.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22transient-map\x22,\x22transient-map\x22,351764893,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.TransientHashSet.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.TransientHashSet.cljs$lang$ctorStr \x3d \x22cljs.core/TransientHashSet\x22);\r\n\r\n(cljs.core.TransientHashSet.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/TransientHashSet\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/TransientHashSet.\r\n */\r\ncljs.core.__GT_TransientHashSet \x3d (function cljs$core$__GT_TransientHashSet(transient_map){\r\nreturn (new cljs.core.TransientHashSet(transient_map));\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IReversible}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IFn}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ISet}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISorted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ncljs.core.PersistentTreeSet \x3d (function (meta,tree_map,__hash){\r\nthis.meta \x3d meta;\r\nthis.tree_map \x3d tree_map;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 417730831;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 8192;\r\n});\r\n(cljs.core.PersistentTreeSet.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.keys \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.es6_iterator(cljs.core.seq(coll));\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.entries \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.values \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.es6_iterator(cljs.core.seq(coll));\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.has \x3d (function (k){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.contains_QMARK_(coll,k);\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.forEach \x3d (function (f){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nvar seq__16064 \x3d cljs.core.seq(coll);\r\nvar chunk__16065 \x3d null;\r\nvar count__16066 \x3d (0);\r\nvar i__16067 \x3d (0);\r\nwhile(true){\r\nif((i__16067 \x3c count__16066)){\r\nvar vec__16074 \x3d chunk__16065.cljs$core$IIndexed$_nth$arity$2(null,i__16067);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16074,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16074,(1),null);\r\n(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v,k) : f.call(null,v,k));\r\n\r\n\r\nvar G__21069 \x3d seq__16064;\r\nvar G__21070 \x3d chunk__16065;\r\nvar G__21071 \x3d count__16066;\r\nvar G__21072 \x3d (i__16067 + (1));\r\nseq__16064 \x3d G__21069;\r\nchunk__16065 \x3d G__21070;\r\ncount__16066 \x3d G__21071;\r\ni__16067 \x3d G__21072;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto__ \x3d cljs.core.seq(seq__16064);\r\nif(temp__5753__auto__){\r\nvar seq__16064__$1 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__16064__$1)){\r\nvar c__4679__auto__ \x3d cljs.core.chunk_first(seq__16064__$1);\r\nvar G__21074 \x3d cljs.core.chunk_rest(seq__16064__$1);\r\nvar G__21075 \x3d c__4679__auto__;\r\nvar G__21076 \x3d cljs.core.count(c__4679__auto__);\r\nvar G__21077 \x3d (0);\r\nseq__16064 \x3d G__21074;\r\nchunk__16065 \x3d G__21075;\r\ncount__16066 \x3d G__21076;\r\ni__16067 \x3d G__21077;\r\ncontinue;\r\n} else {\r\nvar vec__16077 \x3d cljs.core.first(seq__16064__$1);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16077,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16077,(1),null);\r\n(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v,k) : f.call(null,v,k));\r\n\r\n\r\nvar G__21079 \x3d cljs.core.next(seq__16064__$1);\r\nvar G__21080 \x3d null;\r\nvar G__21081 \x3d (0);\r\nvar G__21082 \x3d (0);\r\nseq__16064 \x3d G__21079;\r\nchunk__16065 \x3d G__21080;\r\ncount__16066 \x3d G__21081;\r\ni__16067 \x3d G__21082;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (coll,v){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn coll__$1.cljs$core$ILookup$_lookup$arity$3(null,v,null);\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (coll,v,not_found){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar n \x3d self__.tree_map.entry_at(v);\r\nif((!((n \x3d\x3d null)))){\r\nreturn n.key;\r\n} else {\r\nreturn not_found;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.count(self__.tree_map);\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((cljs.core.count(self__.tree_map) \x3e (0))){\r\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_unordered_coll(coll__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nvar and__4251__auto__ \x3d cljs.core.set_QMARK_(other);\r\nif(and__4251__auto__){\r\nvar and__4251__auto____$1 \x3d (cljs.core.count(coll__$1) \x3d\x3d\x3d cljs.core.count(other));\r\nif(and__4251__auto____$1){\r\ntry{return cljs.core.reduce_kv((function (p1__16062_SHARP_,p2__16061_SHARP_){\r\nvar or__4253__auto__ \x3d cljs.core.contains_QMARK_(other,p2__16061_SHARP_);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.core.reduced(false);\r\n}\r\n}),true,self__.tree_map);\r\n}catch (e16080){if((e16080 instanceof Error)){\r\nvar ex \x3d e16080;\r\nreturn false;\r\n} else {\r\nthrow e16080;\r\n\r\n}\r\n}} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 \x3d (function (coll,v){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.keys(self__.tree_map);\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn coll__$1;\r\n} else {\r\nreturn (new cljs.core.PersistentTreeSet(new_meta,self__.tree_map,self__.__hash));\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.call \x3d (function (unused__9633__auto__){\r\nvar self__ \x3d this;\r\nvar self__ \x3d this;\r\nvar G__16081 \x3d (arguments.length - (1));\r\nswitch (G__16081) {\r\ncase (1):\r\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\r\n\r\nbreak;\r\ncase (2):\r\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.apply \x3d (function (self__,args16063){\r\nvar self__ \x3d this;\r\nvar self____$1 \x3d this;\r\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16063)));\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn coll.cljs$core$ILookup$_lookup$arity$2(null,k);\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 \x3d (function (coll,ascending_QMARK_){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 \x3d (function (coll,k,ascending_QMARK_){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 \x3d (function (coll,entry){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn entry;\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core._comparator(self__.tree_map);\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22tree-map\x22,\x22tree-map\x22,1373073049,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.PersistentTreeSet.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentTreeSet\x22);\r\n\r\n(cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/PersistentTreeSet\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/PersistentTreeSet.\r\n */\r\ncljs.core.__GT_PersistentTreeSet \x3d (function cljs$core$__GT_PersistentTreeSet(meta,tree_map,__hash){\r\nreturn (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));\r\n});\r\n\r\n(cljs.core.PersistentTreeSet.EMPTY \x3d (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash)));\r\n(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\ncljs.core.set_from_indexed_seq \x3d (function cljs$core$set_from_indexed_seq(iseq){\r\nvar arr \x3d iseq.arr;\r\nvar ret \x3d (function (){var a__4738__auto__ \x3d arr;\r\nvar l__4739__auto__ \x3d a__4738__auto__.length;\r\nvar i \x3d (0);\r\nvar res \x3d cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);\r\nwhile(true){\r\nif((i \x3c l__4739__auto__)){\r\nvar G__21115 \x3d (i + (1));\r\nvar G__21116 \x3d cljs.core._conj_BANG_(res,(arr[i]));\r\ni \x3d G__21115;\r\nres \x3d G__21116;\r\ncontinue;\r\n} else {\r\nreturn res;\r\n}\r\nbreak;\r\n}\r\n})();\r\nreturn ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);\r\n});\r\n/**\r\n * Returns a set of the distinct elements of coll.\r\n */\r\ncljs.core.set \x3d (function cljs$core$set(coll){\r\nif(cljs.core.set_QMARK_(coll)){\r\nreturn cljs.core.with_meta(coll,null);\r\n} else {\r\nvar in$ \x3d cljs.core.seq(coll);\r\nif((in$ \x3d\x3d null)){\r\nreturn cljs.core.PersistentHashSet.EMPTY;\r\n} else {\r\nif((((in$ instanceof cljs.core.IndexedSeq)) \x26\x26 ((in$.i \x3d\x3d\x3d (0))))){\r\nreturn cljs.core.PersistentHashSet.createAsIfByAssoc(in$.arr);\r\n} else {\r\nvar in$__$1 \x3d in$;\r\nvar out \x3d cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);\r\nwhile(true){\r\nif((!((in$__$1 \x3d\x3d null)))){\r\nvar G__21118 \x3d cljs.core.next(in$__$1);\r\nvar G__21119 \x3d cljs.core._conj_BANG_(out,cljs.core._first(in$__$1));\r\nin$__$1 \x3d G__21118;\r\nout \x3d G__21119;\r\ncontinue;\r\n} else {\r\nreturn cljs.core.persistent_BANG_(out);\r\n}\r\nbreak;\r\n}\r\n\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Returns a new hash set with supplied keys.  Any equal keys are\r\n *   handled as if by repeated uses of conj.\r\n */\r\ncljs.core.hash_set \x3d (function cljs$core$hash_set(var_args){\r\nvar G__16084 \x3d arguments.length;\r\nswitch (G__16084) {\r\ncase 0:\r\nreturn cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___21127 \x3d arguments.length;\r\nvar i__4865__auto___21128 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21128 \x3c len__4864__auto___21127)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___21128]));\r\n\r\nvar G__21129 \x3d (i__4865__auto___21128 + (1));\r\ni__4865__auto___21128 \x3d G__21129;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((0)),(0),null));\r\nreturn cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nreturn cljs.core.PersistentHashSet.EMPTY;\r\n}));\r\n\r\n(cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic \x3d (function (keys){\r\nreturn cljs.core.set(keys);\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.hash_set.cljs$lang$applyTo \x3d (function (seq16083){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16083));\r\n}));\r\n\r\n(cljs.core.hash_set.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/**\r\n * Returns a new sorted set with supplied keys.\r\n */\r\ncljs.core.sorted_set \x3d (function cljs$core$sorted_set(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___21131 \x3d arguments.length;\r\nvar i__4865__auto___21132 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21132 \x3c len__4864__auto___21131)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___21132]));\r\n\r\nvar G__21133 \x3d (i__4865__auto___21132 + (1));\r\ni__4865__auto___21132 \x3d G__21133;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic \x3d (function (keys){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);\r\n}));\r\n\r\n(cljs.core.sorted_set.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(cljs.core.sorted_set.cljs$lang$applyTo \x3d (function (seq16085){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16085));\r\n}));\r\n\r\n/**\r\n * Returns a new sorted set with supplied keys, using the supplied comparator.\r\n */\r\ncljs.core.sorted_set_by \x3d (function cljs$core$sorted_set_by(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___21136 \x3d arguments.length;\r\nvar i__4865__auto___21138 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21138 \x3c len__4864__auto___21136)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___21138]));\r\n\r\nvar G__21139 \x3d (i__4865__auto___21138 + (1));\r\ni__4865__auto___21138 \x3d G__21139;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((1) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((1)),(0),null)):null);\r\nreturn cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic \x3d (function (comparator,keys){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);\r\n}));\r\n\r\n(cljs.core.sorted_set_by.cljs$lang$maxFixedArity \x3d (1));\r\n\r\n/** @this {Function} */\r\n(cljs.core.sorted_set_by.cljs$lang$applyTo \x3d (function (seq16086){\r\nvar G__16087 \x3d cljs.core.first(seq16086);\r\nvar seq16086__$1 \x3d cljs.core.next(seq16086);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__16087,seq16086__$1);\r\n}));\r\n\r\n/**\r\n * Given a map of replacement pairs and a vector/collection, returns a\r\n *   vector/seq with any elements \x3d a key in smap replaced with the\r\n *   corresponding val in smap.  Returns a transducer when no collection\r\n *   is provided.\r\n */\r\ncljs.core.replace \x3d (function cljs$core$replace(var_args){\r\nvar G__16091 \x3d arguments.length;\r\nswitch (G__16091) {\r\ncase 1:\r\nreturn cljs.core.replace.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.replace.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.replace.cljs$core$IFn$_invoke$arity$1 \x3d (function (smap){\r\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__16088_SHARP_){\r\nvar temp__5751__auto__ \x3d cljs.core.find(smap,p1__16088_SHARP_);\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar e \x3d temp__5751__auto__;\r\nreturn cljs.core.val(e);\r\n} else {\r\nreturn p1__16088_SHARP_;\r\n}\r\n}));\r\n}));\r\n\r\n(cljs.core.replace.cljs$core$IFn$_invoke$arity$2 \x3d (function (smap,coll){\r\nif(cljs.core.vector_QMARK_(coll)){\r\nvar n \x3d cljs.core.count(coll);\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,i){\r\nvar temp__5751__auto__ \x3d cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar e \x3d temp__5751__auto__;\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));\r\n} else {\r\nreturn v;\r\n}\r\n}),coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));\r\n} else {\r\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__16089_SHARP_){\r\nvar temp__5751__auto__ \x3d cljs.core.find(smap,p1__16089_SHARP_);\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar e \x3d temp__5751__auto__;\r\nreturn cljs.core.second(e);\r\n} else {\r\nreturn p1__16089_SHARP_;\r\n}\r\n}),coll);\r\n}\r\n}));\r\n\r\n(cljs.core.replace.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Returns a lazy sequence of the elements of coll with duplicates removed.\r\n *   Returns a stateful transducer when no collection is provided.\r\n */\r\ncljs.core.distinct \x3d (function cljs$core$distinct(var_args){\r\nvar G__16093 \x3d arguments.length;\r\nswitch (G__16093) {\r\ncase 0:\r\nreturn cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.core.distinct.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nreturn (function (rf){\r\nvar seen \x3d cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);\r\nreturn (function() {\r\nvar G__21152 \x3d null;\r\nvar G__21152__0 \x3d (function (){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\r\n});\r\nvar G__21152__1 \x3d (function (result){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\r\n});\r\nvar G__21152__2 \x3d (function (result,input){\r\nif(cljs.core.contains_QMARK_(cljs.core.deref(seen),input)){\r\nreturn result;\r\n} else {\r\nseen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));\r\n\r\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,input) : rf.call(null,result,input));\r\n}\r\n});\r\nG__21152 \x3d function(result,input){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__21152__0.call(this);\r\ncase 1:\r\nreturn G__21152__1.call(this,result);\r\ncase 2:\r\nreturn G__21152__2.call(this,result,input);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__21152.cljs$core$IFn$_invoke$arity$0 \x3d G__21152__0;\r\nG__21152.cljs$core$IFn$_invoke$arity$1 \x3d G__21152__1;\r\nG__21152.cljs$core$IFn$_invoke$arity$2 \x3d G__21152__2;\r\nreturn G__21152;\r\n})()\r\n});\r\n}));\r\n\r\n(cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\r\nvar step \x3d (function cljs$core$step(xs,seen){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nreturn (function (p__16094,seen__$1){\r\nwhile(true){\r\nvar vec__16095 \x3d p__16094;\r\nvar f \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16095,(0),null);\r\nvar xs__$1 \x3d vec__16095;\r\nvar temp__5753__auto__ \x3d cljs.core.seq(xs__$1);\r\nif(temp__5753__auto__){\r\nvar s \x3d temp__5753__auto__;\r\nif(cljs.core.contains_QMARK_(seen__$1,f)){\r\nvar G__21159 \x3d cljs.core.rest(s);\r\nvar G__21160 \x3d seen__$1;\r\np__16094 \x3d G__21159;\r\nseen__$1 \x3d G__21160;\r\ncontinue;\r\n} else {\r\nreturn cljs.core.cons(f,cljs$core$step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n})(xs,seen);\r\n}),null,null));\r\n});\r\nreturn step(coll,cljs.core.PersistentHashSet.EMPTY);\r\n}));\r\n\r\n(cljs.core.distinct.cljs$lang$maxFixedArity \x3d 1);\r\n\r\n/**\r\n * Return a seq of all but the last item in coll, in linear time\r\n */\r\ncljs.core.butlast \x3d (function cljs$core$butlast(s){\r\nvar ret \x3d cljs.core.PersistentVector.EMPTY;\r\nvar s__$1 \x3d s;\r\nwhile(true){\r\nif(cljs.core.next(s__$1)){\r\nvar G__21163 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));\r\nvar G__21164 \x3d cljs.core.next(s__$1);\r\nret \x3d G__21163;\r\ns__$1 \x3d G__21164;\r\ncontinue;\r\n} else {\r\nreturn cljs.core.seq(ret);\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Returns the name String of a string, symbol or keyword.\r\n */\r\ncljs.core.name \x3d (function cljs$core$name(x){\r\nif((((!((x \x3d\x3d null))))?(((((x.cljs$lang$protocol_mask$partition1$ \x26 (4096))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$INamed$))))?true:false):false)){\r\nreturn x.cljs$core$INamed$_name$arity$1(null);\r\n} else {\r\nif(typeof x \x3d\x3d\x3d \x27string\x27){\r\nreturn x;\r\n} else {\r\nthrow (new Error([\x22Doesn\x27t support name: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(\x27\x27)));\r\n}\r\n}\r\n});\r\n/**\r\n * Returns a map with the keys mapped to the corresponding vals.\r\n */\r\ncljs.core.zipmap \x3d (function cljs$core$zipmap(keys,vals){\r\nvar map \x3d cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);\r\nvar ks \x3d cljs.core.seq(keys);\r\nvar vs \x3d cljs.core.seq(vals);\r\nwhile(true){\r\nif(((ks) \x26\x26 (vs))){\r\nvar G__21169 \x3d cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));\r\nvar G__21170 \x3d cljs.core.next(ks);\r\nvar G__21171 \x3d cljs.core.next(vs);\r\nmap \x3d G__21169;\r\nks \x3d G__21170;\r\nvs \x3d G__21171;\r\ncontinue;\r\n} else {\r\nreturn cljs.core.persistent_BANG_(map);\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Returns the x for which (k x), a number, is greatest.\r\n * \r\n *   If there are multiple such xs, the last one is returned.\r\n */\r\ncljs.core.max_key \x3d (function cljs$core$max_key(var_args){\r\nvar G__16106 \x3d arguments.length;\r\nswitch (G__16106) {\r\ncase 2:\r\nreturn cljs.core.max_key.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.max_key.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___21174 \x3d arguments.length;\r\nvar i__4865__auto___21175 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21175 \x3c len__4864__auto___21174)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___21175]));\r\n\r\nvar G__21176 \x3d (i__4865__auto___21175 + (1));\r\ni__4865__auto___21175 \x3d G__21176;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((3)),(0),null));\r\nreturn cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,x){\r\nreturn x;\r\n}));\r\n\r\n(cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 \x3d (function (k,x,y){\r\nif(((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null,x)) \x3e (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null,y)))){\r\nreturn x;\r\n} else {\r\nreturn y;\r\n}\r\n}));\r\n\r\n(cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic \x3d (function (k,x,y,more){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16099_SHARP_,p2__16100_SHARP_){\r\nreturn cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k,p1__16099_SHARP_,p2__16100_SHARP_);\r\n}),cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.max_key.cljs$lang$applyTo \x3d (function (seq16102){\r\nvar G__16103 \x3d cljs.core.first(seq16102);\r\nvar seq16102__$1 \x3d cljs.core.next(seq16102);\r\nvar G__16104 \x3d cljs.core.first(seq16102__$1);\r\nvar seq16102__$2 \x3d cljs.core.next(seq16102__$1);\r\nvar G__16105 \x3d cljs.core.first(seq16102__$2);\r\nvar seq16102__$3 \x3d cljs.core.next(seq16102__$2);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__16103,G__16104,G__16105,seq16102__$3);\r\n}));\r\n\r\n(cljs.core.max_key.cljs$lang$maxFixedArity \x3d (3));\r\n\r\n/**\r\n * Returns the x for which (k x), a number, is least.\r\n * \r\n *   If there are multiple such xs, the last one is returned.\r\n */\r\ncljs.core.min_key \x3d (function cljs$core$min_key(var_args){\r\nvar G__16114 \x3d arguments.length;\r\nswitch (G__16114) {\r\ncase 2:\r\nreturn cljs.core.min_key.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.min_key.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___21183 \x3d arguments.length;\r\nvar i__4865__auto___21184 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21184 \x3c len__4864__auto___21183)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___21184]));\r\n\r\nvar G__21186 \x3d (i__4865__auto___21184 + (1));\r\ni__4865__auto___21184 \x3d G__21186;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((3)),(0),null));\r\nreturn cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,x){\r\nreturn x;\r\n}));\r\n\r\n(cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 \x3d (function (k,x,y){\r\nif(((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null,x)) \x3c (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null,y)))){\r\nreturn x;\r\n} else {\r\nreturn y;\r\n}\r\n}));\r\n\r\n(cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic \x3d (function (k,x,y,more){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16107_SHARP_,p2__16108_SHARP_){\r\nreturn cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k,p1__16107_SHARP_,p2__16108_SHARP_);\r\n}),cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.min_key.cljs$lang$applyTo \x3d (function (seq16110){\r\nvar G__16111 \x3d cljs.core.first(seq16110);\r\nvar seq16110__$1 \x3d cljs.core.next(seq16110);\r\nvar G__16112 \x3d cljs.core.first(seq16110__$1);\r\nvar seq16110__$2 \x3d cljs.core.next(seq16110__$1);\r\nvar G__16113 \x3d cljs.core.first(seq16110__$2);\r\nvar seq16110__$3 \x3d cljs.core.next(seq16110__$2);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__16111,G__16112,G__16113,seq16110__$3);\r\n}));\r\n\r\n(cljs.core.min_key.cljs$lang$maxFixedArity \x3d (3));\r\n\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.ArrayList \x3d (function (arr){\r\nthis.arr \x3d arr;\r\n});\r\n(cljs.core.ArrayList.prototype.add \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn self__.arr.push(x);\r\n}));\r\n\r\n(cljs.core.ArrayList.prototype.size \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn self__.arr.length;\r\n}));\r\n\r\n(cljs.core.ArrayList.prototype.clear \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.arr \x3d []);\r\n}));\r\n\r\n(cljs.core.ArrayList.prototype.isEmpty \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn (self__.arr.length \x3d\x3d\x3d (0));\r\n}));\r\n\r\n(cljs.core.ArrayList.prototype.toArray \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn self__.arr;\r\n}));\r\n\r\n(cljs.core.ArrayList.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.ArrayList.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.ArrayList.cljs$lang$ctorStr \x3d \x22cljs.core/ArrayList\x22);\r\n\r\n(cljs.core.ArrayList.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/ArrayList\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/ArrayList.\r\n */\r\ncljs.core.__GT_ArrayList \x3d (function cljs$core$__GT_ArrayList(arr){\r\nreturn (new cljs.core.ArrayList(arr));\r\n});\r\n\r\ncljs.core.array_list \x3d (function cljs$core$array_list(){\r\nreturn (new cljs.core.ArrayList([]));\r\n});\r\n/**\r\n * Returns a lazy sequence of lists like partition, but may include\r\n *   partitions with fewer than n items at the end.  Returns a stateful\r\n *   transducer when no collection is provided.\r\n */\r\ncljs.core.partition_all \x3d (function cljs$core$partition_all(var_args){\r\nvar G__16116 \x3d arguments.length;\r\nswitch (G__16116) {\r\ncase 1:\r\nreturn cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 \x3d (function (n){\r\nreturn (function (rf){\r\nvar a \x3d cljs.core.array_list();\r\nreturn (function() {\r\nvar G__21198 \x3d null;\r\nvar G__21198__0 \x3d (function (){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\r\n});\r\nvar G__21198__1 \x3d (function (result){\r\nvar result__$1 \x3d (cljs.core.truth_(a.isEmpty())?result:(function (){var v \x3d cljs.core.vec(a.toArray());\r\na.clear();\r\n\r\nreturn cljs.core.unreduced((rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,v) : rf.call(null,result,v)));\r\n})());\r\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null,result__$1));\r\n});\r\nvar G__21198__2 \x3d (function (result,input){\r\na.add(input);\r\n\r\nif((n \x3d\x3d\x3d a.size())){\r\nvar v \x3d cljs.core.vec(a.toArray());\r\na.clear();\r\n\r\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,v) : rf.call(null,result,v));\r\n} else {\r\nreturn result;\r\n}\r\n});\r\nG__21198 \x3d function(result,input){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__21198__0.call(this);\r\ncase 1:\r\nreturn G__21198__1.call(this,result);\r\ncase 2:\r\nreturn G__21198__2.call(this,result,input);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__21198.cljs$core$IFn$_invoke$arity$0 \x3d G__21198__0;\r\nG__21198.cljs$core$IFn$_invoke$arity$1 \x3d G__21198__1;\r\nG__21198.cljs$core$IFn$_invoke$arity$2 \x3d G__21198__2;\r\nreturn G__21198;\r\n})()\r\n});\r\n}));\r\n\r\n(cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 \x3d (function (n,coll){\r\nreturn cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);\r\n}));\r\n\r\n(cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 \x3d (function (n,step,coll){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(coll);\r\nif(temp__5753__auto__){\r\nvar s \x3d temp__5753__auto__;\r\nreturn cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));\r\n} else {\r\nreturn null;\r\n}\r\n}),null,null));\r\n}));\r\n\r\n(cljs.core.partition_all.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n/**\r\n * Returns a lazy sequence of successive items from coll while\r\n *   (pred item) returns logical true. pred must be free of side-effects.\r\n *   Returns a transducer when no collection is provided.\r\n */\r\ncljs.core.take_while \x3d (function cljs$core$take_while(var_args){\r\nvar G__16118 \x3d arguments.length;\r\nswitch (G__16118) {\r\ncase 1:\r\nreturn cljs.core.take_while.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.take_while.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 \x3d (function (pred){\r\nreturn (function (rf){\r\nreturn (function() {\r\nvar G__21208 \x3d null;\r\nvar G__21208__0 \x3d (function (){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\r\n});\r\nvar G__21208__1 \x3d (function (result){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\r\n});\r\nvar G__21208__2 \x3d (function (result,input){\r\nif(cljs.core.truth_((pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null,input)))){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,input) : rf.call(null,result,input));\r\n} else {\r\nreturn cljs.core.reduced(result);\r\n}\r\n});\r\nG__21208 \x3d function(result,input){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__21208__0.call(this);\r\ncase 1:\r\nreturn G__21208__1.call(this,result);\r\ncase 2:\r\nreturn G__21208__2.call(this,result,input);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__21208.cljs$core$IFn$_invoke$arity$0 \x3d G__21208__0;\r\nG__21208.cljs$core$IFn$_invoke$arity$1 \x3d G__21208__1;\r\nG__21208.cljs$core$IFn$_invoke$arity$2 \x3d G__21208__2;\r\nreturn G__21208;\r\n})()\r\n});\r\n}));\r\n\r\n(cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 \x3d (function (pred,coll){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(coll);\r\nif(temp__5753__auto__){\r\nvar s \x3d temp__5753__auto__;\r\nif(cljs.core.truth_((function (){var G__16119 \x3d cljs.core.first(s);\r\nreturn (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16119) : pred.call(null,G__16119));\r\n})())){\r\nreturn cljs.core.cons(cljs.core.first(s),cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}),null,null));\r\n}));\r\n\r\n(cljs.core.take_while.cljs$lang$maxFixedArity \x3d 2);\r\n\r\ncljs.core.mk_bound_fn \x3d (function cljs$core$mk_bound_fn(sc,test,key){\r\nreturn (function (e){\r\nvar comp \x3d cljs.core._comparator(sc);\r\nvar G__16120 \x3d (function (){var G__16122 \x3d cljs.core._entry_key(sc,e);\r\nvar G__16123 \x3d key;\r\nreturn (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16122,G__16123) : comp.call(null,G__16122,G__16123));\r\n})();\r\nvar G__16121 \x3d (0);\r\nreturn (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__16120,G__16121) : test.call(null,G__16120,G__16121));\r\n});\r\n});\r\n/**\r\n * sc must be a sorted collection, test(s) one of \x3c, \x3c\x3d, \x3e or\r\n *   \x3e\x3d. Returns a seq of those entries with keys ek for\r\n *   which (test (.. sc comparator (compare ek key)) 0) is true\r\n */\r\ncljs.core.subseq \x3d (function cljs$core$subseq(var_args){\r\nvar G__16125 \x3d arguments.length;\r\nswitch (G__16125) {\r\ncase 3:\r\nreturn cljs.core.subseq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 5:\r\nreturn cljs.core.subseq.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 \x3d (function (sc,test,key){\r\nvar include \x3d cljs.core.mk_bound_fn(sc,test,key);\r\nif(cljs.core.truth_((function (){var fexpr__16126 \x3d cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._GT_,cljs.core._GT__EQ_]);\r\nreturn (fexpr__16126.cljs$core$IFn$_invoke$arity$1 ? fexpr__16126.cljs$core$IFn$_invoke$arity$1(test) : fexpr__16126.call(null,test));\r\n})())){\r\nvar temp__5753__auto__ \x3d cljs.core._sorted_seq_from(sc,key,true);\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar vec__16127 \x3d temp__5753__auto__;\r\nvar e \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16127,(0),null);\r\nvar s \x3d vec__16127;\r\nif(cljs.core.truth_(include(e))){\r\nreturn s;\r\n} else {\r\nreturn cljs.core.next(s);\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));\r\n}\r\n}));\r\n\r\n(cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 \x3d (function (sc,start_test,start_key,end_test,end_key){\r\nvar temp__5753__auto__ \x3d cljs.core._sorted_seq_from(sc,start_key,true);\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar vec__16130 \x3d temp__5753__auto__;\r\nvar e \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16130,(0),null);\r\nvar s \x3d vec__16130;\r\nreturn cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key)(e))?s:cljs.core.next(s)));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.subseq.cljs$lang$maxFixedArity \x3d 5);\r\n\r\n/**\r\n * sc must be a sorted collection, test(s) one of \x3c, \x3c\x3d, \x3e or\r\n *   \x3e\x3d. Returns a reverse seq of those entries with keys ek for\r\n *   which (test (.. sc comparator (compare ek key)) 0) is true\r\n */\r\ncljs.core.rsubseq \x3d (function cljs$core$rsubseq(var_args){\r\nvar G__16134 \x3d arguments.length;\r\nswitch (G__16134) {\r\ncase 3:\r\nreturn cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 5:\r\nreturn cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 \x3d (function (sc,test,key){\r\nvar include \x3d cljs.core.mk_bound_fn(sc,test,key);\r\nif(cljs.core.truth_((function (){var fexpr__16135 \x3d cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._LT_,cljs.core._LT__EQ_]);\r\nreturn (fexpr__16135.cljs$core$IFn$_invoke$arity$1 ? fexpr__16135.cljs$core$IFn$_invoke$arity$1(test) : fexpr__16135.call(null,test));\r\n})())){\r\nvar temp__5753__auto__ \x3d cljs.core._sorted_seq_from(sc,key,false);\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar vec__16136 \x3d temp__5753__auto__;\r\nvar e \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16136,(0),null);\r\nvar s \x3d vec__16136;\r\nif(cljs.core.truth_(include(e))){\r\nreturn s;\r\n} else {\r\nreturn cljs.core.next(s);\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));\r\n}\r\n}));\r\n\r\n(cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 \x3d (function (sc,start_test,start_key,end_test,end_key){\r\nvar temp__5753__auto__ \x3d cljs.core._sorted_seq_from(sc,end_key,false);\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar vec__16139 \x3d temp__5753__auto__;\r\nvar e \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16139,(0),null);\r\nvar s \x3d vec__16139;\r\nreturn cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key)(e))?s:cljs.core.next(s)));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.rsubseq.cljs$lang$maxFixedArity \x3d 5);\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IIndexed}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.IChunk}\r\n*/\r\ncljs.core.IntegerRangeChunk \x3d (function (start,step,count){\r\nthis.start \x3d start;\r\nthis.step \x3d step;\r\nthis.count \x3d count;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 82;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.IntegerRangeChunk.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.count;\r\n}));\r\n\r\n(cljs.core.IntegerRangeChunk.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn self__.start;\r\n}));\r\n\r\n(cljs.core.IntegerRangeChunk.prototype.cljs$core$IIndexed$_nth$arity$2 \x3d (function (coll,i){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn (self__.start + (i * self__.step));\r\n}));\r\n\r\n(cljs.core.IntegerRangeChunk.prototype.cljs$core$IIndexed$_nth$arity$3 \x3d (function (coll,i,not_found){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((((i \x3e\x3d (0))) \x26\x26 ((i \x3c self__.count)))){\r\nreturn (self__.start + (i * self__.step));\r\n} else {\r\nreturn not_found;\r\n}\r\n}));\r\n\r\n(cljs.core.IntegerRangeChunk.prototype.cljs$core$IChunk$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.IntegerRangeChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 \x3d (function (coll){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nif((self__.count \x3c\x3d (1))){\r\nthrow (new Error(\x22-drop-first of empty chunk\x22));\r\n} else {\r\nreturn (new cljs.core.IntegerRangeChunk((self__.start + self__.step),self__.step,(self__.count - (1))));\r\n}\r\n}));\r\n\r\n(cljs.core.IntegerRangeChunk.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22start\x22,\x22start\x22,1285322546,null),new cljs.core.Symbol(null,\x22step\x22,\x22step\x22,-1365547645,null),new cljs.core.Symbol(null,\x22count\x22,\x22count\x22,-514511684,null)], null);\r\n}));\r\n\r\n(cljs.core.IntegerRangeChunk.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.IntegerRangeChunk.cljs$lang$ctorStr \x3d \x22cljs.core/IntegerRangeChunk\x22);\r\n\r\n(cljs.core.IntegerRangeChunk.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/IntegerRangeChunk\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/IntegerRangeChunk.\r\n */\r\ncljs.core.__GT_IntegerRangeChunk \x3d (function cljs$core$__GT_IntegerRangeChunk(start,step,count){\r\nreturn (new cljs.core.IntegerRangeChunk(start,step,count));\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n*/\r\ncljs.core.RangeIterator \x3d (function (i,end,step){\r\nthis.i \x3d i;\r\nthis.end \x3d end;\r\nthis.step \x3d step;\r\n});\r\n(cljs.core.RangeIterator.prototype.hasNext \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nif((self__.step \x3e (0))){\r\nreturn (self__.i \x3c self__.end);\r\n} else {\r\nreturn (self__.i \x3e self__.end);\r\n}\r\n}));\r\n\r\n(cljs.core.RangeIterator.prototype.next \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nvar ret \x3d self__.i;\r\n(self__.i \x3d (self__.i + self__.step));\r\n\r\nreturn ret;\r\n}));\r\n\r\n(cljs.core.RangeIterator.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22end\x22,\x22end\x22,1372345569,null),new cljs.core.Symbol(null,\x22step\x22,\x22step\x22,-1365547645,null)], null);\r\n}));\r\n\r\n(cljs.core.RangeIterator.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.RangeIterator.cljs$lang$ctorStr \x3d \x22cljs.core/RangeIterator\x22);\r\n\r\n(cljs.core.RangeIterator.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/RangeIterator\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/RangeIterator.\r\n */\r\ncljs.core.__GT_RangeIterator \x3d (function cljs$core$__GT_RangeIterator(i,end,step){\r\nreturn (new cljs.core.RangeIterator(i,end,step));\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IIndexed}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IChunkedNext}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.INext}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IChunkedSeq}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.IntegerRange \x3d (function (meta,start,end,step,chunk,chunk_next,__hash){\r\nthis.meta \x3d meta;\r\nthis.start \x3d start;\r\nthis.end \x3d end;\r\nthis.step \x3d step;\r\nthis.chunk \x3d chunk;\r\nthis.chunk_next \x3d chunk_next;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32375006;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 140800;\r\n});\r\n(cljs.core.IntegerRange.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.indexOf \x3d (function() {\r\nvar G__21238 \x3d null;\r\nvar G__21238__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__21238__2 \x3d (function (x,start__$1){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start__$1);\r\n});\r\nG__21238 \x3d function(x,start__$1){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__21238__1.call(this,x);\r\ncase 2:\r\nreturn G__21238__2.call(this,x,start__$1);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__21238.cljs$core$IFn$_invoke$arity$1 \x3d G__21238__1;\r\nG__21238.cljs$core$IFn$_invoke$arity$2 \x3d G__21238__2;\r\nreturn G__21238;\r\n})()\r\n);\r\n\r\n(cljs.core.IntegerRange.prototype.lastIndexOf \x3d (function() {\r\nvar G__21239 \x3d null;\r\nvar G__21239__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\r\n});\r\nvar G__21239__2 \x3d (function (x,start__$1){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start__$1);\r\n});\r\nG__21239 \x3d function(x,start__$1){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__21239__1.call(this,x);\r\ncase 2:\r\nreturn G__21239__2.call(this,x,start__$1);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__21239.cljs$core$IFn$_invoke$arity$1 \x3d G__21239__1;\r\nG__21239.cljs$core$IFn$_invoke$arity$2 \x3d G__21239__2;\r\nreturn G__21239;\r\n})()\r\n);\r\n\r\n(cljs.core.IntegerRange.prototype.forceChunk \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nif((self__.chunk \x3d\x3d null)){\r\nvar count \x3d coll.cljs$core$ICounted$_count$arity$1(null);\r\nif((count \x3e (32))){\r\n(self__.chunk_next \x3d (new cljs.core.IntegerRange(null,(self__.start + (self__.step * (32))),self__.end,self__.step,null,null,null)));\r\n\r\nreturn (self__.chunk \x3d (new cljs.core.IntegerRangeChunk(self__.start,self__.step,(32))));\r\n} else {\r\nreturn (self__.chunk \x3d (new cljs.core.IntegerRangeChunk(self__.start,self__.step,count)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.cljs$core$IIndexed$_nth$arity$2 \x3d (function (rng,n){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nif(((((0) \x3c\x3d n)) \x26\x26 ((n \x3c rng__$1.cljs$core$ICounted$_count$arity$1(null))))){\r\nreturn (self__.start + (n * self__.step));\r\n} else {\r\nif(((((0) \x3c\x3d n)) \x26\x26 ((((self__.start \x3e self__.end)) \x26\x26 ((self__.step \x3d\x3d\x3d (0))))))){\r\nreturn self__.start;\r\n} else {\r\nthrow (new Error(\x22Index out of bounds\x22));\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.cljs$core$IIndexed$_nth$arity$3 \x3d (function (rng,n,not_found){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nif(((((0) \x3c\x3d n)) \x26\x26 ((n \x3c rng__$1.cljs$core$ICounted$_count$arity$1(null))))){\r\nreturn (self__.start + (n * self__.step));\r\n} else {\r\nif(((((0) \x3c\x3d n)) \x26\x26 ((((self__.start \x3e self__.end)) \x26\x26 ((self__.step \x3d\x3d\x3d (0))))))){\r\nreturn self__.start;\r\n} else {\r\nreturn not_found;\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (rng){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (new cljs.core.IntegerRange(self__.meta,self__.start,self__.end,self__.step,self__.chunk,self__.chunk_next,self__.__hash));\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.cljs$core$INext$_next$arity$1 \x3d (function (rng){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nif((self__.step \x3e (0))){\r\nif(((self__.start + self__.step) \x3c self__.end)){\r\nreturn (new cljs.core.IntegerRange(null,(self__.start + self__.step),self__.end,self__.step,null,null,null));\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nif(((self__.start + self__.step) \x3e self__.end)){\r\nreturn (new cljs.core.IntegerRange(null,(self__.start + self__.step),self__.end,self__.step,null,null,null));\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (rng){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nreturn Math.ceil(((self__.end - self__.start) / self__.step));\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (rng){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_ordered_coll(rng__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (rng,other){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nreturn cljs.core.equiv_sequential(rng__$1,other);\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (rng){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nreturn cljs.core.List.EMPTY;\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (rng,f){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nreturn cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (rng,f,init){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nvar i \x3d self__.start;\r\nvar ret \x3d init;\r\nwhile(true){\r\nif((((self__.step \x3e (0)))?(i \x3c self__.end):(i \x3e self__.end))){\r\nvar ret__$1 \x3d (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret,i) : f.call(null,ret,i));\r\nif(cljs.core.reduced_QMARK_(ret__$1)){\r\nreturn cljs.core.deref(ret__$1);\r\n} else {\r\nvar G__21252 \x3d (i + self__.step);\r\nvar G__21253 \x3d ret__$1;\r\ni \x3d G__21252;\r\nret \x3d G__21253;\r\ncontinue;\r\n}\r\n} else {\r\nreturn ret;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (rng){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nreturn self__.start;\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (rng){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nvar s \x3d rng__$1.cljs$core$INext$_next$arity$1(null);\r\nif((s \x3d\x3d null)){\r\nreturn cljs.core.List.EMPTY;\r\n} else {\r\nreturn s;\r\n}\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (rng){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nreturn rng__$1;\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 \x3d (function (rng){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nrng__$1.forceChunk();\r\n\r\nreturn self__.chunk;\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 \x3d (function (rng){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nrng__$1.forceChunk();\r\n\r\nif((self__.chunk_next \x3d\x3d null)){\r\nreturn cljs.core.List.EMPTY;\r\n} else {\r\nreturn self__.chunk_next;\r\n}\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (rng,new_meta){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn rng__$1;\r\n} else {\r\nreturn (new cljs.core.IntegerRange(new_meta,self__.start,self__.end,self__.step,self__.chunk,self__.chunk_next,self__.__hash));\r\n}\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (rng,o){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nreturn cljs.core.cons(o,rng__$1);\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 \x3d (function (rng){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nreturn cljs.core.seq(rng__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null));\r\n}));\r\n\r\n(cljs.core.IntegerRange.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22start\x22,\x22start\x22,1285322546,null),new cljs.core.Symbol(null,\x22end\x22,\x22end\x22,1372345569,null),new cljs.core.Symbol(null,\x22step\x22,\x22step\x22,-1365547645,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22chunk\x22,\x22chunk\x22,449371907,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22chunk-next\x22,\x22chunk-next\x22,-547810434,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.IntegerRange.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.IntegerRange.cljs$lang$ctorStr \x3d \x22cljs.core/IntegerRange\x22);\r\n\r\n(cljs.core.IntegerRange.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/IntegerRange\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/IntegerRange.\r\n */\r\ncljs.core.__GT_IntegerRange \x3d (function cljs$core$__GT_IntegerRange(meta,start,end,step,chunk,chunk_next,__hash){\r\nreturn (new cljs.core.IntegerRange(meta,start,end,step,chunk,chunk_next,__hash));\r\n});\r\n\r\n(cljs.core.IntegerRange.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IChunkedNext}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.INext}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IChunkedSeq}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.Range \x3d (function (meta,start,end,step,chunk,chunk_next,__hash){\r\nthis.meta \x3d meta;\r\nthis.start \x3d start;\r\nthis.end \x3d end;\r\nthis.step \x3d step;\r\nthis.chunk \x3d chunk;\r\nthis.chunk_next \x3d chunk_next;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 140800;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32374988;\r\n});\r\n(cljs.core.Range.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.Range.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.Range.prototype.indexOf \x3d (function() {\r\nvar G__21261 \x3d null;\r\nvar G__21261__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\r\n});\r\nvar G__21261__2 \x3d (function (x,start__$1){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start__$1);\r\n});\r\nG__21261 \x3d function(x,start__$1){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__21261__1.call(this,x);\r\ncase 2:\r\nreturn G__21261__2.call(this,x,start__$1);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__21261.cljs$core$IFn$_invoke$arity$1 \x3d G__21261__1;\r\nG__21261.cljs$core$IFn$_invoke$arity$2 \x3d G__21261__2;\r\nreturn G__21261;\r\n})()\r\n);\r\n\r\n(cljs.core.Range.prototype.lastIndexOf \x3d (function() {\r\nvar G__21262 \x3d null;\r\nvar G__21262__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\r\n});\r\nvar G__21262__2 \x3d (function (x,start__$1){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start__$1);\r\n});\r\nG__21262 \x3d function(x,start__$1){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__21262__1.call(this,x);\r\ncase 2:\r\nreturn G__21262__2.call(this,x,start__$1);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__21262.cljs$core$IFn$_invoke$arity$1 \x3d G__21262__1;\r\nG__21262.cljs$core$IFn$_invoke$arity$2 \x3d G__21262__2;\r\nreturn G__21262;\r\n})()\r\n);\r\n\r\n(cljs.core.Range.prototype.forceChunk \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nif((self__.chunk \x3d\x3d null)){\r\nvar arr \x3d [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\r\nvar val \x3d (function (){var n \x3d (0);\r\nvar val \x3d self__.start;\r\nwhile(true){\r\nif((n \x3c (32))){\r\n(arr[n] \x3d val);\r\n\r\nvar n__$1 \x3d (n + (1));\r\nvar val__$1 \x3d (val + self__.step);\r\nif((((self__.step \x3e (0)))?(val__$1 \x3c self__.end):(val__$1 \x3e self__.end))){\r\nvar G__21270 \x3d n__$1;\r\nvar G__21271 \x3d val__$1;\r\nn \x3d G__21270;\r\nval \x3d G__21271;\r\ncontinue;\r\n} else {\r\nreturn (self__.chunk \x3d cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arr,(0),n__$1));\r\n}\r\n} else {\r\nreturn val;\r\n}\r\nbreak;\r\n}\r\n})();\r\nif((self__.chunk \x3d\x3d null)){\r\n(self__.chunk \x3d cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arr,(0),(32)));\r\n\r\nif((((self__.step \x3e (0)))?(val \x3c self__.end):(val \x3e self__.end))){\r\nreturn (self__.chunk_next \x3d (new cljs.core.Range(null,val,self__.end,self__.step,null,null,null)));\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));\r\n}));\r\n\r\n(cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (rng){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.chunk,self__.chunk_next,self__.__hash));\r\n}));\r\n\r\n(cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 \x3d (function (rng){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nif((self__.step \x3e (0))){\r\nif(((self__.start + self__.step) \x3c self__.end)){\r\nreturn (new cljs.core.Range(null,(self__.start + self__.step),self__.end,self__.step,null,null,null));\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nif(((self__.start + self__.step) \x3e self__.end)){\r\nreturn (new cljs.core.Range(null,(self__.start + self__.step),self__.end,self__.step,null,null,null));\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (rng){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d cljs.core.hash_ordered_coll(rng__$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (rng,other){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nreturn cljs.core.equiv_sequential(rng__$1,other);\r\n}));\r\n\r\n(cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (rng){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nreturn cljs.core.List.EMPTY;\r\n}));\r\n\r\n(cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (rng,f){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,rng__$1);\r\n}));\r\n\r\n(cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (rng,f,init){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nvar i \x3d self__.start;\r\nvar ret \x3d init;\r\nwhile(true){\r\nif((((self__.step \x3e (0)))?(i \x3c self__.end):(i \x3e self__.end))){\r\nvar ret__$1 \x3d (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret,i) : f.call(null,ret,i));\r\nif(cljs.core.reduced_QMARK_(ret__$1)){\r\nreturn cljs.core.deref(ret__$1);\r\n} else {\r\nvar G__21280 \x3d (i + self__.step);\r\nvar G__21281 \x3d ret__$1;\r\ni \x3d G__21280;\r\nret \x3d G__21281;\r\ncontinue;\r\n}\r\n} else {\r\nreturn ret;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (rng){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nreturn self__.start;\r\n}));\r\n\r\n(cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (rng){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nvar s \x3d rng__$1.cljs$core$INext$_next$arity$1(null);\r\nif((s \x3d\x3d null)){\r\nreturn cljs.core.List.EMPTY;\r\n} else {\r\nreturn s;\r\n}\r\n}));\r\n\r\n(cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (rng){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nreturn rng__$1;\r\n}));\r\n\r\n(cljs.core.Range.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 \x3d (function (rng){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nrng__$1.forceChunk();\r\n\r\nreturn self__.chunk;\r\n}));\r\n\r\n(cljs.core.Range.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 \x3d (function (rng){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nrng__$1.forceChunk();\r\n\r\nif((self__.chunk_next \x3d\x3d null)){\r\nreturn cljs.core.List.EMPTY;\r\n} else {\r\nreturn self__.chunk_next;\r\n}\r\n}));\r\n\r\n(cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (rng,new_meta){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nif((new_meta \x3d\x3d\x3d self__.meta)){\r\nreturn rng__$1;\r\n} else {\r\nreturn (new cljs.core.Range(new_meta,self__.start,self__.end,self__.step,self__.chunk,self__.chunk_next,self__.__hash));\r\n}\r\n}));\r\n\r\n(cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (rng,o){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nreturn cljs.core.cons(o,rng__$1);\r\n}));\r\n\r\n(cljs.core.Range.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 \x3d (function (rng){\r\nvar self__ \x3d this;\r\nvar rng__$1 \x3d this;\r\nreturn cljs.core.seq(rng__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null));\r\n}));\r\n\r\n(cljs.core.Range.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22start\x22,\x22start\x22,1285322546,null),new cljs.core.Symbol(null,\x22end\x22,\x22end\x22,1372345569,null),new cljs.core.Symbol(null,\x22step\x22,\x22step\x22,-1365547645,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22chunk\x22,\x22chunk\x22,449371907,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22chunk-next\x22,\x22chunk-next\x22,-547810434,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.Range.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.Range.cljs$lang$ctorStr \x3d \x22cljs.core/Range\x22);\r\n\r\n(cljs.core.Range.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/Range\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/Range.\r\n */\r\ncljs.core.__GT_Range \x3d (function cljs$core$__GT_Range(meta,start,end,step,chunk,chunk_next,__hash){\r\nreturn (new cljs.core.Range(meta,start,end,step,chunk,chunk_next,__hash));\r\n});\r\n\r\n(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\n/**\r\n * Returns a lazy seq of nums from start (inclusive) to end\r\n * (exclusive), by step, where start defaults to 0, step to 1,\r\n * and end to infinity.\r\n */\r\ncljs.core.range \x3d (function cljs$core$range(var_args){\r\nvar G__16143 \x3d arguments.length;\r\nswitch (G__16143) {\r\ncase 0:\r\nreturn cljs.core.range.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.core.range.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.range.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.range.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.range.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nreturn cljs.core.range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));\r\n}));\r\n\r\n(cljs.core.range.cljs$core$IFn$_invoke$arity$1 \x3d (function (end){\r\nreturn cljs.core.range.cljs$core$IFn$_invoke$arity$3((0),end,(1));\r\n}));\r\n\r\n(cljs.core.range.cljs$core$IFn$_invoke$arity$2 \x3d (function (start,end){\r\nreturn cljs.core.range.cljs$core$IFn$_invoke$arity$3(start,end,(1));\r\n}));\r\n\r\n(cljs.core.range.cljs$core$IFn$_invoke$arity$3 \x3d (function (start,end,step){\r\nif((step \x3e (0))){\r\nif((end \x3c\x3d start)){\r\nreturn cljs.core.List.EMPTY;\r\n} else {\r\nif(((cljs.core.integer_QMARK_(start)) \x26\x26 (((cljs.core.integer_QMARK_(end)) \x26\x26 (cljs.core.integer_QMARK_(step)))))){\r\nreturn (new cljs.core.IntegerRange(null,start,end,step,null,null,null));\r\n} else {\r\nreturn (new cljs.core.Range(null,start,end,step,null,null,null));\r\n}\r\n}\r\n} else {\r\nif((step \x3c (0))){\r\nif((end \x3e\x3d start)){\r\nreturn cljs.core.List.EMPTY;\r\n} else {\r\nif(((cljs.core.integer_QMARK_(start)) \x26\x26 (((cljs.core.integer_QMARK_(end)) \x26\x26 (cljs.core.integer_QMARK_(step)))))){\r\nreturn (new cljs.core.IntegerRange(null,start,end,step,null,null,null));\r\n} else {\r\nreturn (new cljs.core.Range(null,start,end,step,null,null,null));\r\n}\r\n}\r\n} else {\r\nif((end \x3d\x3d\x3d start)){\r\nreturn cljs.core.List.EMPTY;\r\n} else {\r\nreturn cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(start);\r\n}\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.range.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n/**\r\n * Returns a lazy seq of every nth item in coll.  Returns a stateful\r\n *   transducer when no collection is provided.\r\n */\r\ncljs.core.take_nth \x3d (function cljs$core$take_nth(var_args){\r\nvar G__16145 \x3d arguments.length;\r\nswitch (G__16145) {\r\ncase 1:\r\nreturn cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 \x3d (function (n){\r\nif(typeof n \x3d\x3d\x3d \x27number\x27){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (number? n)\x22));\r\n}\r\n\r\nreturn (function (rf){\r\nvar ia \x3d cljs.core.volatile_BANG_((-1));\r\nreturn (function() {\r\nvar G__21292 \x3d null;\r\nvar G__21292__0 \x3d (function (){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\r\n});\r\nvar G__21292__1 \x3d (function (result){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\r\n});\r\nvar G__21292__2 \x3d (function (result,input){\r\nvar i \x3d ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));\r\nif((cljs.core.rem(i,n) \x3d\x3d\x3d (0))){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,input) : rf.call(null,result,input));\r\n} else {\r\nreturn result;\r\n}\r\n});\r\nG__21292 \x3d function(result,input){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__21292__0.call(this);\r\ncase 1:\r\nreturn G__21292__1.call(this,result);\r\ncase 2:\r\nreturn G__21292__2.call(this,result,input);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__21292.cljs$core$IFn$_invoke$arity$0 \x3d G__21292__0;\r\nG__21292.cljs$core$IFn$_invoke$arity$1 \x3d G__21292__1;\r\nG__21292.cljs$core$IFn$_invoke$arity$2 \x3d G__21292__2;\r\nreturn G__21292;\r\n})()\r\n});\r\n}));\r\n\r\n(cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 \x3d (function (n,coll){\r\nif(typeof n \x3d\x3d\x3d \x27number\x27){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (number? n)\x22));\r\n}\r\n\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(coll);\r\nif(temp__5753__auto__){\r\nvar s \x3d temp__5753__auto__;\r\nreturn cljs.core.cons(cljs.core.first(s),cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));\r\n} else {\r\nreturn null;\r\n}\r\n}),null,null));\r\n}));\r\n\r\n(cljs.core.take_nth.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Returns a vector of [(take-while pred coll) (drop-while pred coll)]\r\n */\r\ncljs.core.split_with \x3d (function cljs$core$split_with(pred,coll){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);\r\n});\r\n/**\r\n * Applies f to each value in coll, splitting it each time f returns a\r\n * new value.  Returns a lazy seq of partitions.  Returns a stateful\r\n * transducer when no collection is provided.\r\n */\r\ncljs.core.partition_by \x3d (function cljs$core$partition_by(var_args){\r\nvar G__16148 \x3d arguments.length;\r\nswitch (G__16148) {\r\ncase 1:\r\nreturn cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\r\nreturn (function (rf){\r\nvar a \x3d cljs.core.array_list();\r\nvar pa \x3d cljs.core.volatile_BANG_(new cljs.core.Keyword(\x22cljs.core\x22,\x22none\x22,\x22cljs.core/none\x22,926646439));\r\nreturn (function() {\r\nvar G__21299 \x3d null;\r\nvar G__21299__0 \x3d (function (){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\r\n});\r\nvar G__21299__1 \x3d (function (result){\r\nvar result__$1 \x3d (cljs.core.truth_(a.isEmpty())?result:(function (){var v \x3d cljs.core.vec(a.toArray());\r\na.clear();\r\n\r\nreturn cljs.core.unreduced((rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,v) : rf.call(null,result,v)));\r\n})());\r\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null,result__$1));\r\n});\r\nvar G__21299__2 \x3d (function (result,input){\r\nvar pval \x3d cljs.core.deref(pa);\r\nvar val \x3d (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null,input));\r\ncljs.core.vreset_BANG_(pa,val);\r\n\r\nif(((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword(\x22cljs.core\x22,\x22none\x22,\x22cljs.core/none\x22,926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval)))){\r\na.add(input);\r\n\r\nreturn result;\r\n} else {\r\nvar v \x3d cljs.core.vec(a.toArray());\r\na.clear();\r\n\r\nvar ret \x3d (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,v) : rf.call(null,result,v));\r\nif(cljs.core.reduced_QMARK_(ret)){\r\n} else {\r\na.add(input);\r\n}\r\n\r\nreturn ret;\r\n}\r\n});\r\nG__21299 \x3d function(result,input){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__21299__0.call(this);\r\ncase 1:\r\nreturn G__21299__1.call(this,result);\r\ncase 2:\r\nreturn G__21299__2.call(this,result,input);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__21299.cljs$core$IFn$_invoke$arity$0 \x3d G__21299__0;\r\nG__21299.cljs$core$IFn$_invoke$arity$1 \x3d G__21299__1;\r\nG__21299.cljs$core$IFn$_invoke$arity$2 \x3d G__21299__2;\r\nreturn G__21299;\r\n})()\r\n});\r\n}));\r\n\r\n(cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,coll){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(coll);\r\nif(temp__5753__auto__){\r\nvar s \x3d temp__5753__auto__;\r\nvar fst \x3d cljs.core.first(s);\r\nvar fv \x3d (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null,fst));\r\nvar run \x3d cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2((function (p1__16146_SHARP_){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__16146_SHARP_) : f.call(null,p1__16146_SHARP_)));\r\n}),cljs.core.next(s)));\r\nreturn cljs.core.cons(run,cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f,(new cljs.core.LazySeq(null,(function (){\r\nreturn cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s);\r\n}),null,null))));\r\n} else {\r\nreturn null;\r\n}\r\n}),null,null));\r\n}));\r\n\r\n(cljs.core.partition_by.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Returns a map from distinct items in coll to the number of times\r\n *   they appear.\r\n */\r\ncljs.core.frequencies \x3d (function cljs$core$frequencies(coll){\r\nreturn cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){\r\nreturn cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));\r\n}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));\r\n});\r\n/**\r\n * Returns a lazy seq of the intermediate values of the reduction (as\r\n *   per reduce) of coll by f, starting with init.\r\n */\r\ncljs.core.reductions \x3d (function cljs$core$reductions(var_args){\r\nvar G__16150 \x3d arguments.length;\r\nswitch (G__16150) {\r\ncase 2:\r\nreturn cljs.core.reductions.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.reductions.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,coll){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar temp__5751__auto__ \x3d cljs.core.seq(coll);\r\nif(temp__5751__auto__){\r\nvar s \x3d temp__5751__auto__;\r\nreturn cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));\r\n} else {\r\nreturn (new cljs.core.List(null,(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)),null,(1),null));\r\n}\r\n}),null,null));\r\n}));\r\n\r\n(cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 \x3d (function (f,init,coll){\r\nif(cljs.core.reduced_QMARK_(init)){\r\nreturn (new cljs.core.List(null,cljs.core.deref(init),null,(1),null));\r\n} else {\r\nreturn cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(coll);\r\nif(temp__5753__auto__){\r\nvar s \x3d temp__5753__auto__;\r\nreturn cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__16151 \x3d init;\r\nvar G__16152 \x3d cljs.core.first(s);\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16151,G__16152) : f.call(null,G__16151,G__16152));\r\n})(),cljs.core.rest(s));\r\n} else {\r\nreturn null;\r\n}\r\n}),null,null)));\r\n}\r\n}));\r\n\r\n(cljs.core.reductions.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n/**\r\n * Takes a set of functions and returns a fn that is the juxtaposition\r\n *   of those fns.  The returned fn takes a variable number of args, and\r\n *   returns a vector containing the result of applying each fn to the\r\n *   args (left-to-right).\r\n *   ((juxt a b c) x) \x3d\x3e [(a x) (b x) (c x)]\r\n */\r\ncljs.core.juxt \x3d (function cljs$core$juxt(var_args){\r\nvar G__16168 \x3d arguments.length;\r\nswitch (G__16168) {\r\ncase 1:\r\nreturn cljs.core.juxt.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.juxt.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.juxt.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___21302 \x3d arguments.length;\r\nvar i__4865__auto___21303 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21303 \x3c len__4864__auto___21302)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___21303]));\r\n\r\nvar G__21304 \x3d (i__4865__auto___21303 + (1));\r\ni__4865__auto___21303 \x3d G__21304;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((3)),(0),null));\r\nreturn cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\r\nreturn (function() {\r\nvar G__21305 \x3d null;\r\nvar G__21305__0 \x3d (function (){\r\nreturn (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null))],null));\r\n});\r\nvar G__21305__1 \x3d (function (x){\r\nreturn (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null,x))],null));\r\n});\r\nvar G__21305__2 \x3d (function (x,y){\r\nreturn (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x,y) : f.call(null,x,y))],null));\r\n});\r\nvar G__21305__3 \x3d (function (x,y,z){\r\nreturn (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x,y,z) : f.call(null,x,y,z))],null));\r\n});\r\nvar G__21305__4 \x3d (function() { \r\nvar G__21306__delegate \x3d function (x,y,z,args){\r\nreturn (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));\r\n};\r\nvar G__21306 \x3d function (x,y,z,var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__21307__i \x3d 0, G__21307__a \x3d new Array(arguments.length -  3);\r\nwhile (G__21307__i \x3c G__21307__a.length) {G__21307__a[G__21307__i] \x3d arguments[G__21307__i + 3]; ++G__21307__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__21307__a,0,null);\r\n} \r\nreturn G__21306__delegate.call(this,x,y,z,args);};\r\nG__21306.cljs$lang$maxFixedArity \x3d 3;\r\nG__21306.cljs$lang$applyTo \x3d (function (arglist__21311){\r\nvar x \x3d cljs.core.first(arglist__21311);\r\narglist__21311 \x3d cljs.core.next(arglist__21311);\r\nvar y \x3d cljs.core.first(arglist__21311);\r\narglist__21311 \x3d cljs.core.next(arglist__21311);\r\nvar z \x3d cljs.core.first(arglist__21311);\r\nvar args \x3d cljs.core.rest(arglist__21311);\r\nreturn G__21306__delegate(x,y,z,args);\r\n});\r\nG__21306.cljs$core$IFn$_invoke$arity$variadic \x3d G__21306__delegate;\r\nreturn G__21306;\r\n})()\r\n;\r\nG__21305 \x3d function(x,y,z,var_args){\r\nvar args \x3d var_args;\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__21305__0.call(this);\r\ncase 1:\r\nreturn G__21305__1.call(this,x);\r\ncase 2:\r\nreturn G__21305__2.call(this,x,y);\r\ncase 3:\r\nreturn G__21305__3.call(this,x,y,z);\r\ndefault:\r\nvar G__21312 \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__21313__i \x3d 0, G__21313__a \x3d new Array(arguments.length -  3);\r\nwhile (G__21313__i \x3c G__21313__a.length) {G__21313__a[G__21313__i] \x3d arguments[G__21313__i + 3]; ++G__21313__i;}\r\nG__21312 \x3d new cljs.core.IndexedSeq(G__21313__a,0,null);\r\n}\r\nreturn G__21305__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21312);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__21305.cljs$lang$maxFixedArity \x3d 3;\r\nG__21305.cljs$lang$applyTo \x3d G__21305__4.cljs$lang$applyTo;\r\nG__21305.cljs$core$IFn$_invoke$arity$0 \x3d G__21305__0;\r\nG__21305.cljs$core$IFn$_invoke$arity$1 \x3d G__21305__1;\r\nG__21305.cljs$core$IFn$_invoke$arity$2 \x3d G__21305__2;\r\nG__21305.cljs$core$IFn$_invoke$arity$3 \x3d G__21305__3;\r\nG__21305.cljs$core$IFn$_invoke$arity$variadic \x3d G__21305__4.cljs$core$IFn$_invoke$arity$variadic;\r\nreturn G__21305;\r\n})()\r\n}));\r\n\r\n(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,g){\r\nreturn (function() {\r\nvar G__21314 \x3d null;\r\nvar G__21314__0 \x3d (function (){\r\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)),(g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null))],null));\r\n});\r\nvar G__21314__1 \x3d (function (x){\r\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null,x)),(g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null,x))],null));\r\n});\r\nvar G__21314__2 \x3d (function (x,y){\r\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x,y) : f.call(null,x,y)),(g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x,y) : g.call(null,x,y))],null));\r\n});\r\nvar G__21314__3 \x3d (function (x,y,z){\r\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x,y,z) : f.call(null,x,y,z)),(g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x,y,z) : g.call(null,x,y,z))],null));\r\n});\r\nvar G__21314__4 \x3d (function() { \r\nvar G__21315__delegate \x3d function (x,y,z,args){\r\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));\r\n};\r\nvar G__21315 \x3d function (x,y,z,var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__21316__i \x3d 0, G__21316__a \x3d new Array(arguments.length -  3);\r\nwhile (G__21316__i \x3c G__21316__a.length) {G__21316__a[G__21316__i] \x3d arguments[G__21316__i + 3]; ++G__21316__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__21316__a,0,null);\r\n} \r\nreturn G__21315__delegate.call(this,x,y,z,args);};\r\nG__21315.cljs$lang$maxFixedArity \x3d 3;\r\nG__21315.cljs$lang$applyTo \x3d (function (arglist__21317){\r\nvar x \x3d cljs.core.first(arglist__21317);\r\narglist__21317 \x3d cljs.core.next(arglist__21317);\r\nvar y \x3d cljs.core.first(arglist__21317);\r\narglist__21317 \x3d cljs.core.next(arglist__21317);\r\nvar z \x3d cljs.core.first(arglist__21317);\r\nvar args \x3d cljs.core.rest(arglist__21317);\r\nreturn G__21315__delegate(x,y,z,args);\r\n});\r\nG__21315.cljs$core$IFn$_invoke$arity$variadic \x3d G__21315__delegate;\r\nreturn G__21315;\r\n})()\r\n;\r\nG__21314 \x3d function(x,y,z,var_args){\r\nvar args \x3d var_args;\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__21314__0.call(this);\r\ncase 1:\r\nreturn G__21314__1.call(this,x);\r\ncase 2:\r\nreturn G__21314__2.call(this,x,y);\r\ncase 3:\r\nreturn G__21314__3.call(this,x,y,z);\r\ndefault:\r\nvar G__21318 \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__21319__i \x3d 0, G__21319__a \x3d new Array(arguments.length -  3);\r\nwhile (G__21319__i \x3c G__21319__a.length) {G__21319__a[G__21319__i] \x3d arguments[G__21319__i + 3]; ++G__21319__i;}\r\nG__21318 \x3d new cljs.core.IndexedSeq(G__21319__a,0,null);\r\n}\r\nreturn G__21314__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21318);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__21314.cljs$lang$maxFixedArity \x3d 3;\r\nG__21314.cljs$lang$applyTo \x3d G__21314__4.cljs$lang$applyTo;\r\nG__21314.cljs$core$IFn$_invoke$arity$0 \x3d G__21314__0;\r\nG__21314.cljs$core$IFn$_invoke$arity$1 \x3d G__21314__1;\r\nG__21314.cljs$core$IFn$_invoke$arity$2 \x3d G__21314__2;\r\nG__21314.cljs$core$IFn$_invoke$arity$3 \x3d G__21314__3;\r\nG__21314.cljs$core$IFn$_invoke$arity$variadic \x3d G__21314__4.cljs$core$IFn$_invoke$arity$variadic;\r\nreturn G__21314;\r\n})()\r\n}));\r\n\r\n(cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 \x3d (function (f,g,h){\r\nreturn (function() {\r\nvar G__21320 \x3d null;\r\nvar G__21320__0 \x3d (function (){\r\nreturn (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)),(g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)),(h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null))],null));\r\n});\r\nvar G__21320__1 \x3d (function (x){\r\nreturn (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null,x)),(g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null,x)),(h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null,x))],null));\r\n});\r\nvar G__21320__2 \x3d (function (x,y){\r\nreturn (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x,y) : f.call(null,x,y)),(g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x,y) : g.call(null,x,y)),(h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x,y) : h.call(null,x,y))],null));\r\n});\r\nvar G__21320__3 \x3d (function (x,y,z){\r\nreturn (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x,y,z) : f.call(null,x,y,z)),(g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x,y,z) : g.call(null,x,y,z)),(h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x,y,z) : h.call(null,x,y,z))],null));\r\n});\r\nvar G__21320__4 \x3d (function() { \r\nvar G__21321__delegate \x3d function (x,y,z,args){\r\nreturn (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));\r\n};\r\nvar G__21321 \x3d function (x,y,z,var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__21322__i \x3d 0, G__21322__a \x3d new Array(arguments.length -  3);\r\nwhile (G__21322__i \x3c G__21322__a.length) {G__21322__a[G__21322__i] \x3d arguments[G__21322__i + 3]; ++G__21322__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__21322__a,0,null);\r\n} \r\nreturn G__21321__delegate.call(this,x,y,z,args);};\r\nG__21321.cljs$lang$maxFixedArity \x3d 3;\r\nG__21321.cljs$lang$applyTo \x3d (function (arglist__21323){\r\nvar x \x3d cljs.core.first(arglist__21323);\r\narglist__21323 \x3d cljs.core.next(arglist__21323);\r\nvar y \x3d cljs.core.first(arglist__21323);\r\narglist__21323 \x3d cljs.core.next(arglist__21323);\r\nvar z \x3d cljs.core.first(arglist__21323);\r\nvar args \x3d cljs.core.rest(arglist__21323);\r\nreturn G__21321__delegate(x,y,z,args);\r\n});\r\nG__21321.cljs$core$IFn$_invoke$arity$variadic \x3d G__21321__delegate;\r\nreturn G__21321;\r\n})()\r\n;\r\nG__21320 \x3d function(x,y,z,var_args){\r\nvar args \x3d var_args;\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__21320__0.call(this);\r\ncase 1:\r\nreturn G__21320__1.call(this,x);\r\ncase 2:\r\nreturn G__21320__2.call(this,x,y);\r\ncase 3:\r\nreturn G__21320__3.call(this,x,y,z);\r\ndefault:\r\nvar G__21324 \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__21325__i \x3d 0, G__21325__a \x3d new Array(arguments.length -  3);\r\nwhile (G__21325__i \x3c G__21325__a.length) {G__21325__a[G__21325__i] \x3d arguments[G__21325__i + 3]; ++G__21325__i;}\r\nG__21324 \x3d new cljs.core.IndexedSeq(G__21325__a,0,null);\r\n}\r\nreturn G__21320__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21324);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__21320.cljs$lang$maxFixedArity \x3d 3;\r\nG__21320.cljs$lang$applyTo \x3d G__21320__4.cljs$lang$applyTo;\r\nG__21320.cljs$core$IFn$_invoke$arity$0 \x3d G__21320__0;\r\nG__21320.cljs$core$IFn$_invoke$arity$1 \x3d G__21320__1;\r\nG__21320.cljs$core$IFn$_invoke$arity$2 \x3d G__21320__2;\r\nG__21320.cljs$core$IFn$_invoke$arity$3 \x3d G__21320__3;\r\nG__21320.cljs$core$IFn$_invoke$arity$variadic \x3d G__21320__4.cljs$core$IFn$_invoke$arity$variadic;\r\nreturn G__21320;\r\n})()\r\n}));\r\n\r\n(cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,g,h,fs){\r\nvar fs__$1 \x3d cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);\r\nreturn (function() {\r\nvar G__21326 \x3d null;\r\nvar G__21326__0 \x3d (function (){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16153_SHARP_,p2__16154_SHARP_){\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16153_SHARP_,(p2__16154_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__16154_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__16154_SHARP_.call(null)));\r\n}),cljs.core.PersistentVector.EMPTY,fs__$1);\r\n});\r\nvar G__21326__1 \x3d (function (x){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16155_SHARP_,p2__16156_SHARP_){\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16155_SHARP_,(p2__16156_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__16156_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__16156_SHARP_.call(null,x)));\r\n}),cljs.core.PersistentVector.EMPTY,fs__$1);\r\n});\r\nvar G__21326__2 \x3d (function (x,y){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16157_SHARP_,p2__16158_SHARP_){\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16157_SHARP_,(p2__16158_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__16158_SHARP_.cljs$core$IFn$_invoke$arity$2(x,y) : p2__16158_SHARP_.call(null,x,y)));\r\n}),cljs.core.PersistentVector.EMPTY,fs__$1);\r\n});\r\nvar G__21326__3 \x3d (function (x,y,z){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16159_SHARP_,p2__16160_SHARP_){\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16159_SHARP_,(p2__16160_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__16160_SHARP_.cljs$core$IFn$_invoke$arity$3(x,y,z) : p2__16160_SHARP_.call(null,x,y,z)));\r\n}),cljs.core.PersistentVector.EMPTY,fs__$1);\r\n});\r\nvar G__21326__4 \x3d (function() { \r\nvar G__21332__delegate \x3d function (x,y,z,args){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16161_SHARP_,p2__16162_SHARP_){\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16161_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__16162_SHARP_,x,y,z,args));\r\n}),cljs.core.PersistentVector.EMPTY,fs__$1);\r\n};\r\nvar G__21332 \x3d function (x,y,z,var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__21334__i \x3d 0, G__21334__a \x3d new Array(arguments.length -  3);\r\nwhile (G__21334__i \x3c G__21334__a.length) {G__21334__a[G__21334__i] \x3d arguments[G__21334__i + 3]; ++G__21334__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__21334__a,0,null);\r\n} \r\nreturn G__21332__delegate.call(this,x,y,z,args);};\r\nG__21332.cljs$lang$maxFixedArity \x3d 3;\r\nG__21332.cljs$lang$applyTo \x3d (function (arglist__21335){\r\nvar x \x3d cljs.core.first(arglist__21335);\r\narglist__21335 \x3d cljs.core.next(arglist__21335);\r\nvar y \x3d cljs.core.first(arglist__21335);\r\narglist__21335 \x3d cljs.core.next(arglist__21335);\r\nvar z \x3d cljs.core.first(arglist__21335);\r\nvar args \x3d cljs.core.rest(arglist__21335);\r\nreturn G__21332__delegate(x,y,z,args);\r\n});\r\nG__21332.cljs$core$IFn$_invoke$arity$variadic \x3d G__21332__delegate;\r\nreturn G__21332;\r\n})()\r\n;\r\nG__21326 \x3d function(x,y,z,var_args){\r\nvar args \x3d var_args;\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__21326__0.call(this);\r\ncase 1:\r\nreturn G__21326__1.call(this,x);\r\ncase 2:\r\nreturn G__21326__2.call(this,x,y);\r\ncase 3:\r\nreturn G__21326__3.call(this,x,y,z);\r\ndefault:\r\nvar G__21336 \x3d null;\r\nif (arguments.length \x3e 3) {\r\nvar G__21337__i \x3d 0, G__21337__a \x3d new Array(arguments.length -  3);\r\nwhile (G__21337__i \x3c G__21337__a.length) {G__21337__a[G__21337__i] \x3d arguments[G__21337__i + 3]; ++G__21337__i;}\r\nG__21336 \x3d new cljs.core.IndexedSeq(G__21337__a,0,null);\r\n}\r\nreturn G__21326__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21336);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__21326.cljs$lang$maxFixedArity \x3d 3;\r\nG__21326.cljs$lang$applyTo \x3d G__21326__4.cljs$lang$applyTo;\r\nG__21326.cljs$core$IFn$_invoke$arity$0 \x3d G__21326__0;\r\nG__21326.cljs$core$IFn$_invoke$arity$1 \x3d G__21326__1;\r\nG__21326.cljs$core$IFn$_invoke$arity$2 \x3d G__21326__2;\r\nG__21326.cljs$core$IFn$_invoke$arity$3 \x3d G__21326__3;\r\nG__21326.cljs$core$IFn$_invoke$arity$variadic \x3d G__21326__4.cljs$core$IFn$_invoke$arity$variadic;\r\nreturn G__21326;\r\n})()\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.juxt.cljs$lang$applyTo \x3d (function (seq16164){\r\nvar G__16165 \x3d cljs.core.first(seq16164);\r\nvar seq16164__$1 \x3d cljs.core.next(seq16164);\r\nvar G__16166 \x3d cljs.core.first(seq16164__$1);\r\nvar seq16164__$2 \x3d cljs.core.next(seq16164__$1);\r\nvar G__16167 \x3d cljs.core.first(seq16164__$2);\r\nvar seq16164__$3 \x3d cljs.core.next(seq16164__$2);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__16165,G__16166,G__16167,seq16164__$3);\r\n}));\r\n\r\n(cljs.core.juxt.cljs$lang$maxFixedArity \x3d (3));\r\n\r\n/**\r\n * When lazy sequences are produced via functions that have side\r\n *   effects, any effects other than those needed to produce the first\r\n *   element in the seq do not occur until the seq is consumed. dorun can\r\n *   be used to force any effects. Walks through the successive nexts of\r\n *   the seq, does not retain the head and returns nil.\r\n */\r\ncljs.core.dorun \x3d (function cljs$core$dorun(var_args){\r\nvar G__16170 \x3d arguments.length;\r\nswitch (G__16170) {\r\ncase 1:\r\nreturn cljs.core.dorun.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.dorun.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\r\nwhile(true){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(coll);\r\nif(temp__5753__auto__){\r\nvar s \x3d temp__5753__auto__;\r\nvar G__21339 \x3d cljs.core.next(s);\r\ncoll \x3d G__21339;\r\ncontinue;\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 \x3d (function (n,coll){\r\nwhile(true){\r\nif(((cljs.core.seq(coll)) \x26\x26 ((n \x3e (0))))){\r\nvar G__21340 \x3d (n - (1));\r\nvar G__21341 \x3d cljs.core.next(coll);\r\nn \x3d G__21340;\r\ncoll \x3d G__21341;\r\ncontinue;\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.dorun.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * When lazy sequences are produced via functions that have side\r\n *   effects, any effects other than those needed to produce the first\r\n *   element in the seq do not occur until the seq is consumed. doall can\r\n *   be used to force any effects. Walks through the successive nexts of\r\n *   the seq, retains the head and returns it, thus causing the entire\r\n *   seq to reside in memory at one time.\r\n */\r\ncljs.core.doall \x3d (function cljs$core$doall(var_args){\r\nvar G__16172 \x3d arguments.length;\r\nswitch (G__16172) {\r\ncase 1:\r\nreturn cljs.core.doall.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.doall.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.doall.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\r\ncljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);\r\n\r\nreturn coll;\r\n}));\r\n\r\n(cljs.core.doall.cljs$core$IFn$_invoke$arity$2 \x3d (function (n,coll){\r\ncljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);\r\n\r\nreturn coll;\r\n}));\r\n\r\n(cljs.core.doall.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Returns true if x is a JavaScript RegExp instance.\r\n */\r\ncljs.core.regexp_QMARK_ \x3d (function cljs$core$regexp_QMARK_(x){\r\nreturn (x instanceof RegExp);\r\n});\r\n/**\r\n * Returns the result of (re-find re s) if re fully matches s.\r\n */\r\ncljs.core.re_matches \x3d (function cljs$core$re_matches(re,s){\r\nif(typeof s \x3d\x3d\x3d \x27string\x27){\r\nvar matches \x3d re.exec(s);\r\nif((((!((matches \x3d\x3d null)))) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((matches[(0)]),s)))){\r\nif((((matches).length) \x3d\x3d\x3d (1))){\r\nreturn (matches[(0)]);\r\n} else {\r\nreturn cljs.core.vec(matches);\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nthrow (new TypeError(\x22re-matches must match against a string.\x22));\r\n}\r\n});\r\n/**\r\n * Returns the first regex match, if any, of s to re, using\r\n *   re.exec(s). Returns a vector, containing first the matching\r\n *   substring, then any capturing groups if the regular expression contains\r\n *   capturing groups.\r\n */\r\ncljs.core.re_find \x3d (function cljs$core$re_find(re,s){\r\nif(typeof s \x3d\x3d\x3d \x27string\x27){\r\nvar matches \x3d re.exec(s);\r\nif((matches \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nif((((matches).length) \x3d\x3d\x3d (1))){\r\nreturn (matches[(0)]);\r\n} else {\r\nreturn cljs.core.vec(matches);\r\n}\r\n}\r\n} else {\r\nthrow (new TypeError(\x22re-find must match against a string.\x22));\r\n}\r\n});\r\ncljs.core.re_seq_STAR_ \x3d (function cljs$core$re_seq_STAR_(re,s){\r\nvar temp__5757__auto__ \x3d re.exec(s);\r\nif((temp__5757__auto__ \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nvar matches \x3d temp__5757__auto__;\r\nvar match_str \x3d (matches[(0)]);\r\nvar match_vals \x3d (((matches.length \x3d\x3d\x3d (1)))?match_str:cljs.core.vec(matches));\r\nreturn cljs.core.cons(match_vals,(new cljs.core.LazySeq(null,(function (){\r\nvar post_idx \x3d (matches.index + (function (){var x__4336__auto__ \x3d (1);\r\nvar y__4337__auto__ \x3d match_str.length;\r\nreturn ((x__4336__auto__ \x3e y__4337__auto__) ? x__4336__auto__ : y__4337__auto__);\r\n})());\r\nif((post_idx \x3c\x3d s.length)){\r\nvar G__16173 \x3d re;\r\nvar G__16174 \x3d cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,post_idx);\r\nreturn (cljs.core.re_seq_STAR_.cljs$core$IFn$_invoke$arity$2 ? cljs.core.re_seq_STAR_.cljs$core$IFn$_invoke$arity$2(G__16173,G__16174) : cljs.core.re_seq_STAR_.call(null,G__16173,G__16174));\r\n} else {\r\nreturn null;\r\n}\r\n}),null,null)));\r\n}\r\n});\r\n/**\r\n * Returns a lazy sequence of successive matches of re in s.\r\n */\r\ncljs.core.re_seq \x3d (function cljs$core$re_seq(re,s){\r\nif(typeof s \x3d\x3d\x3d \x27string\x27){\r\nreturn cljs.core.re_seq_STAR_(re,s);\r\n} else {\r\nthrow (new TypeError(\x22re-seq must match against a string.\x22));\r\n}\r\n});\r\n/**\r\n * Returns an instance of RegExp which has compiled the provided string.\r\n */\r\ncljs.core.re_pattern \x3d (function cljs$core$re_pattern(s){\r\nif((s instanceof RegExp)){\r\nreturn s;\r\n} else {\r\nvar vec__16175 \x3d cljs.core.re_find(/^\\(\\?([idmsux]*)\\)/,s);\r\nvar prefix \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16175,(0),null);\r\nvar flags \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16175,(1),null);\r\nvar pattern \x3d cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(((prefix \x3d\x3d null))?(0):((prefix).length)));\r\nreturn (new RegExp(pattern,(function (){var or__4253__auto__ \x3d flags;\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn \x22\x22;\r\n}\r\n})()));\r\n}\r\n});\r\ncljs.core.pr_sequential_writer \x3d (function cljs$core$pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){\r\nvar _STAR_print_level_STAR__orig_val__16178 \x3d cljs.core._STAR_print_level_STAR_;\r\nvar _STAR_print_level_STAR__temp_val__16179 \x3d (((cljs.core._STAR_print_level_STAR_ \x3d\x3d null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));\r\n(cljs.core._STAR_print_level_STAR_ \x3d _STAR_print_level_STAR__temp_val__16179);\r\n\r\ntry{if((((!((cljs.core._STAR_print_level_STAR_ \x3d\x3d null)))) \x26\x26 ((cljs.core._STAR_print_level_STAR_ \x3c (0))))){\r\nreturn cljs.core._write(writer,\x22#\x22);\r\n} else {\r\ncljs.core._write(writer,begin);\r\n\r\nif((new cljs.core.Keyword(null,\x22print-length\x22,\x22print-length\x22,1931866356).cljs$core$IFn$_invoke$arity$1(opts) \x3d\x3d\x3d (0))){\r\nif(cljs.core.seq(coll)){\r\ncljs.core._write(writer,(function (){var or__4253__auto__ \x3d new cljs.core.Keyword(null,\x22more-marker\x22,\x22more-marker\x22,-14717935).cljs$core$IFn$_invoke$arity$1(opts);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn \x22...\x22;\r\n}\r\n})());\r\n} else {\r\n}\r\n} else {\r\nif(cljs.core.seq(coll)){\r\nvar G__16180_21425 \x3d cljs.core.first(coll);\r\nvar G__16181_21426 \x3d writer;\r\nvar G__16182_21427 \x3d opts;\r\n(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16180_21425,G__16181_21426,G__16182_21427) : print_one.call(null,G__16180_21425,G__16181_21426,G__16182_21427));\r\n} else {\r\n}\r\n\r\nvar coll_21428__$1 \x3d cljs.core.next(coll);\r\nvar n_21429 \x3d (new cljs.core.Keyword(null,\x22print-length\x22,\x22print-length\x22,1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));\r\nwhile(true){\r\nif(((coll_21428__$1) \x26\x26 ((((n_21429 \x3d\x3d null)) || ((!((n_21429 \x3d\x3d\x3d (0))))))))){\r\ncljs.core._write(writer,sep);\r\n\r\nvar G__16183_21431 \x3d cljs.core.first(coll_21428__$1);\r\nvar G__16184_21432 \x3d writer;\r\nvar G__16185_21433 \x3d opts;\r\n(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16183_21431,G__16184_21432,G__16185_21433) : print_one.call(null,G__16183_21431,G__16184_21432,G__16185_21433));\r\n\r\nvar G__21434 \x3d cljs.core.next(coll_21428__$1);\r\nvar G__21435 \x3d (n_21429 - (1));\r\ncoll_21428__$1 \x3d G__21434;\r\nn_21429 \x3d G__21435;\r\ncontinue;\r\n} else {\r\nif(((cljs.core.seq(coll_21428__$1)) \x26\x26 ((n_21429 \x3d\x3d\x3d (0))))){\r\ncljs.core._write(writer,sep);\r\n\r\ncljs.core._write(writer,(function (){var or__4253__auto__ \x3d new cljs.core.Keyword(null,\x22more-marker\x22,\x22more-marker\x22,-14717935).cljs$core$IFn$_invoke$arity$1(opts);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn \x22...\x22;\r\n}\r\n})());\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n}\r\n\r\nreturn cljs.core._write(writer,end);\r\n}\r\n}finally {(cljs.core._STAR_print_level_STAR_ \x3d _STAR_print_level_STAR__orig_val__16178);\r\n}});\r\ncljs.core.write_all \x3d (function cljs$core$write_all(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___21437 \x3d arguments.length;\r\nvar i__4865__auto___21438 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21438 \x3c len__4864__auto___21437)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___21438]));\r\n\r\nvar G__21440 \x3d (i__4865__auto___21438 + (1));\r\ni__4865__auto___21438 \x3d G__21440;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((1) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((1)),(0),null)):null);\r\nreturn cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic \x3d (function (writer,ss){\r\nvar seq__16188 \x3d cljs.core.seq(ss);\r\nvar chunk__16189 \x3d null;\r\nvar count__16190 \x3d (0);\r\nvar i__16191 \x3d (0);\r\nwhile(true){\r\nif((i__16191 \x3c count__16190)){\r\nvar s \x3d chunk__16189.cljs$core$IIndexed$_nth$arity$2(null,i__16191);\r\ncljs.core._write(writer,s);\r\n\r\n\r\nvar G__21443 \x3d seq__16188;\r\nvar G__21444 \x3d chunk__16189;\r\nvar G__21445 \x3d count__16190;\r\nvar G__21446 \x3d (i__16191 + (1));\r\nseq__16188 \x3d G__21443;\r\nchunk__16189 \x3d G__21444;\r\ncount__16190 \x3d G__21445;\r\ni__16191 \x3d G__21446;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto__ \x3d cljs.core.seq(seq__16188);\r\nif(temp__5753__auto__){\r\nvar seq__16188__$1 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__16188__$1)){\r\nvar c__4679__auto__ \x3d cljs.core.chunk_first(seq__16188__$1);\r\nvar G__21447 \x3d cljs.core.chunk_rest(seq__16188__$1);\r\nvar G__21448 \x3d c__4679__auto__;\r\nvar G__21449 \x3d cljs.core.count(c__4679__auto__);\r\nvar G__21450 \x3d (0);\r\nseq__16188 \x3d G__21447;\r\nchunk__16189 \x3d G__21448;\r\ncount__16190 \x3d G__21449;\r\ni__16191 \x3d G__21450;\r\ncontinue;\r\n} else {\r\nvar s \x3d cljs.core.first(seq__16188__$1);\r\ncljs.core._write(writer,s);\r\n\r\n\r\nvar G__21452 \x3d cljs.core.next(seq__16188__$1);\r\nvar G__21453 \x3d null;\r\nvar G__21454 \x3d (0);\r\nvar G__21455 \x3d (0);\r\nseq__16188 \x3d G__21452;\r\nchunk__16189 \x3d G__21453;\r\ncount__16190 \x3d G__21454;\r\ni__16191 \x3d G__21455;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.write_all.cljs$lang$maxFixedArity \x3d (1));\r\n\r\n/** @this {Function} */\r\n(cljs.core.write_all.cljs$lang$applyTo \x3d (function (seq16186){\r\nvar G__16187 \x3d cljs.core.first(seq16186);\r\nvar seq16186__$1 \x3d cljs.core.next(seq16186);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__16187,seq16186__$1);\r\n}));\r\n\r\ncljs.core.string_print \x3d (function cljs$core$string_print(x){\r\nif((cljs.core._STAR_print_fn_STAR_ \x3d\x3d null)){\r\nthrow (new Error(\x22No *print-fn* fn set for evaluation environment\x22));\r\n} else {\r\n}\r\n\r\ncljs.core._STAR_print_fn_STAR_.call(null,x);\r\n\r\nreturn null;\r\n});\r\ncljs.core.flush \x3d (function cljs$core$flush(){\r\nreturn null;\r\n});\r\ncljs.core.char_escapes \x3d (function (){var obj16193 \x3d ({\x22\\\x22\x22:\x22\\\\\\\x22\x22,\x22\\\\\x22:\x22\\\\\\\\\x22,\x22\\b\x22:\x22\\\\b\x22,\x22\\f\x22:\x22\\\\f\x22,\x22\\n\x22:\x22\\\\n\x22,\x22\\r\x22:\x22\\\\r\x22,\x22\\t\x22:\x22\\\\t\x22});\r\nreturn obj16193;\r\n})();\r\ncljs.core.quote_string \x3d (function cljs$core$quote_string(s){\r\nreturn [\x22\\\x22\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp(\x22[\\\\\\\\\\\x22\\b\\f\\n\\r\\t]\x22,\x22g\x22),(function (match){\r\nreturn (cljs.core.char_escapes[match]);\r\n}))),\x22\\\x22\x22].join(\x27\x27);\r\n});\r\ncljs.core.print_meta_QMARK_ \x3d (function cljs$core$print_meta_QMARK_(opts,obj){\r\nvar and__4251__auto__ \x3d cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964)));\r\nif(and__4251__auto__){\r\nvar and__4251__auto____$1 \x3d (((!((obj \x3d\x3d null))))?(((((obj.cljs$lang$protocol_mask$partition0$ \x26 (131072))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d obj.cljs$core$IMeta$))))?true:false):false);\r\nif(and__4251__auto____$1){\r\nreturn (!((cljs.core.meta(obj) \x3d\x3d null)));\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n});\r\ncljs.core.pr_writer_impl \x3d (function cljs$core$pr_writer_impl(obj,writer,opts){\r\nif((obj \x3d\x3d null)){\r\nreturn cljs.core._write(writer,\x22nil\x22);\r\n} else {\r\nif(cljs.core.print_meta_QMARK_(opts,obj)){\r\ncljs.core._write(writer,\x22^\x22);\r\n\r\nvar G__16195_21464 \x3d cljs.core.meta(obj);\r\nvar G__16196_21465 \x3d writer;\r\nvar G__16197_21466 \x3d opts;\r\n(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__16195_21464,G__16196_21465,G__16197_21466) : cljs.core.pr_writer.call(null,G__16195_21464,G__16196_21465,G__16197_21466));\r\n\r\ncljs.core._write(writer,\x22 \x22);\r\n} else {\r\n}\r\n\r\nif(obj.cljs$lang$type){\r\nreturn obj.cljs$lang$ctorPrWriter(obj,writer,opts);\r\n} else {\r\nif((((!((obj \x3d\x3d null))))?(((((obj.cljs$lang$protocol_mask$partition0$ \x26 (2147483648))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d obj.cljs$core$IPrintWithWriter$))))?true:(((!obj.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,obj):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,obj))){\r\nreturn cljs.core._pr_writer(obj,writer,opts);\r\n} else {\r\nif(((obj \x3d\x3d\x3d true) || (obj \x3d\x3d\x3d false))){\r\nreturn cljs.core._write(writer,cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));\r\n} else {\r\nif(typeof obj \x3d\x3d\x3d \x27number\x27){\r\nreturn cljs.core._write(writer,((isNaN(obj))?\x22##NaN\x22:(((obj \x3d\x3d\x3d Number.POSITIVE_INFINITY))?\x22##Inf\x22:(((obj \x3d\x3d\x3d Number.NEGATIVE_INFINITY))?\x22##-Inf\x22:cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj)\r\n))));\r\n} else {\r\nif(cljs.core.object_QMARK_(obj)){\r\ncljs.core._write(writer,\x22#js \x22);\r\n\r\nvar G__16199 \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){\r\nreturn (new cljs.core.MapEntry((function (){var G__16203 \x3d k;\r\nif((!((cljs.core.re_matches(/[A-Za-z_\\*\\+\\?!\\-\x27][\\w\\*\\+\\?!\\-\x27]*/,k) \x3d\x3d null)))){\r\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(G__16203);\r\n} else {\r\nreturn G__16203;\r\n}\r\n})(),(obj[k]),null));\r\n}),cljs.core.js_keys(obj));\r\nvar G__16200 \x3d cljs.core.pr_writer;\r\nvar G__16201 \x3d writer;\r\nvar G__16202 \x3d opts;\r\nreturn (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__16199,G__16200,G__16201,G__16202) : cljs.core.print_map.call(null,G__16199,G__16200,G__16201,G__16202));\r\n} else {\r\nif(cljs.core.array_QMARK_(obj)){\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22#js [\x22,\x22 \x22,\x22]\x22,opts,obj);\r\n} else {\r\nif(typeof obj \x3d\x3d\x3d \x27string\x27){\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22readably\x22,\x22readably\x22,1129599760).cljs$core$IFn$_invoke$arity$1(opts))){\r\nreturn cljs.core._write(writer,cljs.core.quote_string(obj));\r\n} else {\r\nreturn cljs.core._write(writer,obj);\r\n}\r\n} else {\r\nif(typeof obj \x3d\x3d\x3d \x27function\x27){\r\nvar name \x3d obj.name;\r\nvar name__$1 \x3d (cljs.core.truth_((function (){var or__4253__auto__ \x3d (name \x3d\x3d null);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn goog.string.isEmpty(name);\r\n}\r\n})())?\x22Function\x22:name);\r\nreturn cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22#object[\x22,name__$1,(cljs.core.truth_(cljs.core._STAR_print_fn_bodies_STAR_)?[\x22 \\\x22\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj),\x22\\\x22\x22].join(\x27\x27):\x22\x22),\x22]\x22], 0));\r\n} else {\r\nif((obj instanceof Date)){\r\nvar normalize \x3d (function (n,len){\r\nvar ns \x3d cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);\r\nwhile(true){\r\nif((((ns).length) \x3c len)){\r\nvar G__21479 \x3d [\x220\x22,ns].join(\x27\x27);\r\nns \x3d G__21479;\r\ncontinue;\r\n} else {\r\nreturn ns;\r\n}\r\nbreak;\r\n}\r\n});\r\nreturn cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22#inst \\\x22\x22,normalize(obj.getUTCFullYear(),(4)),\x22-\x22,normalize((obj.getUTCMonth() + (1)),(2)),\x22-\x22,normalize(obj.getUTCDate(),(2)),\x22T\x22,normalize(obj.getUTCHours(),(2)),\x22:\x22,normalize(obj.getUTCMinutes(),(2)),\x22:\x22,normalize(obj.getUTCSeconds(),(2)),\x22.\x22,normalize(obj.getUTCMilliseconds(),(3)),\x22-\x22,\x2200:00\\\x22\x22], 0));\r\n} else {\r\nif(cljs.core.regexp_QMARK_(obj)){\r\nreturn cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22#\\\x22\x22,obj.source,\x22\\\x22\x22], 0));\r\n} else {\r\nif(cljs.core.js_symbol_QMARK_(obj)){\r\nreturn cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22#object[\x22,obj.toString(),\x22]\x22], 0));\r\n} else {\r\nif(cljs.core.truth_((function (){var G__16204 \x3d obj;\r\nvar G__16204__$1 \x3d (((G__16204 \x3d\x3d null))?null:G__16204.constructor);\r\nif((G__16204__$1 \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn G__16204__$1.cljs$lang$ctorStr;\r\n}\r\n})())){\r\nreturn cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22#object[\x22,obj.constructor.cljs$lang$ctorStr.replace((new RegExp(\x22/\x22,\x22g\x22)),\x22.\x22),\x22]\x22], 0));\r\n} else {\r\nvar name \x3d (function (){var G__16205 \x3d obj;\r\nvar G__16205__$1 \x3d (((G__16205 \x3d\x3d null))?null:G__16205.constructor);\r\nif((G__16205__$1 \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn G__16205__$1.name;\r\n}\r\n})();\r\nvar name__$1 \x3d (cljs.core.truth_((function (){var or__4253__auto__ \x3d (name \x3d\x3d null);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn goog.string.isEmpty(name);\r\n}\r\n})())?\x22Object\x22:name);\r\nif((obj.constructor \x3d\x3d null)){\r\nreturn cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22#object[\x22,name__$1,\x22]\x22], 0));\r\n} else {\r\nreturn cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22#object[\x22,name__$1,\x22 \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj),\x22]\x22], 0));\r\n}\r\n}\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n\r\n}\r\n});\r\n/**\r\n * Prefer this to pr-seq, because it makes the printing function\r\n * configurable, allowing efficient implementations such as appending\r\n * to a StringBuffer.\r\n */\r\ncljs.core.pr_writer \x3d (function cljs$core$pr_writer(obj,writer,opts){\r\nvar temp__5751__auto__ \x3d new cljs.core.Keyword(null,\x22alt-impl\x22,\x22alt-impl\x22,670969595).cljs$core$IFn$_invoke$arity$1(opts);\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar alt_impl \x3d temp__5751__auto__;\r\nvar G__16206 \x3d obj;\r\nvar G__16207 \x3d writer;\r\nvar G__16208 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\x22fallback-impl\x22,\x22fallback-impl\x22,-1501286995),cljs.core.pr_writer_impl);\r\nreturn (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__16206,G__16207,G__16208) : alt_impl.call(null,G__16206,G__16207,G__16208));\r\n} else {\r\nreturn cljs.core.pr_writer_impl(obj,writer,opts);\r\n}\r\n});\r\ncljs.core.pr_seq_writer \x3d (function cljs$core$pr_seq_writer(objs,writer,opts){\r\ncljs.core.pr_writer(cljs.core.first(objs),writer,opts);\r\n\r\nvar seq__16209 \x3d cljs.core.seq(cljs.core.next(objs));\r\nvar chunk__16210 \x3d null;\r\nvar count__16211 \x3d (0);\r\nvar i__16212 \x3d (0);\r\nwhile(true){\r\nif((i__16212 \x3c count__16211)){\r\nvar obj \x3d chunk__16210.cljs$core$IIndexed$_nth$arity$2(null,i__16212);\r\ncljs.core._write(writer,\x22 \x22);\r\n\r\ncljs.core.pr_writer(obj,writer,opts);\r\n\r\n\r\nvar G__21486 \x3d seq__16209;\r\nvar G__21487 \x3d chunk__16210;\r\nvar G__21488 \x3d count__16211;\r\nvar G__21489 \x3d (i__16212 + (1));\r\nseq__16209 \x3d G__21486;\r\nchunk__16210 \x3d G__21487;\r\ncount__16211 \x3d G__21488;\r\ni__16212 \x3d G__21489;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto__ \x3d cljs.core.seq(seq__16209);\r\nif(temp__5753__auto__){\r\nvar seq__16209__$1 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__16209__$1)){\r\nvar c__4679__auto__ \x3d cljs.core.chunk_first(seq__16209__$1);\r\nvar G__21490 \x3d cljs.core.chunk_rest(seq__16209__$1);\r\nvar G__21491 \x3d c__4679__auto__;\r\nvar G__21492 \x3d cljs.core.count(c__4679__auto__);\r\nvar G__21493 \x3d (0);\r\nseq__16209 \x3d G__21490;\r\nchunk__16210 \x3d G__21491;\r\ncount__16211 \x3d G__21492;\r\ni__16212 \x3d G__21493;\r\ncontinue;\r\n} else {\r\nvar obj \x3d cljs.core.first(seq__16209__$1);\r\ncljs.core._write(writer,\x22 \x22);\r\n\r\ncljs.core.pr_writer(obj,writer,opts);\r\n\r\n\r\nvar G__21496 \x3d cljs.core.next(seq__16209__$1);\r\nvar G__21497 \x3d null;\r\nvar G__21498 \x3d (0);\r\nvar G__21499 \x3d (0);\r\nseq__16209 \x3d G__21496;\r\nchunk__16210 \x3d G__21497;\r\ncount__16211 \x3d G__21498;\r\ni__16212 \x3d G__21499;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.core.pr_sb_with_opts \x3d (function cljs$core$pr_sb_with_opts(objs,opts){\r\nvar sb \x3d (new goog.string.StringBuffer());\r\nvar writer \x3d (new cljs.core.StringBufferWriter(sb));\r\ncljs.core.pr_seq_writer(objs,writer,opts);\r\n\r\nwriter.cljs$core$IWriter$_flush$arity$1(null);\r\n\r\nreturn sb;\r\n});\r\n/**\r\n * Prints a sequence of objects to a string, observing all the\r\n *   options given in opts\r\n */\r\ncljs.core.pr_str_with_opts \x3d (function cljs$core$pr_str_with_opts(objs,opts){\r\nif(cljs.core.empty_QMARK_(objs)){\r\nreturn \x22\x22;\r\n} else {\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts(objs,opts));\r\n}\r\n});\r\n/**\r\n * Same as pr-str-with-opts followed by (newline)\r\n */\r\ncljs.core.prn_str_with_opts \x3d (function cljs$core$prn_str_with_opts(objs,opts){\r\nif(cljs.core.empty_QMARK_(objs)){\r\nreturn \x22\\n\x22;\r\n} else {\r\nvar sb \x3d cljs.core.pr_sb_with_opts(objs,opts);\r\nsb.append(\x22\\n\x22);\r\n\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);\r\n}\r\n});\r\n/**\r\n * Prints a sequence of objects using string-print, observing all\r\n *   the options given in opts\r\n */\r\ncljs.core.pr_with_opts \x3d (function cljs$core$pr_with_opts(objs,opts){\r\nreturn cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));\r\n});\r\n/**\r\n * Prints a newline using *print-fn*\r\n */\r\ncljs.core.newline \x3d (function cljs$core$newline(var_args){\r\nvar G__16214 \x3d arguments.length;\r\nswitch (G__16214) {\r\ncase 0:\r\nreturn cljs.core.newline.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.core.newline.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.newline.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nreturn cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);\r\n}));\r\n\r\n(cljs.core.newline.cljs$core$IFn$_invoke$arity$1 \x3d (function (opts){\r\ncljs.core.string_print(\x22\\n\x22);\r\n\r\nif(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,\x22flush-on-newline\x22,\x22flush-on-newline\x22,-151457939)))){\r\nreturn cljs.core.flush();\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.newline.cljs$lang$maxFixedArity \x3d 1);\r\n\r\n/**\r\n * pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.\r\n */\r\ncljs.core.pr_str \x3d (function cljs$core$pr_str(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___21520 \x3d arguments.length;\r\nvar i__4865__auto___21521 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21521 \x3c len__4864__auto___21520)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___21521]));\r\n\r\nvar G__21522 \x3d (i__4865__auto___21521 + (1));\r\ni__4865__auto___21521 \x3d G__21522;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic \x3d (function (objs){\r\nreturn cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());\r\n}));\r\n\r\n(cljs.core.pr_str.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(cljs.core.pr_str.cljs$lang$applyTo \x3d (function (seq16215){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16215));\r\n}));\r\n\r\n/**\r\n * Same as pr-str followed by (newline)\r\n */\r\ncljs.core.prn_str \x3d (function cljs$core$prn_str(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___21526 \x3d arguments.length;\r\nvar i__4865__auto___21527 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21527 \x3c len__4864__auto___21526)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___21527]));\r\n\r\nvar G__21529 \x3d (i__4865__auto___21527 + (1));\r\ni__4865__auto___21527 \x3d G__21529;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic \x3d (function (objs){\r\nreturn cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());\r\n}));\r\n\r\n(cljs.core.prn_str.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(cljs.core.prn_str.cljs$lang$applyTo \x3d (function (seq16216){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16216));\r\n}));\r\n\r\n/**\r\n * Prints the object(s) using string-print.  Prints the\r\n *   object(s), separated by spaces if there is more than one.\r\n *   By default, pr and prn print in a way that objects can be\r\n *   read by the reader\r\n */\r\ncljs.core.pr \x3d (function cljs$core$pr(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___21531 \x3d arguments.length;\r\nvar i__4865__auto___21533 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21533 \x3c len__4864__auto___21531)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___21533]));\r\n\r\nvar G__21534 \x3d (i__4865__auto___21533 + (1));\r\ni__4865__auto___21533 \x3d G__21534;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic \x3d (function (objs){\r\nreturn cljs.core.pr_with_opts(objs,cljs.core.pr_opts());\r\n}));\r\n\r\n(cljs.core.pr.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(cljs.core.pr.cljs$lang$applyTo \x3d (function (seq16217){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16217));\r\n}));\r\n\r\n/**\r\n * Prints the object(s) using string-print.\r\n *   print and println produce output for human consumption.\r\n * @param {...*} var_args\r\n */\r\ncljs.core.print \x3d (function() { \r\nvar cljs$core$cljs_core_print__delegate \x3d function (objs){\r\nreturn cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,\x22readably\x22,\x22readably\x22,1129599760),false));\r\n};\r\nvar cljs$core$cljs_core_print \x3d function (var_args){\r\nvar objs \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__21539__i \x3d 0, G__21539__a \x3d new Array(arguments.length -  0);\r\nwhile (G__21539__i \x3c G__21539__a.length) {G__21539__a[G__21539__i] \x3d arguments[G__21539__i + 0]; ++G__21539__i;}\r\n  objs \x3d new cljs.core.IndexedSeq(G__21539__a,0,null);\r\n} \r\nreturn cljs$core$cljs_core_print__delegate.call(this,objs);};\r\ncljs$core$cljs_core_print.cljs$lang$maxFixedArity \x3d 0;\r\ncljs$core$cljs_core_print.cljs$lang$applyTo \x3d (function (arglist__21540){\r\nvar objs \x3d cljs.core.seq(arglist__21540);\r\nreturn cljs$core$cljs_core_print__delegate(objs);\r\n});\r\ncljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic \x3d cljs$core$cljs_core_print__delegate;\r\nreturn cljs$core$cljs_core_print;\r\n})()\r\n;\r\n/**\r\n * print to a string, returning it\r\n */\r\ncljs.core.print_str \x3d (function cljs$core$print_str(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___21542 \x3d arguments.length;\r\nvar i__4865__auto___21543 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21543 \x3c len__4864__auto___21542)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___21543]));\r\n\r\nvar G__21544 \x3d (i__4865__auto___21543 + (1));\r\ni__4865__auto___21543 \x3d G__21544;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic \x3d (function (objs){\r\nreturn cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,\x22readably\x22,\x22readably\x22,1129599760),false));\r\n}));\r\n\r\n(cljs.core.print_str.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(cljs.core.print_str.cljs$lang$applyTo \x3d (function (seq16218){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16218));\r\n}));\r\n\r\n/**\r\n * Same as print followed by (newline)\r\n */\r\ncljs.core.println \x3d (function cljs$core$println(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___21549 \x3d arguments.length;\r\nvar i__4865__auto___21550 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21550 \x3c len__4864__auto___21549)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___21550]));\r\n\r\nvar G__21551 \x3d (i__4865__auto___21550 + (1));\r\ni__4865__auto___21550 \x3d G__21551;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.println.cljs$core$IFn$_invoke$arity$variadic \x3d (function (objs){\r\ncljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,\x22readably\x22,\x22readably\x22,1129599760),false));\r\n\r\nif(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){\r\nreturn cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.println.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(cljs.core.println.cljs$lang$applyTo \x3d (function (seq16219){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16219));\r\n}));\r\n\r\n/**\r\n * println to a string, returning it\r\n */\r\ncljs.core.println_str \x3d (function cljs$core$println_str(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___21553 \x3d arguments.length;\r\nvar i__4865__auto___21554 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21554 \x3c len__4864__auto___21553)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___21554]));\r\n\r\nvar G__21555 \x3d (i__4865__auto___21554 + (1));\r\ni__4865__auto___21554 \x3d G__21555;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic \x3d (function (objs){\r\nreturn cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,\x22readably\x22,\x22readably\x22,1129599760),false));\r\n}));\r\n\r\n(cljs.core.println_str.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(cljs.core.println_str.cljs$lang$applyTo \x3d (function (seq16220){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16220));\r\n}));\r\n\r\n/**\r\n * Same as pr followed by (newline).\r\n */\r\ncljs.core.prn \x3d (function cljs$core$prn(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___21557 \x3d arguments.length;\r\nvar i__4865__auto___21561 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21561 \x3c len__4864__auto___21557)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___21561]));\r\n\r\nvar G__21562 \x3d (i__4865__auto___21561 + (1));\r\ni__4865__auto___21561 \x3d G__21562;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic \x3d (function (objs){\r\ncljs.core.pr_with_opts(objs,cljs.core.pr_opts());\r\n\r\nif(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){\r\nreturn cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.prn.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(cljs.core.prn.cljs$lang$applyTo \x3d (function (seq16221){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16221));\r\n}));\r\n\r\ncljs.core.strip_ns \x3d (function cljs$core$strip_ns(named){\r\nif((named instanceof cljs.core.Symbol)){\r\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null,cljs.core.name(named));\r\n} else {\r\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(null,cljs.core.name(named));\r\n}\r\n});\r\n/**\r\n * Returns [lifted-ns lifted-map] or nil if m can\x27t be lifted.\r\n */\r\ncljs.core.lift_ns \x3d (function cljs$core$lift_ns(m){\r\nif(cljs.core.truth_(cljs.core._STAR_print_namespace_maps_STAR_)){\r\nvar ns \x3d null;\r\nvar G__16228 \x3d cljs.core.seq(m);\r\nvar vec__16229 \x3d G__16228;\r\nvar seq__16230 \x3d cljs.core.seq(vec__16229);\r\nvar first__16231 \x3d cljs.core.first(seq__16230);\r\nvar seq__16230__$1 \x3d cljs.core.next(seq__16230);\r\nvar vec__16232 \x3d first__16231;\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16232,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16232,(1),null);\r\nvar entry \x3d vec__16232;\r\nvar entries \x3d seq__16230__$1;\r\nvar lm \x3d cljs.core.empty(m);\r\nvar ns__$1 \x3d ns;\r\nvar G__16228__$1 \x3d G__16228;\r\nvar lm__$1 \x3d lm;\r\nwhile(true){\r\nvar ns__$2 \x3d ns__$1;\r\nvar vec__16241 \x3d G__16228__$1;\r\nvar seq__16242 \x3d cljs.core.seq(vec__16241);\r\nvar first__16243 \x3d cljs.core.first(seq__16242);\r\nvar seq__16242__$1 \x3d cljs.core.next(seq__16242);\r\nvar vec__16244 \x3d first__16243;\r\nvar k__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16244,(0),null);\r\nvar v__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16244,(1),null);\r\nvar entry__$1 \x3d vec__16244;\r\nvar entries__$1 \x3d seq__16242__$1;\r\nvar lm__$2 \x3d lm__$1;\r\nif(cljs.core.truth_(entry__$1)){\r\nif((((k__$1 instanceof cljs.core.Keyword)) || ((k__$1 instanceof cljs.core.Symbol)))){\r\nif(cljs.core.truth_(ns__$2)){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns__$2,cljs.core.namespace(k__$1))){\r\nvar G__21571 \x3d ns__$2;\r\nvar G__21572 \x3d entries__$1;\r\nvar G__21573 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2,cljs.core.strip_ns(k__$1),v__$1);\r\nns__$1 \x3d G__21571;\r\nG__16228__$1 \x3d G__21572;\r\nlm__$1 \x3d G__21573;\r\ncontinue;\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nvar temp__5753__auto__ \x3d cljs.core.namespace(k__$1);\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar new_ns \x3d temp__5753__auto__;\r\nvar G__21574 \x3d new_ns;\r\nvar G__21575 \x3d entries__$1;\r\nvar G__21576 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2,cljs.core.strip_ns(k__$1),v__$1);\r\nns__$1 \x3d G__21574;\r\nG__16228__$1 \x3d G__21575;\r\nlm__$1 \x3d G__21576;\r\ncontinue;\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns__$2,lm__$2], null);\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ncljs.core.print_prefix_map \x3d (function cljs$core$print_prefix_map(prefix,m,print_one,writer,opts){\r\nreturn cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){\r\nvar G__16247_21577 \x3d cljs.core.key(e);\r\nvar G__16248_21578 \x3d w;\r\nvar G__16249_21579 \x3d opts__$1;\r\n(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16247_21577,G__16248_21578,G__16249_21579) : print_one.call(null,G__16247_21577,G__16248_21578,G__16249_21579));\r\n\r\ncljs.core._write(w,\x22 \x22);\r\n\r\nvar G__16250 \x3d cljs.core.val(e);\r\nvar G__16251 \x3d w;\r\nvar G__16252 \x3d opts__$1;\r\nreturn (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16250,G__16251,G__16252) : print_one.call(null,G__16250,G__16251,G__16252));\r\n}),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix),\x22{\x22].join(\x27\x27),\x22, \x22,\x22}\x22,opts,cljs.core.seq(m));\r\n});\r\ncljs.core.print_map \x3d (function cljs$core$print_map(m,print_one,writer,opts){\r\nvar vec__16253 \x3d ((cljs.core.map_QMARK_(m))?cljs.core.lift_ns(m):null);\r\nvar ns \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16253,(0),null);\r\nvar lift_map \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16253,(1),null);\r\nif(cljs.core.truth_(ns)){\r\nreturn cljs.core.print_prefix_map([\x22#:\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns)].join(\x27\x27),lift_map,print_one,writer,opts);\r\n} else {\r\nreturn cljs.core.print_prefix_map(null,m,print_one,writer,opts);\r\n}\r\n});\r\n(cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (a,writer,opts){\r\nvar a__$1 \x3d this;\r\ncljs.core._write(writer,\x22#object[cljs.core.Volatile \x22);\r\n\r\ncljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),a__$1.state], null),writer,opts);\r\n\r\nreturn cljs.core._write(writer,\x22]\x22);\r\n}));\r\n\r\n(cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (a,writer,opts){\r\nvar a__$1 \x3d this;\r\ncljs.core._write(writer,\x22#\x27\x22);\r\n\r\nreturn cljs.core.pr_writer(a__$1.sym,writer,opts);\r\n}));\r\n\r\n(cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22[\x22,\x22 \x22,\x22]\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22[\x22,\x22 \x22,\x22]\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22#{\x22,\x22 \x22,\x22}\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);\r\n}));\r\n\r\n(cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.IntegerRange.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.IntegerRange.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);\r\n}));\r\n\r\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22[\x22,\x22 \x22,\x22]\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);\r\n}));\r\n\r\n(cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22#{\x22,\x22 \x22,\x22}\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (a,writer,opts){\r\nvar a__$1 \x3d this;\r\ncljs.core._write(writer,\x22#object[cljs.core.Atom \x22);\r\n\r\ncljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),a__$1.state], null),writer,opts);\r\n\r\nreturn cljs.core._write(writer,\x22]\x22);\r\n}));\r\n\r\n(cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22[\x22,\x22 \x22,\x22]\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22[\x22,\x22 \x22,\x22]\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core._write(writer,\x22()\x22);\r\n}));\r\n\r\n(cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22#queue [\x22,\x22 \x22,\x22]\x22,opts,cljs.core.seq(coll__$1));\r\n}));\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);\r\n}));\r\n\r\n(cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\r\n}));\r\n\r\n(cljs.core.List.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\r\n}));\r\n(cljs.core.Symbol.prototype.cljs$core$IComparable$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 \x3d (function (x,y){\r\nvar x__$1 \x3d this;\r\nif((y instanceof cljs.core.Symbol)){\r\nreturn cljs.core.compare_symbols(x__$1,y);\r\n} else {\r\nthrow (new Error([\x22Cannot compare \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1),\x22 to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(\x27\x27)));\r\n}\r\n}));\r\n\r\n(cljs.core.Keyword.prototype.cljs$core$IComparable$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 \x3d (function (x,y){\r\nvar x__$1 \x3d this;\r\nif((y instanceof cljs.core.Keyword)){\r\nreturn cljs.core.compare_keywords(x__$1,y);\r\n} else {\r\nthrow (new Error([\x22Cannot compare \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1),\x22 to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(\x27\x27)));\r\n}\r\n}));\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IComparable$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 \x3d (function (x,y){\r\nvar x__$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(y)){\r\nreturn cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);\r\n} else {\r\nthrow (new Error([\x22Cannot compare \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1),\x22 to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(\x27\x27)));\r\n}\r\n}));\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IComparable$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 \x3d (function (x,y){\r\nvar x__$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(y)){\r\nreturn cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);\r\n} else {\r\nthrow (new Error([\x22Cannot compare \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1),\x22 to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(\x27\x27)));\r\n}\r\n}));\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IComparable$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.MapEntry.prototype.cljs$core$IComparable$_compare$arity$2 \x3d (function (x,y){\r\nvar x__$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(y)){\r\nreturn cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);\r\n} else {\r\nthrow (new Error([\x22Cannot compare \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1),\x22 to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(\x27\x27)));\r\n}\r\n}));\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IComparable$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.BlackNode.prototype.cljs$core$IComparable$_compare$arity$2 \x3d (function (x,y){\r\nvar x__$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(y)){\r\nreturn cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);\r\n} else {\r\nthrow (new Error([\x22Cannot compare \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1),\x22 to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(\x27\x27)));\r\n}\r\n}));\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IComparable$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.RedNode.prototype.cljs$core$IComparable$_compare$arity$2 \x3d (function (x,y){\r\nvar x__$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(y)){\r\nreturn cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);\r\n} else {\r\nthrow (new Error([\x22Cannot compare \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1),\x22 to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(\x27\x27)));\r\n}\r\n}));\r\n/**\r\n * Atomically sets the metadata for a namespace/var/ref/agent/atom to be:\r\n * \r\n *   (apply f its-current-meta args)\r\n * \r\n *   f must be free of side-effects\r\n */\r\ncljs.core.alter_meta_BANG_ \x3d (function cljs$core$alter_meta_BANG_(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___21633 \x3d arguments.length;\r\nvar i__4865__auto___21634 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21634 \x3c len__4864__auto___21633)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___21634]));\r\n\r\nvar G__21642 \x3d (i__4865__auto___21634 + (1));\r\ni__4865__auto___21634 \x3d G__21642;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((2) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((2)),(0),null)):null);\r\nreturn cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (iref,f,args){\r\nreturn (iref.meta \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args));\r\n}));\r\n\r\n(cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/** @this {Function} */\r\n(cljs.core.alter_meta_BANG_.cljs$lang$applyTo \x3d (function (seq16256){\r\nvar G__16257 \x3d cljs.core.first(seq16256);\r\nvar seq16256__$1 \x3d cljs.core.next(seq16256);\r\nvar G__16258 \x3d cljs.core.first(seq16256__$1);\r\nvar seq16256__$2 \x3d cljs.core.next(seq16256__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__16257,G__16258,seq16256__$2);\r\n}));\r\n\r\n/**\r\n * Atomically resets the metadata for an atom\r\n */\r\ncljs.core.reset_meta_BANG_ \x3d (function cljs$core$reset_meta_BANG_(iref,m){\r\nreturn (iref.meta \x3d m);\r\n});\r\n/**\r\n * Adds a watch function to an atom reference. The watch fn must be a\r\n *   fn of 4 args: a key, the reference, its old-state, its\r\n *   new-state. Whenever the reference\x27s state might have been changed,\r\n *   any registered watches will have their functions called. The watch\r\n *   fn will be called synchronously. Note that an atom\x27s state\r\n *   may have changed again prior to the fn call, so use old/new-state\r\n *   rather than derefing the reference. Keys must be unique per\r\n *   reference, and can be used to remove the watch with remove-watch,\r\n *   but are otherwise considered opaque by the watch mechanism.  Bear in\r\n *   mind that regardless of the result or action of the watch fns the\r\n *   atom\x27s value will change.  Example:\r\n * \r\n *    (def a (atom 0))\r\n *    (add-watch a :inc (fn [k r o n] (assert (\x3d\x3d 0 n))))\r\n *    (swap! a inc)\r\n *    ;; Assertion Error\r\n *    (deref a)\r\n *    ;\x3d\x3e 1\r\n */\r\ncljs.core.add_watch \x3d (function cljs$core$add_watch(iref,key,f){\r\ncljs.core._add_watch(iref,key,f);\r\n\r\nreturn iref;\r\n});\r\n/**\r\n * Removes a watch (set by add-watch) from a reference\r\n */\r\ncljs.core.remove_watch \x3d (function cljs$core$remove_watch(iref,key){\r\ncljs.core._remove_watch(iref,key);\r\n\r\nreturn iref;\r\n});\r\n/**\r\n * @type {*}\r\n */\r\ncljs.core.gensym_counter \x3d null;\r\n/**\r\n * Returns a new symbol with a unique name. If a prefix string is\r\n *   supplied, the name is prefix# where # is some unique number. If\r\n *   prefix is not supplied, the prefix is \x27G__\x27.\r\n */\r\ncljs.core.gensym \x3d (function cljs$core$gensym(var_args){\r\nvar G__16260 \x3d arguments.length;\r\nswitch (G__16260) {\r\ncase 0:\r\nreturn cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.core.gensym.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nreturn cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\x22G__\x22);\r\n}));\r\n\r\n(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 \x3d (function (prefix_string){\r\nif((cljs.core.gensym_counter \x3d\x3d null)){\r\n(cljs.core.gensym_counter \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)));\r\n} else {\r\n}\r\n\r\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(\x27\x27));\r\n}));\r\n\r\n(cljs.core.gensym.cljs$lang$maxFixedArity \x3d 1);\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IPending}\r\n * @implements {cljs.core.IDeref}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n*/\r\ncljs.core.Delay \x3d (function (f,value){\r\nthis.f \x3d f;\r\nthis.value \x3d value;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2147516416;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 1;\r\n});\r\n(cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nif(cljs.core.truth_(self__.f)){\r\n(self__.value \x3d (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null)));\r\n\r\n(self__.f \x3d null);\r\n} else {\r\n}\r\n\r\nreturn self__.value;\r\n}));\r\n\r\n(cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar x__$1 \x3d this;\r\nreturn cljs.core.not(self__.f);\r\n}));\r\n\r\n(cljs.core.Delay.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (x,writer,opts){\r\nvar self__ \x3d this;\r\nvar x__$1 \x3d this;\r\ncljs.core._write(writer,\x22#object[cljs.core.Delay \x22);\r\n\r\ncljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22status\x22,\x22status\x22,-1997798413),(((self__.f \x3d\x3d null))?new cljs.core.Keyword(null,\x22ready\x22,\x22ready\x22,1086465795):new cljs.core.Keyword(null,\x22pending\x22,\x22pending\x22,-220036727)),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),self__.value], null),writer,opts);\r\n\r\nreturn cljs.core._write(writer,\x22]\x22);\r\n}));\r\n\r\n(cljs.core.Delay.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22f\x22,\x22f\x22,43394975,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22value\x22,\x22value\x22,1946509744,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.Delay.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.Delay.cljs$lang$ctorStr \x3d \x22cljs.core/Delay\x22);\r\n\r\n(cljs.core.Delay.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/Delay\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/Delay.\r\n */\r\ncljs.core.__GT_Delay \x3d (function cljs$core$__GT_Delay(f,value){\r\nreturn (new cljs.core.Delay(f,value));\r\n});\r\n\r\n/**\r\n * returns true if x is a Delay created with delay\r\n */\r\ncljs.core.delay_QMARK_ \x3d (function cljs$core$delay_QMARK_(x){\r\nreturn (x instanceof cljs.core.Delay);\r\n});\r\n/**\r\n * If x is a Delay, returns the (possibly cached) value of its expression, else returns x\r\n */\r\ncljs.core.force \x3d (function cljs$core$force(x){\r\nif(cljs.core.delay_QMARK_(x)){\r\nreturn cljs.core.deref(x);\r\n} else {\r\nreturn x;\r\n}\r\n});\r\n/**\r\n * Returns true if a value has been produced for a delay or lazy sequence.\r\n */\r\ncljs.core.realized_QMARK_ \x3d (function cljs$core$realized_QMARK_(x){\r\nreturn cljs.core._realized_QMARK_(x);\r\n});\r\ncljs.core.preserving_reduced \x3d (function cljs$core$preserving_reduced(rf){\r\nreturn (function (p1__16261_SHARP_,p2__16262_SHARP_){\r\nvar ret \x3d (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__16261_SHARP_,p2__16262_SHARP_) : rf.call(null,p1__16261_SHARP_,p2__16262_SHARP_));\r\nif(cljs.core.reduced_QMARK_(ret)){\r\nreturn cljs.core.reduced(ret);\r\n} else {\r\nreturn ret;\r\n}\r\n});\r\n});\r\n/**\r\n * A transducer which concatenates the contents of each input, which must be a\r\n *   collection, into the reduction.\r\n */\r\ncljs.core.cat \x3d (function cljs$core$cat(rf){\r\nvar rf1 \x3d cljs.core.preserving_reduced(rf);\r\nreturn (function() {\r\nvar G__21709 \x3d null;\r\nvar G__21709__0 \x3d (function (){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\r\n});\r\nvar G__21709__1 \x3d (function (result){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\r\n});\r\nvar G__21709__2 \x3d (function (result,input){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);\r\n});\r\nG__21709 \x3d function(result,input){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__21709__0.call(this);\r\ncase 1:\r\nreturn G__21709__1.call(this,result);\r\ncase 2:\r\nreturn G__21709__2.call(this,result,input);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__21709.cljs$core$IFn$_invoke$arity$0 \x3d G__21709__0;\r\nG__21709.cljs$core$IFn$_invoke$arity$1 \x3d G__21709__1;\r\nG__21709.cljs$core$IFn$_invoke$arity$2 \x3d G__21709__2;\r\nreturn G__21709;\r\n})()\r\n});\r\n/**\r\n * Returns a transducer that ends transduction when pred returns true\r\n *   for an input. When retf is supplied it must be a fn of 2 arguments -\r\n *   it will be passed the (completed) result so far and the input that\r\n *   triggered the predicate, and its return value (if it does not throw\r\n *   an exception) will be the return value of the transducer. If retf\r\n *   is not supplied, the input that triggered the predicate will be\r\n *   returned. If the predicate never returns true the transduction is\r\n *   unaffected.\r\n */\r\ncljs.core.halt_when \x3d (function cljs$core$halt_when(var_args){\r\nvar G__16264 \x3d arguments.length;\r\nswitch (G__16264) {\r\ncase 1:\r\nreturn cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1 \x3d (function (pred){\r\nreturn cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(pred,null);\r\n}));\r\n\r\n(cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2 \x3d (function (pred,retf){\r\nreturn (function (rf){\r\nreturn (function() {\r\nvar G__21713 \x3d null;\r\nvar G__21713__0 \x3d (function (){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\r\n});\r\nvar G__21713__1 \x3d (function (result){\r\nif(((cljs.core.map_QMARK_(result)) \x26\x26 (cljs.core.contains_QMARK_(result,new cljs.core.Keyword(\x22cljs.core\x22,\x22halt\x22,\x22cljs.core/halt\x22,-1049036715))))){\r\nreturn new cljs.core.Keyword(\x22cljs.core\x22,\x22halt\x22,\x22cljs.core/halt\x22,-1049036715).cljs$core$IFn$_invoke$arity$1(result);\r\n} else {\r\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\r\n}\r\n});\r\nvar G__21713__2 \x3d (function (result,input){\r\nif(cljs.core.truth_((pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null,input)))){\r\nreturn cljs.core.reduced(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\x22cljs.core\x22,\x22halt\x22,\x22cljs.core/halt\x22,-1049036715),(cljs.core.truth_(retf)?(function (){var G__16265 \x3d (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\r\nvar G__16266 \x3d input;\r\nreturn (retf.cljs$core$IFn$_invoke$arity$2 ? retf.cljs$core$IFn$_invoke$arity$2(G__16265,G__16266) : retf.call(null,G__16265,G__16266));\r\n})():input)], null));\r\n} else {\r\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,input) : rf.call(null,result,input));\r\n}\r\n});\r\nG__21713 \x3d function(result,input){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__21713__0.call(this);\r\ncase 1:\r\nreturn G__21713__1.call(this,result);\r\ncase 2:\r\nreturn G__21713__2.call(this,result,input);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__21713.cljs$core$IFn$_invoke$arity$0 \x3d G__21713__0;\r\nG__21713.cljs$core$IFn$_invoke$arity$1 \x3d G__21713__1;\r\nG__21713.cljs$core$IFn$_invoke$arity$2 \x3d G__21713__2;\r\nreturn G__21713;\r\n})()\r\n});\r\n}));\r\n\r\n(cljs.core.halt_when.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Returns a lazy sequence removing consecutive duplicates in coll.\r\n *   Returns a transducer when no collection is provided.\r\n */\r\ncljs.core.dedupe \x3d (function cljs$core$dedupe(var_args){\r\nvar G__16268 \x3d arguments.length;\r\nswitch (G__16268) {\r\ncase 0:\r\nreturn cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nreturn (function (rf){\r\nvar pa \x3d cljs.core.volatile_BANG_(new cljs.core.Keyword(\x22cljs.core\x22,\x22none\x22,\x22cljs.core/none\x22,926646439));\r\nreturn (function() {\r\nvar G__21721 \x3d null;\r\nvar G__21721__0 \x3d (function (){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\r\n});\r\nvar G__21721__1 \x3d (function (result){\r\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\r\n});\r\nvar G__21721__2 \x3d (function (result,input){\r\nvar prior \x3d cljs.core.deref(pa);\r\ncljs.core.vreset_BANG_(pa,input);\r\n\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){\r\nreturn result;\r\n} else {\r\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,input) : rf.call(null,result,input));\r\n}\r\n});\r\nG__21721 \x3d function(result,input){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn G__21721__0.call(this);\r\ncase 1:\r\nreturn G__21721__1.call(this,result);\r\ncase 2:\r\nreturn G__21721__2.call(this,result,input);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__21721.cljs$core$IFn$_invoke$arity$0 \x3d G__21721__0;\r\nG__21721.cljs$core$IFn$_invoke$arity$1 \x3d G__21721__1;\r\nG__21721.cljs$core$IFn$_invoke$arity$2 \x3d G__21721__2;\r\nreturn G__21721;\r\n})()\r\n});\r\n}));\r\n\r\n(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\r\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(),coll);\r\n}));\r\n\r\n(cljs.core.dedupe.cljs$lang$maxFixedArity \x3d 1);\r\n\r\n/**\r\n * Returns items from coll with random probability of prob (0.0 -\r\n *   1.0).  Returns a transducer when no collection is provided.\r\n */\r\ncljs.core.random_sample \x3d (function cljs$core$random_sample(var_args){\r\nvar G__16270 \x3d arguments.length;\r\nswitch (G__16270) {\r\ncase 1:\r\nreturn cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 \x3d (function (prob){\r\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){\r\nreturn ((cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) \x3c prob);\r\n}));\r\n}));\r\n\r\n(cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 \x3d (function (prob,coll){\r\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){\r\nreturn ((cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) \x3c prob);\r\n}),coll);\r\n}));\r\n\r\n(cljs.core.random_sample.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IReduce}\r\n*/\r\ncljs.core.Eduction \x3d (function (xform,coll){\r\nthis.xform \x3d xform;\r\nthis.coll \x3d coll;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2173173760;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 131072;\r\n});\r\n(cljs.core.Eduction.prototype.indexOf \x3d (function() {\r\nvar G__21728 \x3d null;\r\nvar G__21728__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1,x,(0));\r\n});\r\nvar G__21728__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1,x,start);\r\n});\r\nG__21728 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__21728__1.call(this,x);\r\ncase 2:\r\nreturn G__21728__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__21728.cljs$core$IFn$_invoke$arity$1 \x3d G__21728__1;\r\nG__21728.cljs$core$IFn$_invoke$arity$2 \x3d G__21728__2;\r\nreturn G__21728;\r\n})()\r\n);\r\n\r\n(cljs.core.Eduction.prototype.lastIndexOf \x3d (function() {\r\nvar G__21730 \x3d null;\r\nvar G__21730__1 \x3d (function (x){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1,x,cljs.core.count(coll__$1));\r\n});\r\nvar G__21730__2 \x3d (function (x,start){\r\nvar self__ \x3d this;\r\nvar coll__$1 \x3d this;\r\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1,x,start);\r\n});\r\nG__21730 \x3d function(x,start){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__21730__1.call(this,x);\r\ncase 2:\r\nreturn G__21730__2.call(this,x,start);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__21730.cljs$core$IFn$_invoke$arity$1 \x3d G__21730__1;\r\nG__21730.cljs$core$IFn$_invoke$arity$2 \x3d G__21730__2;\r\nreturn G__21730;\r\n})()\r\n);\r\n\r\n(cljs.core.Eduction.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn cljs.core.TransformerIterator.create(self__.xform,cljs.core.iter(self__.coll));\r\n}));\r\n\r\n(cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));\r\n}));\r\n\r\n(cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (_,f){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform,cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f),self__.coll);\r\n}));\r\n\r\n(cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (_,f,init){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f),init,self__.coll);\r\n}));\r\n\r\n(cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll__$1,writer,opts){\r\nvar self__ \x3d this;\r\nvar coll__$2 \x3d this;\r\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$2);\r\n}));\r\n\r\n(cljs.core.Eduction.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22xform\x22,\x22xform\x22,-85179481,null),new cljs.core.Symbol(null,\x22coll\x22,\x22coll\x22,-1006698606,null)], null);\r\n}));\r\n\r\n(cljs.core.Eduction.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.Eduction.cljs$lang$ctorStr \x3d \x22cljs.core/Eduction\x22);\r\n\r\n(cljs.core.Eduction.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/Eduction\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/Eduction.\r\n */\r\ncljs.core.__GT_Eduction \x3d (function cljs$core$__GT_Eduction(xform,coll){\r\nreturn (new cljs.core.Eduction(xform,coll));\r\n});\r\n\r\n(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\r\nvar this__4803__auto__ \x3d this;\r\nreturn cljs.core.es6_iterator(this__4803__auto__);\r\n}));\r\n/**\r\n * Returns a reducible/iterable application of the transducers\r\n *   to the items in coll. Transducers are applied in order as if\r\n *   combined with comp. Note that these applications will be\r\n *   performed every time reduce/iterator is called.\r\n */\r\ncljs.core.eduction \x3d (function cljs$core$eduction(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___21736 \x3d arguments.length;\r\nvar i__4865__auto___21737 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21737 \x3c len__4864__auto___21736)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___21737]));\r\n\r\nvar G__21738 \x3d (i__4865__auto___21737 + (1));\r\ni__4865__auto___21737 \x3d G__21738;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic \x3d (function (xforms){\r\nreturn (new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp,cljs.core.butlast(xforms)),cljs.core.last(xforms)));\r\n}));\r\n\r\n(cljs.core.eduction.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(cljs.core.eduction.cljs$lang$applyTo \x3d (function (seq16271){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16271));\r\n}));\r\n\r\n/**\r\n * Runs the supplied procedure (via reduce), for purposes of side\r\n *   effects, on successive items in the collection. Returns nil\r\n */\r\ncljs.core.run_BANG_ \x3d (function cljs$core$run_BANG_(proc,coll){\r\ncljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16273_SHARP_,p2__16272_SHARP_){\r\nreturn (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__16272_SHARP_) : proc.call(null,p2__16272_SHARP_));\r\n}),null,coll);\r\n\r\nreturn null;\r\n});\r\n\r\n/**\r\n * @interface\r\n */\r\ncljs.core.IEncodeJS \x3d function(){};\r\n\r\nvar cljs$core$IEncodeJS$_clj__GT_js$dyn_21742 \x3d (function (x){\r\nvar x__4550__auto__ \x3d (((x \x3d\x3d null))?null:x);\r\nvar m__4551__auto__ \x3d (cljs.core._clj__GT_js[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4551__auto__.call(null,x));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._clj__GT_js[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4549__auto__.call(null,x));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IEncodeJS.-clj-\x3ejs\x22,x);\r\n}\r\n}\r\n});\r\n/**\r\n * Recursively transforms clj values to JavaScript\r\n */\r\ncljs.core._clj__GT_js \x3d (function cljs$core$_clj__GT_js(x){\r\nif((((!((x \x3d\x3d null)))) \x26\x26 ((!((x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 \x3d\x3d null)))))){\r\nreturn x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);\r\n} else {\r\nreturn cljs$core$IEncodeJS$_clj__GT_js$dyn_21742(x);\r\n}\r\n});\r\n\r\nvar cljs$core$IEncodeJS$_key__GT_js$dyn_21744 \x3d (function (x){\r\nvar x__4550__auto__ \x3d (((x \x3d\x3d null))?null:x);\r\nvar m__4551__auto__ \x3d (cljs.core._key__GT_js[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4551__auto__.call(null,x));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._key__GT_js[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4549__auto__.call(null,x));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IEncodeJS.-key-\x3ejs\x22,x);\r\n}\r\n}\r\n});\r\n/**\r\n * Transforms map keys to valid JavaScript keys. Arbitrary keys are\r\n *   encoded to their string representation via (pr-str x)\r\n */\r\ncljs.core._key__GT_js \x3d (function cljs$core$_key__GT_js(x){\r\nif((((!((x \x3d\x3d null)))) \x26\x26 ((!((x.cljs$core$IEncodeJS$_key__GT_js$arity$1 \x3d\x3d null)))))){\r\nreturn x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);\r\n} else {\r\nreturn cljs$core$IEncodeJS$_key__GT_js$dyn_21744(x);\r\n}\r\n});\r\n\r\ncljs.core.key__GT_js \x3d (function cljs$core$key__GT_js(var_args){\r\nvar G__16275 \x3d arguments.length;\r\nswitch (G__16275) {\r\ncase 1:\r\nreturn cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\r\nreturn cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k,cljs.core.clj__GT_js);\r\n}));\r\n\r\n(cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,primitive_fn){\r\nif((((!((k \x3d\x3d null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d k.cljs$core$IEncodeJS$))))?true:(((!k.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,k):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,k))){\r\nreturn cljs.core._clj__GT_js(k);\r\n} else {\r\nif(((typeof k \x3d\x3d\x3d \x27string\x27) || (((typeof k \x3d\x3d\x3d \x27number\x27) || ((((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol)))))))){\r\nreturn (primitive_fn.cljs$core$IFn$_invoke$arity$1 ? primitive_fn.cljs$core$IFn$_invoke$arity$1(k) : primitive_fn.call(null,k));\r\n} else {\r\nreturn cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([k], 0));\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.key__GT_js.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Recursively transforms ClojureScript values to JavaScript.\r\n *   sets/vectors/lists become Arrays, Keywords and Symbol become Strings,\r\n *   Maps become Objects. Arbitrary keys are encoded to by `key-\x3ejs`.\r\n *   Options is a key-value pair, where the only valid key is\r\n *   :keyword-fn, which should point to a single-argument function to be\r\n *   called on keyword keys. Default to `name`.\r\n */\r\ncljs.core.clj__GT_js \x3d (function cljs$core$clj__GT_js(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___21756 \x3d arguments.length;\r\nvar i__4865__auto___21757 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21757 \x3c len__4864__auto___21756)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___21757]));\r\n\r\nvar G__21759 \x3d (i__4865__auto___21757 + (1));\r\ni__4865__auto___21757 \x3d G__21759;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((1) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((1)),(0),null)):null);\r\nreturn cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,p__16279){\r\nvar map__16280 \x3d p__16279;\r\nvar map__16280__$1 \x3d cljs.core.__destructure_map(map__16280);\r\nvar options \x3d map__16280__$1;\r\nvar keyword_fn \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__16280__$1,new cljs.core.Keyword(null,\x22keyword-fn\x22,\x22keyword-fn\x22,-64566675),cljs.core.name);\r\nvar keyfn \x3d (function cljs$core$keyfn(k){\r\nreturn cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k,thisfn);\r\n});\r\nvar thisfn \x3d (function cljs$core$thisfn(x__$1){\r\nif((x__$1 \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nif((((!((x__$1 \x3d\x3d null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x__$1.cljs$core$IEncodeJS$))))?true:(((!x__$1.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,x__$1):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,x__$1))){\r\nreturn cljs.core._clj__GT_js(x__$1);\r\n} else {\r\nif((x__$1 instanceof cljs.core.Keyword)){\r\nreturn (keyword_fn.cljs$core$IFn$_invoke$arity$1 ? keyword_fn.cljs$core$IFn$_invoke$arity$1(x__$1) : keyword_fn.call(null,x__$1));\r\n} else {\r\nif((x__$1 instanceof cljs.core.Symbol)){\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);\r\n} else {\r\nif(cljs.core.map_QMARK_(x__$1)){\r\nvar m \x3d ({});\r\nvar seq__16307_21762 \x3d cljs.core.seq(x__$1);\r\nvar chunk__16308_21763 \x3d null;\r\nvar count__16309_21764 \x3d (0);\r\nvar i__16310_21765 \x3d (0);\r\nwhile(true){\r\nif((i__16310_21765 \x3c count__16309_21764)){\r\nvar vec__16317_21766 \x3d chunk__16308_21763.cljs$core$IIndexed$_nth$arity$2(null,i__16310_21765);\r\nvar k_21767 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16317_21766,(0),null);\r\nvar v_21768 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16317_21766,(1),null);\r\ncljs.core.goog$module$goog$object.set(m,keyfn(k_21767),cljs$core$thisfn(v_21768));\r\n\r\n\r\nvar G__21770 \x3d seq__16307_21762;\r\nvar G__21771 \x3d chunk__16308_21763;\r\nvar G__21772 \x3d count__16309_21764;\r\nvar G__21773 \x3d (i__16310_21765 + (1));\r\nseq__16307_21762 \x3d G__21770;\r\nchunk__16308_21763 \x3d G__21771;\r\ncount__16309_21764 \x3d G__21772;\r\ni__16310_21765 \x3d G__21773;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto___21774 \x3d cljs.core.seq(seq__16307_21762);\r\nif(temp__5753__auto___21774){\r\nvar seq__16307_21775__$1 \x3d temp__5753__auto___21774;\r\nif(cljs.core.chunked_seq_QMARK_(seq__16307_21775__$1)){\r\nvar c__4679__auto___21776 \x3d cljs.core.chunk_first(seq__16307_21775__$1);\r\nvar G__21778 \x3d cljs.core.chunk_rest(seq__16307_21775__$1);\r\nvar G__21779 \x3d c__4679__auto___21776;\r\nvar G__21780 \x3d cljs.core.count(c__4679__auto___21776);\r\nvar G__21781 \x3d (0);\r\nseq__16307_21762 \x3d G__21778;\r\nchunk__16308_21763 \x3d G__21779;\r\ncount__16309_21764 \x3d G__21780;\r\ni__16310_21765 \x3d G__21781;\r\ncontinue;\r\n} else {\r\nvar vec__16320_21782 \x3d cljs.core.first(seq__16307_21775__$1);\r\nvar k_21783 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16320_21782,(0),null);\r\nvar v_21784 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16320_21782,(1),null);\r\ncljs.core.goog$module$goog$object.set(m,keyfn(k_21783),cljs$core$thisfn(v_21784));\r\n\r\n\r\nvar G__21785 \x3d cljs.core.next(seq__16307_21775__$1);\r\nvar G__21786 \x3d null;\r\nvar G__21787 \x3d (0);\r\nvar G__21788 \x3d (0);\r\nseq__16307_21762 \x3d G__21785;\r\nchunk__16308_21763 \x3d G__21786;\r\ncount__16309_21764 \x3d G__21787;\r\ni__16310_21765 \x3d G__21788;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nreturn m;\r\n} else {\r\nif(cljs.core.coll_QMARK_(x__$1)){\r\nvar arr \x3d [];\r\nvar seq__16323_21790 \x3d cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn,x__$1));\r\nvar chunk__16324_21791 \x3d null;\r\nvar count__16325_21792 \x3d (0);\r\nvar i__16326_21793 \x3d (0);\r\nwhile(true){\r\nif((i__16326_21793 \x3c count__16325_21792)){\r\nvar x_21795__$2 \x3d chunk__16324_21791.cljs$core$IIndexed$_nth$arity$2(null,i__16326_21793);\r\narr.push(x_21795__$2);\r\n\r\n\r\nvar G__21796 \x3d seq__16323_21790;\r\nvar G__21797 \x3d chunk__16324_21791;\r\nvar G__21798 \x3d count__16325_21792;\r\nvar G__21799 \x3d (i__16326_21793 + (1));\r\nseq__16323_21790 \x3d G__21796;\r\nchunk__16324_21791 \x3d G__21797;\r\ncount__16325_21792 \x3d G__21798;\r\ni__16326_21793 \x3d G__21799;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto___21800 \x3d cljs.core.seq(seq__16323_21790);\r\nif(temp__5753__auto___21800){\r\nvar seq__16323_21801__$1 \x3d temp__5753__auto___21800;\r\nif(cljs.core.chunked_seq_QMARK_(seq__16323_21801__$1)){\r\nvar c__4679__auto___21802 \x3d cljs.core.chunk_first(seq__16323_21801__$1);\r\nvar G__21803 \x3d cljs.core.chunk_rest(seq__16323_21801__$1);\r\nvar G__21804 \x3d c__4679__auto___21802;\r\nvar G__21805 \x3d cljs.core.count(c__4679__auto___21802);\r\nvar G__21806 \x3d (0);\r\nseq__16323_21790 \x3d G__21803;\r\nchunk__16324_21791 \x3d G__21804;\r\ncount__16325_21792 \x3d G__21805;\r\ni__16326_21793 \x3d G__21806;\r\ncontinue;\r\n} else {\r\nvar x_21807__$2 \x3d cljs.core.first(seq__16323_21801__$1);\r\narr.push(x_21807__$2);\r\n\r\n\r\nvar G__21809 \x3d cljs.core.next(seq__16323_21801__$1);\r\nvar G__21810 \x3d null;\r\nvar G__21811 \x3d (0);\r\nvar G__21812 \x3d (0);\r\nseq__16323_21790 \x3d G__21809;\r\nchunk__16324_21791 \x3d G__21810;\r\ncount__16325_21792 \x3d G__21811;\r\ni__16326_21793 \x3d G__21812;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nreturn arr;\r\n} else {\r\nreturn x__$1;\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\nreturn thisfn(x);\r\n}));\r\n\r\n(cljs.core.clj__GT_js.cljs$lang$maxFixedArity \x3d (1));\r\n\r\n/** @this {Function} */\r\n(cljs.core.clj__GT_js.cljs$lang$applyTo \x3d (function (seq16277){\r\nvar G__16278 \x3d cljs.core.first(seq16277);\r\nvar seq16277__$1 \x3d cljs.core.next(seq16277);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__16278,seq16277__$1);\r\n}));\r\n\r\n\r\n/**\r\n * @interface\r\n */\r\ncljs.core.IEncodeClojure \x3d function(){};\r\n\r\nvar cljs$core$IEncodeClojure$_js__GT_clj$dyn_21815 \x3d (function (x,options){\r\nvar x__4550__auto__ \x3d (((x \x3d\x3d null))?null:x);\r\nvar m__4551__auto__ \x3d (cljs.core._js__GT_clj[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(x,options) : m__4551__auto__.call(null,x,options));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._js__GT_clj[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(x,options) : m__4549__auto__.call(null,x,options));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IEncodeClojure.-js-\x3eclj\x22,x);\r\n}\r\n}\r\n});\r\n/**\r\n * Transforms JavaScript values to Clojure\r\n */\r\ncljs.core._js__GT_clj \x3d (function cljs$core$_js__GT_clj(x,options){\r\nif((((!((x \x3d\x3d null)))) \x26\x26 ((!((x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 \x3d\x3d null)))))){\r\nreturn x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);\r\n} else {\r\nreturn cljs$core$IEncodeClojure$_js__GT_clj$dyn_21815(x,options);\r\n}\r\n});\r\n\r\n/**\r\n * Recursively transforms JavaScript arrays into ClojureScript\r\n *   vectors, and JavaScript objects into ClojureScript maps.  With\r\n *   option \x27:keywordize-keys true\x27 will convert object fields from\r\n *   strings to keywords.\r\n */\r\ncljs.core.js__GT_clj \x3d (function cljs$core$js__GT_clj(var_args){\r\nvar G__16332 \x3d arguments.length;\r\nswitch (G__16332) {\r\ncase 1:\r\nreturn cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___21821 \x3d arguments.length;\r\nvar i__4865__auto___21822 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21822 \x3c len__4864__auto___21821)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___21822]));\r\n\r\nvar G__21824 \x3d (i__4865__auto___21822 + (1));\r\ni__4865__auto___21822 \x3d G__21824;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((1)),(0),null));\r\nreturn cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22keywordize-keys\x22,\x22keywordize-keys\x22,1310784252),false], 0));\r\n}));\r\n\r\n(cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,opts){\r\nvar map__16333 \x3d opts;\r\nvar map__16333__$1 \x3d cljs.core.__destructure_map(map__16333);\r\nvar keywordize_keys \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__16333__$1,new cljs.core.Keyword(null,\x22keywordize-keys\x22,\x22keywordize-keys\x22,1310784252));\r\nvar keyfn \x3d (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);\r\nvar f \x3d (function cljs$core$thisfn(x__$1){\r\nif((((!((x__$1 \x3d\x3d null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x__$1.cljs$core$IEncodeClojure$))))?true:(((!x__$1.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,x__$1):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,x__$1))){\r\nreturn cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));\r\n} else {\r\nif(cljs.core.seq_QMARK_(x__$1)){\r\nreturn cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn,x__$1));\r\n} else {\r\nif(cljs.core.map_entry_QMARK_(x__$1)){\r\nreturn (new cljs.core.MapEntry(cljs$core$thisfn(cljs.core.key(x__$1)),cljs$core$thisfn(cljs.core.val(x__$1)),null));\r\n} else {\r\nif(cljs.core.coll_QMARK_(x__$1)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs$core$thisfn),x__$1);\r\n} else {\r\nif(cljs.core.array_QMARK_(x__$1)){\r\nreturn cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16327_SHARP_,p2__16328_SHARP_){\r\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(p1__16327_SHARP_,cljs$core$thisfn(p2__16328_SHARP_));\r\n}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),x__$1));\r\n} else {\r\nif((cljs.core.type(x__$1) \x3d\x3d\x3d Object)){\r\nreturn cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (r,k){\r\nreturn cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(r,(keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null,k)),cljs$core$thisfn(cljs.core.goog$module$goog$object.get(x__$1,k)));\r\n}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),cljs.core.js_keys(x__$1)));\r\n} else {\r\nreturn x__$1;\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\nreturn f(x);\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.js__GT_clj.cljs$lang$applyTo \x3d (function (seq16330){\r\nvar G__16331 \x3d cljs.core.first(seq16330);\r\nvar seq16330__$1 \x3d cljs.core.next(seq16330);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__16331,seq16330__$1);\r\n}));\r\n\r\n(cljs.core.js__GT_clj.cljs$lang$maxFixedArity \x3d (1));\r\n\r\n/**\r\n * Returns a memoized version of a referentially transparent function. The\r\n *   memoized version of the function keeps a cache of the mapping from arguments\r\n *   to results and, when calls with the same arguments are repeated often, has\r\n *   higher performance at the expense of higher memory use.\r\n */\r\ncljs.core.memoize \x3d (function cljs$core$memoize(f){\r\nvar mem \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nreturn (function() { \r\nvar G__21831__delegate \x3d function (args){\r\nvar v \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(mem),args,cljs.core.lookup_sentinel);\r\nif((v \x3d\x3d\x3d cljs.core.lookup_sentinel)){\r\nvar ret \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);\r\n\r\nreturn ret;\r\n} else {\r\nreturn v;\r\n}\r\n};\r\nvar G__21831 \x3d function (var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__21834__i \x3d 0, G__21834__a \x3d new Array(arguments.length -  0);\r\nwhile (G__21834__i \x3c G__21834__a.length) {G__21834__a[G__21834__i] \x3d arguments[G__21834__i + 0]; ++G__21834__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__21834__a,0,null);\r\n} \r\nreturn G__21831__delegate.call(this,args);};\r\nG__21831.cljs$lang$maxFixedArity \x3d 0;\r\nG__21831.cljs$lang$applyTo \x3d (function (arglist__21835){\r\nvar args \x3d cljs.core.seq(arglist__21835);\r\nreturn G__21831__delegate(args);\r\n});\r\nG__21831.cljs$core$IFn$_invoke$arity$variadic \x3d G__21831__delegate;\r\nreturn G__21831;\r\n})()\r\n;\r\n});\r\n/**\r\n * trampoline can be used to convert algorithms requiring mutual\r\n *   recursion without stack consumption. Calls f with supplied args, if\r\n *   any. If f returns a fn, calls that fn with no arguments, and\r\n *   continues to repeat, until the return value is not a fn, then\r\n *   returns that non-fn value. Note that if you want to return a fn as a\r\n *   final value, you must wrap it in some data structure and unpack it\r\n *   after trampoline returns.\r\n */\r\ncljs.core.trampoline \x3d (function cljs$core$trampoline(var_args){\r\nvar G__16338 \x3d arguments.length;\r\nswitch (G__16338) {\r\ncase 1:\r\nreturn cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___21839 \x3d arguments.length;\r\nvar i__4865__auto___21841 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21841 \x3c len__4864__auto___21839)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___21841]));\r\n\r\nvar G__21843 \x3d (i__4865__auto___21841 + (1));\r\ni__4865__auto___21841 \x3d G__21843;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((1)),(0),null));\r\nreturn cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\r\nwhile(true){\r\nvar ret \x3d (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\nif(cljs.core.fn_QMARK_(ret)){\r\nvar G__21845 \x3d ret;\r\nf \x3d G__21845;\r\ncontinue;\r\n} else {\r\nreturn ret;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,args){\r\nreturn cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1((function (){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);\r\n}));\r\n}));\r\n\r\n/** @this {Function} */\r\n(cljs.core.trampoline.cljs$lang$applyTo \x3d (function (seq16336){\r\nvar G__16337 \x3d cljs.core.first(seq16336);\r\nvar seq16336__$1 \x3d cljs.core.next(seq16336);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__16337,seq16336__$1);\r\n}));\r\n\r\n(cljs.core.trampoline.cljs$lang$maxFixedArity \x3d (1));\r\n\r\n/**\r\n * Returns a random floating point number between 0 (inclusive) and\r\n *   n (default 1) (exclusive).\r\n */\r\ncljs.core.rand \x3d (function cljs$core$rand(var_args){\r\nvar G__16340 \x3d arguments.length;\r\nswitch (G__16340) {\r\ncase 0:\r\nreturn cljs.core.rand.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.core.rand.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.rand.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nreturn cljs.core.rand.cljs$core$IFn$_invoke$arity$1((1));\r\n}));\r\n\r\n(cljs.core.rand.cljs$core$IFn$_invoke$arity$1 \x3d (function (n){\r\nreturn (Math.random() * n);\r\n}));\r\n\r\n(cljs.core.rand.cljs$lang$maxFixedArity \x3d 1);\r\n\r\n/**\r\n * Returns a random integer between 0 (inclusive) and n (exclusive).\r\n */\r\ncljs.core.rand_int \x3d (function cljs$core$rand_int(n){\r\nreturn Math.floor((Math.random() * n));\r\n});\r\n/**\r\n * Return a random element of the (sequential) collection. Will have\r\n *   the same performance characteristics as nth for the given\r\n *   collection.\r\n */\r\ncljs.core.rand_nth \x3d (function cljs$core$rand_nth(coll){\r\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));\r\n});\r\n/**\r\n * Returns a map of the elements of coll keyed by the result of\r\n *   f on each element. The value at each key will be a vector of the\r\n *   corresponding elements, in the order they appeared in coll.\r\n */\r\ncljs.core.group_by \x3d (function cljs$core$group_by(f,coll){\r\nreturn cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){\r\nvar k \x3d (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null,x));\r\nreturn cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));\r\n}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));\r\n});\r\n/**\r\n * Creates a hierarchy object for use with derive, isa? etc.\r\n */\r\ncljs.core.make_hierarchy \x3d (function cljs$core$make_hierarchy(){\r\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22parents\x22,\x22parents\x22,-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22descendants\x22,\x22descendants\x22,1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22ancestors\x22,\x22ancestors\x22,-776045424),cljs.core.PersistentArrayMap.EMPTY], null);\r\n});\r\n/**\r\n * @type {*}\r\n */\r\ncljs.core._global_hierarchy \x3d null;\r\ncljs.core.get_global_hierarchy \x3d (function cljs$core$get_global_hierarchy(){\r\nif((cljs.core._global_hierarchy \x3d\x3d null)){\r\n(cljs.core._global_hierarchy \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.make_hierarchy()));\r\n} else {\r\n}\r\n\r\nreturn cljs.core._global_hierarchy;\r\n});\r\ncljs.core.swap_global_hierarchy_BANG_ \x3d (function cljs$core$swap_global_hierarchy_BANG_(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___21877 \x3d arguments.length;\r\nvar i__4865__auto___21878 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21878 \x3c len__4864__auto___21877)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___21878]));\r\n\r\nvar G__21879 \x3d (i__4865__auto___21878 + (1));\r\ni__4865__auto___21878 \x3d G__21879;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((1) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((1)),(0),null)):null);\r\nreturn cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4871__auto__);\r\n});\r\n\r\n(cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,args){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);\r\n}));\r\n\r\n(cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity \x3d (1));\r\n\r\n/** @this {Function} */\r\n(cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo \x3d (function (seq16341){\r\nvar G__16342 \x3d cljs.core.first(seq16341);\r\nvar seq16341__$1 \x3d cljs.core.next(seq16341);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__16342,seq16341__$1);\r\n}));\r\n\r\n/**\r\n * Returns true if (\x3d child parent), or child is directly or indirectly derived from\r\n *   parent, either via a JavaScript type inheritance relationship or a\r\n *   relationship established via derive. h must be a hierarchy obtained\r\n *   from make-hierarchy, if not supplied defaults to the global\r\n *   hierarchy\r\n */\r\ncljs.core.isa_QMARK_ \x3d (function cljs$core$isa_QMARK_(var_args){\r\nvar G__16344 \x3d arguments.length;\r\nswitch (G__16344) {\r\ncase 2:\r\nreturn cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 \x3d (function (child,parent){\r\nreturn cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.core.get_global_hierarchy()),child,parent);\r\n}));\r\n\r\n(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 \x3d (function (h,child,parent){\r\nvar or__4253__auto__ \x3d cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar or__4253__auto____$1 \x3d cljs.core.contains_QMARK_((function (){var fexpr__16345 \x3d new cljs.core.Keyword(null,\x22ancestors\x22,\x22ancestors\x22,-776045424).cljs$core$IFn$_invoke$arity$1(h);\r\nreturn (fexpr__16345.cljs$core$IFn$_invoke$arity$1 ? fexpr__16345.cljs$core$IFn$_invoke$arity$1(child) : fexpr__16345.call(null,child));\r\n})(),parent);\r\nif(or__4253__auto____$1){\r\nreturn or__4253__auto____$1;\r\n} else {\r\nvar and__4251__auto__ \x3d cljs.core.vector_QMARK_(parent);\r\nif(and__4251__auto__){\r\nvar and__4251__auto____$1 \x3d cljs.core.vector_QMARK_(child);\r\nif(and__4251__auto____$1){\r\nvar and__4251__auto____$2 \x3d (cljs.core.count(parent) \x3d\x3d\x3d cljs.core.count(child));\r\nif(and__4251__auto____$2){\r\nvar ret \x3d true;\r\nvar i \x3d (0);\r\nwhile(true){\r\nif((((!(ret))) || ((i \x3d\x3d\x3d cljs.core.count(parent))))){\r\nreturn ret;\r\n} else {\r\nvar G__21883 \x3d cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null,i)),(parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null,i)));\r\nvar G__21884 \x3d (i + (1));\r\nret \x3d G__21883;\r\ni \x3d G__21884;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn and__4251__auto____$2;\r\n}\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.core.isa_QMARK_.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n/**\r\n * Returns the immediate parents of tag, either via a JavaScript type\r\n *   inheritance relationship or a relationship established via derive. h\r\n *   must be a hierarchy obtained from make-hierarchy, if not supplied\r\n *   defaults to the global hierarchy\r\n */\r\ncljs.core.parents \x3d (function cljs$core$parents(var_args){\r\nvar G__16347 \x3d arguments.length;\r\nswitch (G__16347) {\r\ncase 1:\r\nreturn cljs.core.parents.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.parents.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.parents.cljs$core$IFn$_invoke$arity$1 \x3d (function (tag){\r\nreturn cljs.core.parents.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()),tag);\r\n}));\r\n\r\n(cljs.core.parents.cljs$core$IFn$_invoke$arity$2 \x3d (function (h,tag){\r\nreturn cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22parents\x22,\x22parents\x22,-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));\r\n}));\r\n\r\n(cljs.core.parents.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Returns the immediate and indirect parents of tag, either via a JavaScript type\r\n *   inheritance relationship or a relationship established via derive. h\r\n *   must be a hierarchy obtained from make-hierarchy, if not supplied\r\n *   defaults to the global hierarchy\r\n */\r\ncljs.core.ancestors \x3d (function cljs$core$ancestors(var_args){\r\nvar G__16349 \x3d arguments.length;\r\nswitch (G__16349) {\r\ncase 1:\r\nreturn cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 \x3d (function (tag){\r\nreturn cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()),tag);\r\n}));\r\n\r\n(cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 \x3d (function (h,tag){\r\nreturn cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22ancestors\x22,\x22ancestors\x22,-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));\r\n}));\r\n\r\n(cljs.core.ancestors.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Returns the immediate and indirect children of tag, through a\r\n *   relationship established via derive. h must be a hierarchy obtained\r\n *   from make-hierarchy, if not supplied defaults to the global\r\n *   hierarchy. Note: does not work on JavaScript type inheritance\r\n *   relationships.\r\n */\r\ncljs.core.descendants \x3d (function cljs$core$descendants(var_args){\r\nvar G__16351 \x3d arguments.length;\r\nswitch (G__16351) {\r\ncase 1:\r\nreturn cljs.core.descendants.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.descendants.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 \x3d (function (tag){\r\nreturn cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()),tag);\r\n}));\r\n\r\n(cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 \x3d (function (h,tag){\r\nreturn cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22descendants\x22,\x22descendants\x22,1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));\r\n}));\r\n\r\n(cljs.core.descendants.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Establishes a parent/child relationship between parent and\r\n *   tag. Parent must be a namespace-qualified symbol or keyword and\r\n *   child can be either a namespace-qualified symbol or keyword or a\r\n *   class. h must be a hierarchy obtained from make-hierarchy, if not\r\n *   supplied defaults to, and modifies, the global hierarchy.\r\n */\r\ncljs.core.derive \x3d (function cljs$core$derive(var_args){\r\nvar G__16353 \x3d arguments.length;\r\nswitch (G__16353) {\r\ncase 2:\r\nreturn cljs.core.derive.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.derive.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.derive.cljs$core$IFn$_invoke$arity$2 \x3d (function (tag,parent){\r\nif(cljs.core.truth_(cljs.core.namespace(parent))){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (namespace parent)\x22));\r\n}\r\n\r\ncljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag,parent], 0));\r\n\r\nreturn null;\r\n}));\r\n\r\n(cljs.core.derive.cljs$core$IFn$_invoke$arity$3 \x3d (function (h,tag,parent){\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (not\x3d tag parent)\x22));\r\n}\r\n\r\nvar tp \x3d new cljs.core.Keyword(null,\x22parents\x22,\x22parents\x22,-2027538891).cljs$core$IFn$_invoke$arity$1(h);\r\nvar td \x3d new cljs.core.Keyword(null,\x22descendants\x22,\x22descendants\x22,1824886031).cljs$core$IFn$_invoke$arity$1(h);\r\nvar ta \x3d new cljs.core.Keyword(null,\x22ancestors\x22,\x22ancestors\x22,-776045424).cljs$core$IFn$_invoke$arity$1(h);\r\nvar tf \x3d (function (m,source,sources,target,targets){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,k){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null,target)))));\r\n}),m,cljs.core.cons(source,(sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null,source))));\r\n});\r\nvar or__4253__auto__ \x3d ((cljs.core.contains_QMARK_((tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null,tag)),parent))?null:(function (){\r\nif(cljs.core.contains_QMARK_((ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null,tag)),parent)){\r\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag),\x22already has\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent),\x22as ancestor\x22].join(\x27\x27)));\r\n} else {\r\n}\r\n\r\nif(cljs.core.contains_QMARK_((ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null,parent)),tag)){\r\nthrow (new Error([\x22Cyclic derivation:\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent),\x22has\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag),\x22as ancestor\x22].join(\x27\x27)));\r\n} else {\r\n}\r\n\r\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22parents\x22,\x22parents\x22,-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\x22parents\x22,\x22parents\x22,-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,\x22ancestors\x22,\x22ancestors\x22,-776045424),tf(new cljs.core.Keyword(null,\x22ancestors\x22,\x22ancestors\x22,-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,\x22descendants\x22,\x22descendants\x22,1824886031),tf(new cljs.core.Keyword(null,\x22descendants\x22,\x22descendants\x22,1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);\r\n})()\r\n);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn h;\r\n}\r\n}));\r\n\r\n(cljs.core.derive.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n/**\r\n * Removes a parent/child relationship between parent and\r\n *   tag. h must be a hierarchy obtained from make-hierarchy, if not\r\n *   supplied defaults to, and modifies, the global hierarchy.\r\n */\r\ncljs.core.underive \x3d (function cljs$core$underive(var_args){\r\nvar G__16358 \x3d arguments.length;\r\nswitch (G__16358) {\r\ncase 2:\r\nreturn cljs.core.underive.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.underive.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.underive.cljs$core$IFn$_invoke$arity$2 \x3d (function (tag,parent){\r\ncljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag,parent], 0));\r\n\r\nreturn null;\r\n}));\r\n\r\n(cljs.core.underive.cljs$core$IFn$_invoke$arity$3 \x3d (function (h,tag,parent){\r\nvar parentMap \x3d new cljs.core.Keyword(null,\x22parents\x22,\x22parents\x22,-2027538891).cljs$core$IFn$_invoke$arity$1(h);\r\nvar childsParents \x3d (cljs.core.truth_((parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null,tag)))?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null,tag)),parent):cljs.core.PersistentHashSet.EMPTY);\r\nvar newParents \x3d (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));\r\nvar deriv_seq \x3d cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__16354_SHARP_){\r\nreturn cljs.core.cons(cljs.core.first(p1__16354_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__16354_SHARP_),cljs.core.second(p1__16354_SHARP_)));\r\n}),cljs.core.seq(newParents)));\r\nif(cljs.core.contains_QMARK_((parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null,tag)),parent)){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16355_SHARP_,p2__16356_SHARP_){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__16355_SHARP_,p2__16356_SHARP_);\r\n}),cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));\r\n} else {\r\nreturn h;\r\n}\r\n}));\r\n\r\n(cljs.core.underive.cljs$lang$maxFixedArity \x3d 3);\r\n\r\ncljs.core.reset_cache \x3d (function cljs$core$reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){\r\nreturn cljs.core.deref(method_table);\r\n}));\r\n\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){\r\nreturn cljs.core.deref(hierarchy);\r\n}));\r\n});\r\ncljs.core.prefers_STAR_ \x3d (function cljs$core$prefers_STAR_(x,y,prefer_table){\r\nvar xprefs \x3d (function (){var fexpr__16359 \x3d cljs.core.deref(prefer_table);\r\nreturn (fexpr__16359.cljs$core$IFn$_invoke$arity$1 ? fexpr__16359.cljs$core$IFn$_invoke$arity$1(x) : fexpr__16359.call(null,x));\r\n})();\r\nvar or__4253__auto__ \x3d (cljs.core.truth_((function (){var and__4251__auto__ \x3d xprefs;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null,y));\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())?true:null);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar or__4253__auto____$1 \x3d (function (){var ps \x3d cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);\r\nwhile(true){\r\nif((cljs.core.count(ps) \x3e (0))){\r\nif(cljs.core.truth_((function (){var G__16360 \x3d x;\r\nvar G__16361 \x3d cljs.core.first(ps);\r\nvar G__16362 \x3d prefer_table;\r\nreturn (cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__16360,G__16361,G__16362) : cljs.core.prefers_STAR_.call(null,G__16360,G__16361,G__16362));\r\n})())){\r\n} else {\r\n}\r\n\r\nvar G__21968 \x3d cljs.core.rest(ps);\r\nps \x3d G__21968;\r\ncontinue;\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n})();\r\nif(cljs.core.truth_(or__4253__auto____$1)){\r\nreturn or__4253__auto____$1;\r\n} else {\r\nvar or__4253__auto____$2 \x3d (function (){var ps \x3d cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);\r\nwhile(true){\r\nif((cljs.core.count(ps) \x3e (0))){\r\nif(cljs.core.truth_((function (){var G__16363 \x3d cljs.core.first(ps);\r\nvar G__16364 \x3d y;\r\nvar G__16365 \x3d prefer_table;\r\nreturn (cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__16363,G__16364,G__16365) : cljs.core.prefers_STAR_.call(null,G__16363,G__16364,G__16365));\r\n})())){\r\n} else {\r\n}\r\n\r\nvar G__21970 \x3d cljs.core.rest(ps);\r\nps \x3d G__21970;\r\ncontinue;\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n})();\r\nif(cljs.core.truth_(or__4253__auto____$2)){\r\nreturn or__4253__auto____$2;\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n}\r\n});\r\ncljs.core.dominates \x3d (function cljs$core$dominates(x,y,prefer_table,hierarchy){\r\nvar or__4253__auto__ \x3d cljs.core.prefers_STAR_(x,y,prefer_table);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(hierarchy,x,y);\r\n}\r\n});\r\ncljs.core.find_and_cache_best_method \x3d (function cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy,default_dispatch_val){\r\nvar best_entry \x3d cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__16366){\r\nvar vec__16367 \x3d p__16366;\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16367,(0),null);\r\nvar _ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16367,(1),null);\r\nvar e \x3d vec__16367;\r\nif(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(hierarchy),dispatch_val,k)){\r\nvar be2 \x3d (((((be \x3d\x3d null)) || (cljs.core.dominates(k,cljs.core.first(be),prefer_table,cljs.core.deref(hierarchy)))))?e:be);\r\nif(cljs.core.dominates(cljs.core.first(be2),k,prefer_table,cljs.core.deref(hierarchy))){\r\n} else {\r\nthrow (new Error([\x22Multiple methods in multimethod \x27\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\x22\x27 match dispatch value: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val),\x22 -\x3e \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(k),\x22 and \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(be2)),\x22, and neither is preferred\x22].join(\x27\x27)));\r\n}\r\n\r\nreturn be2;\r\n} else {\r\nreturn be;\r\n}\r\n}),null,cljs.core.deref(method_table));\r\nvar best_entry__$1 \x3d (function (){var temp__5751__auto__ \x3d (function (){var and__4251__auto__ \x3d (best_entry \x3d\x3d null);\r\nif(and__4251__auto__){\r\nvar fexpr__16370 \x3d cljs.core.deref(method_table);\r\nreturn (fexpr__16370.cljs$core$IFn$_invoke$arity$1 ? fexpr__16370.cljs$core$IFn$_invoke$arity$1(default_dispatch_val) : fexpr__16370.call(null,default_dispatch_val));\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})();\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar entry \x3d temp__5751__auto__;\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default_dispatch_val,entry], null);\r\n} else {\r\nreturn best_entry;\r\n}\r\n})();\r\nif(cljs.core.truth_(best_entry__$1)){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cached_hierarchy),cljs.core.deref(hierarchy))){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry__$1));\r\n\r\nreturn cljs.core.second(best_entry__$1);\r\n} else {\r\ncljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);\r\n\r\nreturn (cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8 ? cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy,default_dispatch_val) : cljs.core.find_and_cache_best_method.call(null,name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy,default_dispatch_val));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n\r\n/**\r\n * @interface\r\n */\r\ncljs.core.IMultiFn \x3d function(){};\r\n\r\nvar cljs$core$IMultiFn$_reset$dyn_21974 \x3d (function (mf){\r\nvar x__4550__auto__ \x3d (((mf \x3d\x3d null))?null:mf);\r\nvar m__4551__auto__ \x3d (cljs.core._reset[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4551__auto__.call(null,mf));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._reset[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4549__auto__.call(null,mf));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IMultiFn.-reset\x22,mf);\r\n}\r\n}\r\n});\r\ncljs.core._reset \x3d (function cljs$core$_reset(mf){\r\nif((((!((mf \x3d\x3d null)))) \x26\x26 ((!((mf.cljs$core$IMultiFn$_reset$arity$1 \x3d\x3d null)))))){\r\nreturn mf.cljs$core$IMultiFn$_reset$arity$1(mf);\r\n} else {\r\nreturn cljs$core$IMultiFn$_reset$dyn_21974(mf);\r\n}\r\n});\r\n\r\nvar cljs$core$IMultiFn$_add_method$dyn_21977 \x3d (function (mf,dispatch_val,method){\r\nvar x__4550__auto__ \x3d (((mf \x3d\x3d null))?null:mf);\r\nvar m__4551__auto__ \x3d (cljs.core._add_method[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(mf,dispatch_val,method) : m__4551__auto__.call(null,mf,dispatch_val,method));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._add_method[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(mf,dispatch_val,method) : m__4549__auto__.call(null,mf,dispatch_val,method));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IMultiFn.-add-method\x22,mf);\r\n}\r\n}\r\n});\r\ncljs.core._add_method \x3d (function cljs$core$_add_method(mf,dispatch_val,method){\r\nif((((!((mf \x3d\x3d null)))) \x26\x26 ((!((mf.cljs$core$IMultiFn$_add_method$arity$3 \x3d\x3d null)))))){\r\nreturn mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);\r\n} else {\r\nreturn cljs$core$IMultiFn$_add_method$dyn_21977(mf,dispatch_val,method);\r\n}\r\n});\r\n\r\nvar cljs$core$IMultiFn$_remove_method$dyn_21980 \x3d (function (mf,dispatch_val){\r\nvar x__4550__auto__ \x3d (((mf \x3d\x3d null))?null:mf);\r\nvar m__4551__auto__ \x3d (cljs.core._remove_method[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(mf,dispatch_val) : m__4551__auto__.call(null,mf,dispatch_val));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._remove_method[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(mf,dispatch_val) : m__4549__auto__.call(null,mf,dispatch_val));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IMultiFn.-remove-method\x22,mf);\r\n}\r\n}\r\n});\r\ncljs.core._remove_method \x3d (function cljs$core$_remove_method(mf,dispatch_val){\r\nif((((!((mf \x3d\x3d null)))) \x26\x26 ((!((mf.cljs$core$IMultiFn$_remove_method$arity$2 \x3d\x3d null)))))){\r\nreturn mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);\r\n} else {\r\nreturn cljs$core$IMultiFn$_remove_method$dyn_21980(mf,dispatch_val);\r\n}\r\n});\r\n\r\nvar cljs$core$IMultiFn$_prefer_method$dyn_21991 \x3d (function (mf,dispatch_val,dispatch_val_y){\r\nvar x__4550__auto__ \x3d (((mf \x3d\x3d null))?null:mf);\r\nvar m__4551__auto__ \x3d (cljs.core._prefer_method[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(mf,dispatch_val,dispatch_val_y) : m__4551__auto__.call(null,mf,dispatch_val,dispatch_val_y));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._prefer_method[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(mf,dispatch_val,dispatch_val_y) : m__4549__auto__.call(null,mf,dispatch_val,dispatch_val_y));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IMultiFn.-prefer-method\x22,mf);\r\n}\r\n}\r\n});\r\ncljs.core._prefer_method \x3d (function cljs$core$_prefer_method(mf,dispatch_val,dispatch_val_y){\r\nif((((!((mf \x3d\x3d null)))) \x26\x26 ((!((mf.cljs$core$IMultiFn$_prefer_method$arity$3 \x3d\x3d null)))))){\r\nreturn mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);\r\n} else {\r\nreturn cljs$core$IMultiFn$_prefer_method$dyn_21991(mf,dispatch_val,dispatch_val_y);\r\n}\r\n});\r\n\r\nvar cljs$core$IMultiFn$_get_method$dyn_21992 \x3d (function (mf,dispatch_val){\r\nvar x__4550__auto__ \x3d (((mf \x3d\x3d null))?null:mf);\r\nvar m__4551__auto__ \x3d (cljs.core._get_method[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(mf,dispatch_val) : m__4551__auto__.call(null,mf,dispatch_val));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._get_method[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(mf,dispatch_val) : m__4549__auto__.call(null,mf,dispatch_val));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IMultiFn.-get-method\x22,mf);\r\n}\r\n}\r\n});\r\ncljs.core._get_method \x3d (function cljs$core$_get_method(mf,dispatch_val){\r\nif((((!((mf \x3d\x3d null)))) \x26\x26 ((!((mf.cljs$core$IMultiFn$_get_method$arity$2 \x3d\x3d null)))))){\r\nreturn mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);\r\n} else {\r\nreturn cljs$core$IMultiFn$_get_method$dyn_21992(mf,dispatch_val);\r\n}\r\n});\r\n\r\nvar cljs$core$IMultiFn$_methods$dyn_21997 \x3d (function (mf){\r\nvar x__4550__auto__ \x3d (((mf \x3d\x3d null))?null:mf);\r\nvar m__4551__auto__ \x3d (cljs.core._methods[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4551__auto__.call(null,mf));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._methods[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4549__auto__.call(null,mf));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IMultiFn.-methods\x22,mf);\r\n}\r\n}\r\n});\r\ncljs.core._methods \x3d (function cljs$core$_methods(mf){\r\nif((((!((mf \x3d\x3d null)))) \x26\x26 ((!((mf.cljs$core$IMultiFn$_methods$arity$1 \x3d\x3d null)))))){\r\nreturn mf.cljs$core$IMultiFn$_methods$arity$1(mf);\r\n} else {\r\nreturn cljs$core$IMultiFn$_methods$dyn_21997(mf);\r\n}\r\n});\r\n\r\nvar cljs$core$IMultiFn$_prefers$dyn_21998 \x3d (function (mf){\r\nvar x__4550__auto__ \x3d (((mf \x3d\x3d null))?null:mf);\r\nvar m__4551__auto__ \x3d (cljs.core._prefers[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4551__auto__.call(null,mf));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._prefers[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4549__auto__.call(null,mf));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IMultiFn.-prefers\x22,mf);\r\n}\r\n}\r\n});\r\ncljs.core._prefers \x3d (function cljs$core$_prefers(mf){\r\nif((((!((mf \x3d\x3d null)))) \x26\x26 ((!((mf.cljs$core$IMultiFn$_prefers$arity$1 \x3d\x3d null)))))){\r\nreturn mf.cljs$core$IMultiFn$_prefers$arity$1(mf);\r\n} else {\r\nreturn cljs$core$IMultiFn$_prefers$dyn_21998(mf);\r\n}\r\n});\r\n\r\nvar cljs$core$IMultiFn$_default_dispatch_val$dyn_21999 \x3d (function (mf){\r\nvar x__4550__auto__ \x3d (((mf \x3d\x3d null))?null:mf);\r\nvar m__4551__auto__ \x3d (cljs.core._default_dispatch_val[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4551__auto__.call(null,mf));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._default_dispatch_val[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4549__auto__.call(null,mf));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IMultiFn.-default-dispatch-val\x22,mf);\r\n}\r\n}\r\n});\r\ncljs.core._default_dispatch_val \x3d (function cljs$core$_default_dispatch_val(mf){\r\nif((((!((mf \x3d\x3d null)))) \x26\x26 ((!((mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 \x3d\x3d null)))))){\r\nreturn mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);\r\n} else {\r\nreturn cljs$core$IMultiFn$_default_dispatch_val$dyn_21999(mf);\r\n}\r\n});\r\n\r\nvar cljs$core$IMultiFn$_dispatch_fn$dyn_22002 \x3d (function (mf){\r\nvar x__4550__auto__ \x3d (((mf \x3d\x3d null))?null:mf);\r\nvar m__4551__auto__ \x3d (cljs.core._dispatch_fn[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4551__auto__.call(null,mf));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.core._dispatch_fn[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4549__auto__.call(null,mf));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IMultiFn.-dispatch-fn\x22,mf);\r\n}\r\n}\r\n});\r\ncljs.core._dispatch_fn \x3d (function cljs$core$_dispatch_fn(mf){\r\nif((((!((mf \x3d\x3d null)))) \x26\x26 ((!((mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 \x3d\x3d null)))))){\r\nreturn mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);\r\n} else {\r\nreturn cljs$core$IMultiFn$_dispatch_fn$dyn_22002(mf);\r\n}\r\n});\r\n\r\ncljs.core.throw_no_method_error \x3d (function cljs$core$throw_no_method_error(name,dispatch_val){\r\nthrow (new Error([\x22No method in multimethod \x27\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\x22\x27 for dispatch value: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val)].join(\x27\x27)));\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IFn}\r\n * @implements {cljs.core.IMultiFn}\r\n * @implements {cljs.core.INamed}\r\n*/\r\ncljs.core.MultiFn \x3d (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){\r\nthis.name \x3d name;\r\nthis.dispatch_fn \x3d dispatch_fn;\r\nthis.default_dispatch_val \x3d default_dispatch_val;\r\nthis.hierarchy \x3d hierarchy;\r\nthis.method_table \x3d method_table;\r\nthis.prefer_table \x3d prefer_table;\r\nthis.method_cache \x3d method_cache;\r\nthis.cached_hierarchy \x3d cached_hierarchy;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 4194305;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 4352;\r\n});\r\n(cljs.core.MultiFn.prototype.call \x3d (function (unused__9633__auto__){\r\nvar self__ \x3d this;\r\nvar self__ \x3d this;\r\nvar G__16372 \x3d (arguments.length - (1));\r\nswitch (G__16372) {\r\ncase (0):\r\nreturn self__.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase (1):\r\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\r\n\r\nbreak;\r\ncase (2):\r\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase (3):\r\nreturn self__.cljs$core$IFn$_invoke$arity$3((arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ncase (4):\r\nreturn self__.cljs$core$IFn$_invoke$arity$4((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ncase (5):\r\nreturn self__.cljs$core$IFn$_invoke$arity$5((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\r\n\r\nbreak;\r\ncase (6):\r\nreturn self__.cljs$core$IFn$_invoke$arity$6((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]));\r\n\r\nbreak;\r\ncase (7):\r\nreturn self__.cljs$core$IFn$_invoke$arity$7((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]));\r\n\r\nbreak;\r\ncase (8):\r\nreturn self__.cljs$core$IFn$_invoke$arity$8((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]));\r\n\r\nbreak;\r\ncase (9):\r\nreturn self__.cljs$core$IFn$_invoke$arity$9((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]));\r\n\r\nbreak;\r\ncase (10):\r\nreturn self__.cljs$core$IFn$_invoke$arity$10((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]));\r\n\r\nbreak;\r\ncase (11):\r\nreturn self__.cljs$core$IFn$_invoke$arity$11((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]));\r\n\r\nbreak;\r\ncase (12):\r\nreturn self__.cljs$core$IFn$_invoke$arity$12((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]));\r\n\r\nbreak;\r\ncase (13):\r\nreturn self__.cljs$core$IFn$_invoke$arity$13((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]));\r\n\r\nbreak;\r\ncase (14):\r\nreturn self__.cljs$core$IFn$_invoke$arity$14((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]));\r\n\r\nbreak;\r\ncase (15):\r\nreturn self__.cljs$core$IFn$_invoke$arity$15((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]));\r\n\r\nbreak;\r\ncase (16):\r\nreturn self__.cljs$core$IFn$_invoke$arity$16((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]));\r\n\r\nbreak;\r\ncase (17):\r\nreturn self__.cljs$core$IFn$_invoke$arity$17((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]));\r\n\r\nbreak;\r\ncase (18):\r\nreturn self__.cljs$core$IFn$_invoke$arity$18((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]));\r\n\r\nbreak;\r\ncase (19):\r\nreturn self__.cljs$core$IFn$_invoke$arity$19((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]));\r\n\r\nbreak;\r\ncase (20):\r\nreturn self__.cljs$core$IFn$_invoke$arity$20((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]));\r\n\r\nbreak;\r\ncase (21):\r\nreturn self__.cljs$core$IFn$_invoke$arity$21((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]),(arguments[(21)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.apply \x3d (function (self__,args16371){\r\nvar self__ \x3d this;\r\nvar self____$1 \x3d this;\r\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16371)));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nvar self__ \x3d this;\r\nvar mf \x3d this;\r\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));\r\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\r\nif(cljs.core.truth_(target_fn)){\r\n} else {\r\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\r\n}\r\n\r\nreturn (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (a){\r\nvar self__ \x3d this;\r\nvar mf \x3d this;\r\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null,a));\r\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\r\nif(cljs.core.truth_(target_fn)){\r\n} else {\r\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\r\n}\r\n\r\nreturn (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null,a));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (a,b){\r\nvar self__ \x3d this;\r\nvar mf \x3d this;\r\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a,b) : self__.dispatch_fn.call(null,a,b));\r\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\r\nif(cljs.core.truth_(target_fn)){\r\n} else {\r\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\r\n}\r\n\r\nreturn (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a,b) : target_fn.call(null,a,b));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 \x3d (function (a,b,c){\r\nvar self__ \x3d this;\r\nvar mf \x3d this;\r\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a,b,c) : self__.dispatch_fn.call(null,a,b,c));\r\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\r\nif(cljs.core.truth_(target_fn)){\r\n} else {\r\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\r\n}\r\n\r\nreturn (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a,b,c) : target_fn.call(null,a,b,c));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 \x3d (function (a,b,c,d){\r\nvar self__ \x3d this;\r\nvar mf \x3d this;\r\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a,b,c,d) : self__.dispatch_fn.call(null,a,b,c,d));\r\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\r\nif(cljs.core.truth_(target_fn)){\r\n} else {\r\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\r\n}\r\n\r\nreturn (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a,b,c,d) : target_fn.call(null,a,b,c,d));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 \x3d (function (a,b,c,d,e){\r\nvar self__ \x3d this;\r\nvar mf \x3d this;\r\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a,b,c,d,e) : self__.dispatch_fn.call(null,a,b,c,d,e));\r\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\r\nif(cljs.core.truth_(target_fn)){\r\n} else {\r\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\r\n}\r\n\r\nreturn (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a,b,c,d,e) : target_fn.call(null,a,b,c,d,e));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 \x3d (function (a,b,c,d,e,f){\r\nvar self__ \x3d this;\r\nvar mf \x3d this;\r\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a,b,c,d,e,f) : self__.dispatch_fn.call(null,a,b,c,d,e,f));\r\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\r\nif(cljs.core.truth_(target_fn)){\r\n} else {\r\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\r\n}\r\n\r\nreturn (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a,b,c,d,e,f) : target_fn.call(null,a,b,c,d,e,f));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 \x3d (function (a,b,c,d,e,f,g){\r\nvar self__ \x3d this;\r\nvar mf \x3d this;\r\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a,b,c,d,e,f,g) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g));\r\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\r\nif(cljs.core.truth_(target_fn)){\r\n} else {\r\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\r\n}\r\n\r\nreturn (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a,b,c,d,e,f,g) : target_fn.call(null,a,b,c,d,e,f,g));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 \x3d (function (a,b,c,d,e,f,g,h){\r\nvar self__ \x3d this;\r\nvar mf \x3d this;\r\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a,b,c,d,e,f,g,h) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h));\r\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\r\nif(cljs.core.truth_(target_fn)){\r\n} else {\r\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\r\n}\r\n\r\nreturn (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a,b,c,d,e,f,g,h) : target_fn.call(null,a,b,c,d,e,f,g,h));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 \x3d (function (a,b,c,d,e,f,g,h,i){\r\nvar self__ \x3d this;\r\nvar mf \x3d this;\r\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a,b,c,d,e,f,g,h,i) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i));\r\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\r\nif(cljs.core.truth_(target_fn)){\r\n} else {\r\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\r\n}\r\n\r\nreturn (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a,b,c,d,e,f,g,h,i) : target_fn.call(null,a,b,c,d,e,f,g,h,i));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 \x3d (function (a,b,c,d,e,f,g,h,i,j){\r\nvar self__ \x3d this;\r\nvar mf \x3d this;\r\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a,b,c,d,e,f,g,h,i,j) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j));\r\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\r\nif(cljs.core.truth_(target_fn)){\r\n} else {\r\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\r\n}\r\n\r\nreturn (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a,b,c,d,e,f,g,h,i,j) : target_fn.call(null,a,b,c,d,e,f,g,h,i,j));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 \x3d (function (a,b,c,d,e,f,g,h,i,j,k){\r\nvar self__ \x3d this;\r\nvar mf \x3d this;\r\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a,b,c,d,e,f,g,h,i,j,k) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k));\r\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\r\nif(cljs.core.truth_(target_fn)){\r\n} else {\r\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\r\n}\r\n\r\nreturn (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a,b,c,d,e,f,g,h,i,j,k) : target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l){\r\nvar self__ \x3d this;\r\nvar mf \x3d this;\r\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a,b,c,d,e,f,g,h,i,j,k,l) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l));\r\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\r\nif(cljs.core.truth_(target_fn)){\r\n} else {\r\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\r\n}\r\n\r\nreturn (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a,b,c,d,e,f,g,h,i,j,k,l) : target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m){\r\nvar self__ \x3d this;\r\nvar mf \x3d this;\r\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a,b,c,d,e,f,g,h,i,j,k,l,m) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m));\r\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\r\nif(cljs.core.truth_(target_fn)){\r\n} else {\r\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\r\n}\r\n\r\nreturn (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a,b,c,d,e,f,g,h,i,j,k,l,m) : target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){\r\nvar self__ \x3d this;\r\nvar mf \x3d this;\r\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a,b,c,d,e,f,g,h,i,j,k,l,m,n) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n));\r\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\r\nif(cljs.core.truth_(target_fn)){\r\n} else {\r\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\r\n}\r\n\r\nreturn (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a,b,c,d,e,f,g,h,i,j,k,l,m,n) : target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){\r\nvar self__ \x3d this;\r\nvar mf \x3d this;\r\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o));\r\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\r\nif(cljs.core.truth_(target_fn)){\r\n} else {\r\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\r\n}\r\n\r\nreturn (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) : target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){\r\nvar self__ \x3d this;\r\nvar mf \x3d this;\r\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p));\r\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\r\nif(cljs.core.truth_(target_fn)){\r\n} else {\r\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\r\n}\r\n\r\nreturn (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p) : target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){\r\nvar self__ \x3d this;\r\nvar mf \x3d this;\r\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q));\r\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\r\nif(cljs.core.truth_(target_fn)){\r\n} else {\r\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\r\n}\r\n\r\nreturn (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q) : target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){\r\nvar self__ \x3d this;\r\nvar mf \x3d this;\r\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r));\r\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\r\nif(cljs.core.truth_(target_fn)){\r\n} else {\r\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\r\n}\r\n\r\nreturn (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r) : target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){\r\nvar self__ \x3d this;\r\nvar mf \x3d this;\r\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s));\r\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\r\nif(cljs.core.truth_(target_fn)){\r\n} else {\r\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\r\n}\r\n\r\nreturn (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s) : target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){\r\nvar self__ \x3d this;\r\nvar mf \x3d this;\r\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t));\r\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\r\nif(cljs.core.truth_(target_fn)){\r\n} else {\r\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\r\n}\r\n\r\nreturn (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t) : target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){\r\nvar self__ \x3d this;\r\nvar mf \x3d this;\r\nvar dispatch_val \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));\r\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\r\nif(cljs.core.truth_(target_fn)){\r\n} else {\r\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\r\n}\r\n\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 \x3d (function (mf,dispatch_val_x,dispatch_val_y){\r\nvar self__ \x3d this;\r\nvar mf__$1 \x3d this;\r\nif(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){\r\nthrow (new Error([\x22Preference conflict in multimethod \x27\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name),\x22\x27: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y),\x22 is already preferred to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x)].join(\x27\x27)));\r\n} else {\r\n}\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,(function (old){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));\r\n}));\r\n\r\nreturn cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 \x3d (function (mf){\r\nvar self__ \x3d this;\r\nvar mf__$1 \x3d this;\r\nreturn self__.default_dispatch_val;\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 \x3d (function (mf,dispatch_val){\r\nvar self__ \x3d this;\r\nvar mf__$1 \x3d this;\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);\r\n\r\ncljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);\r\n\r\nreturn mf__$1;\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 \x3d (function (mf){\r\nvar self__ \x3d this;\r\nvar mf__$1 \x3d this;\r\nreturn cljs.core.deref(self__.method_table);\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 \x3d (function (mf){\r\nvar self__ \x3d this;\r\nvar mf__$1 \x3d this;\r\nreturn cljs.core.deref(self__.prefer_table);\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 \x3d (function (mf){\r\nvar self__ \x3d this;\r\nvar mf__$1 \x3d this;\r\nreturn self__.dispatch_fn;\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 \x3d (function (mf,dispatch_val,method){\r\nvar self__ \x3d this;\r\nvar mf__$1 \x3d this;\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);\r\n\r\ncljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);\r\n\r\nreturn mf__$1;\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 \x3d (function (mf){\r\nvar self__ \x3d this;\r\nvar mf__$1 \x3d this;\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,(function (mf__$2){\r\nreturn cljs.core.PersistentArrayMap.EMPTY;\r\n}));\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,(function (mf__$2){\r\nreturn cljs.core.PersistentArrayMap.EMPTY;\r\n}));\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,(function (mf__$2){\r\nreturn cljs.core.PersistentArrayMap.EMPTY;\r\n}));\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,(function (mf__$2){\r\nreturn null;\r\n}));\r\n\r\nreturn mf__$1;\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 \x3d (function (mf,dispatch_val){\r\nvar self__ \x3d this;\r\nvar mf__$1 \x3d this;\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.cached_hierarchy),cljs.core.deref(self__.hierarchy))){\r\n} else {\r\ncljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);\r\n}\r\n\r\nvar temp__5751__auto__ \x3d (function (){var fexpr__16373 \x3d cljs.core.deref(self__.method_cache);\r\nreturn (fexpr__16373.cljs$core$IFn$_invoke$arity$1 ? fexpr__16373.cljs$core$IFn$_invoke$arity$1(dispatch_val) : fexpr__16373.call(null,dispatch_val));\r\n})();\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar target_fn \x3d temp__5751__auto__;\r\nreturn target_fn;\r\n} else {\r\nreturn cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy,self__.default_dispatch_val);\r\n}\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 \x3d (function (this$){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nreturn cljs.core._name(self__.name);\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 \x3d (function (this$){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nreturn cljs.core._namespace(self__.name);\r\n}));\r\n\r\n(cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this$){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nreturn goog.getUid(this$__$1);\r\n}));\r\n\r\n(cljs.core.MultiFn.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22name\x22,\x22name\x22,-810760592,null),new cljs.core.Symbol(null,\x22dispatch-fn\x22,\x22dispatch-fn\x22,-1401088155,null),new cljs.core.Symbol(null,\x22default-dispatch-val\x22,\x22default-dispatch-val\x22,-1231201266,null),new cljs.core.Symbol(null,\x22hierarchy\x22,\x22hierarchy\x22,587061186,null),new cljs.core.Symbol(null,\x22method-table\x22,\x22method-table\x22,-1878263165,null),new cljs.core.Symbol(null,\x22prefer-table\x22,\x22prefer-table\x22,462168584,null),new cljs.core.Symbol(null,\x22method-cache\x22,\x22method-cache\x22,1230193905,null),new cljs.core.Symbol(null,\x22cached-hierarchy\x22,\x22cached-hierarchy\x22,-1085460203,null)], null);\r\n}));\r\n\r\n(cljs.core.MultiFn.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.MultiFn.cljs$lang$ctorStr \x3d \x22cljs.core/MultiFn\x22);\r\n\r\n(cljs.core.MultiFn.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/MultiFn\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/MultiFn.\r\n */\r\ncljs.core.__GT_MultiFn \x3d (function cljs$core$__GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){\r\nreturn (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));\r\n});\r\n\r\n/**\r\n * Removes all of the methods of multimethod.\r\n */\r\ncljs.core.remove_all_methods \x3d (function cljs$core$remove_all_methods(multifn){\r\nreturn cljs.core._reset(multifn);\r\n});\r\n/**\r\n * Removes the method of multimethod associated with dispatch-value.\r\n */\r\ncljs.core.remove_method \x3d (function cljs$core$remove_method(multifn,dispatch_val){\r\nreturn cljs.core._remove_method(multifn,dispatch_val);\r\n});\r\n/**\r\n * Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y\r\n * when there is a conflict\r\n */\r\ncljs.core.prefer_method \x3d (function cljs$core$prefer_method(multifn,dispatch_val_x,dispatch_val_y){\r\nreturn cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);\r\n});\r\n/**\r\n * Given a multimethod, returns a map of dispatch values -\x3e dispatch fns\r\n */\r\ncljs.core.methods$ \x3d (function cljs$core$methods(multifn){\r\nreturn cljs.core._methods(multifn);\r\n});\r\n/**\r\n * Given a multimethod and a dispatch value, returns the dispatch fn\r\n *   that would apply to that value, or nil if none apply and no default\r\n */\r\ncljs.core.get_method \x3d (function cljs$core$get_method(multifn,dispatch_val){\r\nreturn cljs.core._get_method(multifn,dispatch_val);\r\n});\r\n/**\r\n * Given a multimethod, returns a map of preferred value -\x3e set of other values\r\n */\r\ncljs.core.prefers \x3d (function cljs$core$prefers(multifn){\r\nreturn cljs.core._prefers(multifn);\r\n});\r\n/**\r\n * Given a multimethod, return its default-dispatch-val.\r\n */\r\ncljs.core.default_dispatch_val \x3d (function cljs$core$default_dispatch_val(multifn){\r\nreturn cljs.core._default_dispatch_val(multifn);\r\n});\r\n/**\r\n * Given a multimethod, return its dispatch-fn.\r\n */\r\ncljs.core.dispatch_fn \x3d (function cljs$core$dispatch_fn(multifn){\r\nreturn cljs.core._dispatch_fn(multifn);\r\n});\r\n\r\n/**\r\n * A marker protocol for UUIDs\r\n * @interface\r\n */\r\ncljs.core.IUUID \x3d function(){};\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IComparable}\r\n * @implements {cljs.core.IUUID}\r\n*/\r\ncljs.core.UUID \x3d (function (uuid,__hash){\r\nthis.uuid \x3d uuid;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2153775104;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 2048;\r\n});\r\n(cljs.core.UUID.prototype.cljs$core$IUUID$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.UUID.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn self__.uuid;\r\n}));\r\n\r\n(cljs.core.UUID.prototype.equiv \x3d (function (other){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\r\n}));\r\n\r\n(cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (_,other){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn (((other instanceof cljs.core.UUID)) \x26\x26 ((self__.uuid \x3d\x3d\x3d other.uuid)));\r\n}));\r\n\r\n(cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (_,writer,___$1){\r\nvar self__ \x3d this;\r\nvar ___$2 \x3d this;\r\nreturn cljs.core._write(writer,[\x22#uuid \\\x22\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid),\x22\\\x22\x22].join(\x27\x27));\r\n}));\r\n\r\n(cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this$){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nif((self__.__hash \x3d\x3d null)){\r\n(self__.__hash \x3d cljs.core.hash(self__.uuid));\r\n} else {\r\n}\r\n\r\nreturn self__.__hash;\r\n}));\r\n\r\n(cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 \x3d (function (this$,other){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nif((other instanceof cljs.core.UUID)){\r\nreturn cljs.core.goog$module$goog$array.defaultCompare(self__.uuid,other.uuid);\r\n} else {\r\nthrow (new Error([\x22Cannot compare \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1),\x22 to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(other)].join(\x27\x27)));\r\n}\r\n}));\r\n\r\n(cljs.core.UUID.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uuid\x22,\x22uuid\x22,-504564192,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.core.UUID.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.UUID.cljs$lang$ctorStr \x3d \x22cljs.core/UUID\x22);\r\n\r\n(cljs.core.UUID.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/UUID\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/UUID.\r\n */\r\ncljs.core.__GT_UUID \x3d (function cljs$core$__GT_UUID(uuid,__hash){\r\nreturn (new cljs.core.UUID(uuid,__hash));\r\n});\r\n\r\ncljs.core.uuid \x3d (function cljs$core$uuid(s){\r\nif(typeof s \x3d\x3d\x3d \x27string\x27){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (string? s)\x22));\r\n}\r\n\r\nreturn (new cljs.core.UUID(s.toLowerCase(),null));\r\n});\r\ncljs.core.random_uuid \x3d (function cljs$core$random_uuid(){\r\nvar hex \x3d (function cljs$core$random_uuid_$_hex(){\r\nreturn cljs.core.rand_int((16)).toString((16));\r\n});\r\nvar rhex \x3d ((8) | ((3) \x26 cljs.core.rand_int((16)))).toString((16));\r\nreturn cljs.core.uuid([cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),\x22-\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),\x22-\x22,\x224\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),\x22-\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(rhex),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),\x22-\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex())].join(\x27\x27));\r\n});\r\ncljs.core.uuid_QMARK_ \x3d (function cljs$core$uuid_QMARK_(x){\r\nif((!((x \x3d\x3d null)))){\r\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IUUID$)))){\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n} else {\r\nreturn false;\r\n}\r\n});\r\ncljs.core.pr_writer_ex_info \x3d (function cljs$core$pr_writer_ex_info(obj,writer,opts){\r\ncljs.core._write(writer,\x22#error {:message \x22);\r\n\r\ncljs.core.pr_writer(obj.message,writer,opts);\r\n\r\nif(cljs.core.truth_(obj.data)){\r\ncljs.core._write(writer,\x22, :data \x22);\r\n\r\ncljs.core.pr_writer(obj.data,writer,opts);\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_(obj.cause)){\r\ncljs.core._write(writer,\x22, :cause \x22);\r\n\r\ncljs.core.pr_writer(obj.cause,writer,opts);\r\n} else {\r\n}\r\n\r\nreturn cljs.core._write(writer,\x22}\x22);\r\n});\r\n/**\r\n * @constructor\r\n */\r\ncljs.core.ExceptionInfo \x3d (function cljs$core$ExceptionInfo(message,data,cause){\r\nvar e \x3d (new Error(message));\r\nvar this$ \x3d this;\r\n(this$.message \x3d message);\r\n\r\n(this$.data \x3d data);\r\n\r\n(this$.cause \x3d cause);\r\n\r\n(this$.name \x3d e.name);\r\n\r\n(this$.description \x3d e.description);\r\n\r\n(this$.number \x3d e.number);\r\n\r\n(this$.fileName \x3d e.fileName);\r\n\r\n(this$.lineNumber \x3d e.lineNumber);\r\n\r\n(this$.columnNumber \x3d e.columnNumber);\r\n\r\n(this$.stack \x3d e.stack);\r\n\r\nreturn this$;\r\n});\r\n(cljs.core.ExceptionInfo.prototype.__proto__ \x3d Error.prototype);\r\n(cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (obj,writer,opts){\r\nvar obj__$1 \x3d this;\r\nreturn cljs.core.pr_writer_ex_info(obj__$1,writer,opts);\r\n}));\r\n(cljs.core.ExceptionInfo.prototype.toString \x3d (function (){\r\nvar this$ \x3d this;\r\nreturn cljs.core.pr_str_STAR_(this$);\r\n}));\r\n/**\r\n * Create an instance of ExceptionInfo, an Error type that carries a\r\n *   map of additional data.\r\n */\r\ncljs.core.ex_info \x3d (function cljs$core$ex_info(var_args){\r\nvar G__16376 \x3d arguments.length;\r\nswitch (G__16376) {\r\ncase 2:\r\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 \x3d (function (msg,data){\r\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);\r\n}));\r\n\r\n(cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 \x3d (function (msg,data,cause){\r\nreturn (new cljs.core.ExceptionInfo(msg,data,cause));\r\n}));\r\n\r\n(cljs.core.ex_info.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n/**\r\n * Returns exception data (a map) if ex is an ExceptionInfo.\r\n *   Otherwise returns nil.\r\n */\r\ncljs.core.ex_data \x3d (function cljs$core$ex_data(ex){\r\nif((ex instanceof cljs.core.ExceptionInfo)){\r\nreturn ex.data;\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Returns the message attached to the given Error / ExceptionInfo object.\r\n *   For non-Errors returns nil.\r\n */\r\ncljs.core.ex_message \x3d (function cljs$core$ex_message(ex){\r\nif((ex instanceof Error)){\r\nreturn ex.message;\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Returns exception cause (an Error / ExceptionInfo) if ex is an\r\n *   ExceptionInfo.\r\n *   Otherwise returns nil.\r\n */\r\ncljs.core.ex_cause \x3d (function cljs$core$ex_cause(ex){\r\nif((ex instanceof cljs.core.ExceptionInfo)){\r\nreturn ex.cause;\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Returns an JavaScript compatible comparator based upon pred.\r\n */\r\ncljs.core.comparator \x3d (function cljs$core$comparator(pred){\r\nreturn (function (x,y){\r\nif(cljs.core.truth_((pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x,y) : pred.call(null,x,y)))){\r\nreturn (-1);\r\n} else {\r\nif(cljs.core.truth_((pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y,x) : pred.call(null,y,x)))){\r\nreturn (1);\r\n} else {\r\nreturn (0);\r\n\r\n}\r\n}\r\n});\r\n});\r\n/**\r\n * Returns true if x names a special form\r\n */\r\ncljs.core.special_symbol_QMARK_ \x3d (function cljs$core$special_symbol_QMARK_(x){\r\nreturn cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 24, [new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),\x22null\x22,new cljs.core.Symbol(null,\x22case*\x22,\x22case*\x22,-1938255072,null),\x22null\x22,new cljs.core.Symbol(null,\x22defrecord*\x22,\x22defrecord*\x22,-1936366207,null),\x22null\x22,new cljs.core.Symbol(null,\x22try\x22,\x22try\x22,-1273693247,null),\x22null\x22,new cljs.core.Symbol(null,\x22ns*\x22,\x22ns*\x22,1840949383,null),\x22null\x22,new cljs.core.Symbol(null,\x22finally\x22,\x22finally\x22,-1065347064,null),\x22null\x22,new cljs.core.Symbol(null,\x22loop*\x22,\x22loop*\x22,615029416,null),\x22null\x22,new cljs.core.Symbol(null,\x22do\x22,\x22do\x22,1686842252,null),\x22null\x22,new cljs.core.Symbol(null,\x22letfn*\x22,\x22letfn*\x22,-110097810,null),\x22null\x22,new cljs.core.Symbol(null,\x22if\x22,\x22if\x22,1181717262,null),\x22null\x22,new cljs.core.Symbol(null,\x22new\x22,\x22new\x22,-444906321,null),\x22null\x22,new cljs.core.Symbol(null,\x22ns\x22,\x22ns\x22,2082130287,null),\x22null\x22,new cljs.core.Symbol(null,\x22deftype*\x22,\x22deftype*\x22,962659890,null),\x22null\x22,new cljs.core.Symbol(null,\x22let*\x22,\x22let*\x22,1920721458,null),\x22null\x22,new cljs.core.Symbol(null,\x22js*\x22,\x22js*\x22,-1134233646,null),\x22null\x22,new cljs.core.Symbol(null,\x22fn*\x22,\x22fn*\x22,-752876845,null),\x22null\x22,new cljs.core.Symbol(null,\x22recur\x22,\x22recur\x22,1202958259,null),\x22null\x22,new cljs.core.Symbol(null,\x22set!\x22,\x22set!\x22,250714521,null),\x22null\x22,new cljs.core.Symbol(null,\x22.\x22,\x22.\x22,1975675962,null),\x22null\x22,new cljs.core.Symbol(null,\x22var\x22,\x22var\x22,870848730,null),\x22null\x22,new cljs.core.Symbol(null,\x22quote\x22,\x22quote\x22,1377916282,null),\x22null\x22,new cljs.core.Symbol(null,\x22catch\x22,\x22catch\x22,-1616370245,null),\x22null\x22,new cljs.core.Symbol(null,\x22throw\x22,\x22throw\x22,595905694,null),\x22null\x22,new cljs.core.Symbol(null,\x22def\x22,\x22def\x22,597100991,null),\x22null\x22], null), null),x);\r\n});\r\n/**\r\n * test [v] finds fn at key :test in var metadata and calls it,\r\n *   presuming failure will throw exception\r\n */\r\ncljs.core.test \x3d (function cljs$core$test(v){\r\nvar f \x3d v.cljs$lang$test;\r\nif(cljs.core.truth_(f)){\r\n(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\n\r\nreturn new cljs.core.Keyword(null,\x22ok\x22,\x22ok\x22,967785236);\r\n} else {\r\nreturn new cljs.core.Keyword(null,\x22no-test\x22,\x22no-test\x22,-1679482642);\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ncljs.core.TaggedLiteral \x3d (function (tag,form){\r\nthis.tag \x3d tag;\r\nthis.form \x3d form;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2153775360;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.TaggedLiteral.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar coll \x3d this;\r\nreturn cljs.core.pr_str_STAR_(coll);\r\n}));\r\n\r\n(cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this$,other){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nreturn (((other instanceof cljs.core.TaggedLiteral)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag,other.tag)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form,other.form)))));\r\n}));\r\n\r\n(cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this$){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nreturn (((31) * cljs.core.hash(self__.tag)) + cljs.core.hash(self__.form));\r\n}));\r\n\r\n(cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this$,v){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nreturn this$__$1.cljs$core$ILookup$_lookup$arity$3(null,v,null);\r\n}));\r\n\r\n(cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this$,v,not_found){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nvar G__16377 \x3d v;\r\nvar G__16377__$1 \x3d (((G__16377 instanceof cljs.core.Keyword))?G__16377.fqn:null);\r\nswitch (G__16377__$1) {\r\ncase \x22tag\x22:\r\nreturn self__.tag;\r\n\r\nbreak;\r\ncase \x22form\x22:\r\nreturn self__.form;\r\n\r\nbreak;\r\ndefault:\r\nreturn not_found;\r\n\r\n}\r\n}));\r\n\r\n(cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (o,writer,opts){\r\nvar self__ \x3d this;\r\nvar o__$1 \x3d this;\r\ncljs.core._write(writer,[\x22#\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.tag),\x22 \x22].join(\x27\x27));\r\n\r\nreturn cljs.core.pr_writer(self__.form,writer,opts);\r\n}));\r\n\r\n(cljs.core.TaggedLiteral.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22tag\x22,\x22tag\x22,350170304,null),new cljs.core.Symbol(null,\x22form\x22,\x22form\x22,16469056,null)], null);\r\n}));\r\n\r\n(cljs.core.TaggedLiteral.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.TaggedLiteral.cljs$lang$ctorStr \x3d \x22cljs.core/TaggedLiteral\x22);\r\n\r\n(cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/TaggedLiteral\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/TaggedLiteral.\r\n */\r\ncljs.core.__GT_TaggedLiteral \x3d (function cljs$core$__GT_TaggedLiteral(tag,form){\r\nreturn (new cljs.core.TaggedLiteral(tag,form));\r\n});\r\n\r\n/**\r\n * Return true if the value is the data representation of a tagged literal\r\n */\r\ncljs.core.tagged_literal_QMARK_ \x3d (function cljs$core$tagged_literal_QMARK_(value){\r\nreturn (value instanceof cljs.core.TaggedLiteral);\r\n});\r\n/**\r\n * Construct a data representation of a tagged literal from a\r\n *   tag symbol and a form.\r\n */\r\ncljs.core.tagged_literal \x3d (function cljs$core$tagged_literal(tag,form){\r\nif((tag instanceof cljs.core.Symbol)){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (symbol? tag)\x22));\r\n}\r\n\r\nreturn (new cljs.core.TaggedLiteral(tag,form));\r\n});\r\n/**\r\n * @type {*}\r\n */\r\ncljs.core.js_reserved_arr \x3d [\x22arguments\x22,\x22abstract\x22,\x22await\x22,\x22boolean\x22,\x22break\x22,\x22byte\x22,\x22case\x22,\x22catch\x22,\x22char\x22,\x22class\x22,\x22const\x22,\x22continue\x22,\x22debugger\x22,\x22default\x22,\x22delete\x22,\x22do\x22,\x22double\x22,\x22else\x22,\x22enum\x22,\x22export\x22,\x22extends\x22,\x22final\x22,\x22finally\x22,\x22float\x22,\x22for\x22,\x22function\x22,\x22goto\x22,\x22if\x22,\x22implements\x22,\x22import\x22,\x22in\x22,\x22instanceof\x22,\x22int\x22,\x22interface\x22,\x22let\x22,\x22long\x22,\x22native\x22,\x22new\x22,\x22package\x22,\x22private\x22,\x22protected\x22,\x22public\x22,\x22return\x22,\x22short\x22,\x22static\x22,\x22super\x22,\x22switch\x22,\x22synchronized\x22,\x22this\x22,\x22throw\x22,\x22throws\x22,\x22transient\x22,\x22try\x22,\x22typeof\x22,\x22var\x22,\x22void\x22,\x22volatile\x22,\x22while\x22,\x22with\x22,\x22yield\x22,\x22methods\x22,\x22null\x22,\x22constructor\x22];\r\n/**\r\n * @type {null|Object}\r\n */\r\ncljs.core.js_reserved \x3d null;\r\ncljs.core.js_reserved_QMARK_ \x3d (function cljs$core$js_reserved_QMARK_(x){\r\nif((cljs.core.js_reserved \x3d\x3d null)){\r\n(cljs.core.js_reserved \x3d cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16378_SHARP_,p2__16379_SHARP_){\r\ncljs.core.goog$module$goog$object.set(p1__16378_SHARP_,p2__16379_SHARP_,true);\r\n\r\nreturn p1__16378_SHARP_;\r\n}),({}),cljs.core.js_reserved_arr));\r\n} else {\r\n}\r\n\r\nreturn cljs.core.js_reserved.hasOwnProperty(x);\r\n});\r\ncljs.core.demunge_pattern \x3d (function cljs$core$demunge_pattern(){\r\nif(cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)){\r\n} else {\r\n(cljs.core.DEMUNGE_PATTERN \x3d (function (){var ks \x3d cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (a,b){\r\nreturn (b.length - a.length);\r\n}),cljs.core.js_keys(cljs.core.DEMUNGE_MAP));\r\nvar ks__$1 \x3d ks;\r\nvar ret \x3d \x22\x22;\r\nwhile(true){\r\nif(cljs.core.seq(ks__$1)){\r\nvar G__22211 \x3d cljs.core.next(ks__$1);\r\nvar G__22212 \x3d [(function (){var G__16383 \x3d ret;\r\nif((!((ret \x3d\x3d\x3d \x22\x22)))){\r\nreturn [G__16383,\x22|\x22].join(\x27\x27);\r\n} else {\r\nreturn G__16383;\r\n}\r\n})(),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(ks__$1))].join(\x27\x27);\r\nks__$1 \x3d G__22211;\r\nret \x3d G__22212;\r\ncontinue;\r\n} else {\r\nreturn [ret,\x22|\\\\$\x22].join(\x27\x27);\r\n}\r\nbreak;\r\n}\r\n})());\r\n}\r\n\r\nreturn cljs.core.DEMUNGE_PATTERN;\r\n});\r\ncljs.core.munge_str \x3d (function cljs$core$munge_str(name){\r\nvar sb \x3d (new goog.string.StringBuffer());\r\nvar i_22223 \x3d (0);\r\nwhile(true){\r\nif((i_22223 \x3c name.length)){\r\nvar c_22234 \x3d name.charAt(i_22223);\r\nvar sub_22235 \x3d cljs.core.goog$module$goog$object.get(cljs.core.CHAR_MAP,c_22234);\r\nif((!((sub_22235 \x3d\x3d null)))){\r\nsb.append(sub_22235);\r\n} else {\r\nsb.append(c_22234);\r\n}\r\n\r\nvar G__22242 \x3d (i_22223 + (1));\r\ni_22223 \x3d G__22242;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn sb.toString();\r\n});\r\ncljs.core.munge \x3d (function cljs$core$munge(name){\r\nvar name_SINGLEQUOTE_ \x3d cljs.core.munge_str(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name));\r\nvar name_SINGLEQUOTE___$1 \x3d (((name_SINGLEQUOTE_ \x3d\x3d\x3d \x22..\x22))?\x22_DOT__DOT_\x22:(cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_))?[name_SINGLEQUOTE_,\x22$\x22].join(\x27\x27):name_SINGLEQUOTE_\r\n));\r\nif((name instanceof cljs.core.Symbol)){\r\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);\r\n} else {\r\nreturn name_SINGLEQUOTE___$1;\r\n}\r\n});\r\ncljs.core.demunge_str \x3d (function cljs$core$demunge_str(munged_name){\r\nvar r \x3d (new RegExp(cljs.core.demunge_pattern(),\x22g\x22));\r\nvar munged_name__$1 \x3d (cljs.core.truth_(goog.string.endsWith(munged_name,\x22$\x22))?munged_name.substring((0),(munged_name.length - (1))):munged_name);\r\nvar ret \x3d \x22\x22;\r\nvar last_match_end \x3d (0);\r\nwhile(true){\r\nvar temp__5751__auto__ \x3d r.exec(munged_name__$1);\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar match \x3d temp__5751__auto__;\r\nvar vec__16387 \x3d match;\r\nvar x \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16387,(0),null);\r\nvar G__22243 \x3d [ret,cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end,(r.lastIndex - x.length))),cljs.core.str.cljs$core$IFn$_invoke$arity$1((((x \x3d\x3d\x3d \x22$\x22))?\x22/\x22:cljs.core.goog$module$goog$object.get(cljs.core.DEMUNGE_MAP,x)))].join(\x27\x27);\r\nvar G__22244 \x3d r.lastIndex;\r\nret \x3d G__22243;\r\nlast_match_end \x3d G__22244;\r\ncontinue;\r\n} else {\r\nreturn [ret,cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end,munged_name__$1.length))].join(\x27\x27);\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.core.demunge \x3d (function cljs$core$demunge(name){\r\nvar G__16391 \x3d (function (){var name_SINGLEQUOTE_ \x3d cljs.core.str.cljs$core$IFn$_invoke$arity$1(name);\r\nif((name_SINGLEQUOTE_ \x3d\x3d\x3d \x22_DOT__DOT_\x22)){\r\nreturn \x22..\x22;\r\n} else {\r\nreturn cljs.core.demunge_str(name_SINGLEQUOTE_);\r\n}\r\n})();\r\nvar fexpr__16390 \x3d (((name instanceof cljs.core.Symbol))?cljs.core.symbol:cljs.core.str);\r\nreturn (fexpr__16390.cljs$core$IFn$_invoke$arity$1 ? fexpr__16390.cljs$core$IFn$_invoke$arity$1(G__16391) : fexpr__16390.call(null,G__16391));\r\n});\r\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core.tapset !\x3d\x3d \x27undefined\x27)){\r\n} else {\r\n/**\r\n * @type {*}\r\n */\r\ncljs.core.tapset \x3d null;\r\n}\r\ncljs.core.maybe_init_tapset \x3d (function cljs$core$maybe_init_tapset(){\r\nif((cljs.core.tapset \x3d\x3d null)){\r\nreturn (cljs.core.tapset \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashSet.EMPTY));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Adds f, a fn of one argument, to the tap set. This function will be called with\r\n *   anything sent via tap\x3e. Remember f in order to remove-tap\r\n */\r\ncljs.core.add_tap \x3d (function cljs$core$add_tap(f){\r\ncljs.core.maybe_init_tapset();\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset,cljs.core.conj,f);\r\n\r\nreturn null;\r\n});\r\n/**\r\n * Remove f from the tap set.\r\n */\r\ncljs.core.remove_tap \x3d (function cljs$core$remove_tap(f){\r\ncljs.core.maybe_init_tapset();\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset,cljs.core.disj,f);\r\n\r\nreturn null;\r\n});\r\n/**\r\n * Sends x to any taps. Returns the result of *exec-tap-fn*, a Boolean value.\r\n */\r\ncljs.core.tap_GT_ \x3d (function cljs$core$tap_GT_(x){\r\ncljs.core.maybe_init_tapset();\r\n\r\nreturn cljs.core._STAR_exec_tap_fn_STAR_.call(null,(function (){\r\nvar seq__16392 \x3d cljs.core.seq(cljs.core.deref(cljs.core.tapset));\r\nvar chunk__16393 \x3d null;\r\nvar count__16394 \x3d (0);\r\nvar i__16395 \x3d (0);\r\nwhile(true){\r\nif((i__16395 \x3c count__16394)){\r\nvar tap \x3d chunk__16393.cljs$core$IIndexed$_nth$arity$2(null,i__16395);\r\ntry{(tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null,x));\r\n}catch (e16398){if((e16398 instanceof Error)){\r\nvar ex_22256 \x3d e16398;\r\n} else {\r\nthrow e16398;\r\n\r\n}\r\n}\r\n\r\nvar G__22257 \x3d seq__16392;\r\nvar G__22258 \x3d chunk__16393;\r\nvar G__22259 \x3d count__16394;\r\nvar G__22260 \x3d (i__16395 + (1));\r\nseq__16392 \x3d G__22257;\r\nchunk__16393 \x3d G__22258;\r\ncount__16394 \x3d G__22259;\r\ni__16395 \x3d G__22260;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto__ \x3d cljs.core.seq(seq__16392);\r\nif(temp__5753__auto__){\r\nvar seq__16392__$1 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__16392__$1)){\r\nvar c__4679__auto__ \x3d cljs.core.chunk_first(seq__16392__$1);\r\nvar G__22265 \x3d cljs.core.chunk_rest(seq__16392__$1);\r\nvar G__22266 \x3d c__4679__auto__;\r\nvar G__22267 \x3d cljs.core.count(c__4679__auto__);\r\nvar G__22268 \x3d (0);\r\nseq__16392 \x3d G__22265;\r\nchunk__16393 \x3d G__22266;\r\ncount__16394 \x3d G__22267;\r\ni__16395 \x3d G__22268;\r\ncontinue;\r\n} else {\r\nvar tap \x3d cljs.core.first(seq__16392__$1);\r\ntry{(tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null,x));\r\n}catch (e16399){if((e16399 instanceof Error)){\r\nvar ex_22269 \x3d e16399;\r\n} else {\r\nthrow e16399;\r\n\r\n}\r\n}\r\n\r\nvar G__22270 \x3d cljs.core.next(seq__16392__$1);\r\nvar G__22271 \x3d null;\r\nvar G__22272 \x3d (0);\r\nvar G__22273 \x3d (0);\r\nseq__16392 \x3d G__22270;\r\nchunk__16393 \x3d G__22271;\r\ncount__16394 \x3d G__22272;\r\ni__16395 \x3d G__22273;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n});\r\n/**\r\n * Bootstrap only.\r\n */\r\ncljs.core.ns_lookup \x3d (function cljs$core$ns_lookup(ns_obj,k){\r\nreturn (function (){\r\nreturn cljs.core.goog$module$goog$object.get(ns_obj,k);\r\n});\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n*/\r\ncljs.core.Namespace \x3d (function (obj,name){\r\nthis.obj \x3d obj;\r\nthis.name \x3d name;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 6291456;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.core.Namespace.prototype.findInternedVar \x3d (function (sym){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nvar k \x3d cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym));\r\nif(cljs.core.goog$module$goog$object.containsKey(self__.obj,k)){\r\nvar var_sym \x3d cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym));\r\nvar var_meta \x3d new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22ns\x22,\x22ns\x22,441598760),this$], null);\r\nreturn (new cljs.core.Var(cljs.core.ns_lookup(self__.obj,k),var_sym,var_meta));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.core.Namespace.prototype.getName \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn self__.name;\r\n}));\r\n\r\n(cljs.core.Namespace.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar _ \x3d this;\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name);\r\n}));\r\n\r\n(cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (_,other){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nif((other instanceof cljs.core.Namespace)){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name,other.name);\r\n} else {\r\nreturn false;\r\n}\r\n}));\r\n\r\n(cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn cljs.core.hash(self__.name);\r\n}));\r\n\r\n(cljs.core.Namespace.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22obj\x22,\x22obj\x22,-1672671807,null),new cljs.core.Symbol(null,\x22name\x22,\x22name\x22,-810760592,null)], null);\r\n}));\r\n\r\n(cljs.core.Namespace.cljs$lang$type \x3d true);\r\n\r\n(cljs.core.Namespace.cljs$lang$ctorStr \x3d \x22cljs.core/Namespace\x22);\r\n\r\n(cljs.core.Namespace.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.core/Namespace\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.core/Namespace.\r\n */\r\ncljs.core.__GT_Namespace \x3d (function cljs$core$__GT_Namespace(obj,name){\r\nreturn (new cljs.core.Namespace(obj,name));\r\n});\r\n\r\n/**\r\n * Bootstrap only.\r\n * @type {*}\r\n */\r\ncljs.core.NS_CACHE \x3d null;\r\n/**\r\n * Bootstrap only.\r\n */\r\ncljs.core.find_ns_obj_STAR_ \x3d (function cljs$core$find_ns_obj_STAR_(ctxt,xs){\r\nwhile(true){\r\nif((ctxt \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nif((xs \x3d\x3d null)){\r\nreturn ctxt;\r\n} else {\r\nvar G__22290 \x3d cljs.core.goog$module$goog$object.get(ctxt,cljs.core.first(xs));\r\nvar G__22291 \x3d cljs.core.next(xs);\r\nctxt \x3d G__22290;\r\nxs \x3d G__22291;\r\ncontinue;\r\n\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Bootstrap only.\r\n */\r\ncljs.core.find_ns_obj \x3d (function cljs$core$find_ns_obj(ns){\r\nvar munged_ns \x3d cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns));\r\nvar segs \x3d munged_ns.split(\x22.\x22);\r\nvar G__16400 \x3d cljs.core._STAR_target_STAR_;\r\nswitch (G__16400) {\r\ncase \x22nodejs\x22:\r\nif(COMPILED){\r\nreturn cljs.core.find_ns_obj_STAR_((function (){try{var ctxt \x3d eval(cljs.core.first(segs));\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d ctxt;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn cljs.core.object_QMARK_(ctxt);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nreturn ctxt;\r\n} else {\r\nreturn null;\r\n}\r\n}catch (e16401){if((e16401 instanceof ReferenceError)){\r\nvar e \x3d e16401;\r\nreturn null;\r\n} else {\r\nthrow e16401;\r\n\r\n}\r\n}})(),cljs.core.next(segs));\r\n} else {\r\nreturn cljs.core.find_ns_obj_STAR_(goog.global,segs);\r\n}\r\n\r\nbreak;\r\ncase \x22default\x22:\r\ncase \x22webworker\x22:\r\nreturn cljs.core.find_ns_obj_STAR_(goog.global,segs);\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22find-ns-obj not supported for target \x22,cljs.core._STAR_target_STAR_].join(\x27\x27)));\r\n\r\n}\r\n});\r\n/**\r\n * Returns a map of the intern mappings for the namespace.\r\n *   Bootstrap only.\r\n */\r\ncljs.core.ns_interns_STAR_ \x3d (function cljs$core$ns_interns_STAR_(sym){\r\nvar ns_obj \x3d cljs.core.find_ns_obj(sym);\r\nvar ns \x3d (new cljs.core.Namespace(ns_obj,sym));\r\nvar step \x3d (function cljs$core$ns_interns_STAR__$_step(ret,k){\r\nvar var_sym \x3d cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,var_sym,(new cljs.core.Var((function (){\r\nreturn cljs.core.goog$module$goog$object.get(ns_obj,k);\r\n}),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym),cljs.core.str.cljs$core$IFn$_invoke$arity$1(var_sym)),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22ns\x22,\x22ns\x22,441598760),ns], null))));\r\n});\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step,cljs.core.PersistentArrayMap.EMPTY,cljs.core.js_keys(ns_obj));\r\n});\r\n/**\r\n * Create a new namespace named by the symbol. Bootstrap only.\r\n */\r\ncljs.core.create_ns \x3d (function cljs$core$create_ns(var_args){\r\nvar G__16403 \x3d arguments.length;\r\nswitch (G__16403) {\r\ncase 1:\r\nreturn cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 \x3d (function (sym){\r\nreturn cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym,cljs.core.find_ns_obj(sym));\r\n}));\r\n\r\n(cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 \x3d (function (sym,ns_obj){\r\nreturn (new cljs.core.Namespace(ns_obj,sym));\r\n}));\r\n\r\n(cljs.core.create_ns.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Returns the namespace named by the symbol or nil if it doesn\x27t exist.\r\n *   Bootstrap only.\r\n */\r\ncljs.core.find_ns \x3d (function cljs$core$find_ns(ns){\r\nif((cljs.core.NS_CACHE \x3d\x3d null)){\r\n(cljs.core.NS_CACHE \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY));\r\n} else {\r\n}\r\n\r\nvar the_ns \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE),ns);\r\nif((!((the_ns \x3d\x3d null)))){\r\nreturn the_ns;\r\n} else {\r\nvar ns_obj \x3d cljs.core.find_ns_obj(ns);\r\nif((ns_obj \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nvar new_ns \x3d cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns,ns_obj);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE,cljs.core.assoc,ns,new_ns);\r\n\r\nreturn new_ns;\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the macros namespace named by the symbol or nil if it doesn\x27t exist.\r\n *   Bootstrap only.\r\n */\r\ncljs.core.find_macros_ns \x3d (function cljs$core$find_macros_ns(ns){\r\nif((cljs.core.NS_CACHE \x3d\x3d null)){\r\n(cljs.core.NS_CACHE \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY));\r\n} else {\r\n}\r\n\r\nvar ns_str \x3d cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);\r\nvar ns__$1 \x3d (((!(goog.string.contains(ns_str,\x22$macros\x22))))?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([ns_str,\x22$macros\x22].join(\x27\x27)):ns);\r\nvar the_ns \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE),ns__$1);\r\nif((!((the_ns \x3d\x3d null)))){\r\nreturn the_ns;\r\n} else {\r\nvar ns_obj \x3d cljs.core.find_ns_obj(ns__$1);\r\nif((ns_obj \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nvar new_ns \x3d cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1,ns_obj);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE,cljs.core.assoc,ns__$1,new_ns);\r\n\r\nreturn new_ns;\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the name of the namespace, a Namespace object.\r\n *   Bootstrap only.\r\n */\r\ncljs.core.ns_name \x3d (function cljs$core$ns_name(ns_obj){\r\nreturn ns_obj.name;\r\n});\r\n/**\r\n * Returns true x is a goog.Uri instance.\r\n */\r\ncljs.core.uri_QMARK_ \x3d (function cljs$core$uri_QMARK_(x){\r\nreturn (x instanceof goog.Uri);\r\n});\r\ncljs.core.maybe_enable_print_BANG_ \x3d (function cljs$core$maybe_enable_print_BANG_(){\r\nif((typeof console !\x3d\x3d \x27undefined\x27)){\r\nreturn cljs.core.enable_console_print_BANG_();\r\n} else {\r\nif((((cljs.core._STAR_target_STAR_ \x3d\x3d\x3d \x22nashorn\x22)) || ((cljs.core._STAR_target_STAR_ \x3d\x3d\x3d \x22graaljs\x22)))){\r\nvar system \x3d Java.type(\x22java.lang.System\x22);\r\n(cljs.core._STAR_print_newline_STAR_ \x3d false);\r\n\r\ncljs.core.set_print_fn_BANG_((function (){\r\nvar xs \x3d arguments;\r\nvar s \x3d cljs.core.goog$module$goog$array.clone(xs).join(\x22\x22);\r\nreturn system.out.println(s);\r\n}));\r\n\r\nreturn cljs.core.set_print_err_fn_BANG_((function (){\r\nvar xs \x3d arguments;\r\nvar s \x3d cljs.core.goog$module$goog$array.clone(xs).join(\x22\x22);\r\nreturn system.error.println(s);\r\n}));\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n});\r\ncljs.core.maybe_enable_print_BANG_();\r\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core._STAR_eval_STAR_ !\x3d\x3d \x27undefined\x27)){\r\n} else {\r\n/**\r\n * Runtime environments may provide a way to evaluate ClojureScript\r\n *   forms. Whatever function *eval* is bound to will be passed any forms which\r\n *   should be evaluated.\r\n */\r\ncljs.core._STAR_eval_STAR_ \x3d (function cljs$core$_STAR_eval_STAR_(_){\r\nthrow (new Error(\x22cljs.core/*eval* not bound\x22));\r\n});\r\n}\r\n/**\r\n * Evaluates the form data structure (not text!) and returns the result.\r\n *   Delegates to cljs.core/*eval*. Intended for use in self-hosted ClojureScript,\r\n *   which sets up an implementation of cljs.core/*eval* for that environment.\r\n */\r\ncljs.core.eval \x3d (function cljs$core$eval(form){\r\nreturn cljs.core._STAR_eval_STAR_.call(null,form);\r\n});\r\nif(COMPILED){\r\nif((\x22nodejs\x22 \x3d\x3d\x3d cljs.core._STAR_target_STAR_)){\r\n(goog.global \x3d global);\r\n} else {\r\n}\r\n\r\nif((\x22window\x22 \x3d\x3d\x3d cljs.core._STAR_global_STAR_)){\r\n(goog.global \x3d window);\r\n} else {\r\nif((\x22self\x22 \x3d\x3d\x3d cljs.core._STAR_global_STAR_)){\r\n(goog.global \x3d self);\r\n} else {\r\nif((\x22global\x22 \x3d\x3d\x3d cljs.core._STAR_global_STAR_)){\r\n(goog.global \x3d global);\r\n} else {\r\n}\r\n}\r\n}\r\n} else {\r\n}\r\n\ncljs.core.enable_console_print_BANG_();\n");
SHADOW_ENV.evalLoad("clojure.string.js", true , "goog.provide(\x27clojure.string\x27);\r\nclojure.string.seq_reverse \x3d (function clojure$string$seq_reverse(coll){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);\r\n});\r\nclojure.string.re_surrogate_pair \x3d (new RegExp(\x22([\\\\uD800-\\\\uDBFF])([\\\\uDC00-\\\\uDFFF])\x22,\x22g\x22));\r\n/**\r\n * Returns s with its characters reversed.\r\n */\r\nclojure.string.reverse \x3d (function clojure$string$reverse(s){\r\nreturn s.replace(clojure.string.re_surrogate_pair,\x22$2$1\x22).split(\x22\x22).reverse().join(\x22\x22);\r\n});\r\nclojure.string.replace_all \x3d (function clojure$string$replace_all(s,re,replacement){\r\nvar r \x3d (new RegExp(re.source,(function (){var G__16407 \x3d \x22g\x22;\r\nvar G__16407__$1 \x3d (cljs.core.truth_(re.ignoreCase)?[G__16407,\x22i\x22].join(\x27\x27):G__16407);\r\nvar G__16407__$2 \x3d (cljs.core.truth_(re.multiline)?[G__16407__$1,\x22m\x22].join(\x27\x27):G__16407__$1);\r\nif(cljs.core.truth_(re.unicode)){\r\nreturn [G__16407__$2,\x22u\x22].join(\x27\x27);\r\n} else {\r\nreturn G__16407__$2;\r\n}\r\n})()));\r\nreturn s.replace(r,replacement);\r\n});\r\nclojure.string.replace_with \x3d (function clojure$string$replace_with(f){\r\nreturn (function() { \r\nvar G__16426__delegate \x3d function (args){\r\nvar matches \x3d cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2((2),args);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(matches),(1))){\r\nvar G__16408 \x3d cljs.core.first(matches);\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16408) : f.call(null,G__16408));\r\n} else {\r\nvar G__16409 \x3d cljs.core.vec(matches);\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16409) : f.call(null,G__16409));\r\n}\r\n};\r\nvar G__16426 \x3d function (var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__16427__i \x3d 0, G__16427__a \x3d new Array(arguments.length -  0);\r\nwhile (G__16427__i \x3c G__16427__a.length) {G__16427__a[G__16427__i] \x3d arguments[G__16427__i + 0]; ++G__16427__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__16427__a,0,null);\r\n} \r\nreturn G__16426__delegate.call(this,args);};\r\nG__16426.cljs$lang$maxFixedArity \x3d 0;\r\nG__16426.cljs$lang$applyTo \x3d (function (arglist__16428){\r\nvar args \x3d cljs.core.seq(arglist__16428);\r\nreturn G__16426__delegate(args);\r\n});\r\nG__16426.cljs$core$IFn$_invoke$arity$variadic \x3d G__16426__delegate;\r\nreturn G__16426;\r\n})()\r\n;\r\n});\r\n/**\r\n * Replaces all instance of match with replacement in s.\r\n * \r\n * match/replacement can be:\r\n * \r\n * string / string\r\n * pattern / (string or function of match).\r\n * \r\n * See also replace-first.\r\n * \r\n * The replacement is literal (i.e. none of its characters are treated\r\n * specially) for all cases above except pattern / string.\r\n * \r\n * For pattern / string, $1, $2, etc. in the replacement string are\r\n * substituted with the string that matched the corresponding\r\n * parenthesized group in the pattern.\r\n * \r\n * Example:\r\n * (clojure.string/replace \x22Almost Pig Latin\x22 #\x22\\b(\\w)(\\w+)\\b\x22 \x22$2$1ay\x22)\r\n * -\x3e \x22lmostAay igPay atinLay\x22\r\n */\r\nclojure.string.replace \x3d (function clojure$string$replace(s,match,replacement){\r\nif(typeof match \x3d\x3d\x3d \x27string\x27){\r\nreturn s.replace((new RegExp(goog.string.regExpEscape(match),\x22g\x22)),replacement);\r\n} else {\r\nif((match instanceof RegExp)){\r\nif(typeof replacement \x3d\x3d\x3d \x27string\x27){\r\nreturn clojure.string.replace_all(s,match,replacement);\r\n} else {\r\nreturn clojure.string.replace_all(s,match,clojure.string.replace_with(replacement));\r\n}\r\n} else {\r\nthrow [\x22Invalid match arg: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(match)].join(\x27\x27);\r\n\r\n}\r\n}\r\n});\r\n/**\r\n * Replaces the first instance of match with replacement in s.\r\n * \r\n * match/replacement can be:\r\n * \r\n * string / string\r\n * pattern / (string or function of match).\r\n * \r\n * See also replace.\r\n * \r\n * The replacement is literal (i.e. none of its characters are treated\r\n * specially) for all cases above except pattern / string.\r\n * \r\n * For pattern / string, $1, $2, etc. in the replacement string are\r\n * substituted with the string that matched the corresponding\r\n * parenthesized group in the pattern.\r\n * \r\n * Example:\r\n * (clojure.string/replace-first \x22swap first two words\x22\r\n *                               #\x22(\\w+)(\\s+)(\\w+)\x22 \x22$3$2$1\x22)\r\n * -\x3e \x22first swap two words\x22\r\n */\r\nclojure.string.replace_first \x3d (function clojure$string$replace_first(s,match,replacement){\r\nreturn s.replace(match,replacement);\r\n});\r\n/**\r\n * Returns a string of all elements in coll, as returned by (seq coll),\r\n *   separated by an optional separator.\r\n */\r\nclojure.string.join \x3d (function clojure$string$join(var_args){\r\nvar G__16412 \x3d arguments.length;\r\nswitch (G__16412) {\r\ncase 1:\r\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(clojure.string.join.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\r\nvar sb \x3d (new goog.string.StringBuffer());\r\nvar coll__$1 \x3d cljs.core.seq(coll);\r\nwhile(true){\r\nif((!((coll__$1 \x3d\x3d null)))){\r\nvar G__16430 \x3d sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(coll__$1)));\r\nvar G__16431 \x3d cljs.core.next(coll__$1);\r\nsb \x3d G__16430;\r\ncoll__$1 \x3d G__16431;\r\ncontinue;\r\n} else {\r\nreturn sb.toString();\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(clojure.string.join.cljs$core$IFn$_invoke$arity$2 \x3d (function (separator,coll){\r\nvar sb \x3d (new goog.string.StringBuffer());\r\nvar coll__$1 \x3d cljs.core.seq(coll);\r\nwhile(true){\r\nif((!((coll__$1 \x3d\x3d null)))){\r\nsb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(coll__$1)));\r\n\r\nvar coll__$2 \x3d cljs.core.next(coll__$1);\r\nif((coll__$2 \x3d\x3d null)){\r\n} else {\r\nsb.append(separator);\r\n}\r\n\r\nvar G__16433 \x3d sb;\r\nvar G__16434 \x3d coll__$2;\r\nsb \x3d G__16433;\r\ncoll__$1 \x3d G__16434;\r\ncontinue;\r\n} else {\r\nreturn sb.toString();\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(clojure.string.join.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Converts string to all upper-case.\r\n */\r\nclojure.string.upper_case \x3d (function clojure$string$upper_case(s){\r\nreturn s.toUpperCase();\r\n});\r\n/**\r\n * Converts string to all lower-case.\r\n */\r\nclojure.string.lower_case \x3d (function clojure$string$lower_case(s){\r\nreturn s.toLowerCase();\r\n});\r\n/**\r\n * Converts first character of the string to upper-case, all other\r\n *   characters to lower-case.\r\n */\r\nclojure.string.capitalize \x3d (function clojure$string$capitalize(s){\r\nreturn goog.string.capitalize(s);\r\n});\r\nclojure.string.pop_last_while_empty \x3d (function clojure$string$pop_last_while_empty(v){\r\nvar v__$1 \x3d v;\r\nwhile(true){\r\nif((\x22\x22 \x3d\x3d\x3d cljs.core.peek(v__$1))){\r\nvar G__16438 \x3d cljs.core.pop(v__$1);\r\nv__$1 \x3d G__16438;\r\ncontinue;\r\n} else {\r\nreturn v__$1;\r\n}\r\nbreak;\r\n}\r\n});\r\nclojure.string.discard_trailing_if_needed \x3d (function clojure$string$discard_trailing_if_needed(limit,v){\r\nif(((((0) \x3d\x3d\x3d limit)) \x26\x26 (((1) \x3c cljs.core.count(v))))){\r\nreturn clojure.string.pop_last_while_empty(v);\r\n} else {\r\nreturn v;\r\n}\r\n});\r\nclojure.string.split_with_empty_regex \x3d (function clojure$string$split_with_empty_regex(s,limit){\r\nif((((limit \x3c\x3d (0))) || ((limit \x3e\x3d ((2) + cljs.core.count(s)))))){\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.cons(\x22\x22,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.seq(s)))),\x22\x22);\r\n} else {\r\nvar pred__16416 \x3d cljs.core._EQ__EQ_;\r\nvar expr__16417 \x3d limit;\r\nif(cljs.core.truth_((pred__16416.cljs$core$IFn$_invoke$arity$2 ? pred__16416.cljs$core$IFn$_invoke$arity$2((1),expr__16417) : pred__16416.call(null,(1),expr__16417)))){\r\nreturn (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[s],null));\r\n} else {\r\nif(cljs.core.truth_((pred__16416.cljs$core$IFn$_invoke$arity$2 ? pred__16416.cljs$core$IFn$_invoke$arity$2((2),expr__16417) : pred__16416.call(null,(2),expr__16417)))){\r\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[\x22\x22,s],null));\r\n} else {\r\nvar c \x3d (limit - (2));\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.cons(\x22\x22,cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.seq(s))),(0),c))),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,c));\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Splits string on a regular expression. Optional argument limit is\r\n *   the maximum number of splits. Not lazy. Returns vector of the splits.\r\n */\r\nclojure.string.split \x3d (function clojure$string$split(var_args){\r\nvar G__16420 \x3d arguments.length;\r\nswitch (G__16420) {\r\ncase 2:\r\nreturn clojure.string.split.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn clojure.string.split.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(clojure.string.split.cljs$core$IFn$_invoke$arity$2 \x3d (function (s,re){\r\nreturn clojure.string.split.cljs$core$IFn$_invoke$arity$3(s,re,(0));\r\n}));\r\n\r\n(clojure.string.split.cljs$core$IFn$_invoke$arity$3 \x3d (function (s,re,limit){\r\nreturn clojure.string.discard_trailing_if_needed(limit,(((\x22/(?:)/\x22 \x3d\x3d\x3d cljs.core.str.cljs$core$IFn$_invoke$arity$1(re)))?clojure.string.split_with_empty_regex(s,limit):(((limit \x3c (1)))?cljs.core.vec(cljs.core.str.cljs$core$IFn$_invoke$arity$1(s).split(re)):(function (){var s__$1 \x3d s;\r\nvar limit__$1 \x3d limit;\r\nvar parts \x3d cljs.core.PersistentVector.EMPTY;\r\nwhile(true){\r\nif(((1) \x3d\x3d\x3d limit__$1)){\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts,s__$1);\r\n} else {\r\nvar m \x3d cljs.core.re_find(re,s__$1);\r\nif((!((m \x3d\x3d null)))){\r\nvar index \x3d s__$1.indexOf(m);\r\nvar G__16452 \x3d s__$1.substring((index + cljs.core.count(m)));\r\nvar G__16453 \x3d (limit__$1 - (1));\r\nvar G__16454 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts,s__$1.substring((0),index));\r\ns__$1 \x3d G__16452;\r\nlimit__$1 \x3d G__16453;\r\nparts \x3d G__16454;\r\ncontinue;\r\n} else {\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts,s__$1);\r\n}\r\n}\r\nbreak;\r\n}\r\n})())));\r\n}));\r\n\r\n(clojure.string.split.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n/**\r\n * Splits s on \\n or \\r\\n.\r\n */\r\nclojure.string.split_lines \x3d (function clojure$string$split_lines(s){\r\nreturn clojure.string.split.cljs$core$IFn$_invoke$arity$2(s,/\\n|\\r\\n/);\r\n});\r\n/**\r\n * Removes whitespace from both ends of string.\r\n */\r\nclojure.string.trim \x3d (function clojure$string$trim(s){\r\nreturn goog.string.trim(s);\r\n});\r\n/**\r\n * Removes whitespace from the left side of string.\r\n */\r\nclojure.string.triml \x3d (function clojure$string$triml(s){\r\nreturn goog.string.trimLeft(s);\r\n});\r\n/**\r\n * Removes whitespace from the right side of string.\r\n */\r\nclojure.string.trimr \x3d (function clojure$string$trimr(s){\r\nreturn goog.string.trimRight(s);\r\n});\r\n/**\r\n * Removes all trailing newline \\n or return \\r characters from\r\n *   string.  Similar to Perl\x27s chomp.\r\n */\r\nclojure.string.trim_newline \x3d (function clojure$string$trim_newline(s){\r\nvar index \x3d s.length;\r\nwhile(true){\r\nif((index \x3d\x3d\x3d (0))){\r\nreturn \x22\x22;\r\n} else {\r\nvar ch \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(s,(index - (1)));\r\nif((((\x22\\n\x22 \x3d\x3d\x3d ch)) || ((\x22\\r\x22 \x3d\x3d\x3d ch)))){\r\nvar G__16459 \x3d (index - (1));\r\nindex \x3d G__16459;\r\ncontinue;\r\n} else {\r\nreturn s.substring((0),index);\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * True is s is nil, empty, or contains only whitespace.\r\n */\r\nclojure.string.blank_QMARK_ \x3d (function clojure$string$blank_QMARK_(s){\r\nreturn goog.string.isEmptyOrWhitespace(goog.string.makeSafe(s));\r\n});\r\n/**\r\n * Return a new string, using cmap to escape each character ch\r\n * from s as follows:\r\n * \r\n * If (cmap ch) is nil, append ch to the new string.\r\n * If (cmap ch) is non-nil, append (str (cmap ch)) instead.\r\n */\r\nclojure.string.escape \x3d (function clojure$string$escape(s,cmap){\r\nvar buffer \x3d (new goog.string.StringBuffer());\r\nvar length \x3d s.length;\r\nvar index \x3d (0);\r\nwhile(true){\r\nif((length \x3d\x3d\x3d index)){\r\nreturn buffer.toString();\r\n} else {\r\nvar ch \x3d s.charAt(index);\r\nvar replacement \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(cmap,ch);\r\nif((!((replacement \x3d\x3d null)))){\r\nbuffer.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement));\r\n} else {\r\nbuffer.append(ch);\r\n}\r\n\r\nvar G__16464 \x3d (index + (1));\r\nindex \x3d G__16464;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Return index of value (string or char) in s, optionally searching\r\n *   forward from from-index or nil if not found.\r\n */\r\nclojure.string.index_of \x3d (function clojure$string$index_of(var_args){\r\nvar G__16423 \x3d arguments.length;\r\nswitch (G__16423) {\r\ncase 2:\r\nreturn clojure.string.index_of.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn clojure.string.index_of.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 \x3d (function (s,value){\r\nvar result \x3d s.indexOf(value);\r\nif((result \x3c (0))){\r\nreturn null;\r\n} else {\r\nreturn result;\r\n}\r\n}));\r\n\r\n(clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 \x3d (function (s,value,from_index){\r\nvar result \x3d s.indexOf(value,from_index);\r\nif((result \x3c (0))){\r\nreturn null;\r\n} else {\r\nreturn result;\r\n}\r\n}));\r\n\r\n(clojure.string.index_of.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n/**\r\n * Return last index of value (string or char) in s, optionally\r\n *   searching backward from from-index or nil if not found.\r\n */\r\nclojure.string.last_index_of \x3d (function clojure$string$last_index_of(var_args){\r\nvar G__16425 \x3d arguments.length;\r\nswitch (G__16425) {\r\ncase 2:\r\nreturn clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 \x3d (function (s,value){\r\nvar result \x3d s.lastIndexOf(value);\r\nif((result \x3c (0))){\r\nreturn null;\r\n} else {\r\nreturn result;\r\n}\r\n}));\r\n\r\n(clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 \x3d (function (s,value,from_index){\r\nvar result \x3d s.lastIndexOf(value,from_index);\r\nif((result \x3c (0))){\r\nreturn null;\r\n} else {\r\nreturn result;\r\n}\r\n}));\r\n\r\n(clojure.string.last_index_of.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n/**\r\n * True if s starts with substr.\r\n */\r\nclojure.string.starts_with_QMARK_ \x3d (function clojure$string$starts_with_QMARK_(s,substr){\r\nreturn goog.string.startsWith(s,substr);\r\n});\r\n/**\r\n * True if s ends with substr.\r\n */\r\nclojure.string.ends_with_QMARK_ \x3d (function clojure$string$ends_with_QMARK_(s,substr){\r\nreturn goog.string.endsWith(s,substr);\r\n});\r\n/**\r\n * True if s includes substr.\r\n */\r\nclojure.string.includes_QMARK_ \x3d (function clojure$string$includes_QMARK_(s,substr){\r\nreturn goog.string.contains(s,substr);\r\n});\r\n");
SHADOW_ENV.evalLoad("shadow.cljs.devtools.client.console.js", true , "goog.provide(\x27shadow.cljs.devtools.client.console\x27);\r\nshadow.cljs.devtools.client.console.push_all \x3d (function shadow$cljs$devtools$client$console$push_all(arr,item){\r\nif(cljs.core.vector_QMARK_(item)){\r\nvar seq__16501 \x3d cljs.core.seq(item);\r\nvar chunk__16502 \x3d null;\r\nvar count__16503 \x3d (0);\r\nvar i__16504 \x3d (0);\r\nwhile(true){\r\nif((i__16504 \x3c count__16503)){\r\nvar it \x3d chunk__16502.cljs$core$IIndexed$_nth$arity$2(null,i__16504);\r\narr.push(it);\r\n\r\n\r\nvar G__16585 \x3d seq__16501;\r\nvar G__16586 \x3d chunk__16502;\r\nvar G__16587 \x3d count__16503;\r\nvar G__16588 \x3d (i__16504 + (1));\r\nseq__16501 \x3d G__16585;\r\nchunk__16502 \x3d G__16586;\r\ncount__16503 \x3d G__16587;\r\ni__16504 \x3d G__16588;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto__ \x3d cljs.core.seq(seq__16501);\r\nif(temp__5753__auto__){\r\nvar seq__16501__$1 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__16501__$1)){\r\nvar c__4679__auto__ \x3d cljs.core.chunk_first(seq__16501__$1);\r\nvar G__16591 \x3d cljs.core.chunk_rest(seq__16501__$1);\r\nvar G__16592 \x3d c__4679__auto__;\r\nvar G__16593 \x3d cljs.core.count(c__4679__auto__);\r\nvar G__16594 \x3d (0);\r\nseq__16501 \x3d G__16591;\r\nchunk__16502 \x3d G__16592;\r\ncount__16503 \x3d G__16593;\r\ni__16504 \x3d G__16594;\r\ncontinue;\r\n} else {\r\nvar it \x3d cljs.core.first(seq__16501__$1);\r\narr.push(it);\r\n\r\n\r\nvar G__16595 \x3d cljs.core.next(seq__16501__$1);\r\nvar G__16596 \x3d null;\r\nvar G__16597 \x3d (0);\r\nvar G__16598 \x3d (0);\r\nseq__16501 \x3d G__16595;\r\nchunk__16502 \x3d G__16596;\r\ncount__16503 \x3d G__16597;\r\ni__16504 \x3d G__16598;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn arr.push(item);\r\n}\r\n});\r\nshadow.cljs.devtools.client.console.object_ref \x3d (function shadow$cljs$devtools$client$console$object_ref(obj){\r\nif(cljs.core.truth_(obj)){\r\nreturn [\x22object\x22,({\x22object\x22: obj})];\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nshadow.cljs.devtools.client.console.map__GT_style \x3d (function shadow$cljs$devtools$client$console$map__GT_style(m){\r\nreturn ({\x22style\x22: clojure.string.join.cljs$core$IFn$_invoke$arity$2(\x22\x22,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__16505){\r\nvar vec__16506 \x3d p__16505;\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16506,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16506,(1),null);\r\nreturn [cljs.core.name(k),\x22: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(v),\x22;\x22].join(\x27\x27);\r\n}),m))});\r\n});\r\nshadow.cljs.devtools.client.console.clj__GT_jsonml \x3d (function shadow$cljs$devtools$client$console$clj__GT_jsonml(struct){\r\nif((struct \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nif(cljs.core.array_QMARK_(struct)){\r\nreturn struct;\r\n} else {\r\nif(cljs.core.vector_QMARK_(struct)){\r\nvar vec__16511 \x3d struct;\r\nvar seq__16512 \x3d cljs.core.seq(vec__16511);\r\nvar first__16513 \x3d cljs.core.first(seq__16512);\r\nvar seq__16512__$1 \x3d cljs.core.next(seq__16512);\r\nvar tag \x3d first__16513;\r\nvar first__16513__$1 \x3d cljs.core.first(seq__16512__$1);\r\nvar seq__16512__$2 \x3d cljs.core.next(seq__16512__$1);\r\nvar attrs \x3d first__16513__$1;\r\nvar children \x3d seq__16512__$2;\r\nvar js \x3d [cljs.core.name(tag),shadow.cljs.devtools.client.console.map__GT_style(attrs)];\r\nvar seq__16514_16651 \x3d cljs.core.seq(children);\r\nvar chunk__16515_16652 \x3d null;\r\nvar count__16516_16653 \x3d (0);\r\nvar i__16517_16654 \x3d (0);\r\nwhile(true){\r\nif((i__16517_16654 \x3c count__16516_16653)){\r\nvar child_16655 \x3d chunk__16515_16652.cljs$core$IIndexed$_nth$arity$2(null,i__16517_16654);\r\nshadow.cljs.devtools.client.console.push_all(js,(shadow.cljs.devtools.client.console.clj__GT_jsonml.cljs$core$IFn$_invoke$arity$1 ? shadow.cljs.devtools.client.console.clj__GT_jsonml.cljs$core$IFn$_invoke$arity$1(child_16655) : shadow.cljs.devtools.client.console.clj__GT_jsonml.call(null,child_16655)));\r\n\r\n\r\nvar G__16656 \x3d seq__16514_16651;\r\nvar G__16657 \x3d chunk__16515_16652;\r\nvar G__16658 \x3d count__16516_16653;\r\nvar G__16659 \x3d (i__16517_16654 + (1));\r\nseq__16514_16651 \x3d G__16656;\r\nchunk__16515_16652 \x3d G__16657;\r\ncount__16516_16653 \x3d G__16658;\r\ni__16517_16654 \x3d G__16659;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto___16660 \x3d cljs.core.seq(seq__16514_16651);\r\nif(temp__5753__auto___16660){\r\nvar seq__16514_16661__$1 \x3d temp__5753__auto___16660;\r\nif(cljs.core.chunked_seq_QMARK_(seq__16514_16661__$1)){\r\nvar c__4679__auto___16662 \x3d cljs.core.chunk_first(seq__16514_16661__$1);\r\nvar G__16663 \x3d cljs.core.chunk_rest(seq__16514_16661__$1);\r\nvar G__16664 \x3d c__4679__auto___16662;\r\nvar G__16665 \x3d cljs.core.count(c__4679__auto___16662);\r\nvar G__16666 \x3d (0);\r\nseq__16514_16651 \x3d G__16663;\r\nchunk__16515_16652 \x3d G__16664;\r\ncount__16516_16653 \x3d G__16665;\r\ni__16517_16654 \x3d G__16666;\r\ncontinue;\r\n} else {\r\nvar child_16667 \x3d cljs.core.first(seq__16514_16661__$1);\r\nshadow.cljs.devtools.client.console.push_all(js,(shadow.cljs.devtools.client.console.clj__GT_jsonml.cljs$core$IFn$_invoke$arity$1 ? shadow.cljs.devtools.client.console.clj__GT_jsonml.cljs$core$IFn$_invoke$arity$1(child_16667) : shadow.cljs.devtools.client.console.clj__GT_jsonml.call(null,child_16667)));\r\n\r\n\r\nvar G__16668 \x3d cljs.core.next(seq__16514_16661__$1);\r\nvar G__16669 \x3d null;\r\nvar G__16670 \x3d (0);\r\nvar G__16671 \x3d (0);\r\nseq__16514_16651 \x3d G__16668;\r\nchunk__16515_16652 \x3d G__16669;\r\ncount__16516_16653 \x3d G__16670;\r\ni__16517_16654 \x3d G__16671;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nreturn js;\r\n} else {\r\nif(typeof struct \x3d\x3d\x3d \x27string\x27){\r\nreturn struct;\r\n} else {\r\nif(typeof struct \x3d\x3d\x3d \x27number\x27){\r\nreturn struct;\r\n} else {\r\nif(cljs.core.seq_QMARK_(struct)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(shadow.cljs.devtools.client.console.clj__GT_jsonml),struct);\r\n} else {\r\nreturn shadow.cljs.devtools.client.console.object_ref(struct);\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n*/\r\nshadow.cljs.devtools.client.console.SeqFormatter \x3d (function (){\r\n});\r\n(shadow.cljs.devtools.client.console.SeqFormatter.prototype.shadow$formatter \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn true;\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.SeqFormatter.prototype.header \x3d (function (obj){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nif(((cljs.core.sequential_QMARK_(obj)) || (cljs.core.set_QMARK_(obj)))){\r\nreturn shadow.cljs.devtools.client.console.clj__GT_jsonml(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),cljs.core.PersistentArrayMap.EMPTY,[cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.type(obj)], 0)),\x22 [count: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.count(obj)),\x22]\x22].join(\x27\x27)], null));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.SeqFormatter.prototype.hasBody \x3d (function (obj){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn cljs.core.boolean$(cljs.core.seq(obj));\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.SeqFormatter.prototype.body \x3d (function (s){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn shadow.cljs.devtools.client.console.clj__GT_jsonml(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22ol\x22,\x22ol\x22,932524051),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22margin\x22,\x22margin\x22,-995903681),(0)], null),(function (){var iter__4652__auto__ \x3d (function shadow$cljs$devtools$client$console$iter__16526(s__16527){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s__16527__$1 \x3d s__16527;\r\nwhile(true){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(s__16527__$1);\r\nif(temp__5753__auto__){\r\nvar s__16527__$2 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__16527__$2)){\r\nvar c__4650__auto__ \x3d cljs.core.chunk_first(s__16527__$2);\r\nvar size__4651__auto__ \x3d cljs.core.count(c__4650__auto__);\r\nvar b__16529 \x3d cljs.core.chunk_buffer(size__4651__auto__);\r\nif((function (){var i__16528 \x3d (0);\r\nwhile(true){\r\nif((i__16528 \x3c size__4651__auto__)){\r\nvar value \x3d cljs.core._nth(c__4650__auto__,i__16528);\r\ncljs.core.chunk_append(b__16529,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22li\x22,\x22li\x22,723558921),cljs.core.PersistentArrayMap.EMPTY,shadow.cljs.devtools.client.console.object_ref(value)], null));\r\n\r\nvar G__16678 \x3d (i__16528 + (1));\r\ni__16528 \x3d G__16678;\r\ncontinue;\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__16529),shadow$cljs$devtools$client$console$iter__16526(cljs.core.chunk_rest(s__16527__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__16529),null);\r\n}\r\n} else {\r\nvar value \x3d cljs.core.first(s__16527__$2);\r\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22li\x22,\x22li\x22,723558921),cljs.core.PersistentArrayMap.EMPTY,shadow.cljs.devtools.client.console.object_ref(value)], null),shadow$cljs$devtools$client$console$iter__16526(cljs.core.rest(s__16527__$2)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}),null,null));\r\n});\r\nreturn iter__4652__auto__(s);\r\n})()], null));\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.SeqFormatter.getBasis \x3d (function (){\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.SeqFormatter.cljs$lang$type \x3d true);\r\n\r\n(shadow.cljs.devtools.client.console.SeqFormatter.cljs$lang$ctorStr \x3d \x22shadow.cljs.devtools.client.console/SeqFormatter\x22);\r\n\r\n(shadow.cljs.devtools.client.console.SeqFormatter.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22shadow.cljs.devtools.client.console/SeqFormatter\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for shadow.cljs.devtools.client.console/SeqFormatter.\r\n */\r\nshadow.cljs.devtools.client.console.__GT_SeqFormatter \x3d (function shadow$cljs$devtools$client$console$__GT_SeqFormatter(){\r\nreturn (new shadow.cljs.devtools.client.console.SeqFormatter());\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n*/\r\nshadow.cljs.devtools.client.console.MapFormatter \x3d (function (){\r\n});\r\n(shadow.cljs.devtools.client.console.MapFormatter.prototype.shadow$formatter \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn true;\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.MapFormatter.prototype.header \x3d (function (obj){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nif((((obj instanceof cljs.core.PersistentHashMap)) || ((((obj instanceof cljs.core.PersistentArrayMap)) || (cljs.core.record_QMARK_(obj)))))){\r\nreturn shadow.cljs.devtools.client.console.clj__GT_jsonml(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),cljs.core.PersistentArrayMap.EMPTY,[cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.type(obj)], 0)),\x22 [count: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.count(obj)),\x22]\x22].join(\x27\x27)], null));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.MapFormatter.prototype.hasBody \x3d (function (obj){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn cljs.core.boolean$(cljs.core.seq(obj));\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.MapFormatter.prototype.body \x3d (function (m){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn shadow.cljs.devtools.client.console.clj__GT_jsonml(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22table\x22,\x22table\x22,-564943036),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22width\x22,\x22width\x22,-384071477),\x22100%\x22,new cljs.core.Keyword(null,\x22margin-left\x22,\x22margin-left\x22,2015598377),\x2214px\x22], null),(function (){var iter__4652__auto__ \x3d (function shadow$cljs$devtools$client$console$iter__16535(s__16536){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s__16536__$1 \x3d s__16536;\r\nwhile(true){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(s__16536__$1);\r\nif(temp__5753__auto__){\r\nvar s__16536__$2 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__16536__$2)){\r\nvar c__4650__auto__ \x3d cljs.core.chunk_first(s__16536__$2);\r\nvar size__4651__auto__ \x3d cljs.core.count(c__4650__auto__);\r\nvar b__16538 \x3d cljs.core.chunk_buffer(size__4651__auto__);\r\nif((function (){var i__16537 \x3d (0);\r\nwhile(true){\r\nif((i__16537 \x3c size__4651__auto__)){\r\nvar key \x3d cljs.core._nth(c__4650__auto__,i__16537);\r\nvar value \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,key);\r\ncljs.core.chunk_append(b__16538,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22tr\x22,\x22tr\x22,-1424774646),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22vertical-align\x22,\x22vertical-align\x22,651007333),\x22top\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22td\x22,\x22td\x22,1479933353),cljs.core.PersistentArrayMap.EMPTY,shadow.cljs.devtools.client.console.object_ref(key)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22td\x22,\x22td\x22,1479933353),cljs.core.PersistentArrayMap.EMPTY,shadow.cljs.devtools.client.console.object_ref(value)], null)], null));\r\n\r\nvar G__16704 \x3d (i__16537 + (1));\r\ni__16537 \x3d G__16704;\r\ncontinue;\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__16538),shadow$cljs$devtools$client$console$iter__16535(cljs.core.chunk_rest(s__16536__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__16538),null);\r\n}\r\n} else {\r\nvar key \x3d cljs.core.first(s__16536__$2);\r\nvar value \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,key);\r\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22tr\x22,\x22tr\x22,-1424774646),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22vertical-align\x22,\x22vertical-align\x22,651007333),\x22top\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22td\x22,\x22td\x22,1479933353),cljs.core.PersistentArrayMap.EMPTY,shadow.cljs.devtools.client.console.object_ref(key)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22td\x22,\x22td\x22,1479933353),cljs.core.PersistentArrayMap.EMPTY,shadow.cljs.devtools.client.console.object_ref(value)], null)], null),shadow$cljs$devtools$client$console$iter__16535(cljs.core.rest(s__16536__$2)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}),null,null));\r\n});\r\nreturn iter__4652__auto__((function (){var k \x3d cljs.core.keys(m);\r\ntry{return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(k);\r\n}catch (e16539){var e \x3d e16539;\r\nreturn k;\r\n}})());\r\n})()], null));\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.MapFormatter.getBasis \x3d (function (){\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.MapFormatter.cljs$lang$type \x3d true);\r\n\r\n(shadow.cljs.devtools.client.console.MapFormatter.cljs$lang$ctorStr \x3d \x22shadow.cljs.devtools.client.console/MapFormatter\x22);\r\n\r\n(shadow.cljs.devtools.client.console.MapFormatter.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22shadow.cljs.devtools.client.console/MapFormatter\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for shadow.cljs.devtools.client.console/MapFormatter.\r\n */\r\nshadow.cljs.devtools.client.console.__GT_MapFormatter \x3d (function shadow$cljs$devtools$client$console$__GT_MapFormatter(){\r\nreturn (new shadow.cljs.devtools.client.console.MapFormatter());\r\n});\r\n\r\nshadow.cljs.devtools.client.console.keyword_style \x3d new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22color\x22,\x22color\x22,1011675173),\x22rgb(136, 19, 145)\x22], null);\r\n\r\n/**\r\n* @constructor\r\n*/\r\nshadow.cljs.devtools.client.console.KeywordFormatter \x3d (function (){\r\n});\r\n(shadow.cljs.devtools.client.console.KeywordFormatter.prototype.shadow$formatter \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn true;\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.KeywordFormatter.prototype.header \x3d (function (obj){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nif((obj instanceof cljs.core.Keyword)){\r\nreturn shadow.cljs.devtools.client.console.clj__GT_jsonml(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),shadow.cljs.devtools.client.console.keyword_style,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0))], null));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.KeywordFormatter.prototype.hasBody \x3d (function (obj){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn false;\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.KeywordFormatter.prototype.body \x3d (function (m){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn null;\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.KeywordFormatter.getBasis \x3d (function (){\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.KeywordFormatter.cljs$lang$type \x3d true);\r\n\r\n(shadow.cljs.devtools.client.console.KeywordFormatter.cljs$lang$ctorStr \x3d \x22shadow.cljs.devtools.client.console/KeywordFormatter\x22);\r\n\r\n(shadow.cljs.devtools.client.console.KeywordFormatter.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22shadow.cljs.devtools.client.console/KeywordFormatter\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for shadow.cljs.devtools.client.console/KeywordFormatter.\r\n */\r\nshadow.cljs.devtools.client.console.__GT_KeywordFormatter \x3d (function shadow$cljs$devtools$client$console$__GT_KeywordFormatter(){\r\nreturn (new shadow.cljs.devtools.client.console.KeywordFormatter());\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n*/\r\nshadow.cljs.devtools.client.console.SymbolFormatter \x3d (function (){\r\n});\r\n(shadow.cljs.devtools.client.console.SymbolFormatter.prototype.shadow$formatter \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn true;\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.SymbolFormatter.prototype.header \x3d (function (obj){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nif((obj instanceof cljs.core.Symbol)){\r\nreturn shadow.cljs.devtools.client.console.clj__GT_jsonml(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),shadow.cljs.devtools.client.console.keyword_style,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0))], null));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.SymbolFormatter.prototype.hasBody \x3d (function (obj){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn false;\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.SymbolFormatter.prototype.body \x3d (function (m){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn null;\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.SymbolFormatter.getBasis \x3d (function (){\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.SymbolFormatter.cljs$lang$type \x3d true);\r\n\r\n(shadow.cljs.devtools.client.console.SymbolFormatter.cljs$lang$ctorStr \x3d \x22shadow.cljs.devtools.client.console/SymbolFormatter\x22);\r\n\r\n(shadow.cljs.devtools.client.console.SymbolFormatter.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22shadow.cljs.devtools.client.console/SymbolFormatter\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for shadow.cljs.devtools.client.console/SymbolFormatter.\r\n */\r\nshadow.cljs.devtools.client.console.__GT_SymbolFormatter \x3d (function shadow$cljs$devtools$client$console$__GT_SymbolFormatter(){\r\nreturn (new shadow.cljs.devtools.client.console.SymbolFormatter());\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n*/\r\nshadow.cljs.devtools.client.console.DerefFormatter \x3d (function (){\r\n});\r\n(shadow.cljs.devtools.client.console.DerefFormatter.prototype.shadow$formatter \x3d (function (){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn true;\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.DerefFormatter.prototype.header \x3d (function (obj){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nif((((obj instanceof cljs.core.Atom)) || ((obj instanceof cljs.core.Volatile)))){\r\nreturn shadow.cljs.devtools.client.console.clj__GT_jsonml(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),shadow.cljs.devtools.client.console.keyword_style,[\x22@DEREF \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.type(obj)], 0))].join(\x27\x27)], null));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.DerefFormatter.prototype.hasBody \x3d (function (obj){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn true;\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.DerefFormatter.prototype.body \x3d (function (v){\r\nvar self__ \x3d this;\r\nvar this$ \x3d this;\r\nreturn shadow.cljs.devtools.client.console.clj__GT_jsonml(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22div\x22,\x22div\x22,1057191632),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22margin-left\x22,\x22margin-left\x22,2015598377),\x2214px\x22], null),shadow.cljs.devtools.client.console.object_ref(cljs.core.deref(v))], null));\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.DerefFormatter.getBasis \x3d (function (){\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n}));\r\n\r\n(shadow.cljs.devtools.client.console.DerefFormatter.cljs$lang$type \x3d true);\r\n\r\n(shadow.cljs.devtools.client.console.DerefFormatter.cljs$lang$ctorStr \x3d \x22shadow.cljs.devtools.client.console/DerefFormatter\x22);\r\n\r\n(shadow.cljs.devtools.client.console.DerefFormatter.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22shadow.cljs.devtools.client.console/DerefFormatter\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for shadow.cljs.devtools.client.console/DerefFormatter.\r\n */\r\nshadow.cljs.devtools.client.console.__GT_DerefFormatter \x3d (function shadow$cljs$devtools$client$console$__GT_DerefFormatter(){\r\nreturn (new shadow.cljs.devtools.client.console.DerefFormatter());\r\n});\r\n\r\nshadow.cljs.devtools.client.console.install_all_BANG_ \x3d (function shadow$cljs$devtools$client$console$install_all_BANG_(){\r\nvar temp__5753__auto__ \x3d goog.global.devtoolsFormatters;\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar f \x3d temp__5753__auto__;\r\nvar G__16580 \x3d f;\r\nG__16580.push((new shadow.cljs.devtools.client.console.KeywordFormatter()));\r\n\r\nG__16580.push((new shadow.cljs.devtools.client.console.MapFormatter()));\r\n\r\nG__16580.push((new shadow.cljs.devtools.client.console.SeqFormatter()));\r\n\r\nG__16580.push((new shadow.cljs.devtools.client.console.SymbolFormatter()));\r\n\r\nG__16580.push((new shadow.cljs.devtools.client.console.DerefFormatter()));\r\n\r\nreturn G__16580;\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nshadow.cljs.devtools.client.console.remove_all_BANG_ \x3d (function shadow$cljs$devtools$client$console$remove_all_BANG_(){\r\nvar all \x3d cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p1__16581_SHARP_){\r\nreturn goog.object.get(p1__16581_SHARP_,\x22shadow$formatter\x22);\r\n}),cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1((function (){var or__4253__auto__ \x3d goog.global.devtoolsFormatters;\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn [];\r\n}\r\n})())));\r\nreturn goog.object.set(goog.global,\x22devtoolsFormatters\x22,all);\r\n});\r\nshadow.cljs.devtools.client.console.remove_all_BANG_();\r\nshadow.cljs.devtools.client.console.install_all_BANG_();\r\n");
SHADOW_ENV.evalLoad("cljs.pprint.js", true , "goog.provide(\x27cljs.pprint\x27);\r\ncljs.pprint.print \x3d (function cljs$pprint$print(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___21327 \x3d arguments.length;\r\nvar i__4865__auto___21328 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21328 \x3c len__4864__auto___21327)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___21328]));\r\n\r\nvar G__21329 \x3d (i__4865__auto___21328 + (1));\r\ni__4865__auto___21328 \x3d G__21329;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic \x3d (function (more){\r\nreturn cljs.core._write(cljs.core._STAR_out_STAR_,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.print_str,more));\r\n}));\r\n\r\n(cljs.pprint.print.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(cljs.pprint.print.cljs$lang$applyTo \x3d (function (seq16868){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16868));\r\n}));\r\n\r\ncljs.pprint.println \x3d (function cljs$pprint$println(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___21330 \x3d arguments.length;\r\nvar i__4865__auto___21331 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21331 \x3c len__4864__auto___21330)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___21331]));\r\n\r\nvar G__21333 \x3d (i__4865__auto___21331 + (1));\r\ni__4865__auto___21331 \x3d G__21333;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic \x3d (function (more){\r\ncljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.pprint.print,more);\r\n\r\nreturn cljs.core._write(cljs.core._STAR_out_STAR_,\x22\\n\x22);\r\n}));\r\n\r\n(cljs.pprint.println.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(cljs.pprint.println.cljs$lang$applyTo \x3d (function (seq16875){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16875));\r\n}));\r\n\r\ncljs.pprint.print_char \x3d (function cljs$pprint$print_char(c){\r\nreturn cljs.core._write(cljs.core._STAR_out_STAR_,(function (){var pred__16881 \x3d cljs.core._EQ_;\r\nvar expr__16882 \x3d c;\r\nif(cljs.core.truth_((function (){var G__16884 \x3d \x22\\b\x22;\r\nvar G__16885 \x3d expr__16882;\r\nreturn (pred__16881.cljs$core$IFn$_invoke$arity$2 ? pred__16881.cljs$core$IFn$_invoke$arity$2(G__16884,G__16885) : pred__16881.call(null,G__16884,G__16885));\r\n})())){\r\nreturn \x22\\\\backspace\x22;\r\n} else {\r\nif(cljs.core.truth_((function (){var G__16888 \x3d \x22 \x22;\r\nvar G__16889 \x3d expr__16882;\r\nreturn (pred__16881.cljs$core$IFn$_invoke$arity$2 ? pred__16881.cljs$core$IFn$_invoke$arity$2(G__16888,G__16889) : pred__16881.call(null,G__16888,G__16889));\r\n})())){\r\nreturn \x22\\\\space\x22;\r\n} else {\r\nif(cljs.core.truth_((function (){var G__16890 \x3d \x22\\t\x22;\r\nvar G__16891 \x3d expr__16882;\r\nreturn (pred__16881.cljs$core$IFn$_invoke$arity$2 ? pred__16881.cljs$core$IFn$_invoke$arity$2(G__16890,G__16891) : pred__16881.call(null,G__16890,G__16891));\r\n})())){\r\nreturn \x22\\\\tab\x22;\r\n} else {\r\nif(cljs.core.truth_((function (){var G__16892 \x3d \x22\\n\x22;\r\nvar G__16893 \x3d expr__16882;\r\nreturn (pred__16881.cljs$core$IFn$_invoke$arity$2 ? pred__16881.cljs$core$IFn$_invoke$arity$2(G__16892,G__16893) : pred__16881.call(null,G__16892,G__16893));\r\n})())){\r\nreturn \x22\\\\newline\x22;\r\n} else {\r\nif(cljs.core.truth_((function (){var G__16894 \x3d \x22\\f\x22;\r\nvar G__16895 \x3d expr__16882;\r\nreturn (pred__16881.cljs$core$IFn$_invoke$arity$2 ? pred__16881.cljs$core$IFn$_invoke$arity$2(G__16894,G__16895) : pred__16881.call(null,G__16894,G__16895));\r\n})())){\r\nreturn \x22\\\\formfeed\x22;\r\n} else {\r\nif(cljs.core.truth_((function (){var G__16899 \x3d \x22\\r\x22;\r\nvar G__16900 \x3d expr__16882;\r\nreturn (pred__16881.cljs$core$IFn$_invoke$arity$2 ? pred__16881.cljs$core$IFn$_invoke$arity$2(G__16899,G__16900) : pred__16881.call(null,G__16899,G__16900));\r\n})())){\r\nreturn \x22\\\\return\x22;\r\n} else {\r\nif(cljs.core.truth_((function (){var G__16901 \x3d \x22\\\x22\x22;\r\nvar G__16902 \x3d expr__16882;\r\nreturn (pred__16881.cljs$core$IFn$_invoke$arity$2 ? pred__16881.cljs$core$IFn$_invoke$arity$2(G__16901,G__16902) : pred__16881.call(null,G__16901,G__16902));\r\n})())){\r\nreturn \x22\\\\\\\x22\x22;\r\n} else {\r\nif(cljs.core.truth_((function (){var G__16903 \x3d \x22\\\\\x22;\r\nvar G__16904 \x3d expr__16882;\r\nreturn (pred__16881.cljs$core$IFn$_invoke$arity$2 ? pred__16881.cljs$core$IFn$_invoke$arity$2(G__16903,G__16904) : pred__16881.call(null,G__16903,G__16904));\r\n})())){\r\nreturn \x22\\\\\\\\\x22;\r\n} else {\r\nreturn [\x22\\\\\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join(\x27\x27);\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n})());\r\n});\r\ncljs.pprint.pr \x3d (function cljs$pprint$pr(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___21342 \x3d arguments.length;\r\nvar i__4865__auto___21343 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21343 \x3c len__4864__auto___21342)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___21343]));\r\n\r\nvar G__21347 \x3d (i__4865__auto___21343 + (1));\r\ni__4865__auto___21343 \x3d G__21347;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic \x3d (function (more){\r\nreturn cljs.core._write(cljs.core._STAR_out_STAR_,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.pr_str,more));\r\n}));\r\n\r\n(cljs.pprint.pr.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(cljs.pprint.pr.cljs$lang$applyTo \x3d (function (seq16908){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16908));\r\n}));\r\n\r\ncljs.pprint.prn \x3d (function cljs$pprint$prn(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___21357 \x3d arguments.length;\r\nvar i__4865__auto___21358 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___21358 \x3c len__4864__auto___21357)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___21358]));\r\n\r\nvar G__21361 \x3d (i__4865__auto___21358 + (1));\r\ni__4865__auto___21358 \x3d G__21361;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic \x3d (function (more){\r\ncljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.pprint.pr,more);\r\n\r\nreturn cljs.core._write(cljs.core._STAR_out_STAR_,\x22\\n\x22);\r\n}));\r\n\r\n(cljs.pprint.prn.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(cljs.pprint.prn.cljs$lang$applyTo \x3d (function (seq16911){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16911));\r\n}));\r\n\r\n/**\r\n * Returns true if n is an float.\r\n */\r\ncljs.pprint.float_QMARK_ \x3d (function cljs$pprint$float_QMARK_(n){\r\nreturn ((typeof n \x3d\x3d\x3d \x27number\x27) \x26\x26 ((((!(isNaN(n)))) \x26\x26 ((((!((n \x3d\x3d\x3d Infinity)))) \x26\x26 ((!((parseFloat(n) \x3d\x3d\x3d parseInt(n,(10)))))))))));\r\n});\r\n/**\r\n * Convert char to int\r\n */\r\ncljs.pprint.char_code \x3d (function cljs$pprint$char_code(c){\r\nif(typeof c \x3d\x3d\x3d \x27number\x27){\r\nreturn c;\r\n} else {\r\nif(((typeof c \x3d\x3d\x3d \x27string\x27) \x26\x26 ((c.length \x3d\x3d\x3d (1))))){\r\nreturn c.charCodeAt((0));\r\n} else {\r\nthrow (new Error(\x22Argument to char must be a character or number\x22));\r\n\r\n}\r\n}\r\n});\r\ncljs.pprint.map_passing_context \x3d (function cljs$pprint$map_passing_context(func,initial_context,lis){\r\nvar context \x3d initial_context;\r\nvar lis__$1 \x3d lis;\r\nvar acc \x3d cljs.core.PersistentVector.EMPTY;\r\nwhile(true){\r\nif(cljs.core.empty_QMARK_(lis__$1)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc,context], null);\r\n} else {\r\nvar this$ \x3d cljs.core.first(lis__$1);\r\nvar remainder \x3d cljs.core.next(lis__$1);\r\nvar vec__16922 \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(func,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$,context], null));\r\nvar result \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16922,(0),null);\r\nvar new_context \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16922,(1),null);\r\nvar G__21390 \x3d new_context;\r\nvar G__21391 \x3d remainder;\r\nvar G__21392 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,result);\r\ncontext \x3d G__21390;\r\nlis__$1 \x3d G__21391;\r\nacc \x3d G__21392;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.pprint.consume \x3d (function cljs$pprint$consume(func,initial_context){\r\nvar context \x3d initial_context;\r\nvar acc \x3d cljs.core.PersistentVector.EMPTY;\r\nwhile(true){\r\nvar vec__16934 \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(func,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));\r\nvar result \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16934,(0),null);\r\nvar new_context \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16934,(1),null);\r\nif(cljs.core.not(result)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc,new_context], null);\r\n} else {\r\nvar G__21405 \x3d new_context;\r\nvar G__21407 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,result);\r\ncontext \x3d G__21405;\r\nacc \x3d G__21407;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.pprint.consume_while \x3d (function cljs$pprint$consume_while(func,initial_context){\r\nvar context \x3d initial_context;\r\nvar acc \x3d cljs.core.PersistentVector.EMPTY;\r\nwhile(true){\r\nvar vec__16944 \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(func,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));\r\nvar result \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16944,(0),null);\r\nvar continue$ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16944,(1),null);\r\nvar new_context \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16944,(2),null);\r\nif(cljs.core.not(continue$)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc,context], null);\r\n} else {\r\nvar G__21421 \x3d new_context;\r\nvar G__21422 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,result);\r\ncontext \x3d G__21421;\r\nacc \x3d G__21422;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.pprint.unzip_map \x3d (function cljs$pprint$unzip_map(m){\r\n\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4652__auto__ \x3d (function cljs$pprint$unzip_map_$_iter__16953(s__16954){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s__16954__$1 \x3d s__16954;\r\nwhile(true){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(s__16954__$1);\r\nif(temp__5753__auto__){\r\nvar s__16954__$2 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__16954__$2)){\r\nvar c__4650__auto__ \x3d cljs.core.chunk_first(s__16954__$2);\r\nvar size__4651__auto__ \x3d cljs.core.count(c__4650__auto__);\r\nvar b__16956 \x3d cljs.core.chunk_buffer(size__4651__auto__);\r\nif((function (){var i__16955 \x3d (0);\r\nwhile(true){\r\nif((i__16955 \x3c size__4651__auto__)){\r\nvar vec__16960 \x3d cljs.core._nth(c__4650__auto__,i__16955);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16960,(0),null);\r\nvar vec__16963 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16960,(1),null);\r\nvar v1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16963,(0),null);\r\nvar v2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16963,(1),null);\r\ncljs.core.chunk_append(b__16956,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v1], null));\r\n\r\nvar G__21430 \x3d (i__16955 + (1));\r\ni__16955 \x3d G__21430;\r\ncontinue;\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__16956),cljs$pprint$unzip_map_$_iter__16953(cljs.core.chunk_rest(s__16954__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__16956),null);\r\n}\r\n} else {\r\nvar vec__16967 \x3d cljs.core.first(s__16954__$2);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16967,(0),null);\r\nvar vec__16970 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16967,(1),null);\r\nvar v1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16970,(0),null);\r\nvar v2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16970,(1),null);\r\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v1], null),cljs$pprint$unzip_map_$_iter__16953(cljs.core.rest(s__16954__$2)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}),null,null));\r\n});\r\nreturn iter__4652__auto__(m);\r\n})()),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4652__auto__ \x3d (function cljs$pprint$unzip_map_$_iter__16973(s__16974){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s__16974__$1 \x3d s__16974;\r\nwhile(true){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(s__16974__$1);\r\nif(temp__5753__auto__){\r\nvar s__16974__$2 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__16974__$2)){\r\nvar c__4650__auto__ \x3d cljs.core.chunk_first(s__16974__$2);\r\nvar size__4651__auto__ \x3d cljs.core.count(c__4650__auto__);\r\nvar b__16976 \x3d cljs.core.chunk_buffer(size__4651__auto__);\r\nif((function (){var i__16975 \x3d (0);\r\nwhile(true){\r\nif((i__16975 \x3c size__4651__auto__)){\r\nvar vec__16978 \x3d cljs.core._nth(c__4650__auto__,i__16975);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16978,(0),null);\r\nvar vec__16981 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16978,(1),null);\r\nvar v1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16981,(0),null);\r\nvar v2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16981,(1),null);\r\ncljs.core.chunk_append(b__16976,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v2], null));\r\n\r\nvar G__21441 \x3d (i__16975 + (1));\r\ni__16975 \x3d G__21441;\r\ncontinue;\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__16976),cljs$pprint$unzip_map_$_iter__16973(cljs.core.chunk_rest(s__16974__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__16976),null);\r\n}\r\n} else {\r\nvar vec__16985 \x3d cljs.core.first(s__16974__$2);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16985,(0),null);\r\nvar vec__16988 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16985,(1),null);\r\nvar v1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16988,(0),null);\r\nvar v2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16988,(1),null);\r\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v2], null),cljs$pprint$unzip_map_$_iter__16973(cljs.core.rest(s__16974__$2)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}),null,null));\r\n});\r\nreturn iter__4652__auto__(m);\r\n})())], null);\r\n});\r\ncljs.pprint.tuple_map \x3d (function cljs$pprint$tuple_map(m,v1){\r\n\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4652__auto__ \x3d (function cljs$pprint$tuple_map_$_iter__16993(s__16994){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s__16994__$1 \x3d s__16994;\r\nwhile(true){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(s__16994__$1);\r\nif(temp__5753__auto__){\r\nvar s__16994__$2 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__16994__$2)){\r\nvar c__4650__auto__ \x3d cljs.core.chunk_first(s__16994__$2);\r\nvar size__4651__auto__ \x3d cljs.core.count(c__4650__auto__);\r\nvar b__16996 \x3d cljs.core.chunk_buffer(size__4651__auto__);\r\nif((function (){var i__16995 \x3d (0);\r\nwhile(true){\r\nif((i__16995 \x3c size__4651__auto__)){\r\nvar vec__16999 \x3d cljs.core._nth(c__4650__auto__,i__16995);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16999,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16999,(1),null);\r\ncljs.core.chunk_append(b__16996,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v,v1], null)], null));\r\n\r\nvar G__21457 \x3d (i__16995 + (1));\r\ni__16995 \x3d G__21457;\r\ncontinue;\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__16996),cljs$pprint$tuple_map_$_iter__16993(cljs.core.chunk_rest(s__16994__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__16996),null);\r\n}\r\n} else {\r\nvar vec__17003 \x3d cljs.core.first(s__16994__$2);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17003,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17003,(1),null);\r\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v,v1], null)], null),cljs$pprint$tuple_map_$_iter__16993(cljs.core.rest(s__16994__$2)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}),null,null));\r\n});\r\nreturn iter__4652__auto__(m);\r\n})());\r\n});\r\ncljs.pprint.rtrim \x3d (function cljs$pprint$rtrim(s,c){\r\n\r\nvar len \x3d cljs.core.count(s);\r\nif((((len \x3e (0))) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(s,(cljs.core.count(s) - (1))),c)))){\r\nvar n \x3d (len - (1));\r\nwhile(true){\r\nif((n \x3c (0))){\r\nreturn \x22\x22;\r\n} else {\r\nif((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(s,n),c)))){\r\nreturn cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),(n + (1)));\r\n} else {\r\nvar G__21460 \x3d (n - (1));\r\nn \x3d G__21460;\r\ncontinue;\r\n\r\n}\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn s;\r\n}\r\n});\r\ncljs.pprint.ltrim \x3d (function cljs$pprint$ltrim(s,c){\r\n\r\nvar len \x3d cljs.core.count(s);\r\nif((((len \x3e (0))) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(s,(0)),c)))){\r\nvar n \x3d (0);\r\nwhile(true){\r\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(n,len)) || ((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(s,n),c)))))){\r\nreturn cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,n);\r\n} else {\r\nvar G__21462 \x3d (n + (1));\r\nn \x3d G__21462;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn s;\r\n}\r\n});\r\ncljs.pprint.prefix_count \x3d (function cljs$pprint$prefix_count(aseq,val){\r\n\r\nvar test \x3d ((cljs.core.coll_QMARK_(val))?cljs.core.set(val):cljs.core.PersistentHashSet.createAsIfByAssoc([val]));\r\nvar pos \x3d (0);\r\nwhile(true){\r\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(pos,cljs.core.count(aseq))) || (cljs.core.not((function (){var G__17018 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$2(aseq,pos);\r\nreturn (test.cljs$core$IFn$_invoke$arity$1 ? test.cljs$core$IFn$_invoke$arity$1(G__17018) : test.call(null,G__17018));\r\n})())))){\r\nreturn pos;\r\n} else {\r\nvar G__21468 \x3d (pos + (1));\r\npos \x3d G__21468;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\n\r\n/**\r\n * @interface\r\n */\r\ncljs.pprint.IPrettyFlush \x3d function(){};\r\n\r\nvar cljs$pprint$IPrettyFlush$_ppflush$dyn_21469 \x3d (function (pp){\r\nvar x__4550__auto__ \x3d (((pp \x3d\x3d null))?null:pp);\r\nvar m__4551__auto__ \x3d (cljs.pprint._ppflush[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(pp) : m__4551__auto__.call(null,pp));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.pprint._ppflush[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(pp) : m__4549__auto__.call(null,pp));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IPrettyFlush.-ppflush\x22,pp);\r\n}\r\n}\r\n});\r\ncljs.pprint._ppflush \x3d (function cljs$pprint$_ppflush(pp){\r\nif((((!((pp \x3d\x3d null)))) \x26\x26 ((!((pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1 \x3d\x3d null)))))){\r\nreturn pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1(pp);\r\n} else {\r\nreturn cljs$pprint$IPrettyFlush$_ppflush$dyn_21469(pp);\r\n}\r\n});\r\n\r\ncljs.pprint._STAR_default_page_width_STAR_ \x3d (72);\r\ncljs.pprint.get_field \x3d (function cljs$pprint$get_field(this$,sym){\r\nvar G__17026 \x3d cljs.core.deref(cljs.core.deref(this$));\r\nreturn (sym.cljs$core$IFn$_invoke$arity$1 ? sym.cljs$core$IFn$_invoke$arity$1(G__17026) : sym.call(null,G__17026));\r\n});\r\ncljs.pprint.set_field \x3d (function cljs$pprint$set_field(this$,sym,new_val){\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,sym,new_val);\r\n});\r\ncljs.pprint.get_column \x3d (function cljs$pprint$get_column(this$){\r\nreturn cljs.pprint.get_field(this$,new cljs.core.Keyword(null,\x22cur\x22,\x22cur\x22,1153190599));\r\n});\r\ncljs.pprint.get_line \x3d (function cljs$pprint$get_line(this$){\r\nreturn cljs.pprint.get_field(this$,new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235));\r\n});\r\ncljs.pprint.get_max_column \x3d (function cljs$pprint$get_max_column(this$){\r\nreturn cljs.pprint.get_field(this$,new cljs.core.Keyword(null,\x22max\x22,\x22max\x22,61366548));\r\n});\r\ncljs.pprint.set_max_column \x3d (function cljs$pprint$set_max_column(this$,new_max){\r\ncljs.pprint.set_field(this$,new cljs.core.Keyword(null,\x22max\x22,\x22max\x22,61366548),new_max);\r\n\r\nreturn null;\r\n});\r\ncljs.pprint.get_writer \x3d (function cljs$pprint$get_writer(this$){\r\nreturn cljs.pprint.get_field(this$,new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322));\r\n});\r\ncljs.pprint.c_write_char \x3d (function cljs$pprint$c_write_char(this$,c){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(c,\x22\\n\x22)){\r\ncljs.pprint.set_field(this$,new cljs.core.Keyword(null,\x22cur\x22,\x22cur\x22,1153190599),(0));\r\n\r\ncljs.pprint.set_field(this$,new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),(cljs.pprint.get_field(this$,new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235)) + (1)));\r\n} else {\r\ncljs.pprint.set_field(this$,new cljs.core.Keyword(null,\x22cur\x22,\x22cur\x22,1153190599),(cljs.pprint.get_field(this$,new cljs.core.Keyword(null,\x22cur\x22,\x22cur\x22,1153190599)) + (1)));\r\n}\r\n\r\nreturn cljs.core._write(cljs.pprint.get_field(this$,new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322)),c);\r\n});\r\ncljs.pprint.column_writer \x3d (function cljs$pprint$column_writer(var_args){\r\nvar G__17054 \x3d arguments.length;\r\nswitch (G__17054) {\r\ncase 1:\r\nreturn cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1 \x3d (function (writer){\r\nreturn cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(writer,cljs.pprint._STAR_default_page_width_STAR_);\r\n}));\r\n\r\n(cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2 \x3d (function (writer,max_columns){\r\nvar fields \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22max\x22,\x22max\x22,61366548),max_columns,new cljs.core.Keyword(null,\x22cur\x22,\x22cur\x22,1153190599),(0),new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),(0),new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322),writer], null));\r\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint.t_cljs$pprint17056 !\x3d\x3d \x27undefined\x27)){\r\n} else {\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IWriter}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.IDeref}\r\n * @implements {cljs.core.IWithMeta}\r\n*/\r\ncljs.pprint.t_cljs$pprint17056 \x3d (function (writer,max_columns,fields,meta17057){\r\nthis.writer \x3d writer;\r\nthis.max_columns \x3d max_columns;\r\nthis.fields \x3d fields;\r\nthis.meta17057 \x3d meta17057;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 1074167808;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.pprint.t_cljs$pprint17056.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_17058,meta17057__$1){\r\nvar self__ \x3d this;\r\nvar _17058__$1 \x3d this;\r\nreturn (new cljs.pprint.t_cljs$pprint17056(self__.writer,self__.max_columns,self__.fields,meta17057__$1));\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint17056.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_17058){\r\nvar self__ \x3d this;\r\nvar _17058__$1 \x3d this;\r\nreturn self__.meta17057;\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint17056.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn self__.fields;\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint17056.prototype.cljs$core$IWriter$_flush$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn cljs.core._flush(self__.writer);\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint17056.prototype.cljs$core$IWriter$_write$arity$2 \x3d (function (this$,x){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nvar pred__17063 \x3d cljs.core._EQ_;\r\nvar expr__17064 \x3d cljs.core.type(x);\r\nif(cljs.core.truth_((pred__17063.cljs$core$IFn$_invoke$arity$2 ? pred__17063.cljs$core$IFn$_invoke$arity$2(String,expr__17064) : pred__17063.call(null,String,expr__17064)))){\r\nvar s \x3d x;\r\nvar nl \x3d s.lastIndexOf(\x22\\n\x22);\r\nif((nl \x3c (0))){\r\ncljs.pprint.set_field(this$__$1,new cljs.core.Keyword(null,\x22cur\x22,\x22cur\x22,1153190599),(cljs.pprint.get_field(this$__$1,new cljs.core.Keyword(null,\x22cur\x22,\x22cur\x22,1153190599)) + cljs.core.count(s)));\r\n} else {\r\ncljs.pprint.set_field(this$__$1,new cljs.core.Keyword(null,\x22cur\x22,\x22cur\x22,1153190599),((cljs.core.count(s) - nl) - (1)));\r\n\r\ncljs.pprint.set_field(this$__$1,new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),(cljs.pprint.get_field(this$__$1,new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235)) + cljs.core.count(cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__17052_SHARP_){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p1__17052_SHARP_,\x22\\n\x22);\r\n}),s))));\r\n}\r\n\r\nreturn cljs.core._write(cljs.pprint.get_field(this$__$1,new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322)),s);\r\n} else {\r\nif(cljs.core.truth_((pred__17063.cljs$core$IFn$_invoke$arity$2 ? pred__17063.cljs$core$IFn$_invoke$arity$2(Number,expr__17064) : pred__17063.call(null,Number,expr__17064)))){\r\nreturn cljs.pprint.c_write_char(this$__$1,x);\r\n} else {\r\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__17064)].join(\x27\x27)));\r\n}\r\n}\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint17056.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22writer\x22,\x22writer\x22,1362963291,null),new cljs.core.Symbol(null,\x22max-columns\x22,\x22max-columns\x22,-912112507,null),new cljs.core.Symbol(null,\x22fields\x22,\x22fields\x22,-291534703,null),new cljs.core.Symbol(null,\x22meta17057\x22,\x22meta17057\x22,159444811,null)], null);\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint17056.cljs$lang$type \x3d true);\r\n\r\n(cljs.pprint.t_cljs$pprint17056.cljs$lang$ctorStr \x3d \x22cljs.pprint/t_cljs$pprint17056\x22);\r\n\r\n(cljs.pprint.t_cljs$pprint17056.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.pprint/t_cljs$pprint17056\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.pprint/t_cljs$pprint17056.\r\n */\r\ncljs.pprint.__GT_t_cljs$pprint17056 \x3d (function cljs$pprint$__GT_t_cljs$pprint17056(writer__$1,max_columns__$1,fields__$1,meta17057){\r\nreturn (new cljs.pprint.t_cljs$pprint17056(writer__$1,max_columns__$1,fields__$1,meta17057));\r\n});\r\n\r\n}\r\n\r\nreturn (new cljs.pprint.t_cljs$pprint17056(writer,max_columns,fields,cljs.core.PersistentArrayMap.EMPTY));\r\n}));\r\n\r\n(cljs.pprint.column_writer.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IRecord}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ncljs.pprint.logical_block \x3d (function (parent,section,start_col,indent,done_nl,intra_block_nl,prefix,per_line_prefix,suffix,logical_block_callback,__meta,__extmap,__hash){\r\nthis.parent \x3d parent;\r\nthis.section \x3d section;\r\nthis.start_col \x3d start_col;\r\nthis.indent \x3d indent;\r\nthis.done_nl \x3d done_nl;\r\nthis.intra_block_nl \x3d intra_block_nl;\r\nthis.prefix \x3d prefix;\r\nthis.per_line_prefix \x3d per_line_prefix;\r\nthis.suffix \x3d suffix;\r\nthis.logical_block_callback \x3d logical_block_callback;\r\nthis.__meta \x3d __meta;\r\nthis.__extmap \x3d __extmap;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\r\n});\r\n(cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__4502__auto__,k__4503__auto__){\r\nvar self__ \x3d this;\r\nvar this__4502__auto____$1 \x3d this;\r\nreturn this__4502__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4503__auto__,null);\r\n}));\r\n\r\n(cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__4504__auto__,k17070,else__4505__auto__){\r\nvar self__ \x3d this;\r\nvar this__4504__auto____$1 \x3d this;\r\nvar G__17074 \x3d k17070;\r\nvar G__17074__$1 \x3d (((G__17074 instanceof cljs.core.Keyword))?G__17074.fqn:null);\r\nswitch (G__17074__$1) {\r\ncase \x22parent\x22:\r\nreturn self__.parent;\r\n\r\nbreak;\r\ncase \x22section\x22:\r\nreturn self__.section;\r\n\r\nbreak;\r\ncase \x22start-col\x22:\r\nreturn self__.start_col;\r\n\r\nbreak;\r\ncase \x22indent\x22:\r\nreturn self__.indent;\r\n\r\nbreak;\r\ncase \x22done-nl\x22:\r\nreturn self__.done_nl;\r\n\r\nbreak;\r\ncase \x22intra-block-nl\x22:\r\nreturn self__.intra_block_nl;\r\n\r\nbreak;\r\ncase \x22prefix\x22:\r\nreturn self__.prefix;\r\n\r\nbreak;\r\ncase \x22per-line-prefix\x22:\r\nreturn self__.per_line_prefix;\r\n\r\nbreak;\r\ncase \x22suffix\x22:\r\nreturn self__.suffix;\r\n\r\nbreak;\r\ncase \x22logical-block-callback\x22:\r\nreturn self__.logical_block_callback;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k17070,else__4505__auto__);\r\n\r\n}\r\n}));\r\n\r\n(cljs.pprint.logical_block.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__4522__auto__,f__4523__auto__,init__4524__auto__){\r\nvar self__ \x3d this;\r\nvar this__4522__auto____$1 \x3d this;\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4525__auto__,p__17075){\r\nvar vec__17076 \x3d p__17075;\r\nvar k__4526__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17076,(0),null);\r\nvar v__4527__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17076,(1),null);\r\nreturn (f__4523__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4523__auto__.cljs$core$IFn$_invoke$arity$3(ret__4525__auto__,k__4526__auto__,v__4527__auto__) : f__4523__auto__.call(null,ret__4525__auto__,k__4526__auto__,v__4527__auto__));\r\n}),init__4524__auto__,this__4522__auto____$1);\r\n}));\r\n\r\n(cljs.pprint.logical_block.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__4517__auto__,writer__4518__auto__,opts__4519__auto__){\r\nvar self__ \x3d this;\r\nvar this__4517__auto____$1 \x3d this;\r\nvar pr_pair__4520__auto__ \x3d (function (keyval__4521__auto__){\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__4519__auto__,keyval__4521__auto__);\r\n});\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,pr_pair__4520__auto__,\x22#cljs.pprint.logical-block{\x22,\x22, \x22,\x22}\x22,opts__4519__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779),self__.parent],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22section\x22,\x22section\x22,-300141526),self__.section],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143),self__.start_col],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125),self__.indent],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340),self__.done_nl],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,1808826875),self__.intra_block_nl],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22prefix\x22,\x22prefix\x22,-265908465),self__.prefix],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22per-line-prefix\x22,\x22per-line-prefix\x22,846941813),self__.per_line_prefix],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22suffix\x22,\x22suffix\x22,367373057),self__.suffix],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194),self__.logical_block_callback],null))], null),self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.logical_block.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__17069){\r\nvar self__ \x3d this;\r\nvar G__17069__$1 \x3d this;\r\nreturn (new cljs.core.RecordIter((0),G__17069__$1,10,new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779),new cljs.core.Keyword(null,\x22section\x22,\x22section\x22,-300141526),new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143),new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125),new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340),new cljs.core.Keyword(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,1808826875),new cljs.core.Keyword(null,\x22prefix\x22,\x22prefix\x22,-265908465),new cljs.core.Keyword(null,\x22per-line-prefix\x22,\x22per-line-prefix\x22,846941813),new cljs.core.Keyword(null,\x22suffix\x22,\x22suffix\x22,367373057),new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\r\n}));\r\n\r\n(cljs.pprint.logical_block.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__4500__auto__){\r\nvar self__ \x3d this;\r\nvar this__4500__auto____$1 \x3d this;\r\nreturn self__.__meta;\r\n}));\r\n\r\n(cljs.pprint.logical_block.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__4497__auto__){\r\nvar self__ \x3d this;\r\nvar this__4497__auto____$1 \x3d this;\r\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,self__.start_col,self__.indent,self__.done_nl,self__.intra_block_nl,self__.prefix,self__.per_line_prefix,self__.suffix,self__.logical_block_callback,self__.__meta,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(cljs.pprint.logical_block.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__4506__auto__){\r\nvar self__ \x3d this;\r\nvar this__4506__auto____$1 \x3d this;\r\nreturn (10 + cljs.core.count(self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.logical_block.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__4498__auto__){\r\nvar self__ \x3d this;\r\nvar this__4498__auto____$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d (function (coll__4499__auto__){\r\nreturn (1977012399 ^ cljs.core.hash_unordered_coll(coll__4499__auto__));\r\n})(this__4498__auto____$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.pprint.logical_block.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this17071,other17072){\r\nvar self__ \x3d this;\r\nvar this17071__$1 \x3d this;\r\nreturn (((!((other17072 \x3d\x3d null)))) \x26\x26 ((((this17071__$1.constructor \x3d\x3d\x3d other17072.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17071__$1.parent,other17072.parent)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17071__$1.section,other17072.section)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17071__$1.start_col,other17072.start_col)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17071__$1.indent,other17072.indent)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17071__$1.done_nl,other17072.done_nl)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17071__$1.intra_block_nl,other17072.intra_block_nl)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17071__$1.prefix,other17072.prefix)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17071__$1.per_line_prefix,other17072.per_line_prefix)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17071__$1.suffix,other17072.suffix)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17071__$1.logical_block_callback,other17072.logical_block_callback)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17071__$1.__extmap,other17072.__extmap)))))))))))))))))))))))));\r\n}));\r\n\r\n(cljs.pprint.logical_block.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__4512__auto__,k__4513__auto__){\r\nvar self__ \x3d this;\r\nvar this__4512__auto____$1 \x3d this;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null,\x22suffix\x22,\x22suffix\x22,367373057),null,new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125),null,new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779),null,new cljs.core.Keyword(null,\x22section\x22,\x22section\x22,-300141526),null,new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340),null,new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143),null,new cljs.core.Keyword(null,\x22prefix\x22,\x22prefix\x22,-265908465),null,new cljs.core.Keyword(null,\x22per-line-prefix\x22,\x22per-line-prefix\x22,846941813),null,new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194),null,new cljs.core.Keyword(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,1808826875),null], null), null),k__4513__auto__)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4512__auto____$1),self__.__meta),k__4513__auto__);\r\n} else {\r\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,self__.start_col,self__.indent,self__.done_nl,self__.intra_block_nl,self__.prefix,self__.per_line_prefix,self__.suffix,self__.logical_block_callback,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4513__auto__)),null));\r\n}\r\n}));\r\n\r\n(cljs.pprint.logical_block.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__4509__auto__,k17070){\r\nvar self__ \x3d this;\r\nvar this__4509__auto____$1 \x3d this;\r\nvar G__17082 \x3d k17070;\r\nvar G__17082__$1 \x3d (((G__17082 instanceof cljs.core.Keyword))?G__17082.fqn:null);\r\nswitch (G__17082__$1) {\r\ncase \x22parent\x22:\r\ncase \x22section\x22:\r\ncase \x22start-col\x22:\r\ncase \x22indent\x22:\r\ncase \x22done-nl\x22:\r\ncase \x22intra-block-nl\x22:\r\ncase \x22prefix\x22:\r\ncase \x22per-line-prefix\x22:\r\ncase \x22suffix\x22:\r\ncase \x22logical-block-callback\x22:\r\nreturn true;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.contains_QMARK_(self__.__extmap,k17070);\r\n\r\n}\r\n}));\r\n\r\n(cljs.pprint.logical_block.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__4510__auto__,k__4511__auto__,G__17069){\r\nvar self__ \x3d this;\r\nvar this__4510__auto____$1 \x3d this;\r\nvar pred__17083 \x3d cljs.core.keyword_identical_QMARK_;\r\nvar expr__17084 \x3d k__4511__auto__;\r\nif(cljs.core.truth_((pred__17083.cljs$core$IFn$_invoke$arity$2 ? pred__17083.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779),expr__17084) : pred__17083.call(null,new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779),expr__17084)))){\r\nreturn (new cljs.pprint.logical_block(G__17069,self__.section,self__.start_col,self__.indent,self__.done_nl,self__.intra_block_nl,self__.prefix,self__.per_line_prefix,self__.suffix,self__.logical_block_callback,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17083.cljs$core$IFn$_invoke$arity$2 ? pred__17083.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22section\x22,\x22section\x22,-300141526),expr__17084) : pred__17083.call(null,new cljs.core.Keyword(null,\x22section\x22,\x22section\x22,-300141526),expr__17084)))){\r\nreturn (new cljs.pprint.logical_block(self__.parent,G__17069,self__.start_col,self__.indent,self__.done_nl,self__.intra_block_nl,self__.prefix,self__.per_line_prefix,self__.suffix,self__.logical_block_callback,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17083.cljs$core$IFn$_invoke$arity$2 ? pred__17083.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143),expr__17084) : pred__17083.call(null,new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143),expr__17084)))){\r\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,G__17069,self__.indent,self__.done_nl,self__.intra_block_nl,self__.prefix,self__.per_line_prefix,self__.suffix,self__.logical_block_callback,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17083.cljs$core$IFn$_invoke$arity$2 ? pred__17083.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125),expr__17084) : pred__17083.call(null,new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125),expr__17084)))){\r\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,self__.start_col,G__17069,self__.done_nl,self__.intra_block_nl,self__.prefix,self__.per_line_prefix,self__.suffix,self__.logical_block_callback,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17083.cljs$core$IFn$_invoke$arity$2 ? pred__17083.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340),expr__17084) : pred__17083.call(null,new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340),expr__17084)))){\r\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,self__.start_col,self__.indent,G__17069,self__.intra_block_nl,self__.prefix,self__.per_line_prefix,self__.suffix,self__.logical_block_callback,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17083.cljs$core$IFn$_invoke$arity$2 ? pred__17083.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,1808826875),expr__17084) : pred__17083.call(null,new cljs.core.Keyword(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,1808826875),expr__17084)))){\r\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,self__.start_col,self__.indent,self__.done_nl,G__17069,self__.prefix,self__.per_line_prefix,self__.suffix,self__.logical_block_callback,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17083.cljs$core$IFn$_invoke$arity$2 ? pred__17083.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22prefix\x22,\x22prefix\x22,-265908465),expr__17084) : pred__17083.call(null,new cljs.core.Keyword(null,\x22prefix\x22,\x22prefix\x22,-265908465),expr__17084)))){\r\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,self__.start_col,self__.indent,self__.done_nl,self__.intra_block_nl,G__17069,self__.per_line_prefix,self__.suffix,self__.logical_block_callback,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17083.cljs$core$IFn$_invoke$arity$2 ? pred__17083.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22per-line-prefix\x22,\x22per-line-prefix\x22,846941813),expr__17084) : pred__17083.call(null,new cljs.core.Keyword(null,\x22per-line-prefix\x22,\x22per-line-prefix\x22,846941813),expr__17084)))){\r\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,self__.start_col,self__.indent,self__.done_nl,self__.intra_block_nl,self__.prefix,G__17069,self__.suffix,self__.logical_block_callback,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17083.cljs$core$IFn$_invoke$arity$2 ? pred__17083.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22suffix\x22,\x22suffix\x22,367373057),expr__17084) : pred__17083.call(null,new cljs.core.Keyword(null,\x22suffix\x22,\x22suffix\x22,367373057),expr__17084)))){\r\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,self__.start_col,self__.indent,self__.done_nl,self__.intra_block_nl,self__.prefix,self__.per_line_prefix,G__17069,self__.logical_block_callback,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17083.cljs$core$IFn$_invoke$arity$2 ? pred__17083.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194),expr__17084) : pred__17083.call(null,new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194),expr__17084)))){\r\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,self__.start_col,self__.indent,self__.done_nl,self__.intra_block_nl,self__.prefix,self__.per_line_prefix,self__.suffix,G__17069,self__.__meta,self__.__extmap,null));\r\n} else {\r\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,self__.start_col,self__.indent,self__.done_nl,self__.intra_block_nl,self__.prefix,self__.per_line_prefix,self__.suffix,self__.logical_block_callback,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4511__auto__,G__17069),null));\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.pprint.logical_block.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__4515__auto__){\r\nvar self__ \x3d this;\r\nvar this__4515__auto____$1 \x3d this;\r\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779),self__.parent,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22section\x22,\x22section\x22,-300141526),self__.section,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143),self__.start_col,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125),self__.indent,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340),self__.done_nl,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,1808826875),self__.intra_block_nl,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22prefix\x22,\x22prefix\x22,-265908465),self__.prefix,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22per-line-prefix\x22,\x22per-line-prefix\x22,846941813),self__.per_line_prefix,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22suffix\x22,\x22suffix\x22,367373057),self__.suffix,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194),self__.logical_block_callback,null))], null),self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.logical_block.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__4501__auto__,G__17069){\r\nvar self__ \x3d this;\r\nvar this__4501__auto____$1 \x3d this;\r\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,self__.start_col,self__.indent,self__.done_nl,self__.intra_block_nl,self__.prefix,self__.per_line_prefix,self__.suffix,self__.logical_block_callback,G__17069,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(cljs.pprint.logical_block.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__4507__auto__,entry__4508__auto__){\r\nvar self__ \x3d this;\r\nvar this__4507__auto____$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(entry__4508__auto__)){\r\nreturn this__4507__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4508__auto__,(0)),cljs.core._nth(entry__4508__auto__,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4507__auto____$1,entry__4508__auto__);\r\n}\r\n}));\r\n\r\n(cljs.pprint.logical_block.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22parent\x22,\x22parent\x22,761652748,null),new cljs.core.Symbol(null,\x22section\x22,\x22section\x22,1340390001,null),new cljs.core.Symbol(null,\x22start-col\x22,\x22start-col\x22,-1986355626,null),new cljs.core.Symbol(null,\x22indent\x22,\x22indent\x22,1492331402,null),new cljs.core.Symbol(null,\x22done-nl\x22,\x22done-nl\x22,1259507187,null),new cljs.core.Symbol(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,-845608894,null),new cljs.core.Symbol(null,\x22prefix\x22,\x22prefix\x22,1374623062,null),new cljs.core.Symbol(null,\x22per-line-prefix\x22,\x22per-line-prefix\x22,-1807493956,null),new cljs.core.Symbol(null,\x22suffix\x22,\x22suffix\x22,2007904584,null),new cljs.core.Symbol(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,-1041744575,null)], null);\r\n}));\r\n\r\n(cljs.pprint.logical_block.cljs$lang$type \x3d true);\r\n\r\n(cljs.pprint.logical_block.cljs$lang$ctorPrSeq \x3d (function (this__4546__auto__){\r\nreturn (new cljs.core.List(null,\x22cljs.pprint/logical-block\x22,null,(1),null));\r\n}));\r\n\r\n(cljs.pprint.logical_block.cljs$lang$ctorPrWriter \x3d (function (this__4546__auto__,writer__4547__auto__){\r\nreturn cljs.core._write(writer__4547__auto__,\x22cljs.pprint/logical-block\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.pprint/logical-block.\r\n */\r\ncljs.pprint.__GT_logical_block \x3d (function cljs$pprint$__GT_logical_block(parent,section,start_col,indent,done_nl,intra_block_nl,prefix,per_line_prefix,suffix,logical_block_callback){\r\nreturn (new cljs.pprint.logical_block(parent,section,start_col,indent,done_nl,intra_block_nl,prefix,per_line_prefix,suffix,logical_block_callback,null,null,null));\r\n});\r\n\r\n/**\r\n * Factory function for cljs.pprint/logical-block, taking a map of keywords to field values.\r\n */\r\ncljs.pprint.map__GT_logical_block \x3d (function cljs$pprint$map__GT_logical_block(G__17073){\r\nvar extmap__4542__auto__ \x3d (function (){var G__17089 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__17073,new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22section\x22,\x22section\x22,-300141526),new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143),new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125),new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340),new cljs.core.Keyword(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,1808826875),new cljs.core.Keyword(null,\x22prefix\x22,\x22prefix\x22,-265908465),new cljs.core.Keyword(null,\x22per-line-prefix\x22,\x22per-line-prefix\x22,846941813),new cljs.core.Keyword(null,\x22suffix\x22,\x22suffix\x22,367373057),new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194)], 0));\r\nif(cljs.core.record_QMARK_(G__17073)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__17089);\r\n} else {\r\nreturn G__17089;\r\n}\r\n})();\r\nreturn (new cljs.pprint.logical_block(new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779).cljs$core$IFn$_invoke$arity$1(G__17073),new cljs.core.Keyword(null,\x22section\x22,\x22section\x22,-300141526).cljs$core$IFn$_invoke$arity$1(G__17073),new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143).cljs$core$IFn$_invoke$arity$1(G__17073),new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125).cljs$core$IFn$_invoke$arity$1(G__17073),new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340).cljs$core$IFn$_invoke$arity$1(G__17073),new cljs.core.Keyword(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,1808826875).cljs$core$IFn$_invoke$arity$1(G__17073),new cljs.core.Keyword(null,\x22prefix\x22,\x22prefix\x22,-265908465).cljs$core$IFn$_invoke$arity$1(G__17073),new cljs.core.Keyword(null,\x22per-line-prefix\x22,\x22per-line-prefix\x22,846941813).cljs$core$IFn$_invoke$arity$1(G__17073),new cljs.core.Keyword(null,\x22suffix\x22,\x22suffix\x22,367373057).cljs$core$IFn$_invoke$arity$1(G__17073),new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194).cljs$core$IFn$_invoke$arity$1(G__17073),null,cljs.core.not_empty(extmap__4542__auto__),null));\r\n});\r\n\r\ncljs.pprint.ancestor_QMARK_ \x3d (function cljs$pprint$ancestor_QMARK_(parent,child){\r\nvar child__$1 \x3d new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779).cljs$core$IFn$_invoke$arity$1(child);\r\nwhile(true){\r\nif((child__$1 \x3d\x3d null)){\r\nreturn false;\r\n} else {\r\nif((parent \x3d\x3d\x3d child__$1)){\r\nreturn true;\r\n} else {\r\nvar G__21564 \x3d new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779).cljs$core$IFn$_invoke$arity$1(child__$1);\r\nchild__$1 \x3d G__21564;\r\ncontinue;\r\n\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.pprint.buffer_length \x3d (function cljs$pprint$buffer_length(l){\r\nvar l__$1 \x3d cljs.core.seq(l);\r\nif(l__$1){\r\nreturn (new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926).cljs$core$IFn$_invoke$arity$1(cljs.core.last(l__$1)) - new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086).cljs$core$IFn$_invoke$arity$1(cljs.core.first(l__$1)));\r\n} else {\r\nreturn (0);\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IRecord}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ncljs.pprint.buffer_blob \x3d (function (type_tag,data,trailing_white_space,start_pos,end_pos,__meta,__extmap,__hash){\r\nthis.type_tag \x3d type_tag;\r\nthis.data \x3d data;\r\nthis.trailing_white_space \x3d trailing_white_space;\r\nthis.start_pos \x3d start_pos;\r\nthis.end_pos \x3d end_pos;\r\nthis.__meta \x3d __meta;\r\nthis.__extmap \x3d __extmap;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\r\n});\r\n(cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__4502__auto__,k__4503__auto__){\r\nvar self__ \x3d this;\r\nvar this__4502__auto____$1 \x3d this;\r\nreturn this__4502__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4503__auto__,null);\r\n}));\r\n\r\n(cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__4504__auto__,k17097,else__4505__auto__){\r\nvar self__ \x3d this;\r\nvar this__4504__auto____$1 \x3d this;\r\nvar G__17105 \x3d k17097;\r\nvar G__17105__$1 \x3d (((G__17105 instanceof cljs.core.Keyword))?G__17105.fqn:null);\r\nswitch (G__17105__$1) {\r\ncase \x22type-tag\x22:\r\nreturn self__.type_tag;\r\n\r\nbreak;\r\ncase \x22data\x22:\r\nreturn self__.data;\r\n\r\nbreak;\r\ncase \x22trailing-white-space\x22:\r\nreturn self__.trailing_white_space;\r\n\r\nbreak;\r\ncase \x22start-pos\x22:\r\nreturn self__.start_pos;\r\n\r\nbreak;\r\ncase \x22end-pos\x22:\r\nreturn self__.end_pos;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k17097,else__4505__auto__);\r\n\r\n}\r\n}));\r\n\r\n(cljs.pprint.buffer_blob.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__4522__auto__,f__4523__auto__,init__4524__auto__){\r\nvar self__ \x3d this;\r\nvar this__4522__auto____$1 \x3d this;\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4525__auto__,p__17106){\r\nvar vec__17107 \x3d p__17106;\r\nvar k__4526__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17107,(0),null);\r\nvar v__4527__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17107,(1),null);\r\nreturn (f__4523__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4523__auto__.cljs$core$IFn$_invoke$arity$3(ret__4525__auto__,k__4526__auto__,v__4527__auto__) : f__4523__auto__.call(null,ret__4525__auto__,k__4526__auto__,v__4527__auto__));\r\n}),init__4524__auto__,this__4522__auto____$1);\r\n}));\r\n\r\n(cljs.pprint.buffer_blob.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__4517__auto__,writer__4518__auto__,opts__4519__auto__){\r\nvar self__ \x3d this;\r\nvar this__4517__auto____$1 \x3d this;\r\nvar pr_pair__4520__auto__ \x3d (function (keyval__4521__auto__){\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__4519__auto__,keyval__4521__auto__);\r\n});\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,pr_pair__4520__auto__,\x22#cljs.pprint.buffer-blob{\x22,\x22, \x22,\x22}\x22,opts__4519__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),self__.type_tag],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22data\x22,\x22data\x22,-232669377),self__.data],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),self__.trailing_white_space],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),self__.start_pos],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),self__.end_pos],null))], null),self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__17096){\r\nvar self__ \x3d this;\r\nvar G__17096__$1 \x3d this;\r\nreturn (new cljs.core.RecordIter((0),G__17096__$1,5,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),new cljs.core.Keyword(null,\x22data\x22,\x22data\x22,-232669377),new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\r\n}));\r\n\r\n(cljs.pprint.buffer_blob.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__4500__auto__){\r\nvar self__ \x3d this;\r\nvar this__4500__auto____$1 \x3d this;\r\nreturn self__.__meta;\r\n}));\r\n\r\n(cljs.pprint.buffer_blob.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__4497__auto__){\r\nvar self__ \x3d this;\r\nvar this__4497__auto____$1 \x3d this;\r\nreturn (new cljs.pprint.buffer_blob(self__.type_tag,self__.data,self__.trailing_white_space,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(cljs.pprint.buffer_blob.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__4506__auto__){\r\nvar self__ \x3d this;\r\nvar this__4506__auto____$1 \x3d this;\r\nreturn (5 + cljs.core.count(self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.buffer_blob.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__4498__auto__){\r\nvar self__ \x3d this;\r\nvar this__4498__auto____$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d (function (coll__4499__auto__){\r\nreturn (1809113693 ^ cljs.core.hash_unordered_coll(coll__4499__auto__));\r\n})(this__4498__auto____$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.pprint.buffer_blob.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this17098,other17099){\r\nvar self__ \x3d this;\r\nvar this17098__$1 \x3d this;\r\nreturn (((!((other17099 \x3d\x3d null)))) \x26\x26 ((((this17098__$1.constructor \x3d\x3d\x3d other17099.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17098__$1.type_tag,other17099.type_tag)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17098__$1.data,other17099.data)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17098__$1.trailing_white_space,other17099.trailing_white_space)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17098__$1.start_pos,other17099.start_pos)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17098__$1.end_pos,other17099.end_pos)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17098__$1.__extmap,other17099.__extmap)))))))))))))));\r\n}));\r\n\r\n(cljs.pprint.buffer_blob.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__4512__auto__,k__4513__auto__){\r\nvar self__ \x3d this;\r\nvar this__4512__auto____$1 \x3d this;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),null,new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),null,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),null,new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),null,new cljs.core.Keyword(null,\x22data\x22,\x22data\x22,-232669377),null], null), null),k__4513__auto__)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4512__auto____$1),self__.__meta),k__4513__auto__);\r\n} else {\r\nreturn (new cljs.pprint.buffer_blob(self__.type_tag,self__.data,self__.trailing_white_space,self__.start_pos,self__.end_pos,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4513__auto__)),null));\r\n}\r\n}));\r\n\r\n(cljs.pprint.buffer_blob.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__4509__auto__,k17097){\r\nvar self__ \x3d this;\r\nvar this__4509__auto____$1 \x3d this;\r\nvar G__17130 \x3d k17097;\r\nvar G__17130__$1 \x3d (((G__17130 instanceof cljs.core.Keyword))?G__17130.fqn:null);\r\nswitch (G__17130__$1) {\r\ncase \x22type-tag\x22:\r\ncase \x22data\x22:\r\ncase \x22trailing-white-space\x22:\r\ncase \x22start-pos\x22:\r\ncase \x22end-pos\x22:\r\nreturn true;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.contains_QMARK_(self__.__extmap,k17097);\r\n\r\n}\r\n}));\r\n\r\n(cljs.pprint.buffer_blob.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__4510__auto__,k__4511__auto__,G__17096){\r\nvar self__ \x3d this;\r\nvar this__4510__auto____$1 \x3d this;\r\nvar pred__17134 \x3d cljs.core.keyword_identical_QMARK_;\r\nvar expr__17135 \x3d k__4511__auto__;\r\nif(cljs.core.truth_((pred__17134.cljs$core$IFn$_invoke$arity$2 ? pred__17134.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),expr__17135) : pred__17134.call(null,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),expr__17135)))){\r\nreturn (new cljs.pprint.buffer_blob(G__17096,self__.data,self__.trailing_white_space,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17134.cljs$core$IFn$_invoke$arity$2 ? pred__17134.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22data\x22,\x22data\x22,-232669377),expr__17135) : pred__17134.call(null,new cljs.core.Keyword(null,\x22data\x22,\x22data\x22,-232669377),expr__17135)))){\r\nreturn (new cljs.pprint.buffer_blob(self__.type_tag,G__17096,self__.trailing_white_space,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17134.cljs$core$IFn$_invoke$arity$2 ? pred__17134.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),expr__17135) : pred__17134.call(null,new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),expr__17135)))){\r\nreturn (new cljs.pprint.buffer_blob(self__.type_tag,self__.data,G__17096,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17134.cljs$core$IFn$_invoke$arity$2 ? pred__17134.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),expr__17135) : pred__17134.call(null,new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),expr__17135)))){\r\nreturn (new cljs.pprint.buffer_blob(self__.type_tag,self__.data,self__.trailing_white_space,G__17096,self__.end_pos,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17134.cljs$core$IFn$_invoke$arity$2 ? pred__17134.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),expr__17135) : pred__17134.call(null,new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),expr__17135)))){\r\nreturn (new cljs.pprint.buffer_blob(self__.type_tag,self__.data,self__.trailing_white_space,self__.start_pos,G__17096,self__.__meta,self__.__extmap,null));\r\n} else {\r\nreturn (new cljs.pprint.buffer_blob(self__.type_tag,self__.data,self__.trailing_white_space,self__.start_pos,self__.end_pos,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4511__auto__,G__17096),null));\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.pprint.buffer_blob.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__4515__auto__){\r\nvar self__ \x3d this;\r\nvar this__4515__auto____$1 \x3d this;\r\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),self__.type_tag,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22data\x22,\x22data\x22,-232669377),self__.data,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),self__.trailing_white_space,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),self__.start_pos,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),self__.end_pos,null))], null),self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.buffer_blob.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__4501__auto__,G__17096){\r\nvar self__ \x3d this;\r\nvar this__4501__auto____$1 \x3d this;\r\nreturn (new cljs.pprint.buffer_blob(self__.type_tag,self__.data,self__.trailing_white_space,self__.start_pos,self__.end_pos,G__17096,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(cljs.pprint.buffer_blob.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__4507__auto__,entry__4508__auto__){\r\nvar self__ \x3d this;\r\nvar this__4507__auto____$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(entry__4508__auto__)){\r\nreturn this__4507__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4508__auto__,(0)),cljs.core._nth(entry__4508__auto__,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4507__auto____$1,entry__4508__auto__);\r\n}\r\n}));\r\n\r\n(cljs.pprint.buffer_blob.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22type-tag\x22,\x22type-tag\x22,-233331740,null),new cljs.core.Symbol(null,\x22data\x22,\x22data\x22,1407862150,null),new cljs.core.Symbol(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,-1158428773,null),new cljs.core.Symbol(null,\x22start-pos\x22,\x22start-pos\x22,-1985646683,null),new cljs.core.Symbol(null,\x22end-pos\x22,\x22end-pos\x22,-3352399,null)], null);\r\n}));\r\n\r\n(cljs.pprint.buffer_blob.cljs$lang$type \x3d true);\r\n\r\n(cljs.pprint.buffer_blob.cljs$lang$ctorPrSeq \x3d (function (this__4546__auto__){\r\nreturn (new cljs.core.List(null,\x22cljs.pprint/buffer-blob\x22,null,(1),null));\r\n}));\r\n\r\n(cljs.pprint.buffer_blob.cljs$lang$ctorPrWriter \x3d (function (this__4546__auto__,writer__4547__auto__){\r\nreturn cljs.core._write(writer__4547__auto__,\x22cljs.pprint/buffer-blob\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.pprint/buffer-blob.\r\n */\r\ncljs.pprint.__GT_buffer_blob \x3d (function cljs$pprint$__GT_buffer_blob(type_tag,data,trailing_white_space,start_pos,end_pos){\r\nreturn (new cljs.pprint.buffer_blob(type_tag,data,trailing_white_space,start_pos,end_pos,null,null,null));\r\n});\r\n\r\n/**\r\n * Factory function for cljs.pprint/buffer-blob, taking a map of keywords to field values.\r\n */\r\ncljs.pprint.map__GT_buffer_blob \x3d (function cljs$pprint$map__GT_buffer_blob(G__17100){\r\nvar extmap__4542__auto__ \x3d (function (){var G__17142 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__17100,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22data\x22,\x22data\x22,-232669377),new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926)], 0));\r\nif(cljs.core.record_QMARK_(G__17100)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__17142);\r\n} else {\r\nreturn G__17142;\r\n}\r\n})();\r\nreturn (new cljs.pprint.buffer_blob(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(G__17100),new cljs.core.Keyword(null,\x22data\x22,\x22data\x22,-232669377).cljs$core$IFn$_invoke$arity$1(G__17100),new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996).cljs$core$IFn$_invoke$arity$1(G__17100),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086).cljs$core$IFn$_invoke$arity$1(G__17100),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926).cljs$core$IFn$_invoke$arity$1(G__17100),null,cljs.core.not_empty(extmap__4542__auto__),null));\r\n});\r\n\r\n\r\ncljs.pprint.make_buffer_blob \x3d (function cljs$pprint$make_buffer_blob(data,trailing_white_space,start_pos,end_pos){\r\nreturn (new cljs.pprint.buffer_blob(new cljs.core.Keyword(null,\x22buffer-blob\x22,\x22buffer-blob\x22,-1830112173),data,trailing_white_space,start_pos,end_pos,null,null,null));\r\n});\r\n\r\ncljs.pprint.buffer_blob_QMARK_ \x3d (function cljs$pprint$buffer_blob_QMARK_(x__16744__auto__){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(x__16744__auto__),new cljs.core.Keyword(null,\x22buffer-blob\x22,\x22buffer-blob\x22,-1830112173));\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IRecord}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ncljs.pprint.nl_t \x3d (function (type_tag,type,logical_block,start_pos,end_pos,__meta,__extmap,__hash){\r\nthis.type_tag \x3d type_tag;\r\nthis.type \x3d type;\r\nthis.logical_block \x3d logical_block;\r\nthis.start_pos \x3d start_pos;\r\nthis.end_pos \x3d end_pos;\r\nthis.__meta \x3d __meta;\r\nthis.__extmap \x3d __extmap;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\r\n});\r\n(cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__4502__auto__,k__4503__auto__){\r\nvar self__ \x3d this;\r\nvar this__4502__auto____$1 \x3d this;\r\nreturn this__4502__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4503__auto__,null);\r\n}));\r\n\r\n(cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__4504__auto__,k17144,else__4505__auto__){\r\nvar self__ \x3d this;\r\nvar this__4504__auto____$1 \x3d this;\r\nvar G__17148 \x3d k17144;\r\nvar G__17148__$1 \x3d (((G__17148 instanceof cljs.core.Keyword))?G__17148.fqn:null);\r\nswitch (G__17148__$1) {\r\ncase \x22type-tag\x22:\r\nreturn self__.type_tag;\r\n\r\nbreak;\r\ncase \x22type\x22:\r\nreturn self__.type;\r\n\r\nbreak;\r\ncase \x22logical-block\x22:\r\nreturn self__.logical_block;\r\n\r\nbreak;\r\ncase \x22start-pos\x22:\r\nreturn self__.start_pos;\r\n\r\nbreak;\r\ncase \x22end-pos\x22:\r\nreturn self__.end_pos;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k17144,else__4505__auto__);\r\n\r\n}\r\n}));\r\n\r\n(cljs.pprint.nl_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__4522__auto__,f__4523__auto__,init__4524__auto__){\r\nvar self__ \x3d this;\r\nvar this__4522__auto____$1 \x3d this;\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4525__auto__,p__17149){\r\nvar vec__17150 \x3d p__17149;\r\nvar k__4526__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17150,(0),null);\r\nvar v__4527__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17150,(1),null);\r\nreturn (f__4523__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4523__auto__.cljs$core$IFn$_invoke$arity$3(ret__4525__auto__,k__4526__auto__,v__4527__auto__) : f__4523__auto__.call(null,ret__4525__auto__,k__4526__auto__,v__4527__auto__));\r\n}),init__4524__auto__,this__4522__auto____$1);\r\n}));\r\n\r\n(cljs.pprint.nl_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__4517__auto__,writer__4518__auto__,opts__4519__auto__){\r\nvar self__ \x3d this;\r\nvar this__4517__auto____$1 \x3d this;\r\nvar pr_pair__4520__auto__ \x3d (function (keyval__4521__auto__){\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__4519__auto__,keyval__4521__auto__);\r\n});\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,pr_pair__4520__auto__,\x22#cljs.pprint.nl-t{\x22,\x22, \x22,\x22}\x22,opts__4519__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),self__.type_tag],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),self__.type],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),self__.logical_block],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),self__.start_pos],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),self__.end_pos],null))], null),self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.nl_t.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__17143){\r\nvar self__ \x3d this;\r\nvar G__17143__$1 \x3d this;\r\nreturn (new cljs.core.RecordIter((0),G__17143__$1,5,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\r\n}));\r\n\r\n(cljs.pprint.nl_t.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__4500__auto__){\r\nvar self__ \x3d this;\r\nvar this__4500__auto____$1 \x3d this;\r\nreturn self__.__meta;\r\n}));\r\n\r\n(cljs.pprint.nl_t.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__4497__auto__){\r\nvar self__ \x3d this;\r\nvar this__4497__auto____$1 \x3d this;\r\nreturn (new cljs.pprint.nl_t(self__.type_tag,self__.type,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(cljs.pprint.nl_t.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__4506__auto__){\r\nvar self__ \x3d this;\r\nvar this__4506__auto____$1 \x3d this;\r\nreturn (5 + cljs.core.count(self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.nl_t.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__4498__auto__){\r\nvar self__ \x3d this;\r\nvar this__4498__auto____$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d (function (coll__4499__auto__){\r\nreturn (-1640656800 ^ cljs.core.hash_unordered_coll(coll__4499__auto__));\r\n})(this__4498__auto____$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.pprint.nl_t.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this17145,other17146){\r\nvar self__ \x3d this;\r\nvar this17145__$1 \x3d this;\r\nreturn (((!((other17146 \x3d\x3d null)))) \x26\x26 ((((this17145__$1.constructor \x3d\x3d\x3d other17146.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17145__$1.type_tag,other17146.type_tag)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17145__$1.type,other17146.type)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17145__$1.logical_block,other17146.logical_block)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17145__$1.start_pos,other17146.start_pos)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17145__$1.end_pos,other17146.end_pos)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17145__$1.__extmap,other17146.__extmap)))))))))))))));\r\n}));\r\n\r\n(cljs.pprint.nl_t.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__4512__auto__,k__4513__auto__){\r\nvar self__ \x3d this;\r\nvar this__4512__auto____$1 \x3d this;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),null,new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),null,new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),null,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),null,new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),null], null), null),k__4513__auto__)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4512__auto____$1),self__.__meta),k__4513__auto__);\r\n} else {\r\nreturn (new cljs.pprint.nl_t(self__.type_tag,self__.type,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4513__auto__)),null));\r\n}\r\n}));\r\n\r\n(cljs.pprint.nl_t.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__4509__auto__,k17144){\r\nvar self__ \x3d this;\r\nvar this__4509__auto____$1 \x3d this;\r\nvar G__17261 \x3d k17144;\r\nvar G__17261__$1 \x3d (((G__17261 instanceof cljs.core.Keyword))?G__17261.fqn:null);\r\nswitch (G__17261__$1) {\r\ncase \x22type-tag\x22:\r\ncase \x22type\x22:\r\ncase \x22logical-block\x22:\r\ncase \x22start-pos\x22:\r\ncase \x22end-pos\x22:\r\nreturn true;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.contains_QMARK_(self__.__extmap,k17144);\r\n\r\n}\r\n}));\r\n\r\n(cljs.pprint.nl_t.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__4510__auto__,k__4511__auto__,G__17143){\r\nvar self__ \x3d this;\r\nvar this__4510__auto____$1 \x3d this;\r\nvar pred__17264 \x3d cljs.core.keyword_identical_QMARK_;\r\nvar expr__17265 \x3d k__4511__auto__;\r\nif(cljs.core.truth_((pred__17264.cljs$core$IFn$_invoke$arity$2 ? pred__17264.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),expr__17265) : pred__17264.call(null,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),expr__17265)))){\r\nreturn (new cljs.pprint.nl_t(G__17143,self__.type,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17264.cljs$core$IFn$_invoke$arity$2 ? pred__17264.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),expr__17265) : pred__17264.call(null,new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),expr__17265)))){\r\nreturn (new cljs.pprint.nl_t(self__.type_tag,G__17143,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17264.cljs$core$IFn$_invoke$arity$2 ? pred__17264.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),expr__17265) : pred__17264.call(null,new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),expr__17265)))){\r\nreturn (new cljs.pprint.nl_t(self__.type_tag,self__.type,G__17143,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17264.cljs$core$IFn$_invoke$arity$2 ? pred__17264.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),expr__17265) : pred__17264.call(null,new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),expr__17265)))){\r\nreturn (new cljs.pprint.nl_t(self__.type_tag,self__.type,self__.logical_block,G__17143,self__.end_pos,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17264.cljs$core$IFn$_invoke$arity$2 ? pred__17264.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),expr__17265) : pred__17264.call(null,new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),expr__17265)))){\r\nreturn (new cljs.pprint.nl_t(self__.type_tag,self__.type,self__.logical_block,self__.start_pos,G__17143,self__.__meta,self__.__extmap,null));\r\n} else {\r\nreturn (new cljs.pprint.nl_t(self__.type_tag,self__.type,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4511__auto__,G__17143),null));\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.pprint.nl_t.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__4515__auto__){\r\nvar self__ \x3d this;\r\nvar this__4515__auto____$1 \x3d this;\r\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),self__.type_tag,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),self__.type,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),self__.logical_block,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),self__.start_pos,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),self__.end_pos,null))], null),self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.nl_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__4501__auto__,G__17143){\r\nvar self__ \x3d this;\r\nvar this__4501__auto____$1 \x3d this;\r\nreturn (new cljs.pprint.nl_t(self__.type_tag,self__.type,self__.logical_block,self__.start_pos,self__.end_pos,G__17143,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(cljs.pprint.nl_t.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__4507__auto__,entry__4508__auto__){\r\nvar self__ \x3d this;\r\nvar this__4507__auto____$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(entry__4508__auto__)){\r\nreturn this__4507__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4508__auto__,(0)),cljs.core._nth(entry__4508__auto__,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4507__auto____$1,entry__4508__auto__);\r\n}\r\n}));\r\n\r\n(cljs.pprint.nl_t.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22type-tag\x22,\x22type-tag\x22,-233331740,null),new cljs.core.Symbol(null,\x22type\x22,\x22type\x22,-1480165421,null),new cljs.core.Symbol(null,\x22logical-block\x22,\x22logical-block\x22,1059508963,null),new cljs.core.Symbol(null,\x22start-pos\x22,\x22start-pos\x22,-1985646683,null),new cljs.core.Symbol(null,\x22end-pos\x22,\x22end-pos\x22,-3352399,null)], null);\r\n}));\r\n\r\n(cljs.pprint.nl_t.cljs$lang$type \x3d true);\r\n\r\n(cljs.pprint.nl_t.cljs$lang$ctorPrSeq \x3d (function (this__4546__auto__){\r\nreturn (new cljs.core.List(null,\x22cljs.pprint/nl-t\x22,null,(1),null));\r\n}));\r\n\r\n(cljs.pprint.nl_t.cljs$lang$ctorPrWriter \x3d (function (this__4546__auto__,writer__4547__auto__){\r\nreturn cljs.core._write(writer__4547__auto__,\x22cljs.pprint/nl-t\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.pprint/nl-t.\r\n */\r\ncljs.pprint.__GT_nl_t \x3d (function cljs$pprint$__GT_nl_t(type_tag,type,logical_block,start_pos,end_pos){\r\nreturn (new cljs.pprint.nl_t(type_tag,type,logical_block,start_pos,end_pos,null,null,null));\r\n});\r\n\r\n/**\r\n * Factory function for cljs.pprint/nl-t, taking a map of keywords to field values.\r\n */\r\ncljs.pprint.map__GT_nl_t \x3d (function cljs$pprint$map__GT_nl_t(G__17147){\r\nvar extmap__4542__auto__ \x3d (function (){var G__17306 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__17147,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926)], 0));\r\nif(cljs.core.record_QMARK_(G__17147)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__17306);\r\n} else {\r\nreturn G__17306;\r\n}\r\n})();\r\nreturn (new cljs.pprint.nl_t(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(G__17147),new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348).cljs$core$IFn$_invoke$arity$1(G__17147),new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(G__17147),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086).cljs$core$IFn$_invoke$arity$1(G__17147),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926).cljs$core$IFn$_invoke$arity$1(G__17147),null,cljs.core.not_empty(extmap__4542__auto__),null));\r\n});\r\n\r\n\r\ncljs.pprint.make_nl_t \x3d (function cljs$pprint$make_nl_t(type,logical_block,start_pos,end_pos){\r\nreturn (new cljs.pprint.nl_t(new cljs.core.Keyword(null,\x22nl-t\x22,\x22nl-t\x22,-1608382114),type,logical_block,start_pos,end_pos,null,null,null));\r\n});\r\n\r\ncljs.pprint.nl_t_QMARK_ \x3d (function cljs$pprint$nl_t_QMARK_(x__16744__auto__){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(x__16744__auto__),new cljs.core.Keyword(null,\x22nl-t\x22,\x22nl-t\x22,-1608382114));\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IRecord}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ncljs.pprint.start_block_t \x3d (function (type_tag,logical_block,start_pos,end_pos,__meta,__extmap,__hash){\r\nthis.type_tag \x3d type_tag;\r\nthis.logical_block \x3d logical_block;\r\nthis.start_pos \x3d start_pos;\r\nthis.end_pos \x3d end_pos;\r\nthis.__meta \x3d __meta;\r\nthis.__extmap \x3d __extmap;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\r\n});\r\n(cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__4502__auto__,k__4503__auto__){\r\nvar self__ \x3d this;\r\nvar this__4502__auto____$1 \x3d this;\r\nreturn this__4502__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4503__auto__,null);\r\n}));\r\n\r\n(cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__4504__auto__,k17312,else__4505__auto__){\r\nvar self__ \x3d this;\r\nvar this__4504__auto____$1 \x3d this;\r\nvar G__17365 \x3d k17312;\r\nvar G__17365__$1 \x3d (((G__17365 instanceof cljs.core.Keyword))?G__17365.fqn:null);\r\nswitch (G__17365__$1) {\r\ncase \x22type-tag\x22:\r\nreturn self__.type_tag;\r\n\r\nbreak;\r\ncase \x22logical-block\x22:\r\nreturn self__.logical_block;\r\n\r\nbreak;\r\ncase \x22start-pos\x22:\r\nreturn self__.start_pos;\r\n\r\nbreak;\r\ncase \x22end-pos\x22:\r\nreturn self__.end_pos;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k17312,else__4505__auto__);\r\n\r\n}\r\n}));\r\n\r\n(cljs.pprint.start_block_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__4522__auto__,f__4523__auto__,init__4524__auto__){\r\nvar self__ \x3d this;\r\nvar this__4522__auto____$1 \x3d this;\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4525__auto__,p__17366){\r\nvar vec__17367 \x3d p__17366;\r\nvar k__4526__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17367,(0),null);\r\nvar v__4527__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17367,(1),null);\r\nreturn (f__4523__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4523__auto__.cljs$core$IFn$_invoke$arity$3(ret__4525__auto__,k__4526__auto__,v__4527__auto__) : f__4523__auto__.call(null,ret__4525__auto__,k__4526__auto__,v__4527__auto__));\r\n}),init__4524__auto__,this__4522__auto____$1);\r\n}));\r\n\r\n(cljs.pprint.start_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__4517__auto__,writer__4518__auto__,opts__4519__auto__){\r\nvar self__ \x3d this;\r\nvar this__4517__auto____$1 \x3d this;\r\nvar pr_pair__4520__auto__ \x3d (function (keyval__4521__auto__){\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__4519__auto__,keyval__4521__auto__);\r\n});\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,pr_pair__4520__auto__,\x22#cljs.pprint.start-block-t{\x22,\x22, \x22,\x22}\x22,opts__4519__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),self__.type_tag],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),self__.logical_block],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),self__.start_pos],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),self__.end_pos],null))], null),self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.start_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__17311){\r\nvar self__ \x3d this;\r\nvar G__17311__$1 \x3d this;\r\nreturn (new cljs.core.RecordIter((0),G__17311__$1,4,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\r\n}));\r\n\r\n(cljs.pprint.start_block_t.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__4500__auto__){\r\nvar self__ \x3d this;\r\nvar this__4500__auto____$1 \x3d this;\r\nreturn self__.__meta;\r\n}));\r\n\r\n(cljs.pprint.start_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__4497__auto__){\r\nvar self__ \x3d this;\r\nvar this__4497__auto____$1 \x3d this;\r\nreturn (new cljs.pprint.start_block_t(self__.type_tag,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(cljs.pprint.start_block_t.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__4506__auto__){\r\nvar self__ \x3d this;\r\nvar this__4506__auto____$1 \x3d this;\r\nreturn (4 + cljs.core.count(self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.start_block_t.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__4498__auto__){\r\nvar self__ \x3d this;\r\nvar this__4498__auto____$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d (function (coll__4499__auto__){\r\nreturn (-414877272 ^ cljs.core.hash_unordered_coll(coll__4499__auto__));\r\n})(this__4498__auto____$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.pprint.start_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this17313,other17314){\r\nvar self__ \x3d this;\r\nvar this17313__$1 \x3d this;\r\nreturn (((!((other17314 \x3d\x3d null)))) \x26\x26 ((((this17313__$1.constructor \x3d\x3d\x3d other17314.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17313__$1.type_tag,other17314.type_tag)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17313__$1.logical_block,other17314.logical_block)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17313__$1.start_pos,other17314.start_pos)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17313__$1.end_pos,other17314.end_pos)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17313__$1.__extmap,other17314.__extmap)))))))))))));\r\n}));\r\n\r\n(cljs.pprint.start_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__4512__auto__,k__4513__auto__){\r\nvar self__ \x3d this;\r\nvar this__4512__auto____$1 \x3d this;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),null,new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),null,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),null,new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),null], null), null),k__4513__auto__)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4512__auto____$1),self__.__meta),k__4513__auto__);\r\n} else {\r\nreturn (new cljs.pprint.start_block_t(self__.type_tag,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4513__auto__)),null));\r\n}\r\n}));\r\n\r\n(cljs.pprint.start_block_t.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__4509__auto__,k17312){\r\nvar self__ \x3d this;\r\nvar this__4509__auto____$1 \x3d this;\r\nvar G__17388 \x3d k17312;\r\nvar G__17388__$1 \x3d (((G__17388 instanceof cljs.core.Keyword))?G__17388.fqn:null);\r\nswitch (G__17388__$1) {\r\ncase \x22type-tag\x22:\r\ncase \x22logical-block\x22:\r\ncase \x22start-pos\x22:\r\ncase \x22end-pos\x22:\r\nreturn true;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.contains_QMARK_(self__.__extmap,k17312);\r\n\r\n}\r\n}));\r\n\r\n(cljs.pprint.start_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__4510__auto__,k__4511__auto__,G__17311){\r\nvar self__ \x3d this;\r\nvar this__4510__auto____$1 \x3d this;\r\nvar pred__17392 \x3d cljs.core.keyword_identical_QMARK_;\r\nvar expr__17393 \x3d k__4511__auto__;\r\nif(cljs.core.truth_((pred__17392.cljs$core$IFn$_invoke$arity$2 ? pred__17392.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),expr__17393) : pred__17392.call(null,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),expr__17393)))){\r\nreturn (new cljs.pprint.start_block_t(G__17311,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17392.cljs$core$IFn$_invoke$arity$2 ? pred__17392.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),expr__17393) : pred__17392.call(null,new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),expr__17393)))){\r\nreturn (new cljs.pprint.start_block_t(self__.type_tag,G__17311,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17392.cljs$core$IFn$_invoke$arity$2 ? pred__17392.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),expr__17393) : pred__17392.call(null,new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),expr__17393)))){\r\nreturn (new cljs.pprint.start_block_t(self__.type_tag,self__.logical_block,G__17311,self__.end_pos,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17392.cljs$core$IFn$_invoke$arity$2 ? pred__17392.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),expr__17393) : pred__17392.call(null,new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),expr__17393)))){\r\nreturn (new cljs.pprint.start_block_t(self__.type_tag,self__.logical_block,self__.start_pos,G__17311,self__.__meta,self__.__extmap,null));\r\n} else {\r\nreturn (new cljs.pprint.start_block_t(self__.type_tag,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4511__auto__,G__17311),null));\r\n}\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.pprint.start_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__4515__auto__){\r\nvar self__ \x3d this;\r\nvar this__4515__auto____$1 \x3d this;\r\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),self__.type_tag,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),self__.logical_block,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),self__.start_pos,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),self__.end_pos,null))], null),self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.start_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__4501__auto__,G__17311){\r\nvar self__ \x3d this;\r\nvar this__4501__auto____$1 \x3d this;\r\nreturn (new cljs.pprint.start_block_t(self__.type_tag,self__.logical_block,self__.start_pos,self__.end_pos,G__17311,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(cljs.pprint.start_block_t.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__4507__auto__,entry__4508__auto__){\r\nvar self__ \x3d this;\r\nvar this__4507__auto____$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(entry__4508__auto__)){\r\nreturn this__4507__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4508__auto__,(0)),cljs.core._nth(entry__4508__auto__,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4507__auto____$1,entry__4508__auto__);\r\n}\r\n}));\r\n\r\n(cljs.pprint.start_block_t.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22type-tag\x22,\x22type-tag\x22,-233331740,null),new cljs.core.Symbol(null,\x22logical-block\x22,\x22logical-block\x22,1059508963,null),new cljs.core.Symbol(null,\x22start-pos\x22,\x22start-pos\x22,-1985646683,null),new cljs.core.Symbol(null,\x22end-pos\x22,\x22end-pos\x22,-3352399,null)], null);\r\n}));\r\n\r\n(cljs.pprint.start_block_t.cljs$lang$type \x3d true);\r\n\r\n(cljs.pprint.start_block_t.cljs$lang$ctorPrSeq \x3d (function (this__4546__auto__){\r\nreturn (new cljs.core.List(null,\x22cljs.pprint/start-block-t\x22,null,(1),null));\r\n}));\r\n\r\n(cljs.pprint.start_block_t.cljs$lang$ctorPrWriter \x3d (function (this__4546__auto__,writer__4547__auto__){\r\nreturn cljs.core._write(writer__4547__auto__,\x22cljs.pprint/start-block-t\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.pprint/start-block-t.\r\n */\r\ncljs.pprint.__GT_start_block_t \x3d (function cljs$pprint$__GT_start_block_t(type_tag,logical_block,start_pos,end_pos){\r\nreturn (new cljs.pprint.start_block_t(type_tag,logical_block,start_pos,end_pos,null,null,null));\r\n});\r\n\r\n/**\r\n * Factory function for cljs.pprint/start-block-t, taking a map of keywords to field values.\r\n */\r\ncljs.pprint.map__GT_start_block_t \x3d (function cljs$pprint$map__GT_start_block_t(G__17358){\r\nvar extmap__4542__auto__ \x3d (function (){var G__17415 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__17358,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926)], 0));\r\nif(cljs.core.record_QMARK_(G__17358)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__17415);\r\n} else {\r\nreturn G__17415;\r\n}\r\n})();\r\nreturn (new cljs.pprint.start_block_t(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(G__17358),new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(G__17358),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086).cljs$core$IFn$_invoke$arity$1(G__17358),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926).cljs$core$IFn$_invoke$arity$1(G__17358),null,cljs.core.not_empty(extmap__4542__auto__),null));\r\n});\r\n\r\n\r\ncljs.pprint.make_start_block_t \x3d (function cljs$pprint$make_start_block_t(logical_block,start_pos,end_pos){\r\nreturn (new cljs.pprint.start_block_t(new cljs.core.Keyword(null,\x22start-block-t\x22,\x22start-block-t\x22,-373430594),logical_block,start_pos,end_pos,null,null,null));\r\n});\r\n\r\ncljs.pprint.start_block_t_QMARK_ \x3d (function cljs$pprint$start_block_t_QMARK_(x__16744__auto__){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(x__16744__auto__),new cljs.core.Keyword(null,\x22start-block-t\x22,\x22start-block-t\x22,-373430594));\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IRecord}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ncljs.pprint.end_block_t \x3d (function (type_tag,logical_block,start_pos,end_pos,__meta,__extmap,__hash){\r\nthis.type_tag \x3d type_tag;\r\nthis.logical_block \x3d logical_block;\r\nthis.start_pos \x3d start_pos;\r\nthis.end_pos \x3d end_pos;\r\nthis.__meta \x3d __meta;\r\nthis.__extmap \x3d __extmap;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\r\n});\r\n(cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__4502__auto__,k__4503__auto__){\r\nvar self__ \x3d this;\r\nvar this__4502__auto____$1 \x3d this;\r\nreturn this__4502__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4503__auto__,null);\r\n}));\r\n\r\n(cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__4504__auto__,k17426,else__4505__auto__){\r\nvar self__ \x3d this;\r\nvar this__4504__auto____$1 \x3d this;\r\nvar G__17443 \x3d k17426;\r\nvar G__17443__$1 \x3d (((G__17443 instanceof cljs.core.Keyword))?G__17443.fqn:null);\r\nswitch (G__17443__$1) {\r\ncase \x22type-tag\x22:\r\nreturn self__.type_tag;\r\n\r\nbreak;\r\ncase \x22logical-block\x22:\r\nreturn self__.logical_block;\r\n\r\nbreak;\r\ncase \x22start-pos\x22:\r\nreturn self__.start_pos;\r\n\r\nbreak;\r\ncase \x22end-pos\x22:\r\nreturn self__.end_pos;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k17426,else__4505__auto__);\r\n\r\n}\r\n}));\r\n\r\n(cljs.pprint.end_block_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__4522__auto__,f__4523__auto__,init__4524__auto__){\r\nvar self__ \x3d this;\r\nvar this__4522__auto____$1 \x3d this;\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4525__auto__,p__17448){\r\nvar vec__17449 \x3d p__17448;\r\nvar k__4526__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17449,(0),null);\r\nvar v__4527__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17449,(1),null);\r\nreturn (f__4523__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4523__auto__.cljs$core$IFn$_invoke$arity$3(ret__4525__auto__,k__4526__auto__,v__4527__auto__) : f__4523__auto__.call(null,ret__4525__auto__,k__4526__auto__,v__4527__auto__));\r\n}),init__4524__auto__,this__4522__auto____$1);\r\n}));\r\n\r\n(cljs.pprint.end_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__4517__auto__,writer__4518__auto__,opts__4519__auto__){\r\nvar self__ \x3d this;\r\nvar this__4517__auto____$1 \x3d this;\r\nvar pr_pair__4520__auto__ \x3d (function (keyval__4521__auto__){\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__4519__auto__,keyval__4521__auto__);\r\n});\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,pr_pair__4520__auto__,\x22#cljs.pprint.end-block-t{\x22,\x22, \x22,\x22}\x22,opts__4519__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),self__.type_tag],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),self__.logical_block],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),self__.start_pos],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),self__.end_pos],null))], null),self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.end_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__17425){\r\nvar self__ \x3d this;\r\nvar G__17425__$1 \x3d this;\r\nreturn (new cljs.core.RecordIter((0),G__17425__$1,4,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\r\n}));\r\n\r\n(cljs.pprint.end_block_t.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__4500__auto__){\r\nvar self__ \x3d this;\r\nvar this__4500__auto____$1 \x3d this;\r\nreturn self__.__meta;\r\n}));\r\n\r\n(cljs.pprint.end_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__4497__auto__){\r\nvar self__ \x3d this;\r\nvar this__4497__auto____$1 \x3d this;\r\nreturn (new cljs.pprint.end_block_t(self__.type_tag,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(cljs.pprint.end_block_t.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__4506__auto__){\r\nvar self__ \x3d this;\r\nvar this__4506__auto____$1 \x3d this;\r\nreturn (4 + cljs.core.count(self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.end_block_t.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__4498__auto__){\r\nvar self__ \x3d this;\r\nvar this__4498__auto____$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d (function (coll__4499__auto__){\r\nreturn (1365867980 ^ cljs.core.hash_unordered_coll(coll__4499__auto__));\r\n})(this__4498__auto____$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.pprint.end_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this17427,other17428){\r\nvar self__ \x3d this;\r\nvar this17427__$1 \x3d this;\r\nreturn (((!((other17428 \x3d\x3d null)))) \x26\x26 ((((this17427__$1.constructor \x3d\x3d\x3d other17428.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17427__$1.type_tag,other17428.type_tag)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17427__$1.logical_block,other17428.logical_block)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17427__$1.start_pos,other17428.start_pos)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17427__$1.end_pos,other17428.end_pos)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17427__$1.__extmap,other17428.__extmap)))))))))))));\r\n}));\r\n\r\n(cljs.pprint.end_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__4512__auto__,k__4513__auto__){\r\nvar self__ \x3d this;\r\nvar this__4512__auto____$1 \x3d this;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),null,new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),null,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),null,new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),null], null), null),k__4513__auto__)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4512__auto____$1),self__.__meta),k__4513__auto__);\r\n} else {\r\nreturn (new cljs.pprint.end_block_t(self__.type_tag,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4513__auto__)),null));\r\n}\r\n}));\r\n\r\n(cljs.pprint.end_block_t.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__4509__auto__,k17426){\r\nvar self__ \x3d this;\r\nvar this__4509__auto____$1 \x3d this;\r\nvar G__17498 \x3d k17426;\r\nvar G__17498__$1 \x3d (((G__17498 instanceof cljs.core.Keyword))?G__17498.fqn:null);\r\nswitch (G__17498__$1) {\r\ncase \x22type-tag\x22:\r\ncase \x22logical-block\x22:\r\ncase \x22start-pos\x22:\r\ncase \x22end-pos\x22:\r\nreturn true;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.contains_QMARK_(self__.__extmap,k17426);\r\n\r\n}\r\n}));\r\n\r\n(cljs.pprint.end_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__4510__auto__,k__4511__auto__,G__17425){\r\nvar self__ \x3d this;\r\nvar this__4510__auto____$1 \x3d this;\r\nvar pred__17508 \x3d cljs.core.keyword_identical_QMARK_;\r\nvar expr__17509 \x3d k__4511__auto__;\r\nif(cljs.core.truth_((pred__17508.cljs$core$IFn$_invoke$arity$2 ? pred__17508.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),expr__17509) : pred__17508.call(null,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),expr__17509)))){\r\nreturn (new cljs.pprint.end_block_t(G__17425,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17508.cljs$core$IFn$_invoke$arity$2 ? pred__17508.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),expr__17509) : pred__17508.call(null,new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),expr__17509)))){\r\nreturn (new cljs.pprint.end_block_t(self__.type_tag,G__17425,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17508.cljs$core$IFn$_invoke$arity$2 ? pred__17508.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),expr__17509) : pred__17508.call(null,new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),expr__17509)))){\r\nreturn (new cljs.pprint.end_block_t(self__.type_tag,self__.logical_block,G__17425,self__.end_pos,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17508.cljs$core$IFn$_invoke$arity$2 ? pred__17508.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),expr__17509) : pred__17508.call(null,new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),expr__17509)))){\r\nreturn (new cljs.pprint.end_block_t(self__.type_tag,self__.logical_block,self__.start_pos,G__17425,self__.__meta,self__.__extmap,null));\r\n} else {\r\nreturn (new cljs.pprint.end_block_t(self__.type_tag,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4511__auto__,G__17425),null));\r\n}\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.pprint.end_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__4515__auto__){\r\nvar self__ \x3d this;\r\nvar this__4515__auto____$1 \x3d this;\r\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),self__.type_tag,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),self__.logical_block,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),self__.start_pos,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),self__.end_pos,null))], null),self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.end_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__4501__auto__,G__17425){\r\nvar self__ \x3d this;\r\nvar this__4501__auto____$1 \x3d this;\r\nreturn (new cljs.pprint.end_block_t(self__.type_tag,self__.logical_block,self__.start_pos,self__.end_pos,G__17425,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(cljs.pprint.end_block_t.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__4507__auto__,entry__4508__auto__){\r\nvar self__ \x3d this;\r\nvar this__4507__auto____$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(entry__4508__auto__)){\r\nreturn this__4507__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4508__auto__,(0)),cljs.core._nth(entry__4508__auto__,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4507__auto____$1,entry__4508__auto__);\r\n}\r\n}));\r\n\r\n(cljs.pprint.end_block_t.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22type-tag\x22,\x22type-tag\x22,-233331740,null),new cljs.core.Symbol(null,\x22logical-block\x22,\x22logical-block\x22,1059508963,null),new cljs.core.Symbol(null,\x22start-pos\x22,\x22start-pos\x22,-1985646683,null),new cljs.core.Symbol(null,\x22end-pos\x22,\x22end-pos\x22,-3352399,null)], null);\r\n}));\r\n\r\n(cljs.pprint.end_block_t.cljs$lang$type \x3d true);\r\n\r\n(cljs.pprint.end_block_t.cljs$lang$ctorPrSeq \x3d (function (this__4546__auto__){\r\nreturn (new cljs.core.List(null,\x22cljs.pprint/end-block-t\x22,null,(1),null));\r\n}));\r\n\r\n(cljs.pprint.end_block_t.cljs$lang$ctorPrWriter \x3d (function (this__4546__auto__,writer__4547__auto__){\r\nreturn cljs.core._write(writer__4547__auto__,\x22cljs.pprint/end-block-t\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.pprint/end-block-t.\r\n */\r\ncljs.pprint.__GT_end_block_t \x3d (function cljs$pprint$__GT_end_block_t(type_tag,logical_block,start_pos,end_pos){\r\nreturn (new cljs.pprint.end_block_t(type_tag,logical_block,start_pos,end_pos,null,null,null));\r\n});\r\n\r\n/**\r\n * Factory function for cljs.pprint/end-block-t, taking a map of keywords to field values.\r\n */\r\ncljs.pprint.map__GT_end_block_t \x3d (function cljs$pprint$map__GT_end_block_t(G__17433){\r\nvar extmap__4542__auto__ \x3d (function (){var G__17559 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__17433,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926)], 0));\r\nif(cljs.core.record_QMARK_(G__17433)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__17559);\r\n} else {\r\nreturn G__17559;\r\n}\r\n})();\r\nreturn (new cljs.pprint.end_block_t(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(G__17433),new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(G__17433),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086).cljs$core$IFn$_invoke$arity$1(G__17433),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926).cljs$core$IFn$_invoke$arity$1(G__17433),null,cljs.core.not_empty(extmap__4542__auto__),null));\r\n});\r\n\r\n\r\ncljs.pprint.make_end_block_t \x3d (function cljs$pprint$make_end_block_t(logical_block,start_pos,end_pos){\r\nreturn (new cljs.pprint.end_block_t(new cljs.core.Keyword(null,\x22end-block-t\x22,\x22end-block-t\x22,1544648735),logical_block,start_pos,end_pos,null,null,null));\r\n});\r\n\r\ncljs.pprint.end_block_t_QMARK_ \x3d (function cljs$pprint$end_block_t_QMARK_(x__16744__auto__){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(x__16744__auto__),new cljs.core.Keyword(null,\x22end-block-t\x22,\x22end-block-t\x22,1544648735));\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IRecord}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ncljs.pprint.indent_t \x3d (function (type_tag,logical_block,relative_to,offset,start_pos,end_pos,__meta,__extmap,__hash){\r\nthis.type_tag \x3d type_tag;\r\nthis.logical_block \x3d logical_block;\r\nthis.relative_to \x3d relative_to;\r\nthis.offset \x3d offset;\r\nthis.start_pos \x3d start_pos;\r\nthis.end_pos \x3d end_pos;\r\nthis.__meta \x3d __meta;\r\nthis.__extmap \x3d __extmap;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\r\n});\r\n(cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__4502__auto__,k__4503__auto__){\r\nvar self__ \x3d this;\r\nvar this__4502__auto____$1 \x3d this;\r\nreturn this__4502__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4503__auto__,null);\r\n}));\r\n\r\n(cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__4504__auto__,k17583,else__4505__auto__){\r\nvar self__ \x3d this;\r\nvar this__4504__auto____$1 \x3d this;\r\nvar G__17601 \x3d k17583;\r\nvar G__17601__$1 \x3d (((G__17601 instanceof cljs.core.Keyword))?G__17601.fqn:null);\r\nswitch (G__17601__$1) {\r\ncase \x22type-tag\x22:\r\nreturn self__.type_tag;\r\n\r\nbreak;\r\ncase \x22logical-block\x22:\r\nreturn self__.logical_block;\r\n\r\nbreak;\r\ncase \x22relative-to\x22:\r\nreturn self__.relative_to;\r\n\r\nbreak;\r\ncase \x22offset\x22:\r\nreturn self__.offset;\r\n\r\nbreak;\r\ncase \x22start-pos\x22:\r\nreturn self__.start_pos;\r\n\r\nbreak;\r\ncase \x22end-pos\x22:\r\nreturn self__.end_pos;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k17583,else__4505__auto__);\r\n\r\n}\r\n}));\r\n\r\n(cljs.pprint.indent_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__4522__auto__,f__4523__auto__,init__4524__auto__){\r\nvar self__ \x3d this;\r\nvar this__4522__auto____$1 \x3d this;\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4525__auto__,p__17605){\r\nvar vec__17606 \x3d p__17605;\r\nvar k__4526__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17606,(0),null);\r\nvar v__4527__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17606,(1),null);\r\nreturn (f__4523__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4523__auto__.cljs$core$IFn$_invoke$arity$3(ret__4525__auto__,k__4526__auto__,v__4527__auto__) : f__4523__auto__.call(null,ret__4525__auto__,k__4526__auto__,v__4527__auto__));\r\n}),init__4524__auto__,this__4522__auto____$1);\r\n}));\r\n\r\n(cljs.pprint.indent_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__4517__auto__,writer__4518__auto__,opts__4519__auto__){\r\nvar self__ \x3d this;\r\nvar this__4517__auto____$1 \x3d this;\r\nvar pr_pair__4520__auto__ \x3d (function (keyval__4521__auto__){\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__4519__auto__,keyval__4521__auto__);\r\n});\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,pr_pair__4520__auto__,\x22#cljs.pprint.indent-t{\x22,\x22, \x22,\x22}\x22,opts__4519__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),self__.type_tag],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),self__.logical_block],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22relative-to\x22,\x22relative-to\x22,-470100051),self__.relative_to],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),self__.offset],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),self__.start_pos],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),self__.end_pos],null))], null),self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.indent_t.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__17582){\r\nvar self__ \x3d this;\r\nvar G__17582__$1 \x3d this;\r\nreturn (new cljs.core.RecordIter((0),G__17582__$1,6,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),new cljs.core.Keyword(null,\x22relative-to\x22,\x22relative-to\x22,-470100051),new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\r\n}));\r\n\r\n(cljs.pprint.indent_t.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__4500__auto__){\r\nvar self__ \x3d this;\r\nvar this__4500__auto____$1 \x3d this;\r\nreturn self__.__meta;\r\n}));\r\n\r\n(cljs.pprint.indent_t.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__4497__auto__){\r\nvar self__ \x3d this;\r\nvar this__4497__auto____$1 \x3d this;\r\nreturn (new cljs.pprint.indent_t(self__.type_tag,self__.logical_block,self__.relative_to,self__.offset,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(cljs.pprint.indent_t.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__4506__auto__){\r\nvar self__ \x3d this;\r\nvar this__4506__auto____$1 \x3d this;\r\nreturn (6 + cljs.core.count(self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.indent_t.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__4498__auto__){\r\nvar self__ \x3d this;\r\nvar this__4498__auto____$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d (function (coll__4499__auto__){\r\nreturn (-1602780238 ^ cljs.core.hash_unordered_coll(coll__4499__auto__));\r\n})(this__4498__auto____$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.pprint.indent_t.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this17584,other17585){\r\nvar self__ \x3d this;\r\nvar this17584__$1 \x3d this;\r\nreturn (((!((other17585 \x3d\x3d null)))) \x26\x26 ((((this17584__$1.constructor \x3d\x3d\x3d other17585.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17584__$1.type_tag,other17585.type_tag)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17584__$1.logical_block,other17585.logical_block)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17584__$1.relative_to,other17585.relative_to)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17584__$1.offset,other17585.offset)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17584__$1.start_pos,other17585.start_pos)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17584__$1.end_pos,other17585.end_pos)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17584__$1.__extmap,other17585.__extmap)))))))))))))))));\r\n}));\r\n\r\n(cljs.pprint.indent_t.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__4512__auto__,k__4513__auto__){\r\nvar self__ \x3d this;\r\nvar this__4512__auto____$1 \x3d this;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),null,new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),null,new cljs.core.Keyword(null,\x22relative-to\x22,\x22relative-to\x22,-470100051),null,new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),null,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),null,new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),null], null), null),k__4513__auto__)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4512__auto____$1),self__.__meta),k__4513__auto__);\r\n} else {\r\nreturn (new cljs.pprint.indent_t(self__.type_tag,self__.logical_block,self__.relative_to,self__.offset,self__.start_pos,self__.end_pos,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4513__auto__)),null));\r\n}\r\n}));\r\n\r\n(cljs.pprint.indent_t.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__4509__auto__,k17583){\r\nvar self__ \x3d this;\r\nvar this__4509__auto____$1 \x3d this;\r\nvar G__17962 \x3d k17583;\r\nvar G__17962__$1 \x3d (((G__17962 instanceof cljs.core.Keyword))?G__17962.fqn:null);\r\nswitch (G__17962__$1) {\r\ncase \x22type-tag\x22:\r\ncase \x22logical-block\x22:\r\ncase \x22relative-to\x22:\r\ncase \x22offset\x22:\r\ncase \x22start-pos\x22:\r\ncase \x22end-pos\x22:\r\nreturn true;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.contains_QMARK_(self__.__extmap,k17583);\r\n\r\n}\r\n}));\r\n\r\n(cljs.pprint.indent_t.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__4510__auto__,k__4511__auto__,G__17582){\r\nvar self__ \x3d this;\r\nvar this__4510__auto____$1 \x3d this;\r\nvar pred__17971 \x3d cljs.core.keyword_identical_QMARK_;\r\nvar expr__17972 \x3d k__4511__auto__;\r\nif(cljs.core.truth_((pred__17971.cljs$core$IFn$_invoke$arity$2 ? pred__17971.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),expr__17972) : pred__17971.call(null,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),expr__17972)))){\r\nreturn (new cljs.pprint.indent_t(G__17582,self__.logical_block,self__.relative_to,self__.offset,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17971.cljs$core$IFn$_invoke$arity$2 ? pred__17971.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),expr__17972) : pred__17971.call(null,new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),expr__17972)))){\r\nreturn (new cljs.pprint.indent_t(self__.type_tag,G__17582,self__.relative_to,self__.offset,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17971.cljs$core$IFn$_invoke$arity$2 ? pred__17971.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22relative-to\x22,\x22relative-to\x22,-470100051),expr__17972) : pred__17971.call(null,new cljs.core.Keyword(null,\x22relative-to\x22,\x22relative-to\x22,-470100051),expr__17972)))){\r\nreturn (new cljs.pprint.indent_t(self__.type_tag,self__.logical_block,G__17582,self__.offset,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17971.cljs$core$IFn$_invoke$arity$2 ? pred__17971.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),expr__17972) : pred__17971.call(null,new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),expr__17972)))){\r\nreturn (new cljs.pprint.indent_t(self__.type_tag,self__.logical_block,self__.relative_to,G__17582,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17971.cljs$core$IFn$_invoke$arity$2 ? pred__17971.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),expr__17972) : pred__17971.call(null,new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),expr__17972)))){\r\nreturn (new cljs.pprint.indent_t(self__.type_tag,self__.logical_block,self__.relative_to,self__.offset,G__17582,self__.end_pos,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17971.cljs$core$IFn$_invoke$arity$2 ? pred__17971.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),expr__17972) : pred__17971.call(null,new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),expr__17972)))){\r\nreturn (new cljs.pprint.indent_t(self__.type_tag,self__.logical_block,self__.relative_to,self__.offset,self__.start_pos,G__17582,self__.__meta,self__.__extmap,null));\r\n} else {\r\nreturn (new cljs.pprint.indent_t(self__.type_tag,self__.logical_block,self__.relative_to,self__.offset,self__.start_pos,self__.end_pos,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4511__auto__,G__17582),null));\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.pprint.indent_t.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__4515__auto__){\r\nvar self__ \x3d this;\r\nvar this__4515__auto____$1 \x3d this;\r\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),self__.type_tag,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),self__.logical_block,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22relative-to\x22,\x22relative-to\x22,-470100051),self__.relative_to,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),self__.offset,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),self__.start_pos,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),self__.end_pos,null))], null),self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.indent_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__4501__auto__,G__17582){\r\nvar self__ \x3d this;\r\nvar this__4501__auto____$1 \x3d this;\r\nreturn (new cljs.pprint.indent_t(self__.type_tag,self__.logical_block,self__.relative_to,self__.offset,self__.start_pos,self__.end_pos,G__17582,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(cljs.pprint.indent_t.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__4507__auto__,entry__4508__auto__){\r\nvar self__ \x3d this;\r\nvar this__4507__auto____$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(entry__4508__auto__)){\r\nreturn this__4507__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4508__auto__,(0)),cljs.core._nth(entry__4508__auto__,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4507__auto____$1,entry__4508__auto__);\r\n}\r\n}));\r\n\r\n(cljs.pprint.indent_t.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22type-tag\x22,\x22type-tag\x22,-233331740,null),new cljs.core.Symbol(null,\x22logical-block\x22,\x22logical-block\x22,1059508963,null),new cljs.core.Symbol(null,\x22relative-to\x22,\x22relative-to\x22,1170431476,null),new cljs.core.Symbol(null,\x22offset\x22,\x22offset\x22,1937029838,null),new cljs.core.Symbol(null,\x22start-pos\x22,\x22start-pos\x22,-1985646683,null),new cljs.core.Symbol(null,\x22end-pos\x22,\x22end-pos\x22,-3352399,null)], null);\r\n}));\r\n\r\n(cljs.pprint.indent_t.cljs$lang$type \x3d true);\r\n\r\n(cljs.pprint.indent_t.cljs$lang$ctorPrSeq \x3d (function (this__4546__auto__){\r\nreturn (new cljs.core.List(null,\x22cljs.pprint/indent-t\x22,null,(1),null));\r\n}));\r\n\r\n(cljs.pprint.indent_t.cljs$lang$ctorPrWriter \x3d (function (this__4546__auto__,writer__4547__auto__){\r\nreturn cljs.core._write(writer__4547__auto__,\x22cljs.pprint/indent-t\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.pprint/indent-t.\r\n */\r\ncljs.pprint.__GT_indent_t \x3d (function cljs$pprint$__GT_indent_t(type_tag,logical_block,relative_to,offset,start_pos,end_pos){\r\nreturn (new cljs.pprint.indent_t(type_tag,logical_block,relative_to,offset,start_pos,end_pos,null,null,null));\r\n});\r\n\r\n/**\r\n * Factory function for cljs.pprint/indent-t, taking a map of keywords to field values.\r\n */\r\ncljs.pprint.map__GT_indent_t \x3d (function cljs$pprint$map__GT_indent_t(G__17591){\r\nvar extmap__4542__auto__ \x3d (function (){var G__17986 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__17591,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),new cljs.core.Keyword(null,\x22relative-to\x22,\x22relative-to\x22,-470100051),new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926)], 0));\r\nif(cljs.core.record_QMARK_(G__17591)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__17986);\r\n} else {\r\nreturn G__17986;\r\n}\r\n})();\r\nreturn (new cljs.pprint.indent_t(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(G__17591),new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(G__17591),new cljs.core.Keyword(null,\x22relative-to\x22,\x22relative-to\x22,-470100051).cljs$core$IFn$_invoke$arity$1(G__17591),new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311).cljs$core$IFn$_invoke$arity$1(G__17591),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086).cljs$core$IFn$_invoke$arity$1(G__17591),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926).cljs$core$IFn$_invoke$arity$1(G__17591),null,cljs.core.not_empty(extmap__4542__auto__),null));\r\n});\r\n\r\n\r\ncljs.pprint.make_indent_t \x3d (function cljs$pprint$make_indent_t(logical_block,relative_to,offset,start_pos,end_pos){\r\nreturn (new cljs.pprint.indent_t(new cljs.core.Keyword(null,\x22indent-t\x22,\x22indent-t\x22,528318969),logical_block,relative_to,offset,start_pos,end_pos,null,null,null));\r\n});\r\n\r\ncljs.pprint.indent_t_QMARK_ \x3d (function cljs$pprint$indent_t_QMARK_(x__16744__auto__){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(x__16744__auto__),new cljs.core.Keyword(null,\x22indent-t\x22,\x22indent-t\x22,528318969));\r\n});\r\ncljs.pprint.pp_newline \x3d (function cljs$pprint$pp_newline(){\r\nreturn \x22\\n\x22;\r\n});\r\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint.write_token !\x3d\x3d \x27undefined\x27)){\r\n} else {\r\ncljs.pprint.write_token \x3d (function (){var method_table__4747__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar prefer_table__4748__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar method_cache__4749__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar cached_hierarchy__4750__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar hierarchy__4751__auto__ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22hierarchy\x22,\x22hierarchy\x22,-1053470341),(function (){var fexpr__18002 \x3d cljs.core.get_global_hierarchy;\r\nreturn (fexpr__18002.cljs$core$IFn$_invoke$arity$0 ? fexpr__18002.cljs$core$IFn$_invoke$arity$0() : fexpr__18002.call(null));\r\n})());\r\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\x22cljs.pprint\x22,\x22write-token\x22),(function (p1__17997_SHARP_,p2__17996_SHARP_){\r\nreturn new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(p2__17996_SHARP_);\r\n}),new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),hierarchy__4751__auto__,method_table__4747__auto__,prefer_table__4748__auto__,method_cache__4749__auto__,cached_hierarchy__4750__auto__));\r\n})();\r\n}\r\ncljs.pprint.write_token.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22start-block-t\x22,\x22start-block-t\x22,-373430594),(function (this$,token){\r\nvar temp__5753__auto___21818 \x3d new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\r\nif(cljs.core.truth_(temp__5753__auto___21818)){\r\nvar cb_21819 \x3d temp__5753__auto___21818;\r\n(cb_21819.cljs$core$IFn$_invoke$arity$1 ? cb_21819.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981)) : cb_21819.call(null,new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981)));\r\n} else {\r\n}\r\n\r\nvar lb \x3d new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(token);\r\nvar temp__5753__auto___21823 \x3d new cljs.core.Keyword(null,\x22prefix\x22,\x22prefix\x22,-265908465).cljs$core$IFn$_invoke$arity$1(lb);\r\nif(cljs.core.truth_(temp__5753__auto___21823)){\r\nvar prefix_21827 \x3d temp__5753__auto___21823;\r\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),prefix_21827);\r\n} else {\r\n}\r\n\r\nvar col \x3d cljs.pprint.get_column(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))));\r\ncljs.core.reset_BANG_(new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143).cljs$core$IFn$_invoke$arity$1(lb),col);\r\n\r\nreturn cljs.core.reset_BANG_(new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125).cljs$core$IFn$_invoke$arity$1(lb),col);\r\n}));\r\ncljs.pprint.write_token.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22end-block-t\x22,\x22end-block-t\x22,1544648735),(function (this$,token){\r\nvar temp__5753__auto___21829 \x3d new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\r\nif(cljs.core.truth_(temp__5753__auto___21829)){\r\nvar cb_21830 \x3d temp__5753__auto___21829;\r\n(cb_21830.cljs$core$IFn$_invoke$arity$1 ? cb_21830.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22end\x22,\x22end\x22,-268185958)) : cb_21830.call(null,new cljs.core.Keyword(null,\x22end\x22,\x22end\x22,-268185958)));\r\n} else {\r\n}\r\n\r\nvar temp__5753__auto__ \x3d new cljs.core.Keyword(null,\x22suffix\x22,\x22suffix\x22,367373057).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(token));\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar suffix \x3d temp__5753__auto__;\r\nreturn cljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),suffix);\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\ncljs.pprint.write_token.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22indent-t\x22,\x22indent-t\x22,528318969),(function (this$,token){\r\nvar lb \x3d new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(token);\r\nreturn cljs.core.reset_BANG_(new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125).cljs$core$IFn$_invoke$arity$1(lb),(new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311).cljs$core$IFn$_invoke$arity$1(token) + (function (){var pred__18025 \x3d cljs.core._EQ_;\r\nvar expr__18026 \x3d new cljs.core.Keyword(null,\x22relative-to\x22,\x22relative-to\x22,-470100051).cljs$core$IFn$_invoke$arity$1(token);\r\nif(cljs.core.truth_((pred__18025.cljs$core$IFn$_invoke$arity$2 ? pred__18025.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22block\x22,\x22block\x22,664686210),expr__18026) : pred__18025.call(null,new cljs.core.Keyword(null,\x22block\x22,\x22block\x22,664686210),expr__18026)))){\r\nreturn cljs.core.deref(new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143).cljs$core$IFn$_invoke$arity$1(lb));\r\n} else {\r\nif(cljs.core.truth_((pred__18025.cljs$core$IFn$_invoke$arity$2 ? pred__18025.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22current\x22,\x22current\x22,-1088038603),expr__18026) : pred__18025.call(null,new cljs.core.Keyword(null,\x22current\x22,\x22current\x22,-1088038603),expr__18026)))){\r\nreturn cljs.pprint.get_column(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))));\r\n} else {\r\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__18026)].join(\x27\x27)));\r\n}\r\n}\r\n})()));\r\n}));\r\ncljs.pprint.write_token.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22buffer-blob\x22,\x22buffer-blob\x22,-1830112173),(function (this$,token){\r\nreturn cljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),new cljs.core.Keyword(null,\x22data\x22,\x22data\x22,-232669377).cljs$core$IFn$_invoke$arity$1(token));\r\n}));\r\ncljs.pprint.write_token.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22nl-t\x22,\x22nl-t\x22,-1608382114),(function (this$,token){\r\nif(cljs.core.truth_((function (){var or__4253__auto__ \x3d cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348).cljs$core$IFn$_invoke$arity$1(token),new cljs.core.Keyword(null,\x22mandatory\x22,\x22mandatory\x22,542802336));\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar and__4251__auto__ \x3d (!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348).cljs$core$IFn$_invoke$arity$1(token),new cljs.core.Keyword(null,\x22fill\x22,\x22fill\x22,883462889))));\r\nif(and__4251__auto__){\r\nreturn cljs.core.deref(new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(token)));\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n}\r\n})())){\r\n(cljs.pprint.emit_nl.cljs$core$IFn$_invoke$arity$2 ? cljs.pprint.emit_nl.cljs$core$IFn$_invoke$arity$2(this$,token) : cljs.pprint.emit_nl.call(null,this$,token));\r\n} else {\r\nvar temp__5751__auto___21832 \x3d new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\r\nif(cljs.core.truth_(temp__5751__auto___21832)){\r\nvar tws_21833 \x3d temp__5751__auto___21832;\r\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),tws_21833);\r\n} else {\r\n}\r\n}\r\n\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),null);\r\n}));\r\ncljs.pprint.write_tokens \x3d (function cljs$pprint$write_tokens(this$,tokens,force_trailing_whitespace){\r\nvar seq__18046 \x3d cljs.core.seq(tokens);\r\nvar chunk__18047 \x3d null;\r\nvar count__18048 \x3d (0);\r\nvar i__18049 \x3d (0);\r\nwhile(true){\r\nif((i__18049 \x3c count__18048)){\r\nvar token \x3d chunk__18047.cljs$core$IIndexed$_nth$arity$2(null,i__18049);\r\nif((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(token),new cljs.core.Keyword(null,\x22nl-t\x22,\x22nl-t\x22,-1608382114))))){\r\nvar temp__5751__auto___21842 \x3d new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\r\nif(cljs.core.truth_(temp__5751__auto___21842)){\r\nvar tws_21844 \x3d temp__5751__auto___21842;\r\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),tws_21844);\r\n} else {\r\n}\r\n} else {\r\n}\r\n\r\ncljs.pprint.write_token.cljs$core$IFn$_invoke$arity$2(this$,token);\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996).cljs$core$IFn$_invoke$arity$1(token));\r\n\r\nvar tws_21846 \x3d new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d force_trailing_whitespace;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn tws_21846;\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),tws_21846);\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),null);\r\n} else {\r\n}\r\n\r\n\r\nvar G__21848 \x3d seq__18046;\r\nvar G__21849 \x3d chunk__18047;\r\nvar G__21850 \x3d count__18048;\r\nvar G__21851 \x3d (i__18049 + (1));\r\nseq__18046 \x3d G__21848;\r\nchunk__18047 \x3d G__21849;\r\ncount__18048 \x3d G__21850;\r\ni__18049 \x3d G__21851;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto__ \x3d cljs.core.seq(seq__18046);\r\nif(temp__5753__auto__){\r\nvar seq__18046__$1 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__18046__$1)){\r\nvar c__4679__auto__ \x3d cljs.core.chunk_first(seq__18046__$1);\r\nvar G__21852 \x3d cljs.core.chunk_rest(seq__18046__$1);\r\nvar G__21853 \x3d c__4679__auto__;\r\nvar G__21854 \x3d cljs.core.count(c__4679__auto__);\r\nvar G__21855 \x3d (0);\r\nseq__18046 \x3d G__21852;\r\nchunk__18047 \x3d G__21853;\r\ncount__18048 \x3d G__21854;\r\ni__18049 \x3d G__21855;\r\ncontinue;\r\n} else {\r\nvar token \x3d cljs.core.first(seq__18046__$1);\r\nif((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(token),new cljs.core.Keyword(null,\x22nl-t\x22,\x22nl-t\x22,-1608382114))))){\r\nvar temp__5751__auto___21856 \x3d new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\r\nif(cljs.core.truth_(temp__5751__auto___21856)){\r\nvar tws_21857 \x3d temp__5751__auto___21856;\r\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),tws_21857);\r\n} else {\r\n}\r\n} else {\r\n}\r\n\r\ncljs.pprint.write_token.cljs$core$IFn$_invoke$arity$2(this$,token);\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996).cljs$core$IFn$_invoke$arity$1(token));\r\n\r\nvar tws_21862 \x3d new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d force_trailing_whitespace;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn tws_21862;\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),tws_21862);\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),null);\r\n} else {\r\n}\r\n\r\n\r\nvar G__21871 \x3d cljs.core.next(seq__18046__$1);\r\nvar G__21872 \x3d null;\r\nvar G__21873 \x3d (0);\r\nvar G__21874 \x3d (0);\r\nseq__18046 \x3d G__21871;\r\nchunk__18047 \x3d G__21872;\r\ncount__18048 \x3d G__21873;\r\ni__18049 \x3d G__21874;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.pprint.tokens_fit_QMARK_ \x3d (function cljs$pprint$tokens_fit_QMARK_(this$,tokens){\r\nvar maxcol \x3d cljs.pprint.get_max_column(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))));\r\nreturn (((maxcol \x3d\x3d null)) || (((cljs.pprint.get_column(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)))) + cljs.pprint.buffer_length(tokens)) \x3c maxcol)));\r\n});\r\ncljs.pprint.linear_nl_QMARK_ \x3d (function cljs$pprint$linear_nl_QMARK_(this$,lb,section){\r\nvar or__4253__auto__ \x3d cljs.core.deref(new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340).cljs$core$IFn$_invoke$arity$1(lb));\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn (!(cljs.pprint.tokens_fit_QMARK_(this$,section)));\r\n}\r\n});\r\ncljs.pprint.miser_nl_QMARK_ \x3d (function cljs$pprint$miser_nl_QMARK_(this$,lb,section){\r\nvar miser_width \x3d cljs.pprint.get_miser_width(this$);\r\nvar maxcol \x3d cljs.pprint.get_max_column(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))));\r\nvar and__4251__auto__ \x3d miser_width;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nvar and__4251__auto____$1 \x3d maxcol;\r\nif(cljs.core.truth_(and__4251__auto____$1)){\r\nvar and__4251__auto____$2 \x3d (cljs.core.deref(new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143).cljs$core$IFn$_invoke$arity$1(lb)) \x3e\x3d (maxcol - miser_width));\r\nif(and__4251__auto____$2){\r\nreturn cljs.pprint.linear_nl_QMARK_(this$,lb,section);\r\n} else {\r\nreturn and__4251__auto____$2;\r\n}\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n});\r\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint.emit_nl_QMARK_ !\x3d\x3d \x27undefined\x27)){\r\n} else {\r\ncljs.pprint.emit_nl_QMARK_ \x3d (function (){var method_table__4747__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar prefer_table__4748__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar method_cache__4749__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar cached_hierarchy__4750__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar hierarchy__4751__auto__ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22hierarchy\x22,\x22hierarchy\x22,-1053470341),(function (){var fexpr__18108 \x3d cljs.core.get_global_hierarchy;\r\nreturn (fexpr__18108.cljs$core$IFn$_invoke$arity$0 ? fexpr__18108.cljs$core$IFn$_invoke$arity$0() : fexpr__18108.call(null));\r\n})());\r\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\x22cljs.pprint\x22,\x22emit-nl?\x22),(function (t,_,___$1,___$2){\r\nreturn new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348).cljs$core$IFn$_invoke$arity$1(t);\r\n}),new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),hierarchy__4751__auto__,method_table__4747__auto__,prefer_table__4748__auto__,method_cache__4749__auto__,cached_hierarchy__4750__auto__));\r\n})();\r\n}\r\ncljs.pprint.emit_nl_QMARK_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697),(function (newl,this$,section,_){\r\nvar lb \x3d new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(newl);\r\nreturn cljs.pprint.linear_nl_QMARK_(this$,lb,section);\r\n}));\r\ncljs.pprint.emit_nl_QMARK_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22miser\x22,\x22miser\x22,-556060186),(function (newl,this$,section,_){\r\nvar lb \x3d new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(newl);\r\nreturn cljs.pprint.miser_nl_QMARK_(this$,lb,section);\r\n}));\r\ncljs.pprint.emit_nl_QMARK_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22fill\x22,\x22fill\x22,883462889),(function (newl,this$,section,subsection){\r\nvar lb \x3d new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(newl);\r\nvar or__4253__auto__ \x3d cljs.core.deref(new cljs.core.Keyword(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,1808826875).cljs$core$IFn$_invoke$arity$1(lb));\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar or__4253__auto____$1 \x3d (!(cljs.pprint.tokens_fit_QMARK_(this$,subsection)));\r\nif(or__4253__auto____$1){\r\nreturn or__4253__auto____$1;\r\n} else {\r\nreturn cljs.pprint.miser_nl_QMARK_(this$,lb,section);\r\n}\r\n}\r\n}));\r\ncljs.pprint.emit_nl_QMARK_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22mandatory\x22,\x22mandatory\x22,542802336),(function (_,___$1,___$2,___$3){\r\nreturn true;\r\n}));\r\ncljs.pprint.get_section \x3d (function cljs$pprint$get_section(buffer){\r\nvar nl \x3d cljs.core.first(buffer);\r\nvar lb \x3d new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(nl);\r\nvar section \x3d cljs.core.seq(cljs.core.take_while.cljs$core$IFn$_invoke$arity$2((function (p1__18118_SHARP_){\r\nreturn (!(((cljs.pprint.nl_t_QMARK_(p1__18118_SHARP_)) \x26\x26 (cljs.pprint.ancestor_QMARK_(new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(p1__18118_SHARP_),lb)))));\r\n}),cljs.core.next(buffer)));\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [section,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2((cljs.core.count(section) + (1)),buffer))], null);\r\n});\r\ncljs.pprint.get_sub_section \x3d (function cljs$pprint$get_sub_section(buffer){\r\nvar nl \x3d cljs.core.first(buffer);\r\nvar lb \x3d new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(nl);\r\nvar section \x3d cljs.core.seq(cljs.core.take_while.cljs$core$IFn$_invoke$arity$2((function (p1__18131_SHARP_){\r\nvar nl_lb \x3d new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(p1__18131_SHARP_);\r\nreturn (!(((cljs.pprint.nl_t_QMARK_(p1__18131_SHARP_)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(nl_lb,lb)) || (cljs.pprint.ancestor_QMARK_(nl_lb,lb)))))));\r\n}),cljs.core.next(buffer)));\r\nreturn section;\r\n});\r\ncljs.pprint.update_nl_state \x3d (function cljs$pprint$update_nl_state(lb){\r\ncljs.core.reset_BANG_(new cljs.core.Keyword(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,1808826875).cljs$core$IFn$_invoke$arity$1(lb),true);\r\n\r\ncljs.core.reset_BANG_(new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340).cljs$core$IFn$_invoke$arity$1(lb),true);\r\n\r\nvar lb__$1 \x3d new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779).cljs$core$IFn$_invoke$arity$1(lb);\r\nwhile(true){\r\nif(cljs.core.truth_(lb__$1)){\r\ncljs.core.reset_BANG_(new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340).cljs$core$IFn$_invoke$arity$1(lb__$1),true);\r\n\r\ncljs.core.reset_BANG_(new cljs.core.Keyword(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,1808826875).cljs$core$IFn$_invoke$arity$1(lb__$1),true);\r\n\r\nvar G__21893 \x3d new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779).cljs$core$IFn$_invoke$arity$1(lb__$1);\r\nlb__$1 \x3d G__21893;\r\ncontinue;\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.pprint.emit_nl \x3d (function cljs$pprint$emit_nl(this$,nl){\r\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),cljs.pprint.pp_newline());\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),null);\r\n\r\nvar lb \x3d new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(nl);\r\nvar prefix \x3d new cljs.core.Keyword(null,\x22per-line-prefix\x22,\x22per-line-prefix\x22,846941813).cljs$core$IFn$_invoke$arity$1(lb);\r\nif(cljs.core.truth_(prefix)){\r\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),prefix);\r\n} else {\r\n}\r\n\r\nvar istr_21895 \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((cljs.core.deref(new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125).cljs$core$IFn$_invoke$arity$1(lb)) - cljs.core.count(prefix)),\x22 \x22));\r\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),istr_21895);\r\n\r\nreturn cljs.pprint.update_nl_state(lb);\r\n});\r\ncljs.pprint.split_at_newline \x3d (function cljs$pprint$split_at_newline(tokens){\r\nvar pre \x3d cljs.core.seq(cljs.core.take_while.cljs$core$IFn$_invoke$arity$2((function (p1__18157_SHARP_){\r\nreturn (!(cljs.pprint.nl_t_QMARK_(p1__18157_SHARP_)));\r\n}),tokens));\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pre,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(pre),tokens))], null);\r\n});\r\ncljs.pprint.write_token_string \x3d (function cljs$pprint$write_token_string(this$,tokens){\r\nvar vec__18163 \x3d cljs.pprint.split_at_newline(tokens);\r\nvar a \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18163,(0),null);\r\nvar b \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18163,(1),null);\r\nif(cljs.core.truth_(a)){\r\ncljs.pprint.write_tokens(this$,a,false);\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_(b)){\r\nvar vec__18166 \x3d cljs.pprint.get_section(b);\r\nvar section \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18166,(0),null);\r\nvar remainder \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18166,(1),null);\r\nvar newl \x3d cljs.core.first(b);\r\nvar do_nl \x3d cljs.pprint.emit_nl_QMARK_.cljs$core$IFn$_invoke$arity$4(newl,this$,section,cljs.pprint.get_sub_section(b));\r\nvar result \x3d (cljs.core.truth_(do_nl)?(function (){\r\ncljs.pprint.emit_nl(this$,newl);\r\n\r\nreturn cljs.core.next(b);\r\n})()\r\n:b);\r\nvar long_section \x3d (!(cljs.pprint.tokens_fit_QMARK_(this$,result)));\r\nvar result__$1 \x3d ((long_section)?(function (){var rem2 \x3d (cljs.pprint.write_token_string.cljs$core$IFn$_invoke$arity$2 ? cljs.pprint.write_token_string.cljs$core$IFn$_invoke$arity$2(this$,section) : cljs.pprint.write_token_string.call(null,this$,section));\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(rem2,section)){\r\ncljs.pprint.write_tokens(this$,section,false);\r\n\r\nreturn remainder;\r\n} else {\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(rem2,remainder));\r\n}\r\n})():result);\r\nreturn result__$1;\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ncljs.pprint.write_line \x3d (function cljs$pprint$write_line(this$){\r\nvar buffer \x3d new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\r\nwhile(true){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,buffer));\r\n\r\nif((!(cljs.pprint.tokens_fit_QMARK_(this$,buffer)))){\r\nvar new_buffer \x3d cljs.pprint.write_token_string(this$,buffer);\r\nif((!((buffer \x3d\x3d\x3d new_buffer)))){\r\nvar G__21897 \x3d new_buffer;\r\nbuffer \x3d G__21897;\r\ncontinue;\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.pprint.add_to_buffer \x3d (function cljs$pprint$add_to_buffer(this$,token){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),token));\r\n\r\nif((!(cljs.pprint.tokens_fit_QMARK_(this$,new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))))))){\r\nreturn cljs.pprint.write_line(this$);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ncljs.pprint.write_buffered_output \x3d (function cljs$pprint$write_buffered_output(this$){\r\ncljs.pprint.write_line(this$);\r\n\r\nvar temp__5751__auto__ \x3d new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar buf \x3d temp__5751__auto__;\r\ncljs.pprint.write_tokens(this$,buf,true);\r\n\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198),cljs.core.PersistentVector.EMPTY);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ncljs.pprint.write_white_space \x3d (function cljs$pprint$write_white_space(this$){\r\nvar temp__5753__auto__ \x3d new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar tws \x3d temp__5753__auto__;\r\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),tws);\r\n\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),null);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ncljs.pprint.write_initial_lines \x3d (function cljs$pprint$write_initial_lines(this$,s){\r\nvar lines \x3d clojure.string.split.cljs$core$IFn$_invoke$arity$3(s,\x22\\n\x22,(-1));\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(lines),(1))){\r\nreturn s;\r\n} else {\r\nvar prefix \x3d new cljs.core.Keyword(null,\x22per-line-prefix\x22,\x22per-line-prefix\x22,846941813).cljs$core$IFn$_invoke$arity$1(cljs.core.first(new cljs.core.Keyword(null,\x22logical-blocks\x22,\x22logical-blocks\x22,-1466339776).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)))));\r\nvar l \x3d cljs.core.first(lines);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22buffering\x22,\x22buffering\x22,-876713613),new cljs.core.Keyword(null,\x22mode\x22,\x22mode\x22,654403691).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))))){\r\nvar oldpos_21906 \x3d new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\r\nvar newpos_21907 \x3d (oldpos_21906 + cljs.core.count(l));\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220),newpos_21907);\r\n\r\ncljs.pprint.add_to_buffer(this$,cljs.pprint.make_buffer_blob(l,null,oldpos_21906,newpos_21907));\r\n\r\ncljs.pprint.write_buffered_output(this$);\r\n} else {\r\ncljs.pprint.write_white_space(this$);\r\n\r\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),l);\r\n}\r\n\r\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),\x22\\n\x22);\r\n\r\nvar seq__18216_21910 \x3d cljs.core.seq(cljs.core.next(cljs.core.butlast(lines)));\r\nvar chunk__18217_21911 \x3d null;\r\nvar count__18218_21912 \x3d (0);\r\nvar i__18219_21913 \x3d (0);\r\nwhile(true){\r\nif((i__18219_21913 \x3c count__18218_21912)){\r\nvar l_21914__$1 \x3d chunk__18217_21911.cljs$core$IIndexed$_nth$arity$2(null,i__18219_21913);\r\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),l_21914__$1);\r\n\r\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),cljs.pprint.pp_newline());\r\n\r\nif(cljs.core.truth_(prefix)){\r\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),prefix);\r\n} else {\r\n}\r\n\r\n\r\nvar G__21920 \x3d seq__18216_21910;\r\nvar G__21921 \x3d chunk__18217_21911;\r\nvar G__21922 \x3d count__18218_21912;\r\nvar G__21923 \x3d (i__18219_21913 + (1));\r\nseq__18216_21910 \x3d G__21920;\r\nchunk__18217_21911 \x3d G__21921;\r\ncount__18218_21912 \x3d G__21922;\r\ni__18219_21913 \x3d G__21923;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto___21927 \x3d cljs.core.seq(seq__18216_21910);\r\nif(temp__5753__auto___21927){\r\nvar seq__18216_21930__$1 \x3d temp__5753__auto___21927;\r\nif(cljs.core.chunked_seq_QMARK_(seq__18216_21930__$1)){\r\nvar c__4679__auto___21935 \x3d cljs.core.chunk_first(seq__18216_21930__$1);\r\nvar G__21941 \x3d cljs.core.chunk_rest(seq__18216_21930__$1);\r\nvar G__21942 \x3d c__4679__auto___21935;\r\nvar G__21943 \x3d cljs.core.count(c__4679__auto___21935);\r\nvar G__21944 \x3d (0);\r\nseq__18216_21910 \x3d G__21941;\r\nchunk__18217_21911 \x3d G__21942;\r\ncount__18218_21912 \x3d G__21943;\r\ni__18219_21913 \x3d G__21944;\r\ncontinue;\r\n} else {\r\nvar l_21947__$1 \x3d cljs.core.first(seq__18216_21930__$1);\r\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),l_21947__$1);\r\n\r\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),cljs.pprint.pp_newline());\r\n\r\nif(cljs.core.truth_(prefix)){\r\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),prefix);\r\n} else {\r\n}\r\n\r\n\r\nvar G__21964 \x3d cljs.core.next(seq__18216_21930__$1);\r\nvar G__21965 \x3d null;\r\nvar G__21966 \x3d (0);\r\nvar G__21967 \x3d (0);\r\nseq__18216_21910 \x3d G__21964;\r\nchunk__18217_21911 \x3d G__21965;\r\ncount__18218_21912 \x3d G__21966;\r\ni__18219_21913 \x3d G__21967;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22buffering\x22,\x22buffering\x22,-876713613),new cljs.core.Keyword(null,\x22writing\x22,\x22writing\x22,-1486865108));\r\n\r\nreturn cljs.core.last(lines);\r\n}\r\n});\r\ncljs.pprint.p_write_char \x3d (function cljs$pprint$p_write_char(this$,c){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22mode\x22,\x22mode\x22,654403691).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),new cljs.core.Keyword(null,\x22writing\x22,\x22writing\x22,-1486865108))){\r\ncljs.pprint.write_white_space(this$);\r\n\r\nreturn cljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),c);\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(c,\x22\\n\x22)){\r\nreturn cljs.pprint.write_initial_lines(this$,\x22\\n\x22);\r\n} else {\r\nvar oldpos \x3d new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\r\nvar newpos \x3d (oldpos + (1));\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220),newpos);\r\n\r\nreturn cljs.pprint.add_to_buffer(this$,cljs.pprint.make_buffer_blob(cljs.core.char$(c),null,oldpos,newpos));\r\n}\r\n}\r\n});\r\ncljs.pprint.pretty_writer \x3d (function cljs$pprint$pretty_writer(writer,max_columns,miser_width){\r\nvar lb \x3d (new cljs.pprint.logical_block(null,null,cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)),cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false),null,null,null,null,null,null,null));\r\nvar fields \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\x22logical-blocks\x22,\x22logical-blocks\x22,-1466339776),new cljs.core.Keyword(null,\x22miser-width\x22,\x22miser-width\x22,-1310049437),new cljs.core.Keyword(null,\x22buffer-block\x22,\x22buffer-block\x22,-10937307),new cljs.core.Keyword(null,\x22pretty-writer\x22,\x22pretty-writer\x22,-1222834267),new cljs.core.Keyword(null,\x22sections\x22,\x22sections\x22,-886710106),new cljs.core.Keyword(null,\x22mode\x22,\x22mode\x22,654403691),new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220),new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322),new cljs.core.Keyword(null,\x22buffer-level\x22,\x22buffer-level\x22,928864731),new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198)],[lb,miser_width,lb,true,null,new cljs.core.Keyword(null,\x22writing\x22,\x22writing\x22,-1486865108),(0),null,cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(writer,max_columns),(1),cljs.core.PersistentVector.EMPTY]));\r\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint.t_cljs$pprint18277 !\x3d\x3d \x27undefined\x27)){\r\n} else {\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IWriter}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.IDeref}\r\n * @implements {cljs.pprint.IPrettyFlush}\r\n * @implements {cljs.core.IWithMeta}\r\n*/\r\ncljs.pprint.t_cljs$pprint18277 \x3d (function (writer,max_columns,miser_width,lb,fields,meta18278){\r\nthis.writer \x3d writer;\r\nthis.max_columns \x3d max_columns;\r\nthis.miser_width \x3d miser_width;\r\nthis.lb \x3d lb;\r\nthis.fields \x3d fields;\r\nthis.meta18278 \x3d meta18278;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 1074167808;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.pprint.t_cljs$pprint18277.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_18279,meta18278__$1){\r\nvar self__ \x3d this;\r\nvar _18279__$1 \x3d this;\r\nreturn (new cljs.pprint.t_cljs$pprint18277(self__.writer,self__.max_columns,self__.miser_width,self__.lb,self__.fields,meta18278__$1));\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint18277.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_18279){\r\nvar self__ \x3d this;\r\nvar _18279__$1 \x3d this;\r\nreturn self__.meta18278;\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint18277.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn self__.fields;\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint18277.prototype.cljs$core$IWriter$_write$arity$2 \x3d (function (this$,x){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nvar pred__18302 \x3d cljs.core._EQ_;\r\nvar expr__18303 \x3d cljs.core.type(x);\r\nif(cljs.core.truth_((pred__18302.cljs$core$IFn$_invoke$arity$2 ? pred__18302.cljs$core$IFn$_invoke$arity$2(String,expr__18303) : pred__18302.call(null,String,expr__18303)))){\r\nvar s0 \x3d cljs.pprint.write_initial_lines(this$__$1,x);\r\nvar s \x3d clojure.string.replace_first(s0,/\\s+$/,\x22\x22);\r\nvar white_space \x3d cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s0,((s).length));\r\nvar mode \x3d new cljs.core.Keyword(null,\x22mode\x22,\x22mode\x22,654403691).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$__$1)));\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(mode,new cljs.core.Keyword(null,\x22writing\x22,\x22writing\x22,-1486865108))){\r\ncljs.pprint.write_white_space(this$__$1);\r\n\r\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$__$1))),s);\r\n\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$__$1),cljs.core.assoc,new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),white_space);\r\n} else {\r\nvar oldpos \x3d new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$__$1)));\r\nvar newpos \x3d (oldpos + cljs.core.count(s0));\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$__$1),cljs.core.assoc,new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220),newpos);\r\n\r\nreturn cljs.pprint.add_to_buffer(this$__$1,cljs.pprint.make_buffer_blob(s,white_space,oldpos,newpos));\r\n}\r\n} else {\r\nif(cljs.core.truth_((pred__18302.cljs$core$IFn$_invoke$arity$2 ? pred__18302.cljs$core$IFn$_invoke$arity$2(Number,expr__18303) : pred__18302.call(null,Number,expr__18303)))){\r\nreturn cljs.pprint.p_write_char(this$__$1,x);\r\n} else {\r\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__18303)].join(\x27\x27)));\r\n}\r\n}\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint18277.prototype.cljs$core$IWriter$_flush$arity$1 \x3d (function (this$){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nthis$__$1.cljs$pprint$IPrettyFlush$_ppflush$arity$1(null);\r\n\r\nreturn cljs.core._flush(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$__$1))));\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint18277.prototype.cljs$pprint$IPrettyFlush$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.pprint.t_cljs$pprint18277.prototype.cljs$pprint$IPrettyFlush$_ppflush$arity$1 \x3d (function (this$){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22mode\x22,\x22mode\x22,654403691).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$__$1))),new cljs.core.Keyword(null,\x22buffering\x22,\x22buffering\x22,-876713613))){\r\ncljs.pprint.write_tokens(this$__$1,new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$__$1))),true);\r\n\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$__$1),cljs.core.assoc,new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198),cljs.core.PersistentVector.EMPTY);\r\n} else {\r\nreturn cljs.pprint.write_white_space(this$__$1);\r\n}\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint18277.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22writer\x22,\x22writer\x22,1362963291,null),new cljs.core.Symbol(null,\x22max-columns\x22,\x22max-columns\x22,-912112507,null),new cljs.core.Symbol(null,\x22miser-width\x22,\x22miser-width\x22,330482090,null),new cljs.core.Symbol(null,\x22lb\x22,\x22lb\x22,950310490,null),new cljs.core.Symbol(null,\x22fields\x22,\x22fields\x22,-291534703,null),new cljs.core.Symbol(null,\x22meta18278\x22,\x22meta18278\x22,1103190712,null)], null);\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint18277.cljs$lang$type \x3d true);\r\n\r\n(cljs.pprint.t_cljs$pprint18277.cljs$lang$ctorStr \x3d \x22cljs.pprint/t_cljs$pprint18277\x22);\r\n\r\n(cljs.pprint.t_cljs$pprint18277.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.pprint/t_cljs$pprint18277\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.pprint/t_cljs$pprint18277.\r\n */\r\ncljs.pprint.__GT_t_cljs$pprint18277 \x3d (function cljs$pprint$pretty_writer_$___GT_t_cljs$pprint18277(writer__$1,max_columns__$1,miser_width__$1,lb__$1,fields__$1,meta18278){\r\nreturn (new cljs.pprint.t_cljs$pprint18277(writer__$1,max_columns__$1,miser_width__$1,lb__$1,fields__$1,meta18278));\r\n});\r\n\r\n}\r\n\r\nreturn (new cljs.pprint.t_cljs$pprint18277(writer,max_columns,miser_width,lb,fields,cljs.core.PersistentArrayMap.EMPTY));\r\n});\r\ncljs.pprint.start_block \x3d (function cljs$pprint$start_block(this$,prefix,per_line_prefix,suffix){\r\nvar lb \x3d (new cljs.pprint.logical_block(new cljs.core.Keyword(null,\x22logical-blocks\x22,\x22logical-blocks\x22,-1466339776).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),null,cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)),cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false),prefix,per_line_prefix,suffix,null,null,null,null));\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22logical-blocks\x22,\x22logical-blocks\x22,-1466339776),lb);\r\n\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22mode\x22,\x22mode\x22,654403691).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),new cljs.core.Keyword(null,\x22writing\x22,\x22writing\x22,-1486865108))){\r\ncljs.pprint.write_white_space(this$);\r\n\r\nvar temp__5753__auto___21989 \x3d new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\r\nif(cljs.core.truth_(temp__5753__auto___21989)){\r\nvar cb_21990 \x3d temp__5753__auto___21989;\r\n(cb_21990.cljs$core$IFn$_invoke$arity$1 ? cb_21990.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981)) : cb_21990.call(null,new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981)));\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_(prefix)){\r\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),prefix);\r\n} else {\r\n}\r\n\r\nvar col \x3d cljs.pprint.get_column(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))));\r\ncljs.core.reset_BANG_(lb.start_col,col);\r\n\r\nreturn cljs.core.reset_BANG_(lb.indent,col);\r\n} else {\r\nvar oldpos \x3d new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\r\nvar newpos \x3d (oldpos + (cljs.core.truth_(prefix)?cljs.core.count(prefix):(0)));\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220),newpos);\r\n\r\nreturn cljs.pprint.add_to_buffer(this$,cljs.pprint.make_start_block_t(lb,oldpos,newpos));\r\n}\r\n});\r\ncljs.pprint.end_block \x3d (function cljs$pprint$end_block(this$){\r\nvar lb \x3d new cljs.core.Keyword(null,\x22logical-blocks\x22,\x22logical-blocks\x22,-1466339776).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\r\nvar suffix \x3d new cljs.core.Keyword(null,\x22suffix\x22,\x22suffix\x22,367373057).cljs$core$IFn$_invoke$arity$1(lb);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22mode\x22,\x22mode\x22,654403691).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),new cljs.core.Keyword(null,\x22writing\x22,\x22writing\x22,-1486865108))){\r\ncljs.pprint.write_white_space(this$);\r\n\r\nif(cljs.core.truth_(suffix)){\r\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),suffix);\r\n} else {\r\n}\r\n\r\nvar temp__5753__auto___21993 \x3d new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\r\nif(cljs.core.truth_(temp__5753__auto___21993)){\r\nvar cb_21994 \x3d temp__5753__auto___21993;\r\n(cb_21994.cljs$core$IFn$_invoke$arity$1 ? cb_21994.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22end\x22,\x22end\x22,-268185958)) : cb_21994.call(null,new cljs.core.Keyword(null,\x22end\x22,\x22end\x22,-268185958)));\r\n} else {\r\n}\r\n} else {\r\nvar oldpos_21995 \x3d new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\r\nvar newpos_21996 \x3d (oldpos_21995 + (cljs.core.truth_(suffix)?cljs.core.count(suffix):(0)));\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220),newpos_21996);\r\n\r\ncljs.pprint.add_to_buffer(this$,cljs.pprint.make_end_block_t(lb,oldpos_21995,newpos_21996));\r\n}\r\n\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22logical-blocks\x22,\x22logical-blocks\x22,-1466339776),new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779).cljs$core$IFn$_invoke$arity$1(lb));\r\n});\r\ncljs.pprint.nl \x3d (function cljs$pprint$nl(this$,type){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22mode\x22,\x22mode\x22,654403691),new cljs.core.Keyword(null,\x22buffering\x22,\x22buffering\x22,-876713613));\r\n\r\nvar pos \x3d new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\r\nreturn cljs.pprint.add_to_buffer(this$,cljs.pprint.make_nl_t(type,new cljs.core.Keyword(null,\x22logical-blocks\x22,\x22logical-blocks\x22,-1466339776).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),pos,pos));\r\n});\r\ncljs.pprint.indent \x3d (function cljs$pprint$indent(this$,relative_to,offset){\r\nvar lb \x3d new cljs.core.Keyword(null,\x22logical-blocks\x22,\x22logical-blocks\x22,-1466339776).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22mode\x22,\x22mode\x22,654403691).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),new cljs.core.Keyword(null,\x22writing\x22,\x22writing\x22,-1486865108))){\r\ncljs.pprint.write_white_space(this$);\r\n\r\nreturn cljs.core.reset_BANG_(new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125).cljs$core$IFn$_invoke$arity$1(lb),(offset + (function (){var pred__18385 \x3d cljs.core._EQ_;\r\nvar expr__18386 \x3d relative_to;\r\nif(cljs.core.truth_((pred__18385.cljs$core$IFn$_invoke$arity$2 ? pred__18385.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22block\x22,\x22block\x22,664686210),expr__18386) : pred__18385.call(null,new cljs.core.Keyword(null,\x22block\x22,\x22block\x22,664686210),expr__18386)))){\r\nreturn cljs.core.deref(new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143).cljs$core$IFn$_invoke$arity$1(lb));\r\n} else {\r\nif(cljs.core.truth_((pred__18385.cljs$core$IFn$_invoke$arity$2 ? pred__18385.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22current\x22,\x22current\x22,-1088038603),expr__18386) : pred__18385.call(null,new cljs.core.Keyword(null,\x22current\x22,\x22current\x22,-1088038603),expr__18386)))){\r\nreturn cljs.pprint.get_column(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))));\r\n} else {\r\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__18386)].join(\x27\x27)));\r\n}\r\n}\r\n})()));\r\n} else {\r\nvar pos \x3d new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\r\nreturn cljs.pprint.add_to_buffer(this$,cljs.pprint.make_indent_t(lb,relative_to,offset,pos,pos));\r\n}\r\n});\r\ncljs.pprint.get_miser_width \x3d (function cljs$pprint$get_miser_width(this$){\r\nreturn new cljs.core.Keyword(null,\x22miser-width\x22,\x22miser-width\x22,-1310049437).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\r\n});\r\n/**\r\n * Bind to true if you want write to use pretty printing\r\n */\r\ncljs.pprint._STAR_print_pretty_STAR_ \x3d true;\r\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint._STAR_print_pprint_dispatch_STAR_ !\x3d\x3d \x27undefined\x27)){\r\n} else {\r\n/**\r\n * The pretty print dispatch function. Use with-pprint-dispatch or\r\n * set-pprint-dispatch to modify.\r\n */\r\ncljs.pprint._STAR_print_pprint_dispatch_STAR_ \x3d null;\r\n}\r\n/**\r\n * Pretty printing will try to avoid anything going beyond this column.\r\n * Set it to nil to have pprint let the line be arbitrarily long. This will ignore all\r\n * non-mandatory newlines.\r\n */\r\ncljs.pprint._STAR_print_right_margin_STAR_ \x3d (72);\r\n/**\r\n * The column at which to enter miser style. Depending on the dispatch table,\r\n * miser style add newlines in more places to try to keep lines short allowing for further\r\n * levels of nesting.\r\n */\r\ncljs.pprint._STAR_print_miser_width_STAR_ \x3d (40);\r\n/**\r\n * Maximum number of lines to print in a pretty print instance (N.B. This is not yet used)\r\n */\r\ncljs.pprint._STAR_print_lines_STAR_ \x3d null;\r\n/**\r\n * Mark circular structures (N.B. This is not yet used)\r\n */\r\ncljs.pprint._STAR_print_circle_STAR_ \x3d null;\r\n/**\r\n * Mark repeated structures rather than repeat them (N.B. This is not yet used)\r\n */\r\ncljs.pprint._STAR_print_shared_STAR_ \x3d null;\r\n/**\r\n * Don\x27t print namespaces with symbols. This is particularly useful when\r\n * pretty printing the results of macro expansions\r\n */\r\ncljs.pprint._STAR_print_suppress_namespaces_STAR_ \x3d null;\r\n/**\r\n * Print a radix specifier in front of integers and rationals. If *print-base* is 2, 8,\r\n * or 16, then the radix specifier used is #b, #o, or #x, respectively. Otherwise the\r\n * radix specifier is in the form #XXr where XX is the decimal value of *print-base* \r\n */\r\ncljs.pprint._STAR_print_radix_STAR_ \x3d null;\r\n/**\r\n * The base to use for printing integers and rationals.\r\n */\r\ncljs.pprint._STAR_print_base_STAR_ \x3d (10);\r\ncljs.pprint._STAR_current_level_STAR_ \x3d (0);\r\ncljs.pprint._STAR_current_length_STAR_ \x3d null;\r\ncljs.pprint.table_ize \x3d (function cljs$pprint$table_ize(t,m){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (p1__18430_SHARP_){\r\nvar temp__5753__auto__ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(t,cljs.core.key(p1__18430_SHARP_));\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar v \x3d temp__5753__auto__;\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v,cljs.core.val(p1__18430_SHARP_)], null);\r\n} else {\r\nreturn null;\r\n}\r\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([m], 0)));\r\n});\r\n/**\r\n * Return true iff x is a PrettyWriter\r\n */\r\ncljs.pprint.pretty_writer_QMARK_ \x3d (function cljs$pprint$pretty_writer_QMARK_(x){\r\nvar and__4251__auto__ \x3d (((!((x \x3d\x3d null))))?(((((x.cljs$lang$protocol_mask$partition0$ \x26 (32768))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IDeref$))))?true:(((!x.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,x):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,x));\r\nif(and__4251__auto__){\r\nreturn new cljs.core.Keyword(null,\x22pretty-writer\x22,\x22pretty-writer\x22,-1222834267).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(x)));\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n});\r\n/**\r\n * Wrap base-writer in a PrettyWriter with the specified right-margin and miser-width\r\n */\r\ncljs.pprint.make_pretty_writer \x3d (function cljs$pprint$make_pretty_writer(base_writer,right_margin,miser_width){\r\nreturn cljs.pprint.pretty_writer(base_writer,right_margin,miser_width);\r\n});\r\n/**\r\n * Write an object to *out* subject to the current bindings of the printer control\r\n * variables. Use the kw-args argument to override individual variables for this call (and\r\n * any recursive calls).\r\n * \r\n * *out* must be a PrettyWriter if pretty printing is enabled. This is the responsibility\r\n * of the caller.\r\n * \r\n * This method is primarily intended for use by pretty print dispatch functions that\r\n * already know that the pretty printer will have set up their environment appropriately.\r\n * Normal library clients should use the standard \x22write\x22 interface. \r\n */\r\ncljs.pprint.write_out \x3d (function cljs$pprint$write_out(object){\r\nvar length_reached \x3d (function (){var and__4251__auto__ \x3d cljs.pprint._STAR_current_length_STAR_;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nvar and__4251__auto____$1 \x3d cljs.core._STAR_print_length_STAR_;\r\nif(cljs.core.truth_(and__4251__auto____$1)){\r\nreturn (cljs.pprint._STAR_current_length_STAR_ \x3e\x3d cljs.core._STAR_print_length_STAR_);\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})();\r\nif(cljs.core.not(cljs.pprint._STAR_print_pretty_STAR_)){\r\ncljs.pprint.pr.call(null,object);\r\n} else {\r\nif(cljs.core.truth_(length_reached)){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22...\x22);\r\n} else {\r\nif(cljs.core.truth_(cljs.pprint._STAR_current_length_STAR_)){\r\n(cljs.pprint._STAR_current_length_STAR_ \x3d (cljs.pprint._STAR_current_length_STAR_ + (1)));\r\n} else {\r\n}\r\n\r\ncljs.pprint._STAR_print_pprint_dispatch_STAR_.call(null,object);\r\n}\r\n}\r\n\r\nreturn length_reached;\r\n});\r\n/**\r\n * Write an object subject to the current bindings of the printer control variables.\r\n * Use the kw-args argument to override individual variables for this call (and any\r\n * recursive calls). Returns the string result if :stream is nil or nil otherwise.\r\n * \r\n * The following keyword arguments can be passed with values:\r\n *   Keyword              Meaning                              Default value\r\n *   :stream              Writer for output or nil             true (indicates *out*)\r\n *   :base                Base to use for writing rationals    Current value of *print-base*\r\n *   :circle*             If true, mark circular structures    Current value of *print-circle*\r\n *   :length              Maximum elements to show in sublists Current value of *print-length*\r\n *   :level               Maximum depth                        Current value of *print-level*\r\n *   :lines*              Maximum lines of output              Current value of *print-lines*\r\n *   :miser-width         Width to enter miser mode            Current value of *print-miser-width*\r\n *   :dispatch            The pretty print dispatch function   Current value of *print-pprint-dispatch*\r\n *   :pretty              If true, do pretty printing          Current value of *print-pretty*\r\n *   :radix               If true, prepend a radix specifier   Current value of *print-radix*\r\n *   :readably*           If true, print readably              Current value of *print-readably*\r\n *   :right-margin        The column for the right margin      Current value of *print-right-margin*\r\n *   :suppress-namespaces If true, no namespaces in symbols    Current value of *print-suppress-namespaces*\r\n * \r\n *   * \x3d not yet supported\r\n */\r\ncljs.pprint.write \x3d (function cljs$pprint$write(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___22011 \x3d arguments.length;\r\nvar i__4865__auto___22012 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___22012 \x3c len__4864__auto___22011)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___22012]));\r\n\r\nvar G__22013 \x3d (i__4865__auto___22012 + (1));\r\ni__4865__auto___22012 \x3d G__22013;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((1) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((1)),(0),null)):null);\r\nreturn cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4871__auto__);\r\n});\r\n\r\n(cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic \x3d (function (object,kw_args){\r\nvar options \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22stream\x22,\x22stream\x22,1534941648),true], null),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,kw_args)], 0));\r\nvar _STAR_print_base_STAR__orig_val__18465 \x3d cljs.pprint._STAR_print_base_STAR_;\r\nvar _STAR_print_circle_STAR__orig_val__18466 \x3d cljs.pprint._STAR_print_circle_STAR_;\r\nvar _STAR_print_length_STAR__orig_val__18467 \x3d cljs.core._STAR_print_length_STAR_;\r\nvar _STAR_print_level_STAR__orig_val__18468 \x3d cljs.core._STAR_print_level_STAR_;\r\nvar _STAR_print_lines_STAR__orig_val__18469 \x3d cljs.pprint._STAR_print_lines_STAR_;\r\nvar _STAR_print_miser_width_STAR__orig_val__18470 \x3d cljs.pprint._STAR_print_miser_width_STAR_;\r\nvar _STAR_print_pprint_dispatch_STAR__orig_val__18471 \x3d cljs.pprint._STAR_print_pprint_dispatch_STAR_;\r\nvar _STAR_print_pretty_STAR__orig_val__18472 \x3d cljs.pprint._STAR_print_pretty_STAR_;\r\nvar _STAR_print_radix_STAR__orig_val__18473 \x3d cljs.pprint._STAR_print_radix_STAR_;\r\nvar _STAR_print_readably_STAR__orig_val__18474 \x3d cljs.core._STAR_print_readably_STAR_;\r\nvar _STAR_print_right_margin_STAR__orig_val__18475 \x3d cljs.pprint._STAR_print_right_margin_STAR_;\r\nvar _STAR_print_suppress_namespaces_STAR__orig_val__18476 \x3d cljs.pprint._STAR_print_suppress_namespaces_STAR_;\r\nvar _STAR_print_base_STAR__temp_val__18477 \x3d new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$2(options,cljs.pprint._STAR_print_base_STAR_);\r\nvar _STAR_print_circle_STAR__temp_val__18478 \x3d new cljs.core.Keyword(null,\x22circle\x22,\x22circle\x22,1903212362).cljs$core$IFn$_invoke$arity$2(options,cljs.pprint._STAR_print_circle_STAR_);\r\nvar _STAR_print_length_STAR__temp_val__18479 \x3d new cljs.core.Keyword(null,\x22length\x22,\x22length\x22,588987862).cljs$core$IFn$_invoke$arity$2(options,cljs.core._STAR_print_length_STAR_);\r\nvar _STAR_print_level_STAR__temp_val__18480 \x3d new cljs.core.Keyword(null,\x22level\x22,\x22level\x22,1290497552).cljs$core$IFn$_invoke$arity$2(options,cljs.core._STAR_print_level_STAR_);\r\nvar _STAR_print_lines_STAR__temp_val__18481 \x3d new cljs.core.Keyword(null,\x22lines\x22,\x22lines\x22,-700165781).cljs$core$IFn$_invoke$arity$2(options,cljs.pprint._STAR_print_lines_STAR_);\r\nvar _STAR_print_miser_width_STAR__temp_val__18482 \x3d new cljs.core.Keyword(null,\x22miser-width\x22,\x22miser-width\x22,-1310049437).cljs$core$IFn$_invoke$arity$2(options,cljs.pprint._STAR_print_miser_width_STAR_);\r\nvar _STAR_print_pprint_dispatch_STAR__temp_val__18483 \x3d new cljs.core.Keyword(null,\x22dispatch\x22,\x22dispatch\x22,1319337009).cljs$core$IFn$_invoke$arity$2(options,cljs.pprint._STAR_print_pprint_dispatch_STAR_);\r\nvar _STAR_print_pretty_STAR__temp_val__18484 \x3d new cljs.core.Keyword(null,\x22pretty\x22,\x22pretty\x22,-1916372486).cljs$core$IFn$_invoke$arity$2(options,cljs.pprint._STAR_print_pretty_STAR_);\r\nvar _STAR_print_radix_STAR__temp_val__18485 \x3d new cljs.core.Keyword(null,\x22radix\x22,\x22radix\x22,857016463).cljs$core$IFn$_invoke$arity$2(options,cljs.pprint._STAR_print_radix_STAR_);\r\nvar _STAR_print_readably_STAR__temp_val__18486 \x3d new cljs.core.Keyword(null,\x22readably\x22,\x22readably\x22,1129599760).cljs$core$IFn$_invoke$arity$2(options,cljs.core._STAR_print_readably_STAR_);\r\nvar _STAR_print_right_margin_STAR__temp_val__18487 \x3d new cljs.core.Keyword(null,\x22right-margin\x22,\x22right-margin\x22,-810413306).cljs$core$IFn$_invoke$arity$2(options,cljs.pprint._STAR_print_right_margin_STAR_);\r\nvar _STAR_print_suppress_namespaces_STAR__temp_val__18488 \x3d new cljs.core.Keyword(null,\x22suppress-namespaces\x22,\x22suppress-namespaces\x22,2130686956).cljs$core$IFn$_invoke$arity$2(options,cljs.pprint._STAR_print_suppress_namespaces_STAR_);\r\n(cljs.pprint._STAR_print_base_STAR_ \x3d _STAR_print_base_STAR__temp_val__18477);\r\n\r\n(cljs.pprint._STAR_print_circle_STAR_ \x3d _STAR_print_circle_STAR__temp_val__18478);\r\n\r\n(cljs.core._STAR_print_length_STAR_ \x3d _STAR_print_length_STAR__temp_val__18479);\r\n\r\n(cljs.core._STAR_print_level_STAR_ \x3d _STAR_print_level_STAR__temp_val__18480);\r\n\r\n(cljs.pprint._STAR_print_lines_STAR_ \x3d _STAR_print_lines_STAR__temp_val__18481);\r\n\r\n(cljs.pprint._STAR_print_miser_width_STAR_ \x3d _STAR_print_miser_width_STAR__temp_val__18482);\r\n\r\n(cljs.pprint._STAR_print_pprint_dispatch_STAR_ \x3d _STAR_print_pprint_dispatch_STAR__temp_val__18483);\r\n\r\n(cljs.pprint._STAR_print_pretty_STAR_ \x3d _STAR_print_pretty_STAR__temp_val__18484);\r\n\r\n(cljs.pprint._STAR_print_radix_STAR_ \x3d _STAR_print_radix_STAR__temp_val__18485);\r\n\r\n(cljs.core._STAR_print_readably_STAR_ \x3d _STAR_print_readably_STAR__temp_val__18486);\r\n\r\n(cljs.pprint._STAR_print_right_margin_STAR_ \x3d _STAR_print_right_margin_STAR__temp_val__18487);\r\n\r\n(cljs.pprint._STAR_print_suppress_namespaces_STAR_ \x3d _STAR_print_suppress_namespaces_STAR__temp_val__18488);\r\n\r\ntry{try{var sb \x3d (new goog.string.StringBuffer());\r\nvar optval \x3d ((cljs.core.contains_QMARK_(options,new cljs.core.Keyword(null,\x22stream\x22,\x22stream\x22,1534941648)))?new cljs.core.Keyword(null,\x22stream\x22,\x22stream\x22,1534941648).cljs$core$IFn$_invoke$arity$1(options):true);\r\nvar base_writer \x3d ((((optval \x3d\x3d\x3d true) || ((optval \x3d\x3d null))))?(new cljs.core.StringBufferWriter(sb)):optval);\r\nif(cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_)){\r\nvar base_writer__16724__auto___22018 \x3d base_writer;\r\nvar new_writer__16725__auto___22019 \x3d cljs.core.not(cljs.pprint.pretty_writer_QMARK_(base_writer__16724__auto___22018));\r\nvar _STAR_out_STAR__orig_val__18512_22020 \x3d cljs.core._STAR_out_STAR_;\r\nvar _STAR_out_STAR__temp_val__18513_22021 \x3d ((new_writer__16725__auto___22019)?cljs.pprint.make_pretty_writer(base_writer__16724__auto___22018,cljs.pprint._STAR_print_right_margin_STAR_,cljs.pprint._STAR_print_miser_width_STAR_):base_writer__16724__auto___22018);\r\n(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__temp_val__18513_22021);\r\n\r\ntry{cljs.pprint.write_out(object);\r\n\r\ncljs.pprint._ppflush(cljs.core._STAR_out_STAR_);\r\n}finally {(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__orig_val__18512_22020);\r\n}} else {\r\nvar _STAR_out_STAR__orig_val__18516_22022 \x3d cljs.core._STAR_out_STAR_;\r\nvar _STAR_out_STAR__temp_val__18517_22023 \x3d base_writer;\r\n(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__temp_val__18517_22023);\r\n\r\ntry{cljs.pprint.pr.call(null,object);\r\n}finally {(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__orig_val__18516_22022);\r\n}}\r\n\r\nif(optval \x3d\x3d\x3d true){\r\ncljs.core.string_print(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb));\r\n} else {\r\n}\r\n\r\nif((optval \x3d\x3d null)){\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);\r\n} else {\r\nreturn null;\r\n}\r\n}finally {}}finally {(cljs.pprint._STAR_print_suppress_namespaces_STAR_ \x3d _STAR_print_suppress_namespaces_STAR__orig_val__18476);\r\n\r\n(cljs.pprint._STAR_print_right_margin_STAR_ \x3d _STAR_print_right_margin_STAR__orig_val__18475);\r\n\r\n(cljs.core._STAR_print_readably_STAR_ \x3d _STAR_print_readably_STAR__orig_val__18474);\r\n\r\n(cljs.pprint._STAR_print_radix_STAR_ \x3d _STAR_print_radix_STAR__orig_val__18473);\r\n\r\n(cljs.pprint._STAR_print_pretty_STAR_ \x3d _STAR_print_pretty_STAR__orig_val__18472);\r\n\r\n(cljs.pprint._STAR_print_pprint_dispatch_STAR_ \x3d _STAR_print_pprint_dispatch_STAR__orig_val__18471);\r\n\r\n(cljs.pprint._STAR_print_miser_width_STAR_ \x3d _STAR_print_miser_width_STAR__orig_val__18470);\r\n\r\n(cljs.pprint._STAR_print_lines_STAR_ \x3d _STAR_print_lines_STAR__orig_val__18469);\r\n\r\n(cljs.core._STAR_print_level_STAR_ \x3d _STAR_print_level_STAR__orig_val__18468);\r\n\r\n(cljs.core._STAR_print_length_STAR_ \x3d _STAR_print_length_STAR__orig_val__18467);\r\n\r\n(cljs.pprint._STAR_print_circle_STAR_ \x3d _STAR_print_circle_STAR__orig_val__18466);\r\n\r\n(cljs.pprint._STAR_print_base_STAR_ \x3d _STAR_print_base_STAR__orig_val__18465);\r\n}}));\r\n\r\n(cljs.pprint.write.cljs$lang$maxFixedArity \x3d (1));\r\n\r\n/** @this {Function} */\r\n(cljs.pprint.write.cljs$lang$applyTo \x3d (function (seq18448){\r\nvar G__18449 \x3d cljs.core.first(seq18448);\r\nvar seq18448__$1 \x3d cljs.core.next(seq18448);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18449,seq18448__$1);\r\n}));\r\n\r\ncljs.pprint.pprint \x3d (function cljs$pprint$pprint(var_args){\r\nvar G__18522 \x3d arguments.length;\r\nswitch (G__18522) {\r\ncase 1:\r\nreturn cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1 \x3d (function (object){\r\nvar sb \x3d (new goog.string.StringBuffer());\r\nvar _STAR_out_STAR__orig_val__18525 \x3d cljs.core._STAR_out_STAR_;\r\nvar _STAR_out_STAR__temp_val__18526 \x3d (new cljs.core.StringBufferWriter(sb));\r\n(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__temp_val__18526);\r\n\r\ntry{cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2(object,cljs.core._STAR_out_STAR_);\r\n\r\nreturn cljs.core.string_print(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb));\r\n}finally {(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__orig_val__18525);\r\n}}));\r\n\r\n(cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2 \x3d (function (object,writer){\r\nvar base_writer__16724__auto__ \x3d writer;\r\nvar new_writer__16725__auto__ \x3d cljs.core.not(cljs.pprint.pretty_writer_QMARK_(base_writer__16724__auto__));\r\nvar _STAR_out_STAR__orig_val__18529 \x3d cljs.core._STAR_out_STAR_;\r\nvar _STAR_out_STAR__temp_val__18530 \x3d ((new_writer__16725__auto__)?cljs.pprint.make_pretty_writer(base_writer__16724__auto__,cljs.pprint._STAR_print_right_margin_STAR_,cljs.pprint._STAR_print_miser_width_STAR_):base_writer__16724__auto__);\r\n(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__temp_val__18530);\r\n\r\ntry{var _STAR_print_pretty_STAR__orig_val__18536_22029 \x3d cljs.pprint._STAR_print_pretty_STAR_;\r\nvar _STAR_print_pretty_STAR__temp_val__18537_22030 \x3d true;\r\n(cljs.pprint._STAR_print_pretty_STAR_ \x3d _STAR_print_pretty_STAR__temp_val__18537_22030);\r\n\r\ntry{cljs.pprint.write_out(object);\r\n}finally {(cljs.pprint._STAR_print_pretty_STAR_ \x3d _STAR_print_pretty_STAR__orig_val__18536_22029);\r\n}\r\nif((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),cljs.pprint.get_column(cljs.core._STAR_out_STAR_))))){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22\\n\x22);\r\n} else {\r\n}\r\n\r\nreturn cljs.pprint._ppflush(cljs.core._STAR_out_STAR_);\r\n}finally {(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__orig_val__18529);\r\n}}));\r\n\r\n(cljs.pprint.pprint.cljs$lang$maxFixedArity \x3d 2);\r\n\r\ncljs.pprint.set_pprint_dispatch \x3d (function cljs$pprint$set_pprint_dispatch(function$){\r\n(cljs.pprint._STAR_print_pprint_dispatch_STAR_ \x3d function$);\r\n\r\nreturn null;\r\n});\r\ncljs.pprint.check_enumerated_arg \x3d (function cljs$pprint$check_enumerated_arg(arg,choices){\r\nif(cljs.core.not((choices.cljs$core$IFn$_invoke$arity$1 ? choices.cljs$core$IFn$_invoke$arity$1(arg) : choices.call(null,arg)))){\r\nthrow (new Error([\x22Bad argument: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arg),\x22. It must be one of \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(choices)].join(\x27\x27)));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ncljs.pprint.level_exceeded \x3d (function cljs$pprint$level_exceeded(){\r\nvar and__4251__auto__ \x3d cljs.core._STAR_print_level_STAR_;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn (cljs.pprint._STAR_current_level_STAR_ \x3e\x3d cljs.core._STAR_print_level_STAR_);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n});\r\n/**\r\n * Print a conditional newline to a pretty printing stream. kind specifies if the\r\n *   newline is :linear, :miser, :fill, or :mandatory.\r\n * \r\n *   This function is intended for use when writing custom dispatch functions.\r\n * \r\n *   Output is sent to *out* which must be a pretty printing writer.\r\n */\r\ncljs.pprint.pprint_newline \x3d (function cljs$pprint$pprint_newline(kind){\r\ncljs.pprint.check_enumerated_arg(kind,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22mandatory\x22,\x22mandatory\x22,542802336),null,new cljs.core.Keyword(null,\x22miser\x22,\x22miser\x22,-556060186),null,new cljs.core.Keyword(null,\x22fill\x22,\x22fill\x22,883462889),null,new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697),null], null), null));\r\n\r\nreturn cljs.pprint.nl(cljs.core._STAR_out_STAR_,kind);\r\n});\r\n/**\r\n * Create an indent at this point in the pretty printing stream. This defines how\r\n * following lines are indented. relative-to can be either :block or :current depending\r\n * whether the indent should be computed relative to the start of the logical block or\r\n * the current column position. n is an offset.\r\n * \r\n * This function is intended for use when writing custom dispatch functions.\r\n * \r\n * Output is sent to *out* which must be a pretty printing writer.\r\n */\r\ncljs.pprint.pprint_indent \x3d (function cljs$pprint$pprint_indent(relative_to,n){\r\ncljs.pprint.check_enumerated_arg(relative_to,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22block\x22,\x22block\x22,664686210),null,new cljs.core.Keyword(null,\x22current\x22,\x22current\x22,-1088038603),null], null), null));\r\n\r\nreturn cljs.pprint.indent(cljs.core._STAR_out_STAR_,relative_to,n);\r\n});\r\n/**\r\n * Tab at this point in the pretty printing stream. kind specifies whether the tab\r\n * is :line, :section, :line-relative, or :section-relative.\r\n * \r\n * Colnum and colinc specify the target column and the increment to move the target\r\n * forward if the output is already past the original target.\r\n * \r\n * This function is intended for use when writing custom dispatch functions.\r\n * \r\n * Output is sent to *out* which must be a pretty printing writer.\r\n * \r\n * THIS FUNCTION IS NOT YET IMPLEMENTED.\r\n */\r\ncljs.pprint.pprint_tab \x3d (function cljs$pprint$pprint_tab(kind,colnum,colinc){\r\ncljs.pprint.check_enumerated_arg(kind,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22section\x22,\x22section\x22,-300141526),null,new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),null,new cljs.core.Keyword(null,\x22line-relative\x22,\x22line-relative\x22,1149548219),null,new cljs.core.Keyword(null,\x22section-relative\x22,\x22section-relative\x22,-658298724),null], null), null));\r\n\r\nthrow (new Error(\x22pprint-tab is not yet implemented\x22));\r\n});\r\n/**\r\n * An implementation of a Common Lisp compatible format function. cl-format formats its\r\n * arguments to an output stream or string based on the format control string given. It\r\n * supports sophisticated formatting of structured data.\r\n * \r\n * Writer satisfies IWriter, true to output via *print-fn* or nil to output\r\n * to a string, format-in is the format control string and the remaining arguments\r\n * are the data to be formatted.\r\n * \r\n * The format control string is a string to be output with embedded \x27format directives\x27\r\n * describing how to format the various arguments passed in.\r\n * \r\n * If writer is nil, cl-format returns the formatted result string. Otherwise, cl-format\r\n * returns nil.\r\n * \r\n * For example:\r\n *  (let [results [46 38 22]]\r\n *      (cl-format true \x22There ~[are~;is~:;are~]~:* ~d result~:p: ~{~d~^, ~}~%\x22\r\n *                 (count results) results))\r\n * \r\n * Prints via *print-fn*:\r\n *  There are 3 results: 46, 38, 22\r\n * \r\n * Detailed documentation on format control strings is available in the \x22Common Lisp the\r\n * Language, 2nd edition\x22, Chapter 22 (available online at:\r\n * http://www.cs.cmu.edu/afs/cs.cmu.edu/project/ai-repository/ai/html/cltl/clm/node200.html#SECTION002633000000000000000)\r\n * and in the Common Lisp HyperSpec at\r\n * http://www.lispworks.com/documentation/HyperSpec/Body/22_c.htm\r\n */\r\ncljs.pprint.cl_format \x3d (function cljs$pprint$cl_format(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___22038 \x3d arguments.length;\r\nvar i__4865__auto___22039 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___22039 \x3c len__4864__auto___22038)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___22039]));\r\n\r\nvar G__22041 \x3d (i__4865__auto___22039 + (1));\r\ni__4865__auto___22039 \x3d G__22041;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((2) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((2)),(0),null)):null);\r\nreturn cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4871__auto__);\r\n});\r\n\r\n(cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic \x3d (function (writer,format_in,args){\r\nvar compiled_format \x3d ((typeof format_in \x3d\x3d\x3d \x27string\x27)?cljs.pprint.compile_format(format_in):format_in);\r\nvar navigator \x3d cljs.pprint.init_navigator(args);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3(writer,compiled_format,navigator);\r\n}));\r\n\r\n(cljs.pprint.cl_format.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/** @this {Function} */\r\n(cljs.pprint.cl_format.cljs$lang$applyTo \x3d (function (seq18557){\r\nvar G__18558 \x3d cljs.core.first(seq18557);\r\nvar seq18557__$1 \x3d cljs.core.next(seq18557);\r\nvar G__18559 \x3d cljs.core.first(seq18557__$1);\r\nvar seq18557__$2 \x3d cljs.core.next(seq18557__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18558,G__18559,seq18557__$2);\r\n}));\r\n\r\ncljs.pprint._STAR_format_str_STAR_ \x3d null;\r\ncljs.pprint.format_error \x3d (function cljs$pprint$format_error(message,offset){\r\nvar full_message \x3d [cljs.core.str.cljs$core$IFn$_invoke$arity$1(message),\x22\\n\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint._STAR_format_str_STAR_),\x22\\n\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(offset,\x22 \x22))),\x22^\x22,\x22\\n\x22].join(\x27\x27);\r\nthrow Error(full_message);\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IRecord}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ncljs.pprint.arg_navigator \x3d (function (seq,rest,pos,__meta,__extmap,__hash){\r\nthis.seq \x3d seq;\r\nthis.rest \x3d rest;\r\nthis.pos \x3d pos;\r\nthis.__meta \x3d __meta;\r\nthis.__extmap \x3d __extmap;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\r\n});\r\n(cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__4502__auto__,k__4503__auto__){\r\nvar self__ \x3d this;\r\nvar this__4502__auto____$1 \x3d this;\r\nreturn this__4502__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4503__auto__,null);\r\n}));\r\n\r\n(cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__4504__auto__,k18593,else__4505__auto__){\r\nvar self__ \x3d this;\r\nvar this__4504__auto____$1 \x3d this;\r\nvar G__18612 \x3d k18593;\r\nvar G__18612__$1 \x3d (((G__18612 instanceof cljs.core.Keyword))?G__18612.fqn:null);\r\nswitch (G__18612__$1) {\r\ncase \x22seq\x22:\r\nreturn self__.seq;\r\n\r\nbreak;\r\ncase \x22rest\x22:\r\nreturn self__.rest;\r\n\r\nbreak;\r\ncase \x22pos\x22:\r\nreturn self__.pos;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k18593,else__4505__auto__);\r\n\r\n}\r\n}));\r\n\r\n(cljs.pprint.arg_navigator.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__4522__auto__,f__4523__auto__,init__4524__auto__){\r\nvar self__ \x3d this;\r\nvar this__4522__auto____$1 \x3d this;\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4525__auto__,p__18629){\r\nvar vec__18630 \x3d p__18629;\r\nvar k__4526__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18630,(0),null);\r\nvar v__4527__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18630,(1),null);\r\nreturn (f__4523__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4523__auto__.cljs$core$IFn$_invoke$arity$3(ret__4525__auto__,k__4526__auto__,v__4527__auto__) : f__4523__auto__.call(null,ret__4525__auto__,k__4526__auto__,v__4527__auto__));\r\n}),init__4524__auto__,this__4522__auto____$1);\r\n}));\r\n\r\n(cljs.pprint.arg_navigator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__4517__auto__,writer__4518__auto__,opts__4519__auto__){\r\nvar self__ \x3d this;\r\nvar this__4517__auto____$1 \x3d this;\r\nvar pr_pair__4520__auto__ \x3d (function (keyval__4521__auto__){\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__4519__auto__,keyval__4521__auto__);\r\n});\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,pr_pair__4520__auto__,\x22#cljs.pprint.arg-navigator{\x22,\x22, \x22,\x22}\x22,opts__4519__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783),self__.seq],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419),self__.rest],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220),self__.pos],null))], null),self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__18592){\r\nvar self__ \x3d this;\r\nvar G__18592__$1 \x3d this;\r\nreturn (new cljs.core.RecordIter((0),G__18592__$1,3,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783),new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419),new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\r\n}));\r\n\r\n(cljs.pprint.arg_navigator.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__4500__auto__){\r\nvar self__ \x3d this;\r\nvar this__4500__auto____$1 \x3d this;\r\nreturn self__.__meta;\r\n}));\r\n\r\n(cljs.pprint.arg_navigator.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__4497__auto__){\r\nvar self__ \x3d this;\r\nvar this__4497__auto____$1 \x3d this;\r\nreturn (new cljs.pprint.arg_navigator(self__.seq,self__.rest,self__.pos,self__.__meta,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(cljs.pprint.arg_navigator.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__4506__auto__){\r\nvar self__ \x3d this;\r\nvar this__4506__auto____$1 \x3d this;\r\nreturn (3 + cljs.core.count(self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.arg_navigator.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__4498__auto__){\r\nvar self__ \x3d this;\r\nvar this__4498__auto____$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d (function (coll__4499__auto__){\r\nreturn (-402038447 ^ cljs.core.hash_unordered_coll(coll__4499__auto__));\r\n})(this__4498__auto____$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.pprint.arg_navigator.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this18594,other18595){\r\nvar self__ \x3d this;\r\nvar this18594__$1 \x3d this;\r\nreturn (((!((other18595 \x3d\x3d null)))) \x26\x26 ((((this18594__$1.constructor \x3d\x3d\x3d other18595.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this18594__$1.seq,other18595.seq)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this18594__$1.rest,other18595.rest)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this18594__$1.pos,other18595.pos)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this18594__$1.__extmap,other18595.__extmap)))))))))));\r\n}));\r\n\r\n(cljs.pprint.arg_navigator.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__4512__auto__,k__4513__auto__){\r\nvar self__ \x3d this;\r\nvar this__4512__auto____$1 \x3d this;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220),null,new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783),null,new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419),null], null), null),k__4513__auto__)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4512__auto____$1),self__.__meta),k__4513__auto__);\r\n} else {\r\nreturn (new cljs.pprint.arg_navigator(self__.seq,self__.rest,self__.pos,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4513__auto__)),null));\r\n}\r\n}));\r\n\r\n(cljs.pprint.arg_navigator.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__4509__auto__,k18593){\r\nvar self__ \x3d this;\r\nvar this__4509__auto____$1 \x3d this;\r\nvar G__18721 \x3d k18593;\r\nvar G__18721__$1 \x3d (((G__18721 instanceof cljs.core.Keyword))?G__18721.fqn:null);\r\nswitch (G__18721__$1) {\r\ncase \x22seq\x22:\r\ncase \x22rest\x22:\r\ncase \x22pos\x22:\r\nreturn true;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.contains_QMARK_(self__.__extmap,k18593);\r\n\r\n}\r\n}));\r\n\r\n(cljs.pprint.arg_navigator.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__4510__auto__,k__4511__auto__,G__18592){\r\nvar self__ \x3d this;\r\nvar this__4510__auto____$1 \x3d this;\r\nvar pred__18725 \x3d cljs.core.keyword_identical_QMARK_;\r\nvar expr__18726 \x3d k__4511__auto__;\r\nif(cljs.core.truth_((pred__18725.cljs$core$IFn$_invoke$arity$2 ? pred__18725.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783),expr__18726) : pred__18725.call(null,new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783),expr__18726)))){\r\nreturn (new cljs.pprint.arg_navigator(G__18592,self__.rest,self__.pos,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__18725.cljs$core$IFn$_invoke$arity$2 ? pred__18725.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419),expr__18726) : pred__18725.call(null,new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419),expr__18726)))){\r\nreturn (new cljs.pprint.arg_navigator(self__.seq,G__18592,self__.pos,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__18725.cljs$core$IFn$_invoke$arity$2 ? pred__18725.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220),expr__18726) : pred__18725.call(null,new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220),expr__18726)))){\r\nreturn (new cljs.pprint.arg_navigator(self__.seq,self__.rest,G__18592,self__.__meta,self__.__extmap,null));\r\n} else {\r\nreturn (new cljs.pprint.arg_navigator(self__.seq,self__.rest,self__.pos,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4511__auto__,G__18592),null));\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.pprint.arg_navigator.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__4515__auto__){\r\nvar self__ \x3d this;\r\nvar this__4515__auto____$1 \x3d this;\r\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783),self__.seq,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419),self__.rest,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220),self__.pos,null))], null),self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.arg_navigator.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__4501__auto__,G__18592){\r\nvar self__ \x3d this;\r\nvar this__4501__auto____$1 \x3d this;\r\nreturn (new cljs.pprint.arg_navigator(self__.seq,self__.rest,self__.pos,G__18592,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(cljs.pprint.arg_navigator.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__4507__auto__,entry__4508__auto__){\r\nvar self__ \x3d this;\r\nvar this__4507__auto____$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(entry__4508__auto__)){\r\nreturn this__4507__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4508__auto__,(0)),cljs.core._nth(entry__4508__auto__,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4507__auto____$1,entry__4508__auto__);\r\n}\r\n}));\r\n\r\n(cljs.pprint.arg_navigator.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22seq\x22,\x22seq\x22,-177272256,null),new cljs.core.Symbol(null,\x22rest\x22,\x22rest\x22,398835108,null),new cljs.core.Symbol(null,\x22pos\x22,\x22pos\x22,775924307,null)], null);\r\n}));\r\n\r\n(cljs.pprint.arg_navigator.cljs$lang$type \x3d true);\r\n\r\n(cljs.pprint.arg_navigator.cljs$lang$ctorPrSeq \x3d (function (this__4546__auto__){\r\nreturn (new cljs.core.List(null,\x22cljs.pprint/arg-navigator\x22,null,(1),null));\r\n}));\r\n\r\n(cljs.pprint.arg_navigator.cljs$lang$ctorPrWriter \x3d (function (this__4546__auto__,writer__4547__auto__){\r\nreturn cljs.core._write(writer__4547__auto__,\x22cljs.pprint/arg-navigator\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.pprint/arg-navigator.\r\n */\r\ncljs.pprint.__GT_arg_navigator \x3d (function cljs$pprint$__GT_arg_navigator(seq,rest,pos){\r\nreturn (new cljs.pprint.arg_navigator(seq,rest,pos,null,null,null));\r\n});\r\n\r\n/**\r\n * Factory function for cljs.pprint/arg-navigator, taking a map of keywords to field values.\r\n */\r\ncljs.pprint.map__GT_arg_navigator \x3d (function cljs$pprint$map__GT_arg_navigator(G__18596){\r\nvar extmap__4542__auto__ \x3d (function (){var G__18804 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__18596,new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419),new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220)], 0));\r\nif(cljs.core.record_QMARK_(G__18596)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__18804);\r\n} else {\r\nreturn G__18804;\r\n}\r\n})();\r\nreturn (new cljs.pprint.arg_navigator(new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783).cljs$core$IFn$_invoke$arity$1(G__18596),new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419).cljs$core$IFn$_invoke$arity$1(G__18596),new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(G__18596),null,cljs.core.not_empty(extmap__4542__auto__),null));\r\n});\r\n\r\n/**\r\n * Create a new arg-navigator from the sequence with the position set to 0\r\n */\r\ncljs.pprint.init_navigator \x3d (function cljs$pprint$init_navigator(s){\r\nvar s__$1 \x3d cljs.core.seq(s);\r\nreturn (new cljs.pprint.arg_navigator(s__$1,s__$1,(0),null,null,null));\r\n});\r\ncljs.pprint.next_arg \x3d (function cljs$pprint$next_arg(navigator){\r\nvar rst \x3d new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419).cljs$core$IFn$_invoke$arity$1(navigator);\r\nif(cljs.core.truth_(rst)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(rst),(new cljs.pprint.arg_navigator(new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783).cljs$core$IFn$_invoke$arity$1(navigator),cljs.core.next(rst),(new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(navigator) + (1)),null,null,null))], null);\r\n} else {\r\nthrow Error(\x22Not enough arguments for format definition\x22);\r\n}\r\n});\r\ncljs.pprint.next_arg_or_nil \x3d (function cljs$pprint$next_arg_or_nil(navigator){\r\nvar rst \x3d new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419).cljs$core$IFn$_invoke$arity$1(navigator);\r\nif(cljs.core.truth_(rst)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(rst),(new cljs.pprint.arg_navigator(new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783).cljs$core$IFn$_invoke$arity$1(navigator),cljs.core.next(rst),(new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(navigator) + (1)),null,null,null))], null);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,navigator], null);\r\n}\r\n});\r\ncljs.pprint.get_format_arg \x3d (function cljs$pprint$get_format_arg(navigator){\r\nvar vec__18851 \x3d cljs.pprint.next_arg(navigator);\r\nvar raw_format \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18851,(0),null);\r\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18851,(1),null);\r\nvar compiled_format \x3d ((typeof raw_format \x3d\x3d\x3d \x27string\x27)?cljs.pprint.compile_format(raw_format):raw_format);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [compiled_format,navigator__$1], null);\r\n});\r\ncljs.pprint.absolute_reposition \x3d (function cljs$pprint$absolute_reposition(navigator,position){\r\nif((position \x3e\x3d new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(navigator))){\r\nvar G__18861 \x3d navigator;\r\nvar G__18862 \x3d (new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(navigator) - position);\r\nreturn (cljs.pprint.relative_reposition.cljs$core$IFn$_invoke$arity$2 ? cljs.pprint.relative_reposition.cljs$core$IFn$_invoke$arity$2(G__18861,G__18862) : cljs.pprint.relative_reposition.call(null,G__18861,G__18862));\r\n} else {\r\nreturn (new cljs.pprint.arg_navigator(new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783).cljs$core$IFn$_invoke$arity$1(navigator),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(position,new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783).cljs$core$IFn$_invoke$arity$1(navigator)),position,null,null,null));\r\n}\r\n});\r\ncljs.pprint.relative_reposition \x3d (function cljs$pprint$relative_reposition(navigator,position){\r\nvar newpos \x3d (new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(navigator) + position);\r\nif((position \x3c (0))){\r\nreturn cljs.pprint.absolute_reposition(navigator,newpos);\r\n} else {\r\nreturn (new cljs.pprint.arg_navigator(new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783).cljs$core$IFn$_invoke$arity$1(navigator),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(position,new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419).cljs$core$IFn$_invoke$arity$1(navigator)),newpos,null,null,null));\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IRecord}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ncljs.pprint.compiled_directive \x3d (function (func,def,params,offset,__meta,__extmap,__hash){\r\nthis.func \x3d func;\r\nthis.def \x3d def;\r\nthis.params \x3d params;\r\nthis.offset \x3d offset;\r\nthis.__meta \x3d __meta;\r\nthis.__extmap \x3d __extmap;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\r\n});\r\n(cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__4502__auto__,k__4503__auto__){\r\nvar self__ \x3d this;\r\nvar this__4502__auto____$1 \x3d this;\r\nreturn this__4502__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4503__auto__,null);\r\n}));\r\n\r\n(cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__4504__auto__,k18876,else__4505__auto__){\r\nvar self__ \x3d this;\r\nvar this__4504__auto____$1 \x3d this;\r\nvar G__19077 \x3d k18876;\r\nvar G__19077__$1 \x3d (((G__19077 instanceof cljs.core.Keyword))?G__19077.fqn:null);\r\nswitch (G__19077__$1) {\r\ncase \x22func\x22:\r\nreturn self__.func;\r\n\r\nbreak;\r\ncase \x22def\x22:\r\nreturn self__.def;\r\n\r\nbreak;\r\ncase \x22params\x22:\r\nreturn self__.params;\r\n\r\nbreak;\r\ncase \x22offset\x22:\r\nreturn self__.offset;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k18876,else__4505__auto__);\r\n\r\n}\r\n}));\r\n\r\n(cljs.pprint.compiled_directive.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__4522__auto__,f__4523__auto__,init__4524__auto__){\r\nvar self__ \x3d this;\r\nvar this__4522__auto____$1 \x3d this;\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4525__auto__,p__19084){\r\nvar vec__19085 \x3d p__19084;\r\nvar k__4526__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19085,(0),null);\r\nvar v__4527__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19085,(1),null);\r\nreturn (f__4523__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4523__auto__.cljs$core$IFn$_invoke$arity$3(ret__4525__auto__,k__4526__auto__,v__4527__auto__) : f__4523__auto__.call(null,ret__4525__auto__,k__4526__auto__,v__4527__auto__));\r\n}),init__4524__auto__,this__4522__auto____$1);\r\n}));\r\n\r\n(cljs.pprint.compiled_directive.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__4517__auto__,writer__4518__auto__,opts__4519__auto__){\r\nvar self__ \x3d this;\r\nvar this__4517__auto____$1 \x3d this;\r\nvar pr_pair__4520__auto__ \x3d (function (keyval__4521__auto__){\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__4519__auto__,keyval__4521__auto__);\r\n});\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,pr_pair__4520__auto__,\x22#cljs.pprint.compiled-directive{\x22,\x22, \x22,\x22}\x22,opts__4519__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22func\x22,\x22func\x22,-238706040),self__.func],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536),self__.def],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),self__.params],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),self__.offset],null))], null),self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__18875){\r\nvar self__ \x3d this;\r\nvar G__18875__$1 \x3d this;\r\nreturn (new cljs.core.RecordIter((0),G__18875__$1,4,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22func\x22,\x22func\x22,-238706040),new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536),new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\r\n}));\r\n\r\n(cljs.pprint.compiled_directive.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__4500__auto__){\r\nvar self__ \x3d this;\r\nvar this__4500__auto____$1 \x3d this;\r\nreturn self__.__meta;\r\n}));\r\n\r\n(cljs.pprint.compiled_directive.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__4497__auto__){\r\nvar self__ \x3d this;\r\nvar this__4497__auto____$1 \x3d this;\r\nreturn (new cljs.pprint.compiled_directive(self__.func,self__.def,self__.params,self__.offset,self__.__meta,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(cljs.pprint.compiled_directive.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__4506__auto__){\r\nvar self__ \x3d this;\r\nvar this__4506__auto____$1 \x3d this;\r\nreturn (4 + cljs.core.count(self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.compiled_directive.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__4498__auto__){\r\nvar self__ \x3d this;\r\nvar this__4498__auto____$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d (function (coll__4499__auto__){\r\nreturn (-829256337 ^ cljs.core.hash_unordered_coll(coll__4499__auto__));\r\n})(this__4498__auto____$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.pprint.compiled_directive.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this18877,other18878){\r\nvar self__ \x3d this;\r\nvar this18877__$1 \x3d this;\r\nreturn (((!((other18878 \x3d\x3d null)))) \x26\x26 ((((this18877__$1.constructor \x3d\x3d\x3d other18878.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this18877__$1.func,other18878.func)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this18877__$1.def,other18878.def)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this18877__$1.params,other18878.params)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this18877__$1.offset,other18878.offset)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this18877__$1.__extmap,other18878.__extmap)))))))))))));\r\n}));\r\n\r\n(cljs.pprint.compiled_directive.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__4512__auto__,k__4513__auto__){\r\nvar self__ \x3d this;\r\nvar this__4512__auto____$1 \x3d this;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),null,new cljs.core.Keyword(null,\x22func\x22,\x22func\x22,-238706040),null,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),null,new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536),null], null), null),k__4513__auto__)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4512__auto____$1),self__.__meta),k__4513__auto__);\r\n} else {\r\nreturn (new cljs.pprint.compiled_directive(self__.func,self__.def,self__.params,self__.offset,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4513__auto__)),null));\r\n}\r\n}));\r\n\r\n(cljs.pprint.compiled_directive.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__4509__auto__,k18876){\r\nvar self__ \x3d this;\r\nvar this__4509__auto____$1 \x3d this;\r\nvar G__19204 \x3d k18876;\r\nvar G__19204__$1 \x3d (((G__19204 instanceof cljs.core.Keyword))?G__19204.fqn:null);\r\nswitch (G__19204__$1) {\r\ncase \x22func\x22:\r\ncase \x22def\x22:\r\ncase \x22params\x22:\r\ncase \x22offset\x22:\r\nreturn true;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.contains_QMARK_(self__.__extmap,k18876);\r\n\r\n}\r\n}));\r\n\r\n(cljs.pprint.compiled_directive.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__4510__auto__,k__4511__auto__,G__18875){\r\nvar self__ \x3d this;\r\nvar this__4510__auto____$1 \x3d this;\r\nvar pred__19215 \x3d cljs.core.keyword_identical_QMARK_;\r\nvar expr__19216 \x3d k__4511__auto__;\r\nif(cljs.core.truth_((pred__19215.cljs$core$IFn$_invoke$arity$2 ? pred__19215.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22func\x22,\x22func\x22,-238706040),expr__19216) : pred__19215.call(null,new cljs.core.Keyword(null,\x22func\x22,\x22func\x22,-238706040),expr__19216)))){\r\nreturn (new cljs.pprint.compiled_directive(G__18875,self__.def,self__.params,self__.offset,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__19215.cljs$core$IFn$_invoke$arity$2 ? pred__19215.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536),expr__19216) : pred__19215.call(null,new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536),expr__19216)))){\r\nreturn (new cljs.pprint.compiled_directive(self__.func,G__18875,self__.params,self__.offset,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__19215.cljs$core$IFn$_invoke$arity$2 ? pred__19215.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),expr__19216) : pred__19215.call(null,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),expr__19216)))){\r\nreturn (new cljs.pprint.compiled_directive(self__.func,self__.def,G__18875,self__.offset,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__19215.cljs$core$IFn$_invoke$arity$2 ? pred__19215.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),expr__19216) : pred__19215.call(null,new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),expr__19216)))){\r\nreturn (new cljs.pprint.compiled_directive(self__.func,self__.def,self__.params,G__18875,self__.__meta,self__.__extmap,null));\r\n} else {\r\nreturn (new cljs.pprint.compiled_directive(self__.func,self__.def,self__.params,self__.offset,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4511__auto__,G__18875),null));\r\n}\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(cljs.pprint.compiled_directive.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__4515__auto__){\r\nvar self__ \x3d this;\r\nvar this__4515__auto____$1 \x3d this;\r\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22func\x22,\x22func\x22,-238706040),self__.func,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536),self__.def,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),self__.params,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),self__.offset,null))], null),self__.__extmap));\r\n}));\r\n\r\n(cljs.pprint.compiled_directive.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__4501__auto__,G__18875){\r\nvar self__ \x3d this;\r\nvar this__4501__auto____$1 \x3d this;\r\nreturn (new cljs.pprint.compiled_directive(self__.func,self__.def,self__.params,self__.offset,G__18875,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(cljs.pprint.compiled_directive.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__4507__auto__,entry__4508__auto__){\r\nvar self__ \x3d this;\r\nvar this__4507__auto____$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(entry__4508__auto__)){\r\nreturn this__4507__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4508__auto__,(0)),cljs.core._nth(entry__4508__auto__,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4507__auto____$1,entry__4508__auto__);\r\n}\r\n}));\r\n\r\n(cljs.pprint.compiled_directive.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22func\x22,\x22func\x22,1401825487,null),new cljs.core.Symbol(null,\x22def\x22,\x22def\x22,597100991,null),new cljs.core.Symbol(null,\x22params\x22,\x22params\x22,-1943919534,null),new cljs.core.Symbol(null,\x22offset\x22,\x22offset\x22,1937029838,null)], null);\r\n}));\r\n\r\n(cljs.pprint.compiled_directive.cljs$lang$type \x3d true);\r\n\r\n(cljs.pprint.compiled_directive.cljs$lang$ctorPrSeq \x3d (function (this__4546__auto__){\r\nreturn (new cljs.core.List(null,\x22cljs.pprint/compiled-directive\x22,null,(1),null));\r\n}));\r\n\r\n(cljs.pprint.compiled_directive.cljs$lang$ctorPrWriter \x3d (function (this__4546__auto__,writer__4547__auto__){\r\nreturn cljs.core._write(writer__4547__auto__,\x22cljs.pprint/compiled-directive\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.pprint/compiled-directive.\r\n */\r\ncljs.pprint.__GT_compiled_directive \x3d (function cljs$pprint$__GT_compiled_directive(func,def,params,offset){\r\nreturn (new cljs.pprint.compiled_directive(func,def,params,offset,null,null,null));\r\n});\r\n\r\n/**\r\n * Factory function for cljs.pprint/compiled-directive, taking a map of keywords to field values.\r\n */\r\ncljs.pprint.map__GT_compiled_directive \x3d (function cljs$pprint$map__GT_compiled_directive(G__18881){\r\nvar extmap__4542__auto__ \x3d (function (){var G__19270 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__18881,new cljs.core.Keyword(null,\x22func\x22,\x22func\x22,-238706040),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536),new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311)], 0));\r\nif(cljs.core.record_QMARK_(G__18881)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__19270);\r\n} else {\r\nreturn G__19270;\r\n}\r\n})();\r\nreturn (new cljs.pprint.compiled_directive(new cljs.core.Keyword(null,\x22func\x22,\x22func\x22,-238706040).cljs$core$IFn$_invoke$arity$1(G__18881),new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536).cljs$core$IFn$_invoke$arity$1(G__18881),new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(G__18881),new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311).cljs$core$IFn$_invoke$arity$1(G__18881),null,cljs.core.not_empty(extmap__4542__auto__),null));\r\n});\r\n\r\ncljs.pprint.realize_parameter \x3d (function cljs$pprint$realize_parameter(p__19279,navigator){\r\nvar vec__19281 \x3d p__19279;\r\nvar param \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19281,(0),null);\r\nvar vec__19284 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19281,(1),null);\r\nvar raw_val \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19284,(0),null);\r\nvar offset \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19284,(1),null);\r\nvar vec__19288 \x3d ((cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null], null), null),param))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [raw_val,navigator], null):((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(raw_val,new cljs.core.Keyword(null,\x22parameter-from-args\x22,\x22parameter-from-args\x22,-758446196)))?cljs.pprint.next_arg(navigator):((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(raw_val,new cljs.core.Keyword(null,\x22remaining-arg-count\x22,\x22remaining-arg-count\x22,-1216589335)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count(new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419).cljs$core$IFn$_invoke$arity$1(navigator)),navigator], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [raw_val,navigator], null)\r\n)));\r\nvar real_param \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19288,(0),null);\r\nvar new_navigator \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19288,(1),null);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [real_param,offset], null)], null),new_navigator], null);\r\n});\r\ncljs.pprint.realize_parameter_list \x3d (function cljs$pprint$realize_parameter_list(parameter_map,navigator){\r\nvar vec__19312 \x3d cljs.pprint.map_passing_context(cljs.pprint.realize_parameter,navigator,parameter_map);\r\nvar pairs \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19312,(0),null);\r\nvar new_navigator \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19312,(1),null);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,pairs),new_navigator], null);\r\n});\r\ncljs.pprint.special_radix_markers \x3d new cljs.core.PersistentArrayMap(null, 3, [(2),\x22#b\x22,(8),\x22#o\x22,(16),\x22#x\x22], null);\r\ncljs.pprint.format_simple_number \x3d (function cljs$pprint$format_simple_number(n){\r\nif(cljs.core.integer_QMARK_(n)){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.pprint._STAR_print_base_STAR_,(10))){\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(n),(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_)?\x22.\x22:null)].join(\x27\x27);\r\n} else {\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_)?(function (){var or__4253__auto__ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.pprint.special_radix_markers,cljs.pprint._STAR_print_base_STAR_);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn [\x22#\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint._STAR_print_base_STAR_),\x22r\x22].join(\x27\x27);\r\n}\r\n})():null)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint.opt_base_str(cljs.pprint._STAR_print_base_STAR_,n))].join(\x27\x27);\r\n}\r\n} else {\r\nreturn null;\r\n\r\n}\r\n});\r\ncljs.pprint.format_ascii \x3d (function cljs$pprint$format_ascii(print_func,params,arg_navigator,offsets){\r\nvar vec__19346 \x3d cljs.pprint.next_arg(arg_navigator);\r\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19346,(0),null);\r\nvar arg_navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19346,(1),null);\r\nvar base_output \x3d (function (){var or__4253__auto__ \x3d cljs.pprint.format_simple_number(arg);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn (print_func.cljs$core$IFn$_invoke$arity$1 ? print_func.cljs$core$IFn$_invoke$arity$1(arg) : print_func.call(null,arg));\r\n}\r\n})();\r\nvar base_width \x3d base_output.length;\r\nvar min_width \x3d (base_width + new cljs.core.Keyword(null,\x22minpad\x22,\x22minpad\x22,323570901).cljs$core$IFn$_invoke$arity$1(params));\r\nvar width \x3d (((min_width \x3e\x3d new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445).cljs$core$IFn$_invoke$arity$1(params)))?min_width:(min_width + ((cljs.core.quot(((new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445).cljs$core$IFn$_invoke$arity$1(params) - min_width) - (1)),new cljs.core.Keyword(null,\x22colinc\x22,\x22colinc\x22,-584873385).cljs$core$IFn$_invoke$arity$1(params)) + (1)) * new cljs.core.Keyword(null,\x22colinc\x22,\x22colinc\x22,-584873385).cljs$core$IFn$_invoke$arity$1(params))));\r\nvar chars \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((width - base_width),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530).cljs$core$IFn$_invoke$arity$1(params)));\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))){\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[cljs.core.str.cljs$core$IFn$_invoke$arity$1(chars),cljs.core.str.cljs$core$IFn$_invoke$arity$1(base_output)].join(\x27\x27)], 0));\r\n} else {\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[cljs.core.str.cljs$core$IFn$_invoke$arity$1(base_output),cljs.core.str.cljs$core$IFn$_invoke$arity$1(chars)].join(\x27\x27)], 0));\r\n}\r\n\r\nreturn arg_navigator__$1;\r\n});\r\n/**\r\n * returns true if a number is actually an integer (that is, has no fractional part)\r\n */\r\ncljs.pprint.integral_QMARK_ \x3d (function cljs$pprint$integral_QMARK_(x){\r\nif(cljs.core.integer_QMARK_(x)){\r\nreturn true;\r\n} else {\r\nif(cljs.pprint.float_QMARK_(x)){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,Math.floor(x));\r\n} else {\r\nreturn false;\r\n\r\n}\r\n}\r\n});\r\n/**\r\n * Return the list of remainders (essentially the \x27digits\x27) of val in the given base\r\n */\r\ncljs.pprint.remainders \x3d (function cljs$pprint$remainders(base,val){\r\nreturn cljs.core.reverse(cljs.core.first(cljs.pprint.consume((function (p1__19386_SHARP_){\r\nif((p1__19386_SHARP_ \x3e (0))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.rem(p1__19386_SHARP_,base),cljs.core.quot(p1__19386_SHARP_,base)], null);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,null], null);\r\n}\r\n}),val)));\r\n});\r\n/**\r\n * Return val as a string in the given base\r\n */\r\ncljs.pprint.base_str \x3d (function cljs$pprint$base_str(base,val){\r\nif((val \x3d\x3d\x3d (0))){\r\nreturn \x220\x22;\r\n} else {\r\nvar xlated_val \x3d val\r\n;\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__19390_SHARP_){\r\nif((p1__19390_SHARP_ \x3c (10))){\r\nreturn cljs.core.char$((cljs.pprint.char_code(\x220\x22) + p1__19390_SHARP_));\r\n} else {\r\nreturn cljs.core.char$((cljs.pprint.char_code(\x22a\x22) + (p1__19390_SHARP_ - (10))));\r\n}\r\n}),cljs.pprint.remainders(base,val)));\r\n}\r\n});\r\ncljs.pprint.javascript_base_formats \x3d new cljs.core.PersistentArrayMap(null, 3, [(8),\x22%o\x22,(10),\x22%d\x22,(16),\x22%x\x22], null);\r\n/**\r\n * Return val as a string in the given base. No cljs format, so no improved performance.\r\n */\r\ncljs.pprint.opt_base_str \x3d (function cljs$pprint$opt_base_str(base,val){\r\nreturn cljs.pprint.base_str(base,val);\r\n});\r\ncljs.pprint.group_by_STAR_ \x3d (function cljs$pprint$group_by_STAR_(unit,lis){\r\nreturn cljs.core.reverse(cljs.core.first(cljs.pprint.consume((function (x){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq(cljs.core.reverse(cljs.core.take.cljs$core$IFn$_invoke$arity$2(unit,x))),cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(unit,x))], null);\r\n}),cljs.core.reverse(lis))));\r\n});\r\ncljs.pprint.format_integer \x3d (function cljs$pprint$format_integer(base,params,arg_navigator,offsets){\r\nvar vec__19414 \x3d cljs.pprint.next_arg(arg_navigator);\r\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19414,(0),null);\r\nvar arg_navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19414,(1),null);\r\nif(cljs.pprint.integral_QMARK_(arg)){\r\nvar neg_22187 \x3d (arg \x3c (0));\r\nvar pos_arg_22188 \x3d ((neg_22187)?(- arg):arg);\r\nvar raw_str_22189 \x3d cljs.pprint.opt_base_str(base,pos_arg_22188);\r\nvar group_str_22190 \x3d (cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))?(function (){var groups \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__19409_SHARP_){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,p1__19409_SHARP_);\r\n}),cljs.pprint.group_by_STAR_(new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083).cljs$core$IFn$_invoke$arity$1(params),raw_str_22189));\r\nvar commas \x3d cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(cljs.core.count(groups),new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327).cljs$core$IFn$_invoke$arity$1(params));\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.next(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(commas,groups)));\r\n})():raw_str_22189);\r\nvar signed_str_22191 \x3d ((neg_22187)?[\x22-\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(group_str_22190)].join(\x27\x27):(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))?[\x22+\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(group_str_22190)].join(\x27\x27):group_str_22190\r\n));\r\nvar padded_str_22192 \x3d (((signed_str_22191.length \x3c new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445).cljs$core$IFn$_invoke$arity$1(params)))?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445).cljs$core$IFn$_invoke$arity$1(params) - signed_str_22191.length),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530).cljs$core$IFn$_invoke$arity$1(params)))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(signed_str_22191)].join(\x27\x27):signed_str_22191);\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([padded_str_22192], 0));\r\n} else {\r\ncljs.pprint.format_ascii(cljs.core.print_str,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445).cljs$core$IFn$_invoke$arity$1(params),new cljs.core.Keyword(null,\x22colinc\x22,\x22colinc\x22,-584873385),(1),new cljs.core.Keyword(null,\x22minpad\x22,\x22minpad\x22,323570901),(0),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530).cljs$core$IFn$_invoke$arity$1(params),new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),true], null),cljs.pprint.init_navigator(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)),null);\r\n}\r\n\r\nreturn arg_navigator__$1;\r\n});\r\ncljs.pprint.english_cardinal_units \x3d new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22zero\x22,\x22one\x22,\x22two\x22,\x22three\x22,\x22four\x22,\x22five\x22,\x22six\x22,\x22seven\x22,\x22eight\x22,\x22nine\x22,\x22ten\x22,\x22eleven\x22,\x22twelve\x22,\x22thirteen\x22,\x22fourteen\x22,\x22fifteen\x22,\x22sixteen\x22,\x22seventeen\x22,\x22eighteen\x22,\x22nineteen\x22], null);\r\ncljs.pprint.english_ordinal_units \x3d new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22zeroth\x22,\x22first\x22,\x22second\x22,\x22third\x22,\x22fourth\x22,\x22fifth\x22,\x22sixth\x22,\x22seventh\x22,\x22eighth\x22,\x22ninth\x22,\x22tenth\x22,\x22eleventh\x22,\x22twelfth\x22,\x22thirteenth\x22,\x22fourteenth\x22,\x22fifteenth\x22,\x22sixteenth\x22,\x22seventeenth\x22,\x22eighteenth\x22,\x22nineteenth\x22], null);\r\ncljs.pprint.english_cardinal_tens \x3d new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22\x22,\x22\x22,\x22twenty\x22,\x22thirty\x22,\x22forty\x22,\x22fifty\x22,\x22sixty\x22,\x22seventy\x22,\x22eighty\x22,\x22ninety\x22], null);\r\ncljs.pprint.english_ordinal_tens \x3d new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22\x22,\x22\x22,\x22twentieth\x22,\x22thirtieth\x22,\x22fortieth\x22,\x22fiftieth\x22,\x22sixtieth\x22,\x22seventieth\x22,\x22eightieth\x22,\x22ninetieth\x22], null);\r\ncljs.pprint.english_scale_numbers \x3d new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22\x22,\x22thousand\x22,\x22million\x22,\x22billion\x22,\x22trillion\x22,\x22quadrillion\x22,\x22quintillion\x22,\x22sextillion\x22,\x22septillion\x22,\x22octillion\x22,\x22nonillion\x22,\x22decillion\x22,\x22undecillion\x22,\x22duodecillion\x22,\x22tredecillion\x22,\x22quattuordecillion\x22,\x22quindecillion\x22,\x22sexdecillion\x22,\x22septendecillion\x22,\x22octodecillion\x22,\x22novemdecillion\x22,\x22vigintillion\x22], null);\r\n/**\r\n * Convert a number less than 1000 to a cardinal english string\r\n */\r\ncljs.pprint.format_simple_cardinal \x3d (function cljs$pprint$format_simple_cardinal(num){\r\nvar hundreds \x3d cljs.core.quot(num,(100));\r\nvar tens \x3d cljs.core.rem(num,(100));\r\nreturn [(((hundreds \x3e (0)))?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_cardinal_units,hundreds)),\x22 hundred\x22].join(\x27\x27):null),(((((hundreds \x3e (0))) \x26\x26 ((tens \x3e (0)))))?\x22 \x22:null),cljs.core.str.cljs$core$IFn$_invoke$arity$1((((tens \x3e (0)))?(((tens \x3c (20)))?cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_cardinal_units,tens):(function (){var ten_digit \x3d cljs.core.quot(tens,(10));\r\nvar unit_digit \x3d cljs.core.rem(tens,(10));\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1((((ten_digit \x3e (0)))?cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_cardinal_tens,ten_digit):null)),(((((ten_digit \x3e (0))) \x26\x26 ((unit_digit \x3e (0)))))?\x22-\x22:null),cljs.core.str.cljs$core$IFn$_invoke$arity$1((((unit_digit \x3e (0)))?cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_cardinal_units,unit_digit):null))].join(\x27\x27);\r\n})()):null))].join(\x27\x27);\r\n});\r\n/**\r\n * Take a sequence of parts, add scale numbers (e.g., million) and combine into a string\r\n *   offset is a factor of 10^3 to multiply by\r\n */\r\ncljs.pprint.add_english_scales \x3d (function cljs$pprint$add_english_scales(parts,offset){\r\nvar cnt \x3d cljs.core.count(parts);\r\nvar acc \x3d cljs.core.PersistentVector.EMPTY;\r\nvar pos \x3d (cnt - (1));\r\nvar this$ \x3d cljs.core.first(parts);\r\nvar remainder \x3d cljs.core.next(parts);\r\nwhile(true){\r\nif((remainder \x3d\x3d null)){\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(\x22, \x22,acc))),(((((!(cljs.core.empty_QMARK_(this$)))) \x26\x26 ((!(cljs.core.empty_QMARK_(acc))))))?\x22, \x22:null),cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$),(((((!(cljs.core.empty_QMARK_(this$)))) \x26\x26 (((pos + offset) \x3e (0)))))?[\x22 \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_scale_numbers,(pos + offset)))].join(\x27\x27):null)].join(\x27\x27);\r\n} else {\r\nvar G__22204 \x3d ((cljs.core.empty_QMARK_(this$))?acc:cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$),\x22 \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_scale_numbers,(pos + offset)))].join(\x27\x27)));\r\nvar G__22205 \x3d (pos - (1));\r\nvar G__22206 \x3d cljs.core.first(remainder);\r\nvar G__22207 \x3d cljs.core.next(remainder);\r\nacc \x3d G__22204;\r\npos \x3d G__22205;\r\nthis$ \x3d G__22206;\r\nremainder \x3d G__22207;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.pprint.format_cardinal_english \x3d (function cljs$pprint$format_cardinal_english(params,navigator,offsets){\r\nvar vec__19470 \x3d cljs.pprint.next_arg(navigator);\r\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19470,(0),null);\r\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19470,(1),null);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),arg)){\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22zero\x22], 0));\r\n} else {\r\nvar abs_arg_22219 \x3d (((arg \x3c (0)))?(- arg):arg);\r\nvar parts_22220 \x3d cljs.pprint.remainders((1000),abs_arg_22219);\r\nif((cljs.core.count(parts_22220) \x3c\x3d cljs.core.count(cljs.pprint.english_scale_numbers))){\r\nvar parts_strs_22238 \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.pprint.format_simple_cardinal,parts_22220);\r\nvar full_str_22239 \x3d cljs.pprint.add_english_scales(parts_strs_22238,(0));\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[(((arg \x3c (0)))?\x22minus \x22:null),full_str_22239].join(\x27\x27)], 0));\r\n} else {\r\ncljs.pprint.format_integer((10),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),(0),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),\x22 \x22,new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327),\x22,\x22,new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083),(3),new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),true], null),cljs.pprint.init_navigator(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),(0),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),(0),new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327),(0),new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083),(0)], null));\r\n}\r\n}\r\n\r\nreturn navigator__$1;\r\n});\r\n/**\r\n * Convert a number less than 1000 to a ordinal english string\r\n *   Note this should only be used for the last one in the sequence\r\n */\r\ncljs.pprint.format_simple_ordinal \x3d (function cljs$pprint$format_simple_ordinal(num){\r\nvar hundreds \x3d cljs.core.quot(num,(100));\r\nvar tens \x3d cljs.core.rem(num,(100));\r\nreturn [(((hundreds \x3e (0)))?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_cardinal_units,hundreds)),\x22 hundred\x22].join(\x27\x27):null),(((((hundreds \x3e (0))) \x26\x26 ((tens \x3e (0)))))?\x22 \x22:null),cljs.core.str.cljs$core$IFn$_invoke$arity$1((((tens \x3e (0)))?(((tens \x3c (20)))?cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_ordinal_units,tens):(function (){var ten_digit \x3d cljs.core.quot(tens,(10));\r\nvar unit_digit \x3d cljs.core.rem(tens,(10));\r\nif((((ten_digit \x3e (0))) \x26\x26 ((!((unit_digit \x3e (0))))))){\r\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_ordinal_tens,ten_digit);\r\n} else {\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1((((ten_digit \x3e (0)))?cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_cardinal_tens,ten_digit):null)),(((((ten_digit \x3e (0))) \x26\x26 ((unit_digit \x3e (0)))))?\x22-\x22:null),cljs.core.str.cljs$core$IFn$_invoke$arity$1((((unit_digit \x3e (0)))?cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_ordinal_units,unit_digit):null))].join(\x27\x27);\r\n}\r\n})()):(((hundreds \x3e (0)))?\x22th\x22:null)))].join(\x27\x27);\r\n});\r\ncljs.pprint.format_ordinal_english \x3d (function cljs$pprint$format_ordinal_english(params,navigator,offsets){\r\nvar vec__19492 \x3d cljs.pprint.next_arg(navigator);\r\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19492,(0),null);\r\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19492,(1),null);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),arg)){\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22zeroth\x22], 0));\r\n} else {\r\nvar abs_arg_22250 \x3d (((arg \x3c (0)))?(- arg):arg);\r\nvar parts_22251 \x3d cljs.pprint.remainders((1000),abs_arg_22250);\r\nif((cljs.core.count(parts_22251) \x3c\x3d cljs.core.count(cljs.pprint.english_scale_numbers))){\r\nvar parts_strs_22252 \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.pprint.format_simple_cardinal,cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(parts_22251));\r\nvar head_str_22253 \x3d cljs.pprint.add_english_scales(parts_strs_22252,(1));\r\nvar tail_str_22254 \x3d cljs.pprint.format_simple_ordinal(cljs.core.last(parts_22251));\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[(((arg \x3c (0)))?\x22minus \x22:null),(((((!(cljs.core.empty_QMARK_(head_str_22253)))) \x26\x26 ((!(cljs.core.empty_QMARK_(tail_str_22254))))))?[head_str_22253,\x22, \x22,tail_str_22254].join(\x27\x27):(((!(cljs.core.empty_QMARK_(head_str_22253))))?[head_str_22253,\x22th\x22].join(\x27\x27):tail_str_22254\r\n))].join(\x27\x27)], 0));\r\n} else {\r\ncljs.pprint.format_integer((10),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),(0),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),\x22 \x22,new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327),\x22,\x22,new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083),(3),new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),true], null),cljs.pprint.init_navigator(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),(0),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),(0),new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327),(0),new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083),(0)], null));\r\n\r\nvar low_two_digits_22261 \x3d cljs.core.rem(arg,(100));\r\nvar not_teens_22262 \x3d ((((11) \x3c low_two_digits_22261)) || (((19) \x3e low_two_digits_22261)));\r\nvar low_digit_22263 \x3d cljs.core.rem(low_two_digits_22261,(10));\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(((((low_digit_22263 \x3d\x3d\x3d (1))) \x26\x26 (not_teens_22262)))?\x22st\x22:(((((low_digit_22263 \x3d\x3d\x3d (2))) \x26\x26 (not_teens_22262)))?\x22nd\x22:(((((low_digit_22263 \x3d\x3d\x3d (3))) \x26\x26 (not_teens_22262)))?\x22rd\x22:\x22th\x22\r\n)))], 0));\r\n}\r\n}\r\n\r\nreturn navigator__$1;\r\n});\r\ncljs.pprint.old_roman_table \x3d new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22I\x22,\x22II\x22,\x22III\x22,\x22IIII\x22,\x22V\x22,\x22VI\x22,\x22VII\x22,\x22VIII\x22,\x22VIIII\x22], null),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22X\x22,\x22XX\x22,\x22XXX\x22,\x22XXXX\x22,\x22L\x22,\x22LX\x22,\x22LXX\x22,\x22LXXX\x22,\x22LXXXX\x22], null),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22C\x22,\x22CC\x22,\x22CCC\x22,\x22CCCC\x22,\x22D\x22,\x22DC\x22,\x22DCC\x22,\x22DCCC\x22,\x22DCCCC\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22M\x22,\x22MM\x22,\x22MMM\x22], null)], null);\r\ncljs.pprint.new_roman_table \x3d new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22I\x22,\x22II\x22,\x22III\x22,\x22IV\x22,\x22V\x22,\x22VI\x22,\x22VII\x22,\x22VIII\x22,\x22IX\x22], null),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22X\x22,\x22XX\x22,\x22XXX\x22,\x22XL\x22,\x22L\x22,\x22LX\x22,\x22LXX\x22,\x22LXXX\x22,\x22XC\x22], null),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22C\x22,\x22CC\x22,\x22CCC\x22,\x22CD\x22,\x22D\x22,\x22DC\x22,\x22DCC\x22,\x22DCCC\x22,\x22CM\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22M\x22,\x22MM\x22,\x22MMM\x22], null)], null);\r\n/**\r\n * Format a roman numeral using the specified look-up table\r\n */\r\ncljs.pprint.format_roman \x3d (function cljs$pprint$format_roman(table,params,navigator,offsets){\r\nvar vec__19534 \x3d cljs.pprint.next_arg(navigator);\r\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19534,(0),null);\r\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19534,(1),null);\r\nif(((typeof arg \x3d\x3d\x3d \x27number\x27) \x26\x26 ((((arg \x3e (0))) \x26\x26 ((arg \x3c (4000))))))){\r\nvar digits_22276 \x3d cljs.pprint.remainders((10),arg);\r\nvar acc_22277 \x3d cljs.core.PersistentVector.EMPTY;\r\nvar pos_22278 \x3d (cljs.core.count(digits_22276) - (1));\r\nvar digits_22279__$1 \x3d digits_22276;\r\nwhile(true){\r\nif(cljs.core.empty_QMARK_(digits_22279__$1)){\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,acc_22277)], 0));\r\n} else {\r\nvar digit_22281 \x3d cljs.core.first(digits_22279__$1);\r\nvar G__22282 \x3d ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),digit_22281))?acc_22277:cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc_22277,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(table,pos_22278),(digit_22281 - (1)))));\r\nvar G__22283 \x3d (pos_22278 - (1));\r\nvar G__22284 \x3d cljs.core.next(digits_22279__$1);\r\nacc_22277 \x3d G__22282;\r\npos_22278 \x3d G__22283;\r\ndigits_22279__$1 \x3d G__22284;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n} else {\r\ncljs.pprint.format_integer((10),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),(0),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),\x22 \x22,new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327),\x22,\x22,new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083),(3),new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),true], null),cljs.pprint.init_navigator(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),(0),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),(0),new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327),(0),new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083),(0)], null));\r\n}\r\n\r\nreturn navigator__$1;\r\n});\r\ncljs.pprint.format_old_roman \x3d (function cljs$pprint$format_old_roman(params,navigator,offsets){\r\nreturn cljs.pprint.format_roman(cljs.pprint.old_roman_table,params,navigator,offsets);\r\n});\r\ncljs.pprint.format_new_roman \x3d (function cljs$pprint$format_new_roman(params,navigator,offsets){\r\nreturn cljs.pprint.format_roman(cljs.pprint.new_roman_table,params,navigator,offsets);\r\n});\r\ncljs.pprint.special_chars \x3d new cljs.core.PersistentArrayMap(null, 5, [(8),\x22Backspace\x22,(9),\x22Tab\x22,(10),\x22Newline\x22,(13),\x22Return\x22,(32),\x22Space\x22], null);\r\ncljs.pprint.pretty_character \x3d (function cljs$pprint$pretty_character(params,navigator,offsets){\r\nvar vec__19543 \x3d cljs.pprint.next_arg(navigator);\r\nvar c \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19543,(0),null);\r\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19543,(1),null);\r\nvar as_int \x3d cljs.pprint.char_code(c);\r\nvar base_char \x3d (as_int \x26 (127));\r\nvar meta \x3d (as_int \x26 (128));\r\nvar special \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.pprint.special_chars,base_char);\r\nif((meta \x3e (0))){\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Meta-\x22], 0));\r\n} else {\r\n}\r\n\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(cljs.core.truth_(special)?special:(((base_char \x3c (32)))?[\x22Control-\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.char$((base_char + (64))))].join(\x27\x27):((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(base_char,(127)))?\x22Control-?\x22:cljs.core.char$(base_char)\r\n)))], 0));\r\n\r\nreturn navigator__$1;\r\n});\r\ncljs.pprint.readable_character \x3d (function cljs$pprint$readable_character(params,navigator,offsets){\r\nvar vec__19546 \x3d cljs.pprint.next_arg(navigator);\r\nvar c \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19546,(0),null);\r\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19546,(1),null);\r\nvar pred__19550_22294 \x3d cljs.core._EQ_;\r\nvar expr__19551_22295 \x3d new cljs.core.Keyword(null,\x22char-format\x22,\x22char-format\x22,-1016499218).cljs$core$IFn$_invoke$arity$1(params);\r\nif(cljs.core.truth_((function (){var G__19553 \x3d \x22o\x22;\r\nvar G__19554 \x3d expr__19551_22295;\r\nreturn (pred__19550_22294.cljs$core$IFn$_invoke$arity$2 ? pred__19550_22294.cljs$core$IFn$_invoke$arity$2(G__19553,G__19554) : pred__19550_22294.call(null,G__19553,G__19554));\r\n})())){\r\ncljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(true,\x22\\\\o~3,\x270o\x22,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.pprint.char_code(c)], 0));\r\n} else {\r\nif(cljs.core.truth_((function (){var G__19555 \x3d \x22u\x22;\r\nvar G__19556 \x3d expr__19551_22295;\r\nreturn (pred__19550_22294.cljs$core$IFn$_invoke$arity$2 ? pred__19550_22294.cljs$core$IFn$_invoke$arity$2(G__19555,G__19556) : pred__19550_22294.call(null,G__19555,G__19556));\r\n})())){\r\ncljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(true,\x22\\\\u~4,\x270x\x22,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.pprint.char_code(c)], 0));\r\n} else {\r\nif(cljs.core.truth_((pred__19550_22294.cljs$core$IFn$_invoke$arity$2 ? pred__19550_22294.cljs$core$IFn$_invoke$arity$2(null,expr__19551_22295) : pred__19550_22294.call(null,null,expr__19551_22295)))){\r\ncljs.pprint.print_char(c);\r\n} else {\r\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__19551_22295)].join(\x27\x27)));\r\n}\r\n}\r\n}\r\n\r\nreturn navigator__$1;\r\n});\r\ncljs.pprint.plain_character \x3d (function cljs$pprint$plain_character(params,navigator,offsets){\r\nvar vec__19560 \x3d cljs.pprint.next_arg(navigator);\r\nvar char$ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19560,(0),null);\r\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19560,(1),null);\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([char$], 0));\r\n\r\nreturn navigator__$1;\r\n});\r\ncljs.pprint.abort_QMARK_ \x3d (function cljs$pprint$abort_QMARK_(context){\r\nvar token \x3d cljs.core.first(context);\r\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22up-arrow\x22,\x22up-arrow\x22,1705310333),token)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22colon-up-arrow\x22,\x22colon-up-arrow\x22,244853007),token)));\r\n});\r\ncljs.pprint.execute_sub_format \x3d (function cljs$pprint$execute_sub_format(format,args,base_args){\r\nreturn cljs.core.second(cljs.pprint.map_passing_context((function (element,context){\r\nif(cljs.pprint.abort_QMARK_(context)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,context], null);\r\n} else {\r\nvar vec__19567 \x3d cljs.pprint.realize_parameter_list(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(element),context);\r\nvar params \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19567,(0),null);\r\nvar args__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19567,(1),null);\r\nvar vec__19570 \x3d cljs.pprint.unzip_map(params);\r\nvar params__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19570,(0),null);\r\nvar offsets \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19570,(1),null);\r\nvar params__$2 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(params__$1,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822),base_args);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22func\x22,\x22func\x22,-238706040).cljs$core$IFn$_invoke$arity$1(element),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2,args__$1,offsets], null))], null);\r\n}\r\n}),args,format));\r\n});\r\n/**\r\n * Produce string parts for the mantissa (normalize 1-9) and exponent\r\n */\r\ncljs.pprint.float_parts_base \x3d (function cljs$pprint$float_parts_base(f){\r\nvar s \x3d clojure.string.lower_case(cljs.core.str.cljs$core$IFn$_invoke$arity$1(f));\r\nvar exploc \x3d s.indexOf(\x22e\x22);\r\nvar dotloc \x3d s.indexOf(\x22.\x22);\r\nif((exploc \x3c (0))){\r\nif((dotloc \x3c (0))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s,cljs.core.str.cljs$core$IFn$_invoke$arity$1((((s).length) - (1)))], null);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),dotloc),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(dotloc + (1)))].join(\x27\x27),cljs.core.str.cljs$core$IFn$_invoke$arity$1((dotloc - (1)))], null);\r\n}\r\n} else {\r\nif((dotloc \x3c (0))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),exploc),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(exploc + (1)))], null);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),(1)),cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(2),exploc)].join(\x27\x27),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(exploc + (1)))], null);\r\n}\r\n}\r\n});\r\n/**\r\n * Take care of leading and trailing zeros in decomposed floats\r\n */\r\ncljs.pprint.float_parts \x3d (function cljs$pprint$float_parts(f){\r\nvar vec__19576 \x3d cljs.pprint.float_parts_base(f);\r\nvar m \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19576,(0),null);\r\nvar e \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19576,(1),null);\r\nvar m1 \x3d cljs.pprint.rtrim(m,\x220\x22);\r\nvar m2 \x3d cljs.pprint.ltrim(m1,\x220\x22);\r\nvar delta \x3d (cljs.core.count(m1) - cljs.core.count(m2));\r\nvar e__$1 \x3d (((((cljs.core.count(e) \x3e (0))) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(e,(0)),\x22+\x22))))?cljs.core.subs.cljs$core$IFn$_invoke$arity$2(e,(1)):e);\r\nif(cljs.core.empty_QMARK_(m2)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x220\x22,(0)], null);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m2,(parseInt(e__$1,(10)) - delta)], null);\r\n}\r\n});\r\n/**\r\n * Assumption: The input string consists of one or more decimal digits,\r\n *   and no other characters. Return a string containing one or more\r\n *   decimal digits containing a decimal number one larger than the input\r\n *   string. The output string will always be the same length as the input\r\n *   string, or one character longer.\r\n */\r\ncljs.pprint.inc_s \x3d (function cljs$pprint$inc_s(s){\r\nvar len_1 \x3d (cljs.core.count(s) - (1));\r\nvar i \x3d (len_1 | (0));\r\nwhile(true){\r\nif((i \x3c (0))){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.str,\x221\x22,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((len_1 + (1)),\x220\x22));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x229\x22,s.charAt(i))){\r\nvar G__22304 \x3d (i - (1));\r\ni \x3d G__22304;\r\ncontinue;\r\n} else {\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.str,cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),i),cljs.core.char$((cljs.pprint.char_code(s.charAt(i)) + (1))),cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((len_1 - i),\x220\x22));\r\n\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.pprint.round_str \x3d (function cljs$pprint$round_str(m,e,d,w){\r\nif(cljs.core.truth_((function (){var or__4253__auto__ \x3d d;\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn w;\r\n}\r\n})())){\r\nvar len \x3d cljs.core.count(m);\r\nvar w__$1 \x3d (cljs.core.truth_(w)?(function (){var x__4336__auto__ \x3d (2);\r\nvar y__4337__auto__ \x3d w;\r\nreturn ((x__4336__auto__ \x3e y__4337__auto__) ? x__4336__auto__ : y__4337__auto__);\r\n})():(0));\r\nvar round_pos \x3d (cljs.core.truth_(d)?((e + d) + (1)):(((e \x3e\x3d (0)))?(function (){var x__4336__auto__ \x3d (e + (1));\r\nvar y__4337__auto__ \x3d (w__$1 - (1));\r\nreturn ((x__4336__auto__ \x3e y__4337__auto__) ? x__4336__auto__ : y__4337__auto__);\r\n})():(w__$1 + e)\r\n));\r\nvar vec__19603 \x3d ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(round_pos,(0)))?new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [[\x220\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join(\x27\x27),(e + (1)),(1),(len + (1))], null):new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [m,e,round_pos,len], null));\r\nvar m1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19603,(0),null);\r\nvar e1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19603,(1),null);\r\nvar round_pos__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19603,(2),null);\r\nvar len__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19603,(3),null);\r\nif(cljs.core.truth_(round_pos__$1)){\r\nif((round_pos__$1 \x3c (0))){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x220\x22,(0),false], null);\r\n} else {\r\nif((len__$1 \x3e round_pos__$1)){\r\nvar round_char \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$2(m1,round_pos__$1);\r\nvar result \x3d cljs.core.subs.cljs$core$IFn$_invoke$arity$3(m1,(0),round_pos__$1);\r\nif((cljs.pprint.char_code(round_char) \x3e\x3d cljs.pprint.char_code(\x225\x22))){\r\nvar round_up_result \x3d cljs.pprint.inc_s(result);\r\nvar expanded \x3d (cljs.core.count(round_up_result) \x3e ((result).length));\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [((expanded)?cljs.core.subs.cljs$core$IFn$_invoke$arity$3(round_up_result,(0),(cljs.core.count(round_up_result) - (1))):round_up_result),e1,expanded], null);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [result,e1,false], null);\r\n}\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m,e,false], null);\r\n}\r\n}\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m,e,false], null);\r\n}\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m,e,false], null);\r\n}\r\n});\r\ncljs.pprint.expand_fixed \x3d (function cljs$pprint$expand_fixed(m,e,d){\r\nvar vec__19623 \x3d (((e \x3c (0)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(((- e) - (1)),\x220\x22))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join(\x27\x27),(-1)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m,e], null));\r\nvar m1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19623,(0),null);\r\nvar e1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19623,(1),null);\r\nvar len \x3d cljs.core.count(m1);\r\nvar target_len \x3d (cljs.core.truth_(d)?((e1 + d) + (1)):(e1 + (1)));\r\nif((len \x3c target_len)){\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(m1),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((target_len - len),\x220\x22)))].join(\x27\x27);\r\n} else {\r\nreturn m1;\r\n}\r\n});\r\n/**\r\n * Insert the decimal point at the right spot in the number to match an exponent\r\n */\r\ncljs.pprint.insert_decimal \x3d (function cljs$pprint$insert_decimal(m,e){\r\nif((e \x3c (0))){\r\nreturn [\x22.\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join(\x27\x27);\r\n} else {\r\nvar loc \x3d (e + (1));\r\nreturn [cljs.core.subs.cljs$core$IFn$_invoke$arity$3(m,(0),loc),\x22.\x22,cljs.core.subs.cljs$core$IFn$_invoke$arity$2(m,loc)].join(\x27\x27);\r\n}\r\n});\r\ncljs.pprint.get_fixed \x3d (function cljs$pprint$get_fixed(m,e,d){\r\nreturn cljs.pprint.insert_decimal(cljs.pprint.expand_fixed(m,e,d),e);\r\n});\r\n/**\r\n * Insert the decimal point at the right spot in the number to match an exponent\r\n */\r\ncljs.pprint.insert_scaled_decimal \x3d (function cljs$pprint$insert_scaled_decimal(m,k){\r\nif((k \x3c (0))){\r\nreturn [\x22.\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join(\x27\x27);\r\n} else {\r\nreturn [cljs.core.subs.cljs$core$IFn$_invoke$arity$3(m,(0),k),\x22.\x22,cljs.core.subs.cljs$core$IFn$_invoke$arity$2(m,k)].join(\x27\x27);\r\n}\r\n});\r\ncljs.pprint.convert_ratio \x3d (function cljs$pprint$convert_ratio(x){\r\nreturn x;\r\n});\r\ncljs.pprint.fixed_float \x3d (function cljs$pprint$fixed_float(params,navigator,offsets){\r\nvar w \x3d new cljs.core.Keyword(null,\x22w\x22,\x22w\x22,354169001).cljs$core$IFn$_invoke$arity$1(params);\r\nvar d \x3d new cljs.core.Keyword(null,\x22d\x22,\x22d\x22,1972142424).cljs$core$IFn$_invoke$arity$1(params);\r\nvar vec__19629 \x3d cljs.pprint.next_arg(navigator);\r\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19629,(0),null);\r\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19629,(1),null);\r\nvar vec__19632 \x3d (((arg \x3c (0)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22-\x22,(- arg)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22+\x22,arg], null));\r\nvar sign \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19632,(0),null);\r\nvar abs \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19632,(1),null);\r\nvar abs__$1 \x3d cljs.pprint.convert_ratio(abs);\r\nvar vec__19635 \x3d cljs.pprint.float_parts(abs__$1);\r\nvar mantissa \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19635,(0),null);\r\nvar exp \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19635,(1),null);\r\nvar scaled_exp \x3d (exp + new cljs.core.Keyword(null,\x22k\x22,\x22k\x22,-2146297393).cljs$core$IFn$_invoke$arity$1(params));\r\nvar add_sign \x3d (function (){var or__4253__auto__ \x3d new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn (arg \x3c (0));\r\n}\r\n})();\r\nvar append_zero \x3d ((cljs.core.not(d)) \x26\x26 (((cljs.core.count(mantissa) - (1)) \x3c\x3d scaled_exp)));\r\nvar vec__19638 \x3d cljs.pprint.round_str(mantissa,scaled_exp,d,(cljs.core.truth_(w)?(w - (cljs.core.truth_(add_sign)?(1):(0))):null));\r\nvar rounded_mantissa \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19638,(0),null);\r\nvar scaled_exp__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19638,(1),null);\r\nvar expanded \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19638,(2),null);\r\nvar fixed_repr \x3d cljs.pprint.get_fixed(rounded_mantissa,(cljs.core.truth_(expanded)?(scaled_exp__$1 + (1)):scaled_exp__$1),d);\r\nvar fixed_repr__$1 \x3d (cljs.core.truth_((function (){var and__4251__auto__ \x3d w;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nvar and__4251__auto____$1 \x3d d;\r\nif(cljs.core.truth_(and__4251__auto____$1)){\r\nreturn (((d \x3e\x3d (1))) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fixed_repr.charAt((0)),\x220\x22)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fixed_repr.charAt((1)),\x22.\x22)) \x26\x26 ((((fixed_repr).length) \x3e (w - (cljs.core.truth_(add_sign)?(1):(0))))))))));\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())?cljs.core.subs.cljs$core$IFn$_invoke$arity$2(fixed_repr,(1)):fixed_repr);\r\nvar prepend_zero \x3d cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fixed_repr__$1),\x22.\x22);\r\nif(cljs.core.truth_(w)){\r\nvar len_22310 \x3d ((fixed_repr__$1).length);\r\nvar signed_len_22311 \x3d (cljs.core.truth_(add_sign)?(len_22310 + (1)):len_22310);\r\nvar prepend_zero_22312__$1 \x3d ((prepend_zero) \x26\x26 ((!((signed_len_22311 \x3e\x3d w)))));\r\nvar append_zero_22313__$1 \x3d ((append_zero) \x26\x26 ((!((signed_len_22311 \x3e\x3d w)))));\r\nvar full_len_22314 \x3d ((((prepend_zero_22312__$1) || (append_zero_22313__$1)))?(signed_len_22311 + (1)):signed_len_22311);\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d (full_len_22314 \x3e w);\r\nif(and__4251__auto__){\r\nreturn new cljs.core.Keyword(null,\x22overflowchar\x22,\x22overflowchar\x22,-1620088106).cljs$core$IFn$_invoke$arity$1(params);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(w,new cljs.core.Keyword(null,\x22overflowchar\x22,\x22overflowchar\x22,-1620088106).cljs$core$IFn$_invoke$arity$1(params)))], 0));\r\n} else {\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((w - full_len_22314),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530).cljs$core$IFn$_invoke$arity$1(params)))),cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(add_sign)?sign:null)),((prepend_zero_22312__$1)?\x220\x22:null),fixed_repr__$1,((append_zero_22313__$1)?\x220\x22:null)].join(\x27\x27)], 0));\r\n}\r\n} else {\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(add_sign)?sign:null)),((prepend_zero)?\x220\x22:null),fixed_repr__$1,((append_zero)?\x220\x22:null)].join(\x27\x27)], 0));\r\n}\r\n\r\nreturn navigator__$1;\r\n});\r\ncljs.pprint.exponential_float \x3d (function cljs$pprint$exponential_float(params,navigator,offset){\r\nvar vec__19680 \x3d cljs.pprint.next_arg(navigator);\r\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19680,(0),null);\r\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19680,(1),null);\r\nvar arg__$1 \x3d cljs.pprint.convert_ratio(arg);\r\nvar G__19688_22321 \x3d cljs.pprint.float_parts((((arg__$1 \x3c (0)))?(- arg__$1):arg__$1));\r\nvar vec__19690_22322 \x3d G__19688_22321;\r\nvar mantissa_22323 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19690_22322,(0),null);\r\nvar exp_22324 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19690_22322,(1),null);\r\nvar G__19688_22326__$1 \x3d G__19688_22321;\r\nwhile(true){\r\nvar vec__19694_22327 \x3d G__19688_22326__$1;\r\nvar mantissa_22328__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19694_22327,(0),null);\r\nvar exp_22329__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19694_22327,(1),null);\r\nvar w_22330 \x3d new cljs.core.Keyword(null,\x22w\x22,\x22w\x22,354169001).cljs$core$IFn$_invoke$arity$1(params);\r\nvar d_22331 \x3d new cljs.core.Keyword(null,\x22d\x22,\x22d\x22,1972142424).cljs$core$IFn$_invoke$arity$1(params);\r\nvar e_22332 \x3d new cljs.core.Keyword(null,\x22e\x22,\x22e\x22,1381269198).cljs$core$IFn$_invoke$arity$1(params);\r\nvar k_22333 \x3d new cljs.core.Keyword(null,\x22k\x22,\x22k\x22,-2146297393).cljs$core$IFn$_invoke$arity$1(params);\r\nvar expchar_22334 \x3d (function (){var or__4253__auto__ \x3d new cljs.core.Keyword(null,\x22exponentchar\x22,\x22exponentchar\x22,1986664222).cljs$core$IFn$_invoke$arity$1(params);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn \x22E\x22;\r\n}\r\n})();\r\nvar add_sign_22335 \x3d (function (){var or__4253__auto__ \x3d new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn (arg__$1 \x3c (0));\r\n}\r\n})();\r\nvar prepend_zero_22336 \x3d (k_22333 \x3c\x3d (0));\r\nvar scaled_exp_22337 \x3d (exp_22329__$1 - (k_22333 - (1)));\r\nvar scaled_exp_str_22338 \x3d cljs.core.str.cljs$core$IFn$_invoke$arity$1(Math.abs(scaled_exp_22337));\r\nvar scaled_exp_str_22339__$1 \x3d [cljs.core.str.cljs$core$IFn$_invoke$arity$1(expchar_22334),(((scaled_exp_22337 \x3c (0)))?\x22-\x22:\x22+\x22),cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(e_22332)?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((e_22332 - ((scaled_exp_str_22338).length)),\x220\x22)):null)),scaled_exp_str_22338].join(\x27\x27);\r\nvar exp_width_22340 \x3d ((scaled_exp_str_22339__$1).length);\r\nvar base_mantissa_width_22341 \x3d cljs.core.count(mantissa_22328__$1);\r\nvar scaled_mantissa_22342 \x3d [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((- k_22333),\x220\x22))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(mantissa_22328__$1),cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(d_22331)?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(((d_22331 - (base_mantissa_width_22341 - (1))) - (((k_22333 \x3c (0)))?(- k_22333):(0))),\x220\x22)):null))].join(\x27\x27);\r\nvar w_mantissa_22343 \x3d (cljs.core.truth_(w_22330)?(w_22330 - exp_width_22340):null);\r\nvar vec__19701_22344 \x3d cljs.pprint.round_str(scaled_mantissa_22342,(0),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k_22333,(0)))?(d_22331 - (1)):(((k_22333 \x3e (0)))?d_22331:(((k_22333 \x3c (0)))?(d_22331 - (1)):null))),(cljs.core.truth_(w_mantissa_22343)?(w_mantissa_22343 - (cljs.core.truth_(add_sign_22335)?(1):(0))):null));\r\nvar rounded_mantissa_22345 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19701_22344,(0),null);\r\nvar __22346 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19701_22344,(1),null);\r\nvar incr_exp_22347 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19701_22344,(2),null);\r\nvar full_mantissa_22348 \x3d cljs.pprint.insert_scaled_decimal(rounded_mantissa_22345,k_22333);\r\nvar append_zero_22349 \x3d ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k_22333,cljs.core.count(rounded_mantissa_22345))) \x26\x26 ((d_22331 \x3d\x3d null)));\r\nif(cljs.core.not(incr_exp_22347)){\r\nif(cljs.core.truth_(w_22330)){\r\nvar len_22353 \x3d (((full_mantissa_22348).length) + exp_width_22340);\r\nvar signed_len_22354 \x3d (cljs.core.truth_(add_sign_22335)?(len_22353 + (1)):len_22353);\r\nvar prepend_zero_22355__$1 \x3d ((prepend_zero_22336) \x26\x26 ((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(signed_len_22354,w_22330)))));\r\nvar full_len_22356 \x3d ((prepend_zero_22355__$1)?(signed_len_22354 + (1)):signed_len_22354);\r\nvar append_zero_22357__$1 \x3d ((append_zero_22349) \x26\x26 ((full_len_22356 \x3c w_22330)));\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d (function (){var or__4253__auto__ \x3d (full_len_22356 \x3e w_22330);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar and__4251__auto__ \x3d e_22332;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn ((exp_width_22340 - (2)) \x3e e_22332);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n}\r\n})();\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn new cljs.core.Keyword(null,\x22overflowchar\x22,\x22overflowchar\x22,-1620088106).cljs$core$IFn$_invoke$arity$1(params);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(w_22330,new cljs.core.Keyword(null,\x22overflowchar\x22,\x22overflowchar\x22,-1620088106).cljs$core$IFn$_invoke$arity$1(params)))], 0));\r\n} else {\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(((w_22330 - full_len_22356) - ((append_zero_22357__$1)?(1):(0))),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530).cljs$core$IFn$_invoke$arity$1(params)))),(cljs.core.truth_(add_sign_22335)?(((arg__$1 \x3c (0)))?\x22-\x22:\x22+\x22):null),((prepend_zero_22355__$1)?\x220\x22:null),full_mantissa_22348,((append_zero_22357__$1)?\x220\x22:null),scaled_exp_str_22339__$1].join(\x27\x27)], 0));\r\n}\r\n} else {\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[(cljs.core.truth_(add_sign_22335)?(((arg__$1 \x3c (0)))?\x22-\x22:\x22+\x22):null),((prepend_zero_22336)?\x220\x22:null),full_mantissa_22348,((append_zero_22349)?\x220\x22:null),scaled_exp_str_22339__$1].join(\x27\x27)], 0));\r\n}\r\n} else {\r\nvar G__22362 \x3d new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rounded_mantissa_22345,(exp_22329__$1 + (1))], null);\r\nG__19688_22326__$1 \x3d G__22362;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n\r\nreturn navigator__$1;\r\n});\r\ncljs.pprint.general_float \x3d (function cljs$pprint$general_float(params,navigator,offsets){\r\nvar vec__19726 \x3d cljs.pprint.next_arg(navigator);\r\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19726,(0),null);\r\nvar _ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19726,(1),null);\r\nvar arg__$1 \x3d cljs.pprint.convert_ratio(arg);\r\nvar vec__19729 \x3d cljs.pprint.float_parts((((arg__$1 \x3c (0)))?(- arg__$1):arg__$1));\r\nvar mantissa \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19729,(0),null);\r\nvar exp \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19729,(1),null);\r\nvar w \x3d new cljs.core.Keyword(null,\x22w\x22,\x22w\x22,354169001).cljs$core$IFn$_invoke$arity$1(params);\r\nvar d \x3d new cljs.core.Keyword(null,\x22d\x22,\x22d\x22,1972142424).cljs$core$IFn$_invoke$arity$1(params);\r\nvar e \x3d new cljs.core.Keyword(null,\x22e\x22,\x22e\x22,1381269198).cljs$core$IFn$_invoke$arity$1(params);\r\nvar n \x3d ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arg__$1,0.0))?(0):(exp + (1)));\r\nvar ee \x3d (cljs.core.truth_(e)?(e + (2)):(4));\r\nvar ww \x3d (cljs.core.truth_(w)?(w - ee):null);\r\nvar d__$1 \x3d (cljs.core.truth_(d)?d:(function (){var x__4336__auto__ \x3d cljs.core.count(mantissa);\r\nvar y__4337__auto__ \x3d (function (){var x__4339__auto__ \x3d n;\r\nvar y__4340__auto__ \x3d (7);\r\nreturn ((x__4339__auto__ \x3c y__4340__auto__) ? x__4339__auto__ : y__4340__auto__);\r\n})();\r\nreturn ((x__4336__auto__ \x3e y__4337__auto__) ? x__4336__auto__ : y__4337__auto__);\r\n})());\r\nvar dd \x3d (d__$1 - n);\r\nif(((((0) \x3c\x3d dd)) \x26\x26 ((dd \x3c\x3d d__$1)))){\r\nvar navigator__$1 \x3d cljs.pprint.fixed_float(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\x22w\x22,\x22w\x22,354169001),ww,new cljs.core.Keyword(null,\x22d\x22,\x22d\x22,1972142424),dd,new cljs.core.Keyword(null,\x22k\x22,\x22k\x22,-2146297393),(0),new cljs.core.Keyword(null,\x22overflowchar\x22,\x22overflowchar\x22,-1620088106),new cljs.core.Keyword(null,\x22overflowchar\x22,\x22overflowchar\x22,-1620088106).cljs$core$IFn$_invoke$arity$1(params),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530).cljs$core$IFn$_invoke$arity$1(params),new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params)], null),navigator,offsets);\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(ee,\x22 \x22))], 0));\r\n\r\nreturn navigator__$1;\r\n} else {\r\nreturn cljs.pprint.exponential_float(params,navigator,offsets);\r\n}\r\n});\r\ncljs.pprint.dollar_float \x3d (function cljs$pprint$dollar_float(params,navigator,offsets){\r\nvar vec__19732 \x3d cljs.pprint.next_arg(navigator);\r\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19732,(0),null);\r\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19732,(1),null);\r\nvar vec__19735 \x3d cljs.pprint.float_parts(Math.abs(arg));\r\nvar mantissa \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19735,(0),null);\r\nvar exp \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19735,(1),null);\r\nvar d \x3d new cljs.core.Keyword(null,\x22d\x22,\x22d\x22,1972142424).cljs$core$IFn$_invoke$arity$1(params);\r\nvar n \x3d new cljs.core.Keyword(null,\x22n\x22,\x22n\x22,562130025).cljs$core$IFn$_invoke$arity$1(params);\r\nvar w \x3d new cljs.core.Keyword(null,\x22w\x22,\x22w\x22,354169001).cljs$core$IFn$_invoke$arity$1(params);\r\nvar add_sign \x3d (function (){var or__4253__auto__ \x3d new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn (arg \x3c (0));\r\n}\r\n})();\r\nvar vec__19738 \x3d cljs.pprint.round_str(mantissa,exp,d,null);\r\nvar rounded_mantissa \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19738,(0),null);\r\nvar scaled_exp \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19738,(1),null);\r\nvar expanded \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19738,(2),null);\r\nvar fixed_repr \x3d cljs.pprint.get_fixed(rounded_mantissa,(cljs.core.truth_(expanded)?(scaled_exp + (1)):scaled_exp),d);\r\nvar full_repr \x3d [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((n - fixed_repr.indexOf(\x22.\x22)),\x220\x22))),fixed_repr].join(\x27\x27);\r\nvar full_len \x3d (((full_repr).length) + (cljs.core.truth_(add_sign)?(1):(0)));\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[(cljs.core.truth_((function (){var and__4251__auto__ \x3d new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params);\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn add_sign;\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())?(((arg \x3c (0)))?\x22-\x22:\x22+\x22):null),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((w - full_len),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530).cljs$core$IFn$_invoke$arity$1(params)))),(cljs.core.truth_((function (){var and__4251__auto__ \x3d cljs.core.not(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params));\r\nif(and__4251__auto__){\r\nreturn add_sign;\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())?(((arg \x3c (0)))?\x22-\x22:\x22+\x22):null),full_repr].join(\x27\x27)], 0));\r\n\r\nreturn navigator__$1;\r\n});\r\ncljs.pprint.choice_conditional \x3d (function cljs$pprint$choice_conditional(params,arg_navigator,offsets){\r\nvar arg \x3d new cljs.core.Keyword(null,\x22selector\x22,\x22selector\x22,762528866).cljs$core$IFn$_invoke$arity$1(params);\r\nvar vec__19746 \x3d (cljs.core.truth_(arg)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg,arg_navigator], null):cljs.pprint.next_arg(arg_navigator));\r\nvar arg__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19746,(0),null);\r\nvar navigator \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19746,(1),null);\r\nvar clauses \x3d new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(params);\r\nvar clause \x3d (((((arg__$1 \x3c (0))) || ((arg__$1 \x3e\x3d cljs.core.count(clauses)))))?cljs.core.first(new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146).cljs$core$IFn$_invoke$arity$1(params)):cljs.core.nth.cljs$core$IFn$_invoke$arity$2(clauses,arg__$1));\r\nif(cljs.core.truth_(clause)){\r\nreturn cljs.pprint.execute_sub_format(clause,navigator,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params));\r\n} else {\r\nreturn navigator;\r\n}\r\n});\r\ncljs.pprint.boolean_conditional \x3d (function cljs$pprint$boolean_conditional(params,arg_navigator,offsets){\r\nvar vec__19751 \x3d cljs.pprint.next_arg(arg_navigator);\r\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19751,(0),null);\r\nvar navigator \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19751,(1),null);\r\nvar clauses \x3d new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(params);\r\nvar clause \x3d (cljs.core.truth_(arg)?cljs.core.second(clauses):cljs.core.first(clauses));\r\nif(cljs.core.truth_(clause)){\r\nreturn cljs.pprint.execute_sub_format(clause,navigator,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params));\r\n} else {\r\nreturn navigator;\r\n}\r\n});\r\ncljs.pprint.check_arg_conditional \x3d (function cljs$pprint$check_arg_conditional(params,arg_navigator,offsets){\r\nvar vec__19754 \x3d cljs.pprint.next_arg(arg_navigator);\r\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19754,(0),null);\r\nvar navigator \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19754,(1),null);\r\nvar clauses \x3d new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(params);\r\nvar clause \x3d (cljs.core.truth_(arg)?cljs.core.first(clauses):null);\r\nif(cljs.core.truth_(arg)){\r\nif(cljs.core.truth_(clause)){\r\nreturn cljs.pprint.execute_sub_format(clause,arg_navigator,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params));\r\n} else {\r\nreturn arg_navigator;\r\n}\r\n} else {\r\nreturn navigator;\r\n}\r\n});\r\ncljs.pprint.iterate_sublist \x3d (function cljs$pprint$iterate_sublist(params,navigator,offsets){\r\nvar max_count \x3d new cljs.core.Keyword(null,\x22max-iterations\x22,\x22max-iterations\x22,2021275563).cljs$core$IFn$_invoke$arity$1(params);\r\nvar param_clause \x3d cljs.core.first(new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(params));\r\nvar vec__19761 \x3d ((cljs.core.empty_QMARK_(param_clause))?cljs.pprint.get_format_arg(navigator):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause,navigator], null));\r\nvar clause \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19761,(0),null);\r\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19761,(1),null);\r\nvar vec__19764 \x3d cljs.pprint.next_arg(navigator__$1);\r\nvar arg_list \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19764,(0),null);\r\nvar navigator__$2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19764,(1),null);\r\nvar args \x3d cljs.pprint.init_navigator(arg_list);\r\nvar count \x3d (0);\r\nvar args__$1 \x3d args;\r\nvar last_pos \x3d ((-1) | (0));\r\nwhile(true){\r\nif(((cljs.core.not(max_count)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(args__$1),last_pos)) \x26\x26 ((count \x3e (1))))))){\r\nthrow Error(\x22%{ construct not consuming any arguments: Infinite loop!\x22);\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_((function (){var or__4253__auto__ \x3d ((cljs.core.empty_QMARK_(new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419).cljs$core$IFn$_invoke$arity$1(args__$1))) \x26\x26 (((cljs.core.not(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22right-params\x22,\x22right-params\x22,-1790676237).cljs$core$IFn$_invoke$arity$1(params)))) || ((count \x3e (0))))));\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar and__4251__auto__ \x3d max_count;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn (count \x3e\x3d max_count);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n}\r\n})())){\r\nreturn navigator__$2;\r\n} else {\r\nvar iter_result \x3d cljs.pprint.execute_sub_format(clause,args__$1,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params));\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22up-arrow\x22,\x22up-arrow\x22,1705310333),cljs.core.first(iter_result))){\r\nreturn navigator__$2;\r\n} else {\r\nvar G__22370 \x3d (count + (1));\r\nvar G__22371 \x3d iter_result;\r\nvar G__22372 \x3d new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(args__$1);\r\ncount \x3d G__22370;\r\nargs__$1 \x3d G__22371;\r\nlast_pos \x3d G__22372;\r\ncontinue;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.pprint.iterate_list_of_sublists \x3d (function cljs$pprint$iterate_list_of_sublists(params,navigator,offsets){\r\nvar max_count \x3d new cljs.core.Keyword(null,\x22max-iterations\x22,\x22max-iterations\x22,2021275563).cljs$core$IFn$_invoke$arity$1(params);\r\nvar param_clause \x3d cljs.core.first(new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(params));\r\nvar vec__19773 \x3d ((cljs.core.empty_QMARK_(param_clause))?cljs.pprint.get_format_arg(navigator):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause,navigator], null));\r\nvar clause \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19773,(0),null);\r\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19773,(1),null);\r\nvar vec__19776 \x3d cljs.pprint.next_arg(navigator__$1);\r\nvar arg_list \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19776,(0),null);\r\nvar navigator__$2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19776,(1),null);\r\nvar count \x3d (0);\r\nvar arg_list__$1 \x3d arg_list;\r\nwhile(true){\r\nif(cljs.core.truth_((function (){var or__4253__auto__ \x3d ((cljs.core.empty_QMARK_(arg_list__$1)) \x26\x26 (((cljs.core.not(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22right-params\x22,\x22right-params\x22,-1790676237).cljs$core$IFn$_invoke$arity$1(params)))) || ((count \x3e (0))))));\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar and__4251__auto__ \x3d max_count;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn (count \x3e\x3d max_count);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n}\r\n})())){\r\nreturn navigator__$2;\r\n} else {\r\nvar iter_result \x3d cljs.pprint.execute_sub_format(clause,cljs.pprint.init_navigator(cljs.core.first(arg_list__$1)),cljs.pprint.init_navigator(cljs.core.next(arg_list__$1)));\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22colon-up-arrow\x22,\x22colon-up-arrow\x22,244853007),cljs.core.first(iter_result))){\r\nreturn navigator__$2;\r\n} else {\r\nvar G__22373 \x3d (count + (1));\r\nvar G__22374 \x3d cljs.core.next(arg_list__$1);\r\ncount \x3d G__22373;\r\narg_list__$1 \x3d G__22374;\r\ncontinue;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.pprint.iterate_main_list \x3d (function cljs$pprint$iterate_main_list(params,navigator,offsets){\r\nvar max_count \x3d new cljs.core.Keyword(null,\x22max-iterations\x22,\x22max-iterations\x22,2021275563).cljs$core$IFn$_invoke$arity$1(params);\r\nvar param_clause \x3d cljs.core.first(new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(params));\r\nvar vec__19782 \x3d ((cljs.core.empty_QMARK_(param_clause))?cljs.pprint.get_format_arg(navigator):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause,navigator], null));\r\nvar clause \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19782,(0),null);\r\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19782,(1),null);\r\nvar count \x3d (0);\r\nvar navigator__$2 \x3d navigator__$1;\r\nvar last_pos \x3d ((-1) | (0));\r\nwhile(true){\r\nif(((cljs.core.not(max_count)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(navigator__$2),last_pos)) \x26\x26 ((count \x3e (1))))))){\r\nthrow Error(\x22%@{ construct not consuming any arguments: Infinite loop!\x22);\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_((function (){var or__4253__auto__ \x3d ((cljs.core.empty_QMARK_(new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419).cljs$core$IFn$_invoke$arity$1(navigator__$2))) \x26\x26 (((cljs.core.not(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22right-params\x22,\x22right-params\x22,-1790676237).cljs$core$IFn$_invoke$arity$1(params)))) || ((count \x3e (0))))));\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar and__4251__auto__ \x3d max_count;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn (count \x3e\x3d max_count);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n}\r\n})())){\r\nreturn navigator__$2;\r\n} else {\r\nvar iter_result \x3d cljs.pprint.execute_sub_format(clause,navigator__$2,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params));\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22up-arrow\x22,\x22up-arrow\x22,1705310333),cljs.core.first(iter_result))){\r\nreturn cljs.core.second(iter_result);\r\n} else {\r\nvar G__22377 \x3d (count + (1));\r\nvar G__22378 \x3d iter_result;\r\nvar G__22379 \x3d new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(navigator__$2);\r\ncount \x3d G__22377;\r\nnavigator__$2 \x3d G__22378;\r\nlast_pos \x3d G__22379;\r\ncontinue;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.pprint.iterate_main_sublists \x3d (function cljs$pprint$iterate_main_sublists(params,navigator,offsets){\r\nvar max_count \x3d new cljs.core.Keyword(null,\x22max-iterations\x22,\x22max-iterations\x22,2021275563).cljs$core$IFn$_invoke$arity$1(params);\r\nvar param_clause \x3d cljs.core.first(new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(params));\r\nvar vec__19786 \x3d ((cljs.core.empty_QMARK_(param_clause))?cljs.pprint.get_format_arg(navigator):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause,navigator], null));\r\nvar clause \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19786,(0),null);\r\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19786,(1),null);\r\nvar count \x3d (0);\r\nvar navigator__$2 \x3d navigator__$1;\r\nwhile(true){\r\nif(cljs.core.truth_((function (){var or__4253__auto__ \x3d ((cljs.core.empty_QMARK_(new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419).cljs$core$IFn$_invoke$arity$1(navigator__$2))) \x26\x26 (((cljs.core.not(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22right-params\x22,\x22right-params\x22,-1790676237).cljs$core$IFn$_invoke$arity$1(params)))) || ((count \x3e (0))))));\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar and__4251__auto__ \x3d max_count;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn (count \x3e\x3d max_count);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n}\r\n})())){\r\nreturn navigator__$2;\r\n} else {\r\nvar vec__19793 \x3d cljs.pprint.next_arg_or_nil(navigator__$2);\r\nvar sublist \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19793,(0),null);\r\nvar navigator__$3 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19793,(1),null);\r\nvar iter_result \x3d cljs.pprint.execute_sub_format(clause,cljs.pprint.init_navigator(sublist),navigator__$3);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22colon-up-arrow\x22,\x22colon-up-arrow\x22,244853007),cljs.core.first(iter_result))){\r\nreturn navigator__$3;\r\n} else {\r\nvar G__22381 \x3d (count + (1));\r\nvar G__22382 \x3d navigator__$3;\r\ncount \x3d G__22381;\r\nnavigator__$2 \x3d G__22382;\r\ncontinue;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.pprint.logical_block_or_justify \x3d (function cljs$pprint$logical_block_or_justify(params,navigator,offsets){\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22right-params\x22,\x22right-params\x22,-1790676237).cljs$core$IFn$_invoke$arity$1(params)))){\r\nreturn cljs.pprint.format_logical_block(params,navigator,offsets);\r\n} else {\r\nreturn cljs.pprint.justify_clauses(params,navigator,offsets);\r\n}\r\n});\r\ncljs.pprint.render_clauses \x3d (function cljs$pprint$render_clauses(clauses,navigator,base_navigator){\r\nvar clauses__$1 \x3d clauses;\r\nvar acc \x3d cljs.core.PersistentVector.EMPTY;\r\nvar navigator__$1 \x3d navigator;\r\nwhile(true){\r\nif(cljs.core.empty_QMARK_(clauses__$1)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc,navigator__$1], null);\r\n} else {\r\nvar clause \x3d cljs.core.first(clauses__$1);\r\nvar vec__19803 \x3d (function (){var sb \x3d (new goog.string.StringBuffer());\r\nvar _STAR_out_STAR__orig_val__19807 \x3d cljs.core._STAR_out_STAR_;\r\nvar _STAR_out_STAR__temp_val__19808 \x3d (new cljs.core.StringBufferWriter(sb));\r\n(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__temp_val__19808);\r\n\r\ntry{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.execute_sub_format(clause,navigator__$1,base_navigator),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb)], null);\r\n}finally {(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__orig_val__19807);\r\n}})();\r\nvar iter_result \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19803,(0),null);\r\nvar result_str \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19803,(1),null);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22up-arrow\x22,\x22up-arrow\x22,1705310333),cljs.core.first(iter_result))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc,cljs.core.second(iter_result)], null);\r\n} else {\r\nvar G__22404 \x3d cljs.core.next(clauses__$1);\r\nvar G__22405 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,result_str);\r\nvar G__22406 \x3d iter_result;\r\nclauses__$1 \x3d G__22404;\r\nacc \x3d G__22405;\r\nnavigator__$1 \x3d G__22406;\r\ncontinue;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.pprint.justify_clauses \x3d (function cljs$pprint$justify_clauses(params,navigator,offsets){\r\nvar vec__19815 \x3d (function (){var temp__5753__auto__ \x3d new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146).cljs$core$IFn$_invoke$arity$1(params);\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar else$ \x3d temp__5753__auto__;\r\nreturn cljs.pprint.render_clauses(else$,navigator,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params));\r\n} else {\r\nreturn null;\r\n}\r\n})();\r\nvar vec__19818 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19815,(0),null);\r\nvar eol_str \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19818,(0),null);\r\nvar new_navigator \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19815,(1),null);\r\nvar navigator__$1 \x3d (function (){var or__4253__auto__ \x3d new_navigator;\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn navigator;\r\n}\r\n})();\r\nvar vec__19821 \x3d (function (){var temp__5753__auto__ \x3d new cljs.core.Keyword(null,\x22else-params\x22,\x22else-params\x22,-832171646).cljs$core$IFn$_invoke$arity$1(params);\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar p \x3d temp__5753__auto__;\r\nreturn cljs.pprint.realize_parameter_list(p,navigator__$1);\r\n} else {\r\nreturn null;\r\n}\r\n})();\r\nvar else_params \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19821,(0),null);\r\nvar new_navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19821,(1),null);\r\nvar navigator__$2 \x3d (function (){var or__4253__auto__ \x3d new_navigator__$1;\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn navigator__$1;\r\n}\r\n})();\r\nvar min_remaining \x3d (function (){var or__4253__auto__ \x3d cljs.core.first(new cljs.core.Keyword(null,\x22min-remaining\x22,\x22min-remaining\x22,962687677).cljs$core$IFn$_invoke$arity$1(else_params));\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn (0);\r\n}\r\n})();\r\nvar max_columns \x3d (function (){var or__4253__auto__ \x3d cljs.core.first(new cljs.core.Keyword(null,\x22max-columns\x22,\x22max-columns\x22,1742323262).cljs$core$IFn$_invoke$arity$1(else_params));\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.pprint.get_max_column(cljs.core._STAR_out_STAR_);\r\n}\r\n})();\r\nvar clauses \x3d new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(params);\r\nvar vec__19824 \x3d cljs.pprint.render_clauses(clauses,navigator__$2,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params));\r\nvar strs \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19824,(0),null);\r\nvar navigator__$3 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19824,(1),null);\r\nvar slots \x3d (function (){var x__4336__auto__ \x3d (1);\r\nvar y__4337__auto__ \x3d (((cljs.core.count(strs) - (1)) + (cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))?(1):(0))) + (cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))?(1):(0)));\r\nreturn ((x__4336__auto__ \x3e y__4337__auto__) ? x__4336__auto__ : y__4337__auto__);\r\n})();\r\nvar chars \x3d cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core._PLUS_,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.count,strs));\r\nvar mincol \x3d new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445).cljs$core$IFn$_invoke$arity$1(params);\r\nvar minpad \x3d new cljs.core.Keyword(null,\x22minpad\x22,\x22minpad\x22,323570901).cljs$core$IFn$_invoke$arity$1(params);\r\nvar colinc \x3d new cljs.core.Keyword(null,\x22colinc\x22,\x22colinc\x22,-584873385).cljs$core$IFn$_invoke$arity$1(params);\r\nvar minout \x3d (chars + (slots * minpad));\r\nvar result_columns \x3d (((minout \x3c\x3d mincol))?mincol:(mincol + (colinc * ((1) + cljs.core.quot(((minout - mincol) - (1)),colinc)))));\r\nvar total_pad \x3d (result_columns - chars);\r\nvar pad \x3d (function (){var x__4336__auto__ \x3d minpad;\r\nvar y__4337__auto__ \x3d cljs.core.quot(total_pad,slots);\r\nreturn ((x__4336__auto__ \x3e y__4337__auto__) ? x__4336__auto__ : y__4337__auto__);\r\n})();\r\nvar extra_pad \x3d (total_pad - (pad * slots));\r\nvar pad_str \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(pad,new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530).cljs$core$IFn$_invoke$arity$1(params)));\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d eol_str;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn (((cljs.pprint.get_column(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(cljs.core._STAR_out_STAR_)))) + min_remaining) + result_columns) \x3e max_columns);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([eol_str], 0));\r\n} else {\r\n}\r\n\r\nvar slots_22416__$1 \x3d slots;\r\nvar extra_pad_22417__$1 \x3d extra_pad;\r\nvar strs_22418__$1 \x3d strs;\r\nvar pad_only_22419 \x3d (function (){var or__4253__auto__ \x3d new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(strs_22418__$1),(1))) \x26\x26 (cljs.core.not(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))));\r\n}\r\n})();\r\nwhile(true){\r\nif(cljs.core.seq(strs_22418__$1)){\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[cljs.core.str.cljs$core$IFn$_invoke$arity$1(((cljs.core.not(pad_only_22419))?cljs.core.first(strs_22418__$1):null)),cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_((function (){var or__4253__auto__ \x3d pad_only_22419;\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar or__4253__auto____$1 \x3d cljs.core.next(strs_22418__$1);\r\nif(or__4253__auto____$1){\r\nreturn or__4253__auto____$1;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params);\r\n}\r\n}\r\n})())?pad_str:null)),cljs.core.str.cljs$core$IFn$_invoke$arity$1((((extra_pad_22417__$1 \x3e (0)))?new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530).cljs$core$IFn$_invoke$arity$1(params):null))].join(\x27\x27)], 0));\r\n\r\nvar G__22422 \x3d (slots_22416__$1 - (1));\r\nvar G__22423 \x3d (extra_pad_22417__$1 - (1));\r\nvar G__22424 \x3d (cljs.core.truth_(pad_only_22419)?strs_22418__$1:cljs.core.next(strs_22418__$1));\r\nvar G__22425 \x3d false;\r\nslots_22416__$1 \x3d G__22422;\r\nextra_pad_22417__$1 \x3d G__22423;\r\nstrs_22418__$1 \x3d G__22424;\r\npad_only_22419 \x3d G__22425;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn navigator__$3;\r\n});\r\n/**\r\n * Returns a proxy that wraps writer, converting all characters to lower case\r\n */\r\ncljs.pprint.downcase_writer \x3d (function cljs$pprint$downcase_writer(writer){\r\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint.t_cljs$pprint19886 !\x3d\x3d \x27undefined\x27)){\r\n} else {\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IWriter}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.IWithMeta}\r\n*/\r\ncljs.pprint.t_cljs$pprint19886 \x3d (function (writer,meta19887){\r\nthis.writer \x3d writer;\r\nthis.meta19887 \x3d meta19887;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 1074135040;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.pprint.t_cljs$pprint19886.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_19888,meta19887__$1){\r\nvar self__ \x3d this;\r\nvar _19888__$1 \x3d this;\r\nreturn (new cljs.pprint.t_cljs$pprint19886(self__.writer,meta19887__$1));\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint19886.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_19888){\r\nvar self__ \x3d this;\r\nvar _19888__$1 \x3d this;\r\nreturn self__.meta19887;\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint19886.prototype.cljs$core$IWriter$_flush$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn cljs.core._flush(self__.writer);\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint19886.prototype.cljs$core$IWriter$_write$arity$2 \x3d (function (this$,x){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nvar pred__19894 \x3d cljs.core._EQ_;\r\nvar expr__19895 \x3d cljs.core.type(x);\r\nif(cljs.core.truth_((pred__19894.cljs$core$IFn$_invoke$arity$2 ? pred__19894.cljs$core$IFn$_invoke$arity$2(String,expr__19895) : pred__19894.call(null,String,expr__19895)))){\r\nvar s \x3d x;\r\nreturn cljs.core._write(self__.writer,clojure.string.lower_case(s));\r\n} else {\r\nif(cljs.core.truth_((pred__19894.cljs$core$IFn$_invoke$arity$2 ? pred__19894.cljs$core$IFn$_invoke$arity$2(Number,expr__19895) : pred__19894.call(null,Number,expr__19895)))){\r\nvar c \x3d x;\r\nreturn cljs.core._write(self__.writer,clojure.string.lower_case(cljs.core.char$(c)));\r\n} else {\r\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__19895)].join(\x27\x27)));\r\n}\r\n}\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint19886.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22writer\x22,\x22writer\x22,1362963291,null),new cljs.core.Symbol(null,\x22meta19887\x22,\x22meta19887\x22,-578649058,null)], null);\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint19886.cljs$lang$type \x3d true);\r\n\r\n(cljs.pprint.t_cljs$pprint19886.cljs$lang$ctorStr \x3d \x22cljs.pprint/t_cljs$pprint19886\x22);\r\n\r\n(cljs.pprint.t_cljs$pprint19886.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.pprint/t_cljs$pprint19886\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.pprint/t_cljs$pprint19886.\r\n */\r\ncljs.pprint.__GT_t_cljs$pprint19886 \x3d (function cljs$pprint$downcase_writer_$___GT_t_cljs$pprint19886(writer__$1,meta19887){\r\nreturn (new cljs.pprint.t_cljs$pprint19886(writer__$1,meta19887));\r\n});\r\n\r\n}\r\n\r\nreturn (new cljs.pprint.t_cljs$pprint19886(writer,cljs.core.PersistentArrayMap.EMPTY));\r\n});\r\n/**\r\n * Returns a proxy that wraps writer, converting all characters to upper case\r\n */\r\ncljs.pprint.upcase_writer \x3d (function cljs$pprint$upcase_writer(writer){\r\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint.t_cljs$pprint19903 !\x3d\x3d \x27undefined\x27)){\r\n} else {\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IWriter}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.IWithMeta}\r\n*/\r\ncljs.pprint.t_cljs$pprint19903 \x3d (function (writer,meta19904){\r\nthis.writer \x3d writer;\r\nthis.meta19904 \x3d meta19904;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 1074135040;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.pprint.t_cljs$pprint19903.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_19905,meta19904__$1){\r\nvar self__ \x3d this;\r\nvar _19905__$1 \x3d this;\r\nreturn (new cljs.pprint.t_cljs$pprint19903(self__.writer,meta19904__$1));\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint19903.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_19905){\r\nvar self__ \x3d this;\r\nvar _19905__$1 \x3d this;\r\nreturn self__.meta19904;\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint19903.prototype.cljs$core$IWriter$_flush$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn cljs.core._flush(self__.writer);\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint19903.prototype.cljs$core$IWriter$_write$arity$2 \x3d (function (this$,x){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nvar pred__19911 \x3d cljs.core._EQ_;\r\nvar expr__19912 \x3d cljs.core.type(x);\r\nif(cljs.core.truth_((pred__19911.cljs$core$IFn$_invoke$arity$2 ? pred__19911.cljs$core$IFn$_invoke$arity$2(String,expr__19912) : pred__19911.call(null,String,expr__19912)))){\r\nvar s \x3d x;\r\nreturn cljs.core._write(self__.writer,clojure.string.upper_case(s));\r\n} else {\r\nif(cljs.core.truth_((pred__19911.cljs$core$IFn$_invoke$arity$2 ? pred__19911.cljs$core$IFn$_invoke$arity$2(Number,expr__19912) : pred__19911.call(null,Number,expr__19912)))){\r\nvar c \x3d x;\r\nreturn cljs.core._write(self__.writer,clojure.string.upper_case(cljs.core.char$(c)));\r\n} else {\r\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__19912)].join(\x27\x27)));\r\n}\r\n}\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint19903.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22writer\x22,\x22writer\x22,1362963291,null),new cljs.core.Symbol(null,\x22meta19904\x22,\x22meta19904\x22,563778972,null)], null);\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint19903.cljs$lang$type \x3d true);\r\n\r\n(cljs.pprint.t_cljs$pprint19903.cljs$lang$ctorStr \x3d \x22cljs.pprint/t_cljs$pprint19903\x22);\r\n\r\n(cljs.pprint.t_cljs$pprint19903.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.pprint/t_cljs$pprint19903\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.pprint/t_cljs$pprint19903.\r\n */\r\ncljs.pprint.__GT_t_cljs$pprint19903 \x3d (function cljs$pprint$upcase_writer_$___GT_t_cljs$pprint19903(writer__$1,meta19904){\r\nreturn (new cljs.pprint.t_cljs$pprint19903(writer__$1,meta19904));\r\n});\r\n\r\n}\r\n\r\nreturn (new cljs.pprint.t_cljs$pprint19903(writer,cljs.core.PersistentArrayMap.EMPTY));\r\n});\r\n/**\r\n * Capitalizes the words in a string. If first? is false, don\x27t capitalize the\r\n *                                    first character of the string even if it\x27s a letter.\r\n */\r\ncljs.pprint.capitalize_string \x3d (function cljs$pprint$capitalize_string(s,first_QMARK_){\r\nvar f \x3d cljs.core.first(s);\r\nvar s__$1 \x3d (cljs.core.truth_((function (){var and__4251__auto__ \x3d first_QMARK_;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nvar and__4251__auto____$1 \x3d f;\r\nif(cljs.core.truth_(and__4251__auto____$1)){\r\nreturn goog.string.isUnicodeChar(f);\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())?[clojure.string.upper_case(f),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(1))].join(\x27\x27):s);\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.first(cljs.pprint.consume((function (s__$2){\r\nif(cljs.core.empty_QMARK_(s__$2)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,null], null);\r\n} else {\r\nvar m \x3d RegExp(\x22\\\\W\\\\w\x22,\x22g\x22).exec(s__$2);\r\nvar offset \x3d (function (){var and__4251__auto__ \x3d m;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn (m.index + (1));\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})();\r\nif(cljs.core.truth_(offset)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s__$2,(0),offset),clojure.string.upper_case(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(s__$2,offset))].join(\x27\x27),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s__$2,(offset + (1)))], null);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$2,null], null);\r\n}\r\n}\r\n}),s__$1)));\r\n});\r\n/**\r\n * Returns a proxy that wraps writer, capitalizing all words\r\n */\r\ncljs.pprint.capitalize_word_writer \x3d (function cljs$pprint$capitalize_word_writer(writer){\r\nvar last_was_whitespace_QMARK_ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(true);\r\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint.t_cljs$pprint19925 !\x3d\x3d \x27undefined\x27)){\r\n} else {\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IWriter}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.IWithMeta}\r\n*/\r\ncljs.pprint.t_cljs$pprint19925 \x3d (function (writer,last_was_whitespace_QMARK_,meta19926){\r\nthis.writer \x3d writer;\r\nthis.last_was_whitespace_QMARK_ \x3d last_was_whitespace_QMARK_;\r\nthis.meta19926 \x3d meta19926;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 1074135040;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.pprint.t_cljs$pprint19925.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_19927,meta19926__$1){\r\nvar self__ \x3d this;\r\nvar _19927__$1 \x3d this;\r\nreturn (new cljs.pprint.t_cljs$pprint19925(self__.writer,self__.last_was_whitespace_QMARK_,meta19926__$1));\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint19925.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_19927){\r\nvar self__ \x3d this;\r\nvar _19927__$1 \x3d this;\r\nreturn self__.meta19926;\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint19925.prototype.cljs$core$IWriter$_flush$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn cljs.core._flush(self__.writer);\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint19925.prototype.cljs$core$IWriter$_write$arity$2 \x3d (function (this$,x){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nvar pred__19930 \x3d cljs.core._EQ_;\r\nvar expr__19931 \x3d cljs.core.type(x);\r\nif(cljs.core.truth_((pred__19930.cljs$core$IFn$_invoke$arity$2 ? pred__19930.cljs$core$IFn$_invoke$arity$2(String,expr__19931) : pred__19930.call(null,String,expr__19931)))){\r\nvar s \x3d x;\r\ncljs.core._write(self__.writer,cljs.pprint.capitalize_string(s.toLowerCase(),cljs.core.deref(self__.last_was_whitespace_QMARK_)));\r\n\r\nif((s.length \x3e (0))){\r\nreturn cljs.core.reset_BANG_(self__.last_was_whitespace_QMARK_,goog.string.isEmptyOrWhitespace(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(s,(cljs.core.count(s) - (1)))));\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nif(cljs.core.truth_((pred__19930.cljs$core$IFn$_invoke$arity$2 ? pred__19930.cljs$core$IFn$_invoke$arity$2(Number,expr__19931) : pred__19930.call(null,Number,expr__19931)))){\r\nvar c \x3d cljs.core.char$(x);\r\nvar mod_c \x3d (cljs.core.truth_(cljs.core.deref(self__.last_was_whitespace_QMARK_))?clojure.string.upper_case(c):c);\r\ncljs.core._write(self__.writer,mod_c);\r\n\r\nreturn cljs.core.reset_BANG_(self__.last_was_whitespace_QMARK_,goog.string.isEmptyOrWhitespace(c));\r\n} else {\r\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__19931)].join(\x27\x27)));\r\n}\r\n}\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint19925.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22writer\x22,\x22writer\x22,1362963291,null),new cljs.core.Symbol(null,\x22last-was-whitespace?\x22,\x22last-was-whitespace?\x22,-1073928093,null),new cljs.core.Symbol(null,\x22meta19926\x22,\x22meta19926\x22,1320106859,null)], null);\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint19925.cljs$lang$type \x3d true);\r\n\r\n(cljs.pprint.t_cljs$pprint19925.cljs$lang$ctorStr \x3d \x22cljs.pprint/t_cljs$pprint19925\x22);\r\n\r\n(cljs.pprint.t_cljs$pprint19925.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.pprint/t_cljs$pprint19925\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.pprint/t_cljs$pprint19925.\r\n */\r\ncljs.pprint.__GT_t_cljs$pprint19925 \x3d (function cljs$pprint$capitalize_word_writer_$___GT_t_cljs$pprint19925(writer__$1,last_was_whitespace_QMARK___$1,meta19926){\r\nreturn (new cljs.pprint.t_cljs$pprint19925(writer__$1,last_was_whitespace_QMARK___$1,meta19926));\r\n});\r\n\r\n}\r\n\r\nreturn (new cljs.pprint.t_cljs$pprint19925(writer,last_was_whitespace_QMARK_,cljs.core.PersistentArrayMap.EMPTY));\r\n});\r\n/**\r\n * Returns a proxy that wraps writer, capitalizing the first word\r\n */\r\ncljs.pprint.init_cap_writer \x3d (function cljs$pprint$init_cap_writer(writer){\r\nvar capped \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\r\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint.t_cljs$pprint19938 !\x3d\x3d \x27undefined\x27)){\r\n} else {\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IWriter}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.IWithMeta}\r\n*/\r\ncljs.pprint.t_cljs$pprint19938 \x3d (function (writer,capped,meta19939){\r\nthis.writer \x3d writer;\r\nthis.capped \x3d capped;\r\nthis.meta19939 \x3d meta19939;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 1074135040;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(cljs.pprint.t_cljs$pprint19938.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_19940,meta19939__$1){\r\nvar self__ \x3d this;\r\nvar _19940__$1 \x3d this;\r\nreturn (new cljs.pprint.t_cljs$pprint19938(self__.writer,self__.capped,meta19939__$1));\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint19938.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_19940){\r\nvar self__ \x3d this;\r\nvar _19940__$1 \x3d this;\r\nreturn self__.meta19939;\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint19938.prototype.cljs$core$IWriter$_flush$arity$1 \x3d (function (_){\r\nvar self__ \x3d this;\r\nvar ___$1 \x3d this;\r\nreturn cljs.core._flush(self__.writer);\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint19938.prototype.cljs$core$IWriter$_write$arity$2 \x3d (function (this$,x){\r\nvar self__ \x3d this;\r\nvar this$__$1 \x3d this;\r\nvar pred__19943 \x3d cljs.core._EQ_;\r\nvar expr__19944 \x3d cljs.core.type(x);\r\nif(cljs.core.truth_((pred__19943.cljs$core$IFn$_invoke$arity$2 ? pred__19943.cljs$core$IFn$_invoke$arity$2(String,expr__19944) : pred__19943.call(null,String,expr__19944)))){\r\nvar s \x3d clojure.string.lower_case(x);\r\nif(cljs.core.not(cljs.core.deref(self__.capped))){\r\nvar m \x3d RegExp(\x22\\\\S\x22,\x22g\x22).exec(s);\r\nvar offset \x3d (function (){var and__4251__auto__ \x3d m;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn m.index;\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})();\r\nif(cljs.core.truth_(offset)){\r\ncljs.core._write(self__.writer,[cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),offset),clojure.string.upper_case(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(s,offset)),clojure.string.lower_case(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(offset + (1))))].join(\x27\x27));\r\n\r\nreturn cljs.core.reset_BANG_(self__.capped,true);\r\n} else {\r\nreturn cljs.core._write(self__.writer,s);\r\n}\r\n} else {\r\nreturn cljs.core._write(self__.writer,clojure.string.lower_case(s));\r\n}\r\n} else {\r\nif(cljs.core.truth_((pred__19943.cljs$core$IFn$_invoke$arity$2 ? pred__19943.cljs$core$IFn$_invoke$arity$2(Number,expr__19944) : pred__19943.call(null,Number,expr__19944)))){\r\nvar c \x3d cljs.core.char$(x);\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d cljs.core.not(cljs.core.deref(self__.capped));\r\nif(and__4251__auto__){\r\nreturn goog.string.isUnicodeChar(c);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\ncljs.core.reset_BANG_(self__.capped,true);\r\n\r\nreturn cljs.core._write(self__.writer,clojure.string.upper_case(c));\r\n} else {\r\nreturn cljs.core._write(self__.writer,clojure.string.lower_case(c));\r\n}\r\n} else {\r\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__19944)].join(\x27\x27)));\r\n}\r\n}\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint19938.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22writer\x22,\x22writer\x22,1362963291,null),new cljs.core.Symbol(null,\x22capped\x22,\x22capped\x22,-1650988402,null),new cljs.core.Symbol(null,\x22meta19939\x22,\x22meta19939\x22,1204882977,null)], null);\r\n}));\r\n\r\n(cljs.pprint.t_cljs$pprint19938.cljs$lang$type \x3d true);\r\n\r\n(cljs.pprint.t_cljs$pprint19938.cljs$lang$ctorStr \x3d \x22cljs.pprint/t_cljs$pprint19938\x22);\r\n\r\n(cljs.pprint.t_cljs$pprint19938.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.pprint/t_cljs$pprint19938\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.pprint/t_cljs$pprint19938.\r\n */\r\ncljs.pprint.__GT_t_cljs$pprint19938 \x3d (function cljs$pprint$init_cap_writer_$___GT_t_cljs$pprint19938(writer__$1,capped__$1,meta19939){\r\nreturn (new cljs.pprint.t_cljs$pprint19938(writer__$1,capped__$1,meta19939));\r\n});\r\n\r\n}\r\n\r\nreturn (new cljs.pprint.t_cljs$pprint19938(writer,capped,cljs.core.PersistentArrayMap.EMPTY));\r\n});\r\ncljs.pprint.modify_case \x3d (function cljs$pprint$modify_case(make_writer,params,navigator,offsets){\r\nvar clause \x3d cljs.core.first(new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(params));\r\nvar _STAR_out_STAR__orig_val__19964 \x3d cljs.core._STAR_out_STAR_;\r\nvar _STAR_out_STAR__temp_val__19965 \x3d (make_writer.cljs$core$IFn$_invoke$arity$1 ? make_writer.cljs$core$IFn$_invoke$arity$1(cljs.core._STAR_out_STAR_) : make_writer.call(null,cljs.core._STAR_out_STAR_));\r\n(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__temp_val__19965);\r\n\r\ntry{return cljs.pprint.execute_sub_format(clause,navigator,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params));\r\n}finally {(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__orig_val__19964);\r\n}});\r\n/**\r\n * Returns the IWriter passed in wrapped in a pretty writer proxy, unless it\x27s\r\n * already a pretty writer. Generally, it is unnecessary to call this function, since pprint,\r\n * write, and cl-format all call it if they need to. However if you want the state to be\r\n * preserved across calls, you will want to wrap them with this.\r\n * \r\n * For example, when you want to generate column-aware output with multiple calls to cl-format,\r\n * do it like in this example:\r\n * \r\n *  (defn print-table [aseq column-width]\r\n *    (binding [*out* (get-pretty-writer *out*)]\r\n *      (doseq [row aseq]\r\n *        (doseq [col row]\r\n *          (cl-format true \x22~4D~7,vT\x22 col column-width))\r\n *        (prn))))\r\n * \r\n * Now when you run:\r\n * \r\n *  user\x3e (print-table (map #(vector % (* % %) (* % % %)) (range 1 11)) 8)\r\n * \r\n * It prints a table of squares and cubes for the numbers from 1 to 10:\r\n * \r\n *     1      1       1\r\n *     2      4       8\r\n *     3      9      27\r\n *     4     16      64\r\n *     5     25     125\r\n *     6     36     216\r\n *     7     49     343\r\n *     8     64     512\r\n *     9     81     729\r\n *    10    100    1000\r\n */\r\ncljs.pprint.get_pretty_writer \x3d (function cljs$pprint$get_pretty_writer(writer){\r\nif(cljs.core.truth_(cljs.pprint.pretty_writer_QMARK_(writer))){\r\nreturn writer;\r\n} else {\r\nreturn cljs.pprint.pretty_writer(writer,cljs.pprint._STAR_print_right_margin_STAR_,cljs.pprint._STAR_print_miser_width_STAR_);\r\n}\r\n});\r\n/**\r\n * Make a newline if *out* is not already at the beginning of the line. If *out* is\r\n * not a pretty writer (which keeps track of columns), this function always outputs a newline.\r\n */\r\ncljs.pprint.fresh_line \x3d (function cljs$pprint$fresh_line(){\r\nif((((!((cljs.core._STAR_out_STAR_ \x3d\x3d null))))?(((((cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ \x26 (32768))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d cljs.core._STAR_out_STAR_.cljs$core$IDeref$))))?true:(((!cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,cljs.core._STAR_out_STAR_):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,cljs.core._STAR_out_STAR_))){\r\nif((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),cljs.pprint.get_column(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(cljs.core._STAR_out_STAR_)))))))){\r\nreturn cljs.pprint.prn();\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn cljs.pprint.prn();\r\n}\r\n});\r\ncljs.pprint.absolute_tabulation \x3d (function cljs$pprint$absolute_tabulation(params,navigator,offsets){\r\nvar colnum_22511 \x3d new cljs.core.Keyword(null,\x22colnum\x22,\x22colnum\x22,2023796854).cljs$core$IFn$_invoke$arity$1(params);\r\nvar colinc_22512 \x3d new cljs.core.Keyword(null,\x22colinc\x22,\x22colinc\x22,-584873385).cljs$core$IFn$_invoke$arity$1(params);\r\nvar current_22513 \x3d cljs.pprint.get_column(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(cljs.core._STAR_out_STAR_))));\r\nvar space_count_22514 \x3d (((current_22513 \x3c colnum_22511))?(colnum_22511 - current_22513):((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(colinc_22512,(0)))?(0):(colinc_22512 - cljs.core.rem((current_22513 - colnum_22511),colinc_22512))\r\n));\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(space_count_22514,\x22 \x22))], 0));\r\n\r\nreturn navigator;\r\n});\r\ncljs.pprint.relative_tabulation \x3d (function cljs$pprint$relative_tabulation(params,navigator,offsets){\r\nvar colrel_22519 \x3d new cljs.core.Keyword(null,\x22colnum\x22,\x22colnum\x22,2023796854).cljs$core$IFn$_invoke$arity$1(params);\r\nvar colinc_22520 \x3d new cljs.core.Keyword(null,\x22colinc\x22,\x22colinc\x22,-584873385).cljs$core$IFn$_invoke$arity$1(params);\r\nvar start_col_22521 \x3d (colrel_22519 + cljs.pprint.get_column(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(cljs.core._STAR_out_STAR_)))));\r\nvar offset_22522 \x3d (((colinc_22520 \x3e (0)))?cljs.core.rem(start_col_22521,colinc_22520):(0));\r\nvar space_count_22523 \x3d (colrel_22519 + ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),offset_22522))?(0):(colinc_22520 - offset_22522)));\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(space_count_22523,\x22 \x22))], 0));\r\n\r\nreturn navigator;\r\n});\r\ncljs.pprint.format_logical_block \x3d (function cljs$pprint$format_logical_block(params,navigator,offsets){\r\nvar clauses \x3d new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(params);\r\nvar clause_count \x3d cljs.core.count(clauses);\r\nvar prefix \x3d (((clause_count \x3e (1)))?new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(cljs.core.first(cljs.core.first(clauses)))):(cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))?\x22(\x22:null));\r\nvar body \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$2(clauses,(((clause_count \x3e (1)))?(1):(0)));\r\nvar suffix \x3d (((clause_count \x3e (2)))?new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(cljs.core.first(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(clauses,(2))))):(cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))?\x22)\x22:null));\r\nvar vec__19986 \x3d cljs.pprint.next_arg(navigator);\r\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19986,(0),null);\r\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19986,(1),null);\r\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\r\n} else {\r\nvar _STAR_current_level_STAR__orig_val__20004_22528 \x3d cljs.pprint._STAR_current_level_STAR_;\r\nvar _STAR_current_length_STAR__orig_val__20005_22529 \x3d cljs.pprint._STAR_current_length_STAR_;\r\nvar _STAR_current_level_STAR__temp_val__20006_22530 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\r\nvar _STAR_current_length_STAR__temp_val__20007_22531 \x3d (0);\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__20006_22530);\r\n\r\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__20007_22531);\r\n\r\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,prefix,null,suffix);\r\n\r\ncljs.pprint.execute_sub_format(body,cljs.pprint.init_navigator(arg),new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params));\r\n\r\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\r\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__20005_22529);\r\n\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__20004_22528);\r\n}}\r\n\r\n\r\nreturn navigator__$1;\r\n});\r\ncljs.pprint.set_indent \x3d (function cljs$pprint$set_indent(params,navigator,offsets){\r\nvar relative_to \x3d (cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))?new cljs.core.Keyword(null,\x22current\x22,\x22current\x22,-1088038603):new cljs.core.Keyword(null,\x22block\x22,\x22block\x22,664686210));\r\ncljs.pprint.pprint_indent(relative_to,new cljs.core.Keyword(null,\x22n\x22,\x22n\x22,562130025).cljs$core$IFn$_invoke$arity$1(params));\r\n\r\nreturn navigator;\r\n});\r\ncljs.pprint.conditional_newline \x3d (function cljs$pprint$conditional_newline(params,navigator,offsets){\r\nvar kind \x3d (cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))?(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))?new cljs.core.Keyword(null,\x22mandatory\x22,\x22mandatory\x22,542802336):new cljs.core.Keyword(null,\x22fill\x22,\x22fill\x22,883462889)):(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))?new cljs.core.Keyword(null,\x22miser\x22,\x22miser\x22,-556060186):new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697)));\r\ncljs.pprint.pprint_newline(kind);\r\n\r\nreturn navigator;\r\n});\r\ncljs.pprint.directive_table \x3d cljs.core.PersistentHashMap.fromArrays([\x22A\x22,\x22S\x22,\x22D\x22,\x22B\x22,\x22O\x22,\x22X\x22,\x22R\x22,\x22P\x22,\x22C\x22,\x22F\x22,\x22E\x22,\x22G\x22,\x22$\x22,\x22%\x22,\x22\x26\x22,\x22|\x22,\x22~\x22,\x22\\n\x22,\x22T\x22,\x22*\x22,\x22?\x22,\x22(\x22,\x22)\x22,\x22[\x22,\x22;\x22,\x22]\x22,\x22{\x22,\x22}\x22,\x22\x3c\x22,\x22\x3e\x22,\x22^\x22,\x22W\x22,\x22_\x22,\x22I\x22],[new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22A\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(4),[new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22colinc\x22,\x22colinc\x22,-584873385),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null),new cljs.core.Keyword(null,\x22minpad\x22,\x22minpad\x22,323570901),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn (function (p1__20011_SHARP_,p2__20012_SHARP_,p3__20013_SHARP_){\r\nreturn cljs.pprint.format_ascii(cljs.core.print_str,p1__20011_SHARP_,p2__20012_SHARP_,p3__20013_SHARP_);\r\n});\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22S\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(4),[new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22colinc\x22,\x22colinc\x22,-584873385),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null),new cljs.core.Keyword(null,\x22minpad\x22,\x22minpad\x22,323570901),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn (function (p1__20014_SHARP_,p2__20015_SHARP_,p3__20016_SHARP_){\r\nreturn cljs.pprint.format_ascii(cljs.core.pr_str,p1__20014_SHARP_,p2__20015_SHARP_,p3__20016_SHARP_);\r\n});\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22D\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(4),[new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null),new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22,\x22,String], null),new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn (function (p1__20017_SHARP_,p2__20018_SHARP_,p3__20019_SHARP_){\r\nreturn cljs.pprint.format_integer((10),p1__20017_SHARP_,p2__20018_SHARP_,p3__20019_SHARP_);\r\n});\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22B\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(4),[new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null),new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22,\x22,String], null),new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn (function (p1__20022_SHARP_,p2__20023_SHARP_,p3__20024_SHARP_){\r\nreturn cljs.pprint.format_integer((2),p1__20022_SHARP_,p2__20023_SHARP_,p3__20024_SHARP_);\r\n});\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22O\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(4),[new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null),new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22,\x22,String], null),new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn (function (p1__20025_SHARP_,p2__20026_SHARP_,p3__20027_SHARP_){\r\nreturn cljs.pprint.format_integer((8),p1__20025_SHARP_,p2__20026_SHARP_,p3__20027_SHARP_);\r\n});\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22X\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(4),[new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null),new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22,\x22,String], null),new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn (function (p1__20029_SHARP_,p2__20030_SHARP_,p3__20031_SHARP_){\r\nreturn cljs.pprint.format_integer((16),p1__20029_SHARP_,p2__20030_SHARP_,p3__20031_SHARP_);\r\n});\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22R\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(5),[new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null),new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22,\x22,String], null),new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nif(cljs.core.truth_(cljs.core.first(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(params)))){\r\nreturn (function (p1__20032_SHARP_,p2__20033_SHARP_,p3__20034_SHARP_){\r\nreturn cljs.pprint.format_integer(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(p1__20032_SHARP_),p1__20032_SHARP_,p2__20033_SHARP_,p3__20034_SHARP_);\r\n});\r\n} else {\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params);\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nreturn (function (p1__20036_SHARP_,p2__20037_SHARP_,p3__20038_SHARP_){\r\nreturn cljs.pprint.format_old_roman(p1__20036_SHARP_,p2__20037_SHARP_,p3__20038_SHARP_);\r\n});\r\n} else {\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))){\r\nreturn (function (p1__20039_SHARP_,p2__20040_SHARP_,p3__20041_SHARP_){\r\nreturn cljs.pprint.format_new_roman(p1__20039_SHARP_,p2__20040_SHARP_,p3__20041_SHARP_);\r\n});\r\n} else {\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))){\r\nreturn (function (p1__20042_SHARP_,p2__20043_SHARP_,p3__20044_SHARP_){\r\nreturn cljs.pprint.format_ordinal_english(p1__20042_SHARP_,p2__20043_SHARP_,p3__20044_SHARP_);\r\n});\r\n} else {\r\nreturn (function (p1__20045_SHARP_,p2__20046_SHARP_,p3__20047_SHARP_){\r\nreturn cljs.pprint.format_cardinal_english(p1__20045_SHARP_,p2__20046_SHARP_,p3__20047_SHARP_);\r\n});\r\n\r\n}\r\n}\r\n}\r\n}\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22P\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn (function (params__$1,navigator,offsets){\r\nvar navigator__$1 \x3d (cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params__$1))?cljs.pprint.relative_reposition(navigator,(-1)):navigator);\r\nvar strs \x3d (cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params__$1))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22y\x22,\x22ies\x22], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22\x22,\x22s\x22], null));\r\nvar vec__20079 \x3d cljs.pprint.next_arg(navigator__$1);\r\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20079,(0),null);\r\nvar navigator__$2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20079,(1),null);\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arg,(1)))?cljs.core.first(strs):cljs.core.second(strs))], 0));\r\n\r\nreturn navigator__$2;\r\n});\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22C\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(1),[new cljs.core.Keyword(null,\x22char-format\x22,\x22char-format\x22,-1016499218),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,String], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))){\r\nreturn cljs.pprint.pretty_character;\r\n} else {\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))){\r\nreturn cljs.pprint.readable_character;\r\n} else {\r\nreturn cljs.pprint.plain_character;\r\n\r\n}\r\n}\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22F\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(5),[new cljs.core.Keyword(null,\x22w\x22,\x22w\x22,354169001),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22d\x22,\x22d\x22,1972142424),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22k\x22,\x22k\x22,-2146297393),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22overflowchar\x22,\x22overflowchar\x22,-1620088106),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,String], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn cljs.pprint.fixed_float;\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22E\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(7),[new cljs.core.Keyword(null,\x22w\x22,\x22w\x22,354169001),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22d\x22,\x22d\x22,1972142424),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22e\x22,\x22e\x22,1381269198),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22k\x22,\x22k\x22,-2146297393),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null),new cljs.core.Keyword(null,\x22overflowchar\x22,\x22overflowchar\x22,-1620088106),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,String], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null),new cljs.core.Keyword(null,\x22exponentchar\x22,\x22exponentchar\x22,1986664222),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,String], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn cljs.pprint.exponential_float;\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22G\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(7),[new cljs.core.Keyword(null,\x22w\x22,\x22w\x22,354169001),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22d\x22,\x22d\x22,1972142424),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22e\x22,\x22e\x22,1381269198),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22k\x22,\x22k\x22,-2146297393),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null),new cljs.core.Keyword(null,\x22overflowchar\x22,\x22overflowchar\x22,-1620088106),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,String], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null),new cljs.core.Keyword(null,\x22exponentchar\x22,\x22exponentchar\x22,1986664222),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,String], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn cljs.pprint.general_float;\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22$\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(4),[new cljs.core.Keyword(null,\x22d\x22,\x22d\x22,1972142424),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(2),Number], null),new cljs.core.Keyword(null,\x22n\x22,\x22n\x22,562130025),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null),new cljs.core.Keyword(null,\x22w\x22,\x22w\x22,354169001),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn cljs.pprint.dollar_float;\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22%\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(1),[new cljs.core.Keyword(null,\x22count\x22,\x22count\x22,2139924085),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn (function (params__$1,arg_navigator,offsets){\r\nvar n__4741__auto___22561 \x3d new cljs.core.Keyword(null,\x22count\x22,\x22count\x22,2139924085).cljs$core$IFn$_invoke$arity$1(params__$1);\r\nvar i_22562 \x3d (0);\r\nwhile(true){\r\nif((i_22562 \x3c n__4741__auto___22561)){\r\ncljs.pprint.prn();\r\n\r\nvar G__22563 \x3d (i_22562 + (1));\r\ni_22562 \x3d G__22563;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn arg_navigator;\r\n});\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22\x26\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(1),[new cljs.core.Keyword(null,\x22count\x22,\x22count\x22,2139924085),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22pretty\x22,\x22pretty\x22,-1916372486),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn (function (params__$1,arg_navigator,offsets){\r\nvar cnt_22565 \x3d new cljs.core.Keyword(null,\x22count\x22,\x22count\x22,2139924085).cljs$core$IFn$_invoke$arity$1(params__$1);\r\nif((cnt_22565 \x3e (0))){\r\ncljs.pprint.fresh_line();\r\n} else {\r\n}\r\n\r\nvar n__4741__auto___22566 \x3d (cnt_22565 - (1));\r\nvar i_22568 \x3d (0);\r\nwhile(true){\r\nif((i_22568 \x3c n__4741__auto___22566)){\r\ncljs.pprint.prn();\r\n\r\nvar G__22569 \x3d (i_22568 + (1));\r\ni_22568 \x3d G__22569;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn arg_navigator;\r\n});\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22|\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(1),[new cljs.core.Keyword(null,\x22count\x22,\x22count\x22,2139924085),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn (function (params__$1,arg_navigator,offsets){\r\nvar n__4741__auto___22570 \x3d new cljs.core.Keyword(null,\x22count\x22,\x22count\x22,2139924085).cljs$core$IFn$_invoke$arity$1(params__$1);\r\nvar i_22571 \x3d (0);\r\nwhile(true){\r\nif((i_22571 \x3c n__4741__auto___22570)){\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22\\f\x22], 0));\r\n\r\nvar G__22572 \x3d (i_22571 + (1));\r\ni_22571 \x3d G__22572;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn arg_navigator;\r\n});\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22~\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(1),[new cljs.core.Keyword(null,\x22n\x22,\x22n\x22,562130025),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn (function (params__$1,arg_navigator,offsets){\r\nvar n \x3d new cljs.core.Keyword(null,\x22n\x22,\x22n\x22,562130025).cljs$core$IFn$_invoke$arity$1(params__$1);\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(n,\x22~\x22))], 0));\r\n\r\nreturn arg_navigator;\r\n});\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22\\n\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn (function (params__$1,arg_navigator,offsets){\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params__$1))){\r\ncljs.pprint.prn();\r\n} else {\r\n}\r\n\r\nreturn arg_navigator;\r\n});\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22T\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(2),[new cljs.core.Keyword(null,\x22colnum\x22,\x22colnum\x22,2023796854),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null),new cljs.core.Keyword(null,\x22colinc\x22,\x22colinc\x22,-584873385),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22pretty\x22,\x22pretty\x22,-1916372486),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))){\r\nreturn (function (p1__20049_SHARP_,p2__20050_SHARP_,p3__20051_SHARP_){\r\nreturn cljs.pprint.relative_tabulation(p1__20049_SHARP_,p2__20050_SHARP_,p3__20051_SHARP_);\r\n});\r\n} else {\r\nreturn (function (p1__20052_SHARP_,p2__20053_SHARP_,p3__20054_SHARP_){\r\nreturn cljs.pprint.absolute_tabulation(p1__20052_SHARP_,p2__20053_SHARP_,p3__20054_SHARP_);\r\n});\r\n}\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22*\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(1),[new cljs.core.Keyword(null,\x22n\x22,\x22n\x22,562130025),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn (function (params__$1,navigator,offsets){\r\nvar n \x3d new cljs.core.Keyword(null,\x22n\x22,\x22n\x22,562130025).cljs$core$IFn$_invoke$arity$1(params__$1);\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params__$1))){\r\nreturn cljs.pprint.absolute_reposition(navigator,n);\r\n} else {\r\nreturn cljs.pprint.relative_reposition(navigator,(cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params__$1))?(- n):n));\r\n}\r\n});\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22?\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))){\r\nreturn (function (params__$1,navigator,offsets){\r\nvar vec__20134 \x3d cljs.pprint.get_format_arg(navigator);\r\nvar subformat \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20134,(0),null);\r\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20134,(1),null);\r\nreturn cljs.pprint.execute_sub_format(subformat,navigator__$1,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params__$1));\r\n});\r\n} else {\r\nreturn (function (params__$1,navigator,offsets){\r\nvar vec__20138 \x3d cljs.pprint.get_format_arg(navigator);\r\nvar subformat \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20138,(0),null);\r\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20138,(1),null);\r\nvar vec__20141 \x3d cljs.pprint.next_arg(navigator__$1);\r\nvar subargs \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20141,(0),null);\r\nvar navigator__$2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20141,(1),null);\r\nvar sub_navigator \x3d cljs.pprint.init_navigator(subargs);\r\ncljs.pprint.execute_sub_format(subformat,sub_navigator,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params__$1));\r\n\r\nreturn navigator__$2;\r\n});\r\n}\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22(\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22right\x22,\x22right\x22,-452581833),\x22)\x22,new cljs.core.Keyword(null,\x22allows-separator\x22,\x22allows-separator\x22,-818967742),null,new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146),null], null),new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nvar mod_case_writer \x3d (cljs.core.truth_((function (){var and__4251__auto__ \x3d new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params);\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())?cljs.pprint.upcase_writer:(cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))?cljs.pprint.capitalize_word_writer:(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))?cljs.pprint.init_cap_writer:cljs.pprint.downcase_writer\r\n)));\r\nreturn (function (p1__20058_SHARP_,p2__20059_SHARP_,p3__20060_SHARP_){\r\nreturn cljs.pprint.modify_case(mod_case_writer,p1__20058_SHARP_,p2__20059_SHARP_,p3__20060_SHARP_);\r\n});\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22)\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn null;\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22[\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(1),[new cljs.core.Keyword(null,\x22selector\x22,\x22selector\x22,762528866),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22right\x22,\x22right\x22,-452581833),\x22]\x22,new cljs.core.Keyword(null,\x22allows-separator\x22,\x22allows-separator\x22,-818967742),true,new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146),new cljs.core.Keyword(null,\x22last\x22,\x22last\x22,1105735132)], null),new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))){\r\nreturn cljs.pprint.boolean_conditional;\r\n} else {\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))){\r\nreturn cljs.pprint.check_arg_conditional;\r\n} else {\r\nreturn cljs.pprint.choice_conditional;\r\n\r\n}\r\n}\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22;\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(2),[new cljs.core.Keyword(null,\x22min-remaining\x22,\x22min-remaining\x22,962687677),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22max-columns\x22,\x22max-columns\x22,1742323262),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22separator\x22,\x22separator\x22,-1628749125),true], null),new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn null;\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22]\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn null;\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22{\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(1),[new cljs.core.Keyword(null,\x22max-iterations\x22,\x22max-iterations\x22,2021275563),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22right\x22,\x22right\x22,-452581833),\x22}\x22,new cljs.core.Keyword(null,\x22allows-separator\x22,\x22allows-separator\x22,-818967742),false], null),new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params);\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nreturn cljs.pprint.iterate_main_sublists;\r\n} else {\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))){\r\nreturn cljs.pprint.iterate_list_of_sublists;\r\n} else {\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))){\r\nreturn cljs.pprint.iterate_main_list;\r\n} else {\r\nreturn cljs.pprint.iterate_sublist;\r\n\r\n}\r\n}\r\n}\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22}\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn null;\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22\x3c\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(4),[new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22colinc\x22,\x22colinc\x22,-584873385),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null),new cljs.core.Keyword(null,\x22minpad\x22,\x22minpad\x22,323570901),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null,new cljs.core.Keyword(null,\x22pretty\x22,\x22pretty\x22,-1916372486),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22right\x22,\x22right\x22,-452581833),\x22\x3e\x22,new cljs.core.Keyword(null,\x22allows-separator\x22,\x22allows-separator\x22,-818967742),true,new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146),new cljs.core.Keyword(null,\x22first\x22,\x22first\x22,-644103046)], null),new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn cljs.pprint.logical_block_or_justify;\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22\x3e\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn null;\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22^\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(3),[new cljs.core.Keyword(null,\x22arg1\x22,\x22arg1\x22,951899358),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22arg2\x22,\x22arg2\x22,1729550917),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22arg3\x22,\x22arg3\x22,-1486822496),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn (function (params__$1,navigator,offsets){\r\nvar arg1 \x3d new cljs.core.Keyword(null,\x22arg1\x22,\x22arg1\x22,951899358).cljs$core$IFn$_invoke$arity$1(params__$1);\r\nvar arg2 \x3d new cljs.core.Keyword(null,\x22arg2\x22,\x22arg2\x22,1729550917).cljs$core$IFn$_invoke$arity$1(params__$1);\r\nvar arg3 \x3d new cljs.core.Keyword(null,\x22arg3\x22,\x22arg3\x22,-1486822496).cljs$core$IFn$_invoke$arity$1(params__$1);\r\nvar exit \x3d (cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params__$1))?new cljs.core.Keyword(null,\x22colon-up-arrow\x22,\x22colon-up-arrow\x22,244853007):new cljs.core.Keyword(null,\x22up-arrow\x22,\x22up-arrow\x22,1705310333));\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d arg1;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nvar and__4251__auto____$1 \x3d arg2;\r\nif(cljs.core.truth_(and__4251__auto____$1)){\r\nreturn arg3;\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nif((((arg1 \x3c\x3d arg2)) \x26\x26 ((arg2 \x3c\x3d arg3)))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit,navigator], null);\r\n} else {\r\nreturn navigator;\r\n}\r\n} else {\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d arg1;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn arg2;\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arg1,arg2)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit,navigator], null);\r\n} else {\r\nreturn navigator;\r\n}\r\n} else {\r\nif(cljs.core.truth_(arg1)){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arg1,(0))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit,navigator], null);\r\n} else {\r\nreturn navigator;\r\n}\r\n} else {\r\nif((cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params__$1))?cljs.core.empty_QMARK_(new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params__$1))):cljs.core.empty_QMARK_(new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419).cljs$core$IFn$_invoke$arity$1(navigator)))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit,navigator], null);\r\n} else {\r\nreturn navigator;\r\n}\r\n\r\n}\r\n}\r\n}\r\n});\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22W\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null,new cljs.core.Keyword(null,\x22pretty\x22,\x22pretty\x22,-1916372486),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nif(cljs.core.truth_((function (){var or__4253__auto__ \x3d new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params);\r\n}\r\n})())){\r\nvar bindings \x3d cljs.core.concat.cljs$core$IFn$_invoke$arity$2((cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))?new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22level\x22,\x22level\x22,1290497552),null,new cljs.core.Keyword(null,\x22length\x22,\x22length\x22,588987862),null], null):cljs.core.PersistentVector.EMPTY),(cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22pretty\x22,\x22pretty\x22,-1916372486),true], null):cljs.core.PersistentVector.EMPTY));\r\nreturn (function (params__$1,navigator,offsets){\r\nvar vec__20171 \x3d cljs.pprint.next_arg(navigator);\r\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20171,(0),null);\r\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20171,(1),null);\r\nif(cljs.core.truth_(cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.pprint.write,arg,bindings))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22up-arrow\x22,\x22up-arrow\x22,1705310333),navigator__$1], null);\r\n} else {\r\nreturn navigator__$1;\r\n}\r\n});\r\n} else {\r\nreturn (function (params__$1,navigator,offsets){\r\nvar vec__20184 \x3d cljs.pprint.next_arg(navigator);\r\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20184,(0),null);\r\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20184,(1),null);\r\nif(cljs.core.truth_(cljs.pprint.write_out(arg))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22up-arrow\x22,\x22up-arrow\x22,1705310333),navigator__$1], null);\r\n} else {\r\nreturn navigator__$1;\r\n}\r\n});\r\n}\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22_\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn cljs.pprint.conditional_newline;\r\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22I\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(1),[new cljs.core.Keyword(null,\x22n\x22,\x22n\x22,562130025),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\r\nreturn cljs.pprint.set_indent;\r\n})], null)]);\r\ncljs.pprint.param_pattern \x3d /^([vV]|#|(\x27.)|([+-]?\\d+)|(?\x3d,))/;\r\ncljs.pprint.special_params \x3d new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22remaining-arg-count\x22,\x22remaining-arg-count\x22,-1216589335),null,new cljs.core.Keyword(null,\x22parameter-from-args\x22,\x22parameter-from-args\x22,-758446196),null], null), null);\r\ncljs.pprint.extract_param \x3d (function cljs$pprint$extract_param(p__20205){\r\nvar vec__20206 \x3d p__20205;\r\nvar s \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20206,(0),null);\r\nvar offset \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20206,(1),null);\r\nvar saw_comma \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20206,(2),null);\r\nvar m \x3d (new RegExp(cljs.pprint.param_pattern.source,\x22g\x22));\r\nvar param \x3d m.exec(s);\r\nif(cljs.core.truth_(param)){\r\nvar token_str \x3d cljs.core.first(param);\r\nvar remainder \x3d cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,m.lastIndex);\r\nvar new_offset \x3d (offset + m.lastIndex);\r\nif((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22,\x22,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(remainder,(0)))))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str,offset], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder,new_offset,false], null)], null);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str,offset], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.cljs$core$IFn$_invoke$arity$2(remainder,(1)),(new_offset + (1)),true], null)], null);\r\n}\r\n} else {\r\nif(cljs.core.truth_(saw_comma)){\r\nreturn cljs.pprint.format_error(\x22Badly formed parameters in format directive\x22,offset);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s,offset], null)], null);\r\n}\r\n}\r\n});\r\ncljs.pprint.extract_params \x3d (function cljs$pprint$extract_params(s,offset){\r\nreturn cljs.pprint.consume(cljs.pprint.extract_param,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s,offset,false], null));\r\n});\r\n/**\r\n * Translate the string representation of a param to the internalized\r\n *                                    representation\r\n */\r\ncljs.pprint.translate_param \x3d (function cljs$pprint$translate_param(p__20252){\r\nvar vec__20261 \x3d p__20252;\r\nvar p \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20261,(0),null);\r\nvar offset \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20261,(1),null);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p.length,(0)))?null:((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p.length,(1))) \x26\x26 (cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\x22V\x22,null,\x22v\x22,null], null), null),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(p,(0))))))?new cljs.core.Keyword(null,\x22parameter-from-args\x22,\x22parameter-from-args\x22,-758446196):((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p.length,(1))) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22#\x22,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(p,(0))))))?new cljs.core.Keyword(null,\x22remaining-arg-count\x22,\x22remaining-arg-count\x22,-1216589335):((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p.length,(2))) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22\x27\x22,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(p,(0))))))?cljs.core.nth.cljs$core$IFn$_invoke$arity$2(p,(1)):parseInt(p,(10))\r\n)))),offset], null);\r\n});\r\ncljs.pprint.flag_defs \x3d new cljs.core.PersistentArrayMap(null, 2, [\x22:\x22,new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),\x22@\x22,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349)], null);\r\ncljs.pprint.extract_flags \x3d (function cljs$pprint$extract_flags(s,offset){\r\nreturn cljs.pprint.consume((function (p__20269){\r\nvar vec__20270 \x3d p__20269;\r\nvar s__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20270,(0),null);\r\nvar offset__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20270,(1),null);\r\nvar flags \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20270,(2),null);\r\nif(cljs.core.empty_QMARK_(s__$1)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1,offset__$1,flags], null)], null);\r\n} else {\r\nvar flag \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.pprint.flag_defs,cljs.core.first(s__$1));\r\nif(cljs.core.truth_(flag)){\r\nif(cljs.core.contains_QMARK_(flags,flag)){\r\nreturn cljs.pprint.format_error([\x22Flag \\\x22\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(s__$1)),\x22\\\x22 appears more than once in a directive\x22].join(\x27\x27),offset__$1);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s__$1,(1)),(offset__$1 + (1)),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(flags,flag,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,offset__$1], null))], null)], null);\r\n}\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1,offset__$1,flags], null)], null);\r\n}\r\n}\r\n}),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s,offset,cljs.core.PersistentArrayMap.EMPTY], null));\r\n});\r\ncljs.pprint.check_flags \x3d (function cljs$pprint$check_flags(def,flags){\r\nvar allowed \x3d new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075).cljs$core$IFn$_invoke$arity$1(def);\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d cljs.core.not(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(allowed));\r\nif(and__4251__auto__){\r\nreturn new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(flags);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\ncljs.pprint.format_error([\x22\\\x22@\\\x22 is an illegal flag for format directive \\\x22\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132).cljs$core$IFn$_invoke$arity$1(def)),\x22\\\x22\x22].join(\x27\x27),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(flags),(1)));\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d cljs.core.not(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(allowed));\r\nif(and__4251__auto__){\r\nreturn new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(flags);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\ncljs.pprint.format_error([\x22\\\x22:\\\x22 is an illegal flag for format directive \\\x22\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132).cljs$core$IFn$_invoke$arity$1(def)),\x22\\\x22\x22].join(\x27\x27),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(flags),(1)));\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d cljs.core.not(new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840).cljs$core$IFn$_invoke$arity$1(allowed));\r\nif(and__4251__auto__){\r\nvar and__4251__auto____$1 \x3d new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(flags);\r\nif(cljs.core.truth_(and__4251__auto____$1)){\r\nreturn new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(flags);\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nreturn cljs.pprint.format_error([\x22Cannot combine \\\x22@\\\x22 and \\\x22:\\\x22 flags for format directive \\\x22\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132).cljs$core$IFn$_invoke$arity$1(def)),\x22\\\x22\x22].join(\x27\x27),(function (){var x__4339__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(flags),(1));\r\nvar y__4340__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(flags),(1));\r\nreturn ((x__4339__auto__ \x3c y__4340__auto__) ? x__4339__auto__ : y__4340__auto__);\r\n})());\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Takes a directive definition and the list of actual parameters and\r\n * a map of flags and returns a map of the parameters and flags with defaults\r\n * filled in. We check to make sure that there are the right types and number\r\n * of parameters as well.\r\n */\r\ncljs.pprint.map_params \x3d (function cljs$pprint$map_params(def,params,flags,offset){\r\ncljs.pprint.check_flags(def,flags);\r\n\r\nif((cljs.core.count(params) \x3e cljs.core.count(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(def)))){\r\ncljs.pprint.format_error(cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(null,\x22Too many parameters for directive \\\x22~C\\\x22: ~D~:* ~[were~;was~:;were~] specified but only ~D~:* ~[are~;is~:;are~] allowed\x22,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132).cljs$core$IFn$_invoke$arity$1(def),cljs.core.count(params),cljs.core.count(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(def))], 0)),cljs.core.second(cljs.core.first(params)));\r\n} else {\r\n}\r\n\r\ncljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (p1__20314_SHARP_,p2__20316_SHARP_){\r\nvar val \x3d cljs.core.first(p1__20314_SHARP_);\r\nif((!((((val \x3d\x3d null)) || (((cljs.core.contains_QMARK_(cljs.pprint.special_params,val)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.second(cljs.core.second(p2__20316_SHARP_)),cljs.core.type(val))))))))){\r\nreturn cljs.pprint.format_error([\x22Parameter \x22,cljs.core.name(cljs.core.first(p2__20316_SHARP_)),\x22 has bad type in directive \\\x22\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132).cljs$core$IFn$_invoke$arity$1(def)),\x22\\\x22: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type(val))].join(\x27\x27),cljs.core.second(p1__20314_SHARP_));\r\n} else {\r\nreturn null;\r\n}\r\n}),params,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(def)));\r\n\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.reverse((function (){var iter__4652__auto__ \x3d (function cljs$pprint$map_params_$_iter__20339(s__20340){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s__20340__$1 \x3d s__20340;\r\nwhile(true){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(s__20340__$1);\r\nif(temp__5753__auto__){\r\nvar s__20340__$2 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__20340__$2)){\r\nvar c__4650__auto__ \x3d cljs.core.chunk_first(s__20340__$2);\r\nvar size__4651__auto__ \x3d cljs.core.count(c__4650__auto__);\r\nvar b__20342 \x3d cljs.core.chunk_buffer(size__4651__auto__);\r\nif((function (){var i__20341 \x3d (0);\r\nwhile(true){\r\nif((i__20341 \x3c size__4651__auto__)){\r\nvar vec__20361 \x3d cljs.core._nth(c__4650__auto__,i__20341);\r\nvar name \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20361,(0),null);\r\nvar vec__20364 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20361,(1),null);\r\nvar default$ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20364,(0),null);\r\ncljs.core.chunk_append(b__20342,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$,offset], null)], null));\r\n\r\nvar G__22630 \x3d (i__20341 + (1));\r\ni__20341 \x3d G__22630;\r\ncontinue;\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__20342),cljs$pprint$map_params_$_iter__20339(cljs.core.chunk_rest(s__20340__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__20342),null);\r\n}\r\n} else {\r\nvar vec__20393 \x3d cljs.core.first(s__20340__$2);\r\nvar name \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20393,(0),null);\r\nvar vec__20396 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20393,(1),null);\r\nvar default$ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20396,(0),null);\r\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$,offset], null)], null),cljs$pprint$map_params_$_iter__20339(cljs.core.rest(s__20340__$2)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}),null,null));\r\n});\r\nreturn iter__4652__auto__(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(def));\r\n})())),cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__20317_SHARP_,p2__20318_SHARP_){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc,p1__20317_SHARP_,p2__20318_SHARP_);\r\n}),cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__20319_SHARP_){\r\nreturn cljs.core.first(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(p1__20319_SHARP_,(1)));\r\n}),cljs.core.zipmap(cljs.core.keys(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(def)),params))),flags], 0));\r\n});\r\ncljs.pprint.compile_directive \x3d (function cljs$pprint$compile_directive(s,offset){\r\nvar vec__20428 \x3d cljs.pprint.extract_params(s,offset);\r\nvar raw_params \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20428,(0),null);\r\nvar vec__20431 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20428,(1),null);\r\nvar rest \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20431,(0),null);\r\nvar offset__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20431,(1),null);\r\nvar vec__20434 \x3d cljs.pprint.extract_flags(rest,offset__$1);\r\nvar _ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20434,(0),null);\r\nvar vec__20437 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20434,(1),null);\r\nvar rest__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20437,(0),null);\r\nvar offset__$2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20437,(1),null);\r\nvar flags \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20437,(2),null);\r\nvar directive \x3d cljs.core.first(rest__$1);\r\nvar def \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.pprint.directive_table,clojure.string.upper_case(directive));\r\nvar params \x3d (cljs.core.truth_(def)?cljs.pprint.map_params(def,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.pprint.translate_param,raw_params),flags,offset__$2):null);\r\nif(cljs.core.not(directive)){\r\ncljs.pprint.format_error(\x22Format string ended in the middle of a directive\x22,offset__$2);\r\n} else {\r\n}\r\n\r\nif(cljs.core.not(def)){\r\ncljs.pprint.format_error([\x22Directive \\\x22\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(directive),\x22\\\x22 is undefined\x22].join(\x27\x27),offset__$2);\r\n} else {\r\n}\r\n\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.pprint.compiled_directive((function (){var fexpr__20447 \x3d new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656).cljs$core$IFn$_invoke$arity$1(def);\r\nreturn (fexpr__20447.cljs$core$IFn$_invoke$arity$2 ? fexpr__20447.cljs$core$IFn$_invoke$arity$2(params,offset__$2) : fexpr__20447.call(null,params,offset__$2));\r\n})(),def,params,offset__$2,null,null,null)),(function (){var remainder \x3d cljs.core.subs.cljs$core$IFn$_invoke$arity$2(rest__$1,(1));\r\nvar offset__$3 \x3d (offset__$2 + (1));\r\nvar trim_QMARK_ \x3d ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22\\n\x22,new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132).cljs$core$IFn$_invoke$arity$1(def))) \x26\x26 (cljs.core.not(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))));\r\nvar trim_count \x3d ((trim_QMARK_)?cljs.pprint.prefix_count(remainder,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,\x22\\t\x22], null)):(0));\r\nvar remainder__$1 \x3d cljs.core.subs.cljs$core$IFn$_invoke$arity$2(remainder,trim_count);\r\nvar offset__$4 \x3d (offset__$3 + trim_count);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder__$1,offset__$4], null);\r\n})()], null);\r\n});\r\ncljs.pprint.compile_raw_string \x3d (function cljs$pprint$compile_raw_string(s,offset){\r\nreturn (new cljs.pprint.compiled_directive((function (_,a,___$1){\r\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([s], 0));\r\n\r\nreturn a;\r\n}),null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),s], null),offset,null,null,null));\r\n});\r\ncljs.pprint.right_bracket \x3d (function cljs$pprint$right_bracket(this$){\r\nreturn new cljs.core.Keyword(null,\x22right\x22,\x22right\x22,-452581833).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536).cljs$core$IFn$_invoke$arity$1(this$)));\r\n});\r\ncljs.pprint.separator_QMARK_ \x3d (function cljs$pprint$separator_QMARK_(this$){\r\nreturn new cljs.core.Keyword(null,\x22separator\x22,\x22separator\x22,-1628749125).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536).cljs$core$IFn$_invoke$arity$1(this$)));\r\n});\r\ncljs.pprint.else_separator_QMARK_ \x3d (function cljs$pprint$else_separator_QMARK_(this$){\r\nvar and__4251__auto__ \x3d new cljs.core.Keyword(null,\x22separator\x22,\x22separator\x22,-1628749125).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536).cljs$core$IFn$_invoke$arity$1(this$)));\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(this$));\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n});\r\ncljs.pprint.process_bracket \x3d (function cljs$pprint$process_bracket(this$,remainder){\r\nvar vec__20512 \x3d cljs.pprint.collect_clauses(new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536).cljs$core$IFn$_invoke$arity$1(this$)),new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311).cljs$core$IFn$_invoke$arity$1(this$),remainder);\r\nvar subex \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20512,(0),null);\r\nvar remainder__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20512,(1),null);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.pprint.compiled_directive(new cljs.core.Keyword(null,\x22func\x22,\x22func\x22,-238706040).cljs$core$IFn$_invoke$arity$1(this$),new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536).cljs$core$IFn$_invoke$arity$1(this$),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(this$),cljs.pprint.tuple_map(subex,new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311).cljs$core$IFn$_invoke$arity$1(this$))], 0)),new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311).cljs$core$IFn$_invoke$arity$1(this$),null,null,null)),remainder__$1], null);\r\n});\r\ncljs.pprint.process_clause \x3d (function cljs$pprint$process_clause(bracket_info,offset,remainder){\r\nreturn cljs.pprint.consume((function (remainder__$1){\r\nif(cljs.core.empty_QMARK_(remainder__$1)){\r\nreturn cljs.pprint.format_error(\x22No closing bracket found.\x22,offset);\r\n} else {\r\nvar this$ \x3d cljs.core.first(remainder__$1);\r\nvar remainder__$2 \x3d cljs.core.next(remainder__$1);\r\nif(cljs.core.truth_(cljs.pprint.right_bracket(this$))){\r\nreturn cljs.pprint.process_bracket(this$,remainder__$2);\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22right\x22,\x22right\x22,-452581833).cljs$core$IFn$_invoke$arity$1(bracket_info),new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536).cljs$core$IFn$_invoke$arity$1(this$)))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22right-bracket\x22,\x22right-bracket\x22,951856080),new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(this$),null,remainder__$2], null)], null);\r\n} else {\r\nif(cljs.core.truth_(cljs.pprint.else_separator_QMARK_(this$))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146),null,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(this$),remainder__$2], null)], null);\r\n} else {\r\nif(cljs.core.truth_(cljs.pprint.separator_QMARK_(this$))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22separator\x22,\x22separator\x22,-1628749125),null,null,remainder__$2], null)], null);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$,remainder__$2], null);\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}),remainder);\r\n});\r\ncljs.pprint.collect_clauses \x3d (function cljs$pprint$collect_clauses(bracket_info,offset,remainder){\r\nreturn cljs.core.second(cljs.pprint.consume((function (p__20548){\r\nvar vec__20550 \x3d p__20548;\r\nvar clause_map \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20550,(0),null);\r\nvar saw_else \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20550,(1),null);\r\nvar remainder__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20550,(2),null);\r\nvar vec__20555 \x3d cljs.pprint.process_clause(bracket_info,offset,remainder__$1);\r\nvar clause \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20555,(0),null);\r\nvar vec__20558 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20555,(1),null);\r\nvar type \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20558,(0),null);\r\nvar right_params \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20558,(1),null);\r\nvar else_params \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20558,(2),null);\r\nvar remainder__$2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20558,(3),null);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(type,new cljs.core.Keyword(null,\x22right-bracket\x22,\x22right-bracket\x22,951856080))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.concat,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([clause_map,cljs.core.PersistentArrayMap.createAsIfByAssoc([(cljs.core.truth_(saw_else)?new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146):new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null),new cljs.core.Keyword(null,\x22right-params\x22,\x22right-params\x22,-1790676237),right_params])], 0)),remainder__$2], null)], null);\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(type,new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146))){\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146).cljs$core$IFn$_invoke$arity$1(clause_map))){\r\nreturn cljs.pprint.format_error(\x22Two else clauses (\\\x22~:;\\\x22) inside bracket construction.\x22,offset);\r\n} else {\r\nif(cljs.core.not(new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146).cljs$core$IFn$_invoke$arity$1(bracket_info))){\r\nreturn cljs.pprint.format_error(\x22An else clause (\\\x22~:;\\\x22) is in a bracket type that doesn\x27t support it.\x22,offset);\r\n} else {\r\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22first\x22,\x22first\x22,-644103046),new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146).cljs$core$IFn$_invoke$arity$1(bracket_info))) \x26\x26 (cljs.core.seq(new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(clause_map))))){\r\nreturn cljs.pprint.format_error(\x22The else clause (\\\x22~:;\\\x22) is only allowed in the first position for this directive.\x22,offset);\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22first\x22,\x22first\x22,-644103046),new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146).cljs$core$IFn$_invoke$arity$1(bracket_info))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.concat,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([clause_map,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null),new cljs.core.Keyword(null,\x22else-params\x22,\x22else-params\x22,-832171646),else_params], null)], 0)),false,remainder__$2], null)], null);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.concat,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([clause_map,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)], 0)),true,remainder__$2], null)], null);\r\n}\r\n\r\n}\r\n}\r\n}\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(type,new cljs.core.Keyword(null,\x22separator\x22,\x22separator\x22,-1628749125))){\r\nif(cljs.core.truth_(saw_else)){\r\nreturn cljs.pprint.format_error(\x22A plain clause (with \\\x22~;\\\x22) follows an else clause (\\\x22~:;\\\x22) inside bracket construction.\x22,offset);\r\n} else {\r\nif(cljs.core.not(new cljs.core.Keyword(null,\x22allows-separator\x22,\x22allows-separator\x22,-818967742).cljs$core$IFn$_invoke$arity$1(bracket_info))){\r\nreturn cljs.pprint.format_error(\x22A separator (\\\x22~;\\\x22) is in a bracket type that doesn\x27t support it.\x22,offset);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.concat,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([clause_map,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)], 0)),false,remainder__$2], null)], null);\r\n\r\n}\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}\r\n}),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241),cljs.core.PersistentVector.EMPTY], null),false,remainder], null)));\r\n});\r\n/**\r\n * Take a linearly compiled format and process the bracket directives to give it\r\n * the appropriate tree structure\r\n */\r\ncljs.pprint.process_nesting \x3d (function cljs$pprint$process_nesting(format){\r\nreturn cljs.core.first(cljs.pprint.consume((function (remainder){\r\nvar this$ \x3d cljs.core.first(remainder);\r\nvar remainder__$1 \x3d cljs.core.next(remainder);\r\nvar bracket \x3d new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536).cljs$core$IFn$_invoke$arity$1(this$));\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22right\x22,\x22right\x22,-452581833).cljs$core$IFn$_invoke$arity$1(bracket))){\r\nreturn cljs.pprint.process_bracket(this$,remainder__$1);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$,remainder__$1], null);\r\n}\r\n}),format));\r\n});\r\n/**\r\n * Compiles format-str into a compiled format which can be used as an argument\r\n * to cl-format just like a plain format string. Use this function for improved\r\n * performance when you\x27re using the same format string repeatedly\r\n */\r\ncljs.pprint.compile_format \x3d (function cljs$pprint$compile_format(format_str){\r\nvar _STAR_format_str_STAR__orig_val__20577 \x3d cljs.pprint._STAR_format_str_STAR_;\r\nvar _STAR_format_str_STAR__temp_val__20578 \x3d format_str;\r\n(cljs.pprint._STAR_format_str_STAR_ \x3d _STAR_format_str_STAR__temp_val__20578);\r\n\r\ntry{return cljs.pprint.process_nesting(cljs.core.first(cljs.pprint.consume((function (p__20579){\r\nvar vec__20580 \x3d p__20579;\r\nvar s \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20580,(0),null);\r\nvar offset \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20580,(1),null);\r\nif(cljs.core.empty_QMARK_(s)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,s], null);\r\n} else {\r\nvar tilde \x3d s.indexOf(\x22~\x22);\r\nif((tilde \x3c (0))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string(s,offset),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22\x22,(offset + s.length)], null)], null);\r\n} else {\r\nif((tilde \x3d\x3d\x3d (0))){\r\nreturn cljs.pprint.compile_directive(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(1)),(offset + (1)));\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),tilde),offset),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,tilde),(tilde + offset)], null)], null);\r\n\r\n}\r\n}\r\n}\r\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [format_str,(0)], null))));\r\n}finally {(cljs.pprint._STAR_format_str_STAR_ \x3d _STAR_format_str_STAR__orig_val__20577);\r\n}});\r\n/**\r\n * determine whether a given compiled format has any directives that depend on the\r\n * column number or pretty printing\r\n */\r\ncljs.pprint.needs_pretty \x3d (function cljs$pprint$needs_pretty(format){\r\nvar format__$1 \x3d format;\r\nwhile(true){\r\nif(cljs.core.empty_QMARK_(format__$1)){\r\nreturn false;\r\n} else {\r\nif(cljs.core.truth_((function (){var or__4253__auto__ \x3d new cljs.core.Keyword(null,\x22pretty\x22,\x22pretty\x22,-1916372486).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536).cljs$core$IFn$_invoke$arity$1(cljs.core.first(format__$1))));\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar or__4253__auto____$1 \x3d cljs.core.some(cljs.pprint.needs_pretty,cljs.core.first(new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(cljs.core.first(format__$1)))));\r\nif(cljs.core.truth_(or__4253__auto____$1)){\r\nreturn or__4253__auto____$1;\r\n} else {\r\nreturn cljs.core.some(cljs.pprint.needs_pretty,cljs.core.first(new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(cljs.core.first(format__$1)))));\r\n}\r\n}\r\n})())){\r\nreturn true;\r\n} else {\r\nvar G__22694 \x3d cljs.core.next(format__$1);\r\nformat__$1 \x3d G__22694;\r\ncontinue;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Executes the format with the arguments.\r\n */\r\ncljs.pprint.execute_format \x3d (function cljs$pprint$execute_format(var_args){\r\nvar G__20616 \x3d arguments.length;\r\nswitch (G__20616) {\r\ncase 3:\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3 \x3d (function (stream,format,args){\r\nvar sb \x3d (new goog.string.StringBuffer());\r\nvar real_stream \x3d ((((cljs.core.not(stream)) || (stream \x3d\x3d\x3d true)))?(new cljs.core.StringBufferWriter(sb)):stream);\r\nvar wrapped_stream \x3d ((((cljs.pprint.needs_pretty(format)) \x26\x26 (cljs.core.not(cljs.pprint.pretty_writer_QMARK_(real_stream)))))?cljs.pprint.get_pretty_writer(real_stream):real_stream);\r\nvar _STAR_out_STAR__orig_val__20619 \x3d cljs.core._STAR_out_STAR_;\r\nvar _STAR_out_STAR__temp_val__20620 \x3d wrapped_stream;\r\n(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__temp_val__20620);\r\n\r\ntry{try{cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(format,args);\r\n}finally {if((!((real_stream \x3d\x3d\x3d wrapped_stream)))){\r\ncljs.core._flush(wrapped_stream);\r\n} else {\r\n}\r\n}\r\nif(cljs.core.not(stream)){\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);\r\n} else {\r\nif(stream \x3d\x3d\x3d true){\r\nreturn cljs.core.string_print(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb));\r\n} else {\r\nreturn null;\r\n\r\n}\r\n}\r\n}finally {(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__orig_val__20619);\r\n}}));\r\n\r\n(cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2 \x3d (function (format,args){\r\ncljs.pprint.map_passing_context((function (element,context){\r\nif(cljs.pprint.abort_QMARK_(context)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,context], null);\r\n} else {\r\nvar vec__20627 \x3d cljs.pprint.realize_parameter_list(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(element),context);\r\nvar params \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20627,(0),null);\r\nvar args__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20627,(1),null);\r\nvar vec__20630 \x3d cljs.pprint.unzip_map(params);\r\nvar params__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20630,(0),null);\r\nvar offsets \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20630,(1),null);\r\nvar params__$2 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(params__$1,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822),args__$1);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22func\x22,\x22func\x22,-238706040).cljs$core$IFn$_invoke$arity$1(element),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2,args__$1,offsets], null))], null);\r\n}\r\n}),args,format);\r\n\r\nreturn null;\r\n}));\r\n\r\n(cljs.pprint.execute_format.cljs$lang$maxFixedArity \x3d 3);\r\n\r\ncljs.pprint.cached_compile \x3d cljs.core.memoize(cljs.pprint.compile_format);\r\n/**\r\n * Installs a function as a new method of multimethod associated with dispatch-value. \r\n */\r\ncljs.pprint.use_method \x3d (function cljs$pprint$use_method(multifn,dispatch_val,func){\r\nreturn cljs.core._add_method(multifn,dispatch_val,func);\r\n});\r\ncljs.pprint.reader_macros \x3d new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null,\x22quote\x22,\x22quote\x22,1377916282,null),\x22\x27\x22,new cljs.core.Symbol(null,\x22var\x22,\x22var\x22,870848730,null),\x22#\x27\x22,new cljs.core.Symbol(\x22clojure.core\x22,\x22deref\x22,\x22clojure.core/deref\x22,188719157,null),\x22@\x22,new cljs.core.Symbol(\x22clojure.core\x22,\x22unquote\x22,\x22clojure.core/unquote\x22,843087510,null),\x22~\x22,new cljs.core.Symbol(\x22cljs.core\x22,\x22deref\x22,\x22cljs.core/deref\x22,1901963335,null),\x22@\x22,new cljs.core.Symbol(\x22cljs.core\x22,\x22unquote\x22,\x22cljs.core/unquote\x22,1013085760,null),\x22~\x22], null);\r\ncljs.pprint.pprint_reader_macro \x3d (function cljs$pprint$pprint_reader_macro(alis){\r\nvar macro_char \x3d (function (){var G__20642 \x3d cljs.core.first(alis);\r\nreturn (cljs.pprint.reader_macros.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.reader_macros.cljs$core$IFn$_invoke$arity$1(G__20642) : cljs.pprint.reader_macros.call(null,G__20642));\r\n})();\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d macro_char;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.count(alis));\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,macro_char);\r\n\r\ncljs.pprint.write_out(cljs.core.second(alis));\r\n\r\nreturn true;\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ncljs.pprint.pprint_simple_list \x3d (function cljs$pprint$pprint_simple_list(alis){\r\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\r\n} else {\r\nvar _STAR_current_level_STAR__orig_val__20647_22703 \x3d cljs.pprint._STAR_current_level_STAR_;\r\nvar _STAR_current_length_STAR__orig_val__20648_22704 \x3d cljs.pprint._STAR_current_length_STAR_;\r\nvar _STAR_current_level_STAR__temp_val__20649_22705 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\r\nvar _STAR_current_length_STAR__temp_val__20650_22706 \x3d (0);\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__20649_22705);\r\n\r\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__20650_22706);\r\n\r\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,\x22(\x22,null,\x22)\x22);\r\n\r\nvar length_count20653_22707 \x3d (0);\r\nvar alis_22708__$1 \x3d cljs.core.seq(alis);\r\nwhile(true){\r\nif(((cljs.core.not(cljs.core._STAR_print_length_STAR_)) || ((length_count20653_22707 \x3c cljs.core._STAR_print_length_STAR_)))){\r\nif(alis_22708__$1){\r\ncljs.pprint.write_out(cljs.core.first(alis_22708__$1));\r\n\r\nif(cljs.core.next(alis_22708__$1)){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22 \x22);\r\n\r\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697));\r\n\r\nvar G__22710 \x3d (length_count20653_22707 + (1));\r\nvar G__22711 \x3d cljs.core.next(alis_22708__$1);\r\nlength_count20653_22707 \x3d G__22710;\r\nalis_22708__$1 \x3d G__22711;\r\ncontinue;\r\n} else {\r\n}\r\n} else {\r\n}\r\n} else {\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22...\x22);\r\n}\r\nbreak;\r\n}\r\n\r\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\r\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__20648_22704);\r\n\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__20647_22703);\r\n}}\r\n\r\nreturn null;\r\n});\r\ncljs.pprint.pprint_list \x3d (function cljs$pprint$pprint_list(alis){\r\nif(cljs.core.not(cljs.pprint.pprint_reader_macro(alis))){\r\nreturn cljs.pprint.pprint_simple_list(alis);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ncljs.pprint.pprint_vector \x3d (function cljs$pprint$pprint_vector(avec){\r\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\r\n} else {\r\nvar _STAR_current_level_STAR__orig_val__20667_22712 \x3d cljs.pprint._STAR_current_level_STAR_;\r\nvar _STAR_current_length_STAR__orig_val__20668_22713 \x3d cljs.pprint._STAR_current_length_STAR_;\r\nvar _STAR_current_level_STAR__temp_val__20669_22714 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\r\nvar _STAR_current_length_STAR__temp_val__20670_22715 \x3d (0);\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__20669_22714);\r\n\r\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__20670_22715);\r\n\r\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,\x22[\x22,null,\x22]\x22);\r\n\r\nvar length_count20684_22716 \x3d (0);\r\nvar aseq_22717 \x3d cljs.core.seq(avec);\r\nwhile(true){\r\nif(((cljs.core.not(cljs.core._STAR_print_length_STAR_)) || ((length_count20684_22716 \x3c cljs.core._STAR_print_length_STAR_)))){\r\nif(aseq_22717){\r\ncljs.pprint.write_out(cljs.core.first(aseq_22717));\r\n\r\nif(cljs.core.next(aseq_22717)){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22 \x22);\r\n\r\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697));\r\n\r\nvar G__22718 \x3d (length_count20684_22716 + (1));\r\nvar G__22719 \x3d cljs.core.next(aseq_22717);\r\nlength_count20684_22716 \x3d G__22718;\r\naseq_22717 \x3d G__22719;\r\ncontinue;\r\n} else {\r\n}\r\n} else {\r\n}\r\n} else {\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22...\x22);\r\n}\r\nbreak;\r\n}\r\n\r\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\r\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__20668_22713);\r\n\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__20667_22712);\r\n}}\r\n\r\nreturn null;\r\n});\r\ncljs.pprint.pprint_array \x3d (function (){var format_in__16840__auto__ \x3d \x22~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn (function() { \r\nvar G__22721__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22721 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22722__i \x3d 0, G__22722__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22722__i \x3c G__22722__a.length) {G__22722__a[G__22722__i] \x3d arguments[G__22722__i + 0]; ++G__22722__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22722__a,0,null);\r\n} \r\nreturn G__22721__delegate.call(this,args__16842__auto__);};\r\nG__22721.cljs$lang$maxFixedArity \x3d 0;\r\nG__22721.cljs$lang$applyTo \x3d (function (arglist__22724){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22724);\r\nreturn G__22721__delegate(args__16842__auto__);\r\n});\r\nG__22721.cljs$core$IFn$_invoke$arity$variadic \x3d G__22721__delegate;\r\nreturn G__22721;\r\n})()\r\n;\r\n})();\r\ncljs.pprint.pprint_map \x3d (function cljs$pprint$pprint_map(amap){\r\nvar vec__20692 \x3d (((!(cljs.core.record_QMARK_(amap))))?(function (){var fexpr__20699 \x3d new cljs.core.Var(function(){return cljs.core.lift_ns;},new cljs.core.Symbol(\x22cljs.core\x22,\x22lift-ns\x22,\x22cljs.core/lift-ns\x22,463499081,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\x22private\x22,\x22private\x22,-558947994),new cljs.core.Keyword(null,\x22ns\x22,\x22ns\x22,441598760),new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),new cljs.core.Keyword(null,\x22end-column\x22,\x22end-column\x22,1425389514),new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),new cljs.core.Keyword(null,\x22end-line\x22,\x22end-line\x22,1837326455),new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),new cljs.core.Keyword(null,\x22test\x22,\x22test\x22,577538877)],[true,new cljs.core.Symbol(null,\x22cljs.core\x22,\x22cljs.core\x22,770546058,null),new cljs.core.Symbol(null,\x22lift-ns\x22,\x22lift-ns\x22,602311926,null),\x22cljs/core.cljs\x22,15,1,10449,10449,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22m\x22,\x22m\x22,-1021758608,null)], null)),\x22Returns [lifted-ns lifted-map] or nil if m can\x27t be lifted.\x22,(cljs.core.truth_(cljs.core.lift_ns)?cljs.core.lift_ns.cljs$lang$test:null)]));\r\nreturn (fexpr__20699.cljs$core$IFn$_invoke$arity$1 ? fexpr__20699.cljs$core$IFn$_invoke$arity$1(amap) : fexpr__20699.call(null,amap));\r\n})():null);\r\nvar ns \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20692,(0),null);\r\nvar lift_map \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20692,(1),null);\r\nvar amap__$1 \x3d (function (){var or__4253__auto__ \x3d lift_map;\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn amap;\r\n}\r\n})();\r\nvar prefix \x3d (cljs.core.truth_(ns)?[\x22#:\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),\x22{\x22].join(\x27\x27):\x22{\x22);\r\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\r\n} else {\r\nvar _STAR_current_level_STAR__orig_val__20702_22732 \x3d cljs.pprint._STAR_current_level_STAR_;\r\nvar _STAR_current_length_STAR__orig_val__20703_22734 \x3d cljs.pprint._STAR_current_length_STAR_;\r\nvar _STAR_current_level_STAR__temp_val__20704_22735 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\r\nvar _STAR_current_length_STAR__temp_val__20705_22736 \x3d (0);\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__20704_22735);\r\n\r\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__20705_22736);\r\n\r\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,prefix,null,\x22}\x22);\r\n\r\nvar length_count20707_22776 \x3d (0);\r\nvar aseq_22777 \x3d cljs.core.seq(amap__$1);\r\nwhile(true){\r\nif(((cljs.core.not(cljs.core._STAR_print_length_STAR_)) || ((length_count20707_22776 \x3c cljs.core._STAR_print_length_STAR_)))){\r\nif(aseq_22777){\r\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\r\n} else {\r\nvar _STAR_current_level_STAR__orig_val__20715_22778 \x3d cljs.pprint._STAR_current_level_STAR_;\r\nvar _STAR_current_length_STAR__orig_val__20716_22779 \x3d cljs.pprint._STAR_current_length_STAR_;\r\nvar _STAR_current_level_STAR__temp_val__20717_22780 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\r\nvar _STAR_current_length_STAR__temp_val__20718_22781 \x3d (0);\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__20717_22780);\r\n\r\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__20718_22781);\r\n\r\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,null,null,null);\r\n\r\ncljs.pprint.write_out(cljs.core.ffirst(aseq_22777));\r\n\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22 \x22);\r\n\r\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697));\r\n\r\n(cljs.pprint._STAR_current_length_STAR_ \x3d (0));\r\n\r\ncljs.pprint.write_out(cljs.core.fnext(cljs.core.first(aseq_22777)));\r\n\r\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\r\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__20716_22779);\r\n\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__20715_22778);\r\n}}\r\n\r\n\r\nif(cljs.core.next(aseq_22777)){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22, \x22);\r\n\r\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697));\r\n\r\nvar G__22789 \x3d (length_count20707_22776 + (1));\r\nvar G__22790 \x3d cljs.core.next(aseq_22777);\r\nlength_count20707_22776 \x3d G__22789;\r\naseq_22777 \x3d G__22790;\r\ncontinue;\r\n} else {\r\n}\r\n} else {\r\n}\r\n} else {\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22...\x22);\r\n}\r\nbreak;\r\n}\r\n\r\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\r\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__20703_22734);\r\n\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__20702_22732);\r\n}}\r\n\r\nreturn null;\r\n});\r\ncljs.pprint.pprint_simple_default \x3d (function cljs$pprint$pprint_simple_default(obj){\r\nreturn cljs.core._write(cljs.core._STAR_out_STAR_,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0)));\r\n});\r\ncljs.pprint.pprint_set \x3d (function (){var format_in__16840__auto__ \x3d \x22~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn (function() { \r\nvar G__22791__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22791 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22793__i \x3d 0, G__22793__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22793__i \x3c G__22793__a.length) {G__22793__a[G__22793__i] \x3d arguments[G__22793__i + 0]; ++G__22793__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22793__a,0,null);\r\n} \r\nreturn G__22791__delegate.call(this,args__16842__auto__);};\r\nG__22791.cljs$lang$maxFixedArity \x3d 0;\r\nG__22791.cljs$lang$applyTo \x3d (function (arglist__22795){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22795);\r\nreturn G__22791__delegate(args__16842__auto__);\r\n});\r\nG__22791.cljs$core$IFn$_invoke$arity$variadic \x3d G__22791__delegate;\r\nreturn G__22791;\r\n})()\r\n;\r\n})();\r\ncljs.pprint.type_map \x3d new cljs.core.PersistentArrayMap(null, 2, [\x22core$future_call\x22,\x22Future\x22,\x22core$promise\x22,\x22Promise\x22], null);\r\n/**\r\n * Map ugly type names to something simpler\r\n */\r\ncljs.pprint.map_ref_type \x3d (function cljs$pprint$map_ref_type(name){\r\nvar or__4253__auto__ \x3d (function (){var temp__5753__auto__ \x3d cljs.core.re_find(/^[^$]+\\$[^$]+/,name);\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar match \x3d temp__5753__auto__;\r\nreturn (cljs.pprint.type_map.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.type_map.cljs$core$IFn$_invoke$arity$1(match) : cljs.pprint.type_map.call(null,match));\r\n} else {\r\nreturn null;\r\n}\r\n})();\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn name;\r\n}\r\n});\r\ncljs.pprint.pprint_ideref \x3d (function cljs$pprint$pprint_ideref(o){\r\nvar prefix \x3d [\x22#\x3c\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint.map_ref_type(cljs.core.type(o).name)),\x22@\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(goog.getUid(o)),\x22: \x22].join(\x27\x27);\r\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\r\n} else {\r\nvar _STAR_current_level_STAR__orig_val__20746_22809 \x3d cljs.pprint._STAR_current_level_STAR_;\r\nvar _STAR_current_length_STAR__orig_val__20747_22810 \x3d cljs.pprint._STAR_current_length_STAR_;\r\nvar _STAR_current_level_STAR__temp_val__20748_22811 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\r\nvar _STAR_current_length_STAR__temp_val__20749_22812 \x3d (0);\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__20748_22811);\r\n\r\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__20749_22812);\r\n\r\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,prefix,null,\x22\x3e\x22);\r\n\r\ncljs.pprint.pprint_indent(new cljs.core.Keyword(null,\x22block\x22,\x22block\x22,664686210),(- (((prefix).length) - (2))));\r\n\r\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697));\r\n\r\ncljs.pprint.write_out((((function (){var and__4251__auto__ \x3d (((!((o \x3d\x3d null))))?(((((o.cljs$lang$protocol_mask$partition1$ \x26 (1))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d o.cljs$core$IPending$))))?true:(((!o.cljs$lang$protocol_mask$partition1$))?cljs.core.native_satisfies_QMARK_(cljs.core.IPending,o):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IPending,o));\r\nif(and__4251__auto__){\r\nreturn (!(cljs.core._realized_QMARK_(o)));\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())?new cljs.core.Keyword(null,\x22not-delivered\x22,\x22not-delivered\x22,1599158697):cljs.core.deref(o)));\r\n\r\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\r\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__20747_22810);\r\n\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__20746_22809);\r\n}}\r\n\r\nreturn null;\r\n});\r\ncljs.pprint.pprint_pqueue \x3d (function (){var format_in__16840__auto__ \x3d \x22~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn (function() { \r\nvar G__22817__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22817 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22818__i \x3d 0, G__22818__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22818__i \x3c G__22818__a.length) {G__22818__a[G__22818__i] \x3d arguments[G__22818__i + 0]; ++G__22818__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22818__a,0,null);\r\n} \r\nreturn G__22817__delegate.call(this,args__16842__auto__);};\r\nG__22817.cljs$lang$maxFixedArity \x3d 0;\r\nG__22817.cljs$lang$applyTo \x3d (function (arglist__22819){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22819);\r\nreturn G__22817__delegate(args__16842__auto__);\r\n});\r\nG__22817.cljs$core$IFn$_invoke$arity$variadic \x3d G__22817__delegate;\r\nreturn G__22817;\r\n})()\r\n;\r\n})();\r\ncljs.pprint.type_dispatcher \x3d (function cljs$pprint$type_dispatcher(obj){\r\nif((obj instanceof cljs.core.PersistentQueue)){\r\nreturn new cljs.core.Keyword(null,\x22queue\x22,\x22queue\x22,1455835879);\r\n} else {\r\nif((((!((obj \x3d\x3d null))))?(((((obj.cljs$lang$protocol_mask$partition0$ \x26 (32768))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d obj.cljs$core$IDeref$))))?true:(((!obj.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,obj):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,obj))){\r\nreturn new cljs.core.Keyword(null,\x22deref\x22,\x22deref\x22,-145586795);\r\n} else {\r\nif((obj instanceof cljs.core.Symbol)){\r\nreturn new cljs.core.Keyword(null,\x22symbol\x22,\x22symbol\x22,-1038572696);\r\n} else {\r\nif(cljs.core.seq_QMARK_(obj)){\r\nreturn new cljs.core.Keyword(null,\x22list\x22,\x22list\x22,765357683);\r\n} else {\r\nif(cljs.core.map_QMARK_(obj)){\r\nreturn new cljs.core.Keyword(null,\x22map\x22,\x22map\x22,1371690461);\r\n} else {\r\nif(cljs.core.vector_QMARK_(obj)){\r\nreturn new cljs.core.Keyword(null,\x22vector\x22,\x22vector\x22,1902966158);\r\n} else {\r\nif(cljs.core.set_QMARK_(obj)){\r\nreturn new cljs.core.Keyword(null,\x22set\x22,\x22set\x22,304602554);\r\n} else {\r\nif((obj \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328);\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint.simple_dispatch !\x3d\x3d \x27undefined\x27)){\r\n} else {\r\n/**\r\n * The pretty print dispatch function for simple data structure format.\r\n */\r\ncljs.pprint.simple_dispatch \x3d (function (){var method_table__4747__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar prefer_table__4748__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar method_cache__4749__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar cached_hierarchy__4750__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar hierarchy__4751__auto__ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22hierarchy\x22,\x22hierarchy\x22,-1053470341),(function (){var fexpr__20802 \x3d cljs.core.get_global_hierarchy;\r\nreturn (fexpr__20802.cljs$core$IFn$_invoke$arity$0 ? fexpr__20802.cljs$core$IFn$_invoke$arity$0() : fexpr__20802.call(null));\r\n})());\r\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\x22cljs.pprint\x22,\x22simple-dispatch\x22),cljs.pprint.type_dispatcher,new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),hierarchy__4751__auto__,method_table__4747__auto__,prefer_table__4748__auto__,method_cache__4749__auto__,cached_hierarchy__4750__auto__));\r\n})();\r\n}\r\ncljs.pprint.use_method(cljs.pprint.simple_dispatch,new cljs.core.Keyword(null,\x22list\x22,\x22list\x22,765357683),cljs.pprint.pprint_list);\r\ncljs.pprint.use_method(cljs.pprint.simple_dispatch,new cljs.core.Keyword(null,\x22vector\x22,\x22vector\x22,1902966158),cljs.pprint.pprint_vector);\r\ncljs.pprint.use_method(cljs.pprint.simple_dispatch,new cljs.core.Keyword(null,\x22map\x22,\x22map\x22,1371690461),cljs.pprint.pprint_map);\r\ncljs.pprint.use_method(cljs.pprint.simple_dispatch,new cljs.core.Keyword(null,\x22set\x22,\x22set\x22,304602554),cljs.pprint.pprint_set);\r\ncljs.pprint.use_method(cljs.pprint.simple_dispatch,null,(function (){\r\nreturn cljs.core._write(cljs.core._STAR_out_STAR_,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null], 0)));\r\n}));\r\ncljs.pprint.use_method(cljs.pprint.simple_dispatch,new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),cljs.pprint.pprint_simple_default);\r\ncljs.pprint.set_pprint_dispatch(cljs.pprint.simple_dispatch);\r\n/**\r\n * Figure out which kind of brackets to use\r\n */\r\ncljs.pprint.brackets \x3d (function cljs$pprint$brackets(form){\r\nif(cljs.core.vector_QMARK_(form)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22[\x22,\x22]\x22], null);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22(\x22,\x22)\x22], null);\r\n}\r\n});\r\n/**\r\n * Pretty print a single reference (import, use, etc.) from a namespace decl\r\n */\r\ncljs.pprint.pprint_ns_reference \x3d (function cljs$pprint$pprint_ns_reference(reference){\r\nif(cljs.core.sequential_QMARK_(reference)){\r\nvar vec__20821 \x3d cljs.pprint.brackets(reference);\r\nvar start \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20821,(0),null);\r\nvar end \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20821,(1),null);\r\nvar vec__20824 \x3d reference;\r\nvar seq__20825 \x3d cljs.core.seq(vec__20824);\r\nvar first__20826 \x3d cljs.core.first(seq__20825);\r\nvar seq__20825__$1 \x3d cljs.core.next(seq__20825);\r\nvar keyw \x3d first__20826;\r\nvar args \x3d seq__20825__$1;\r\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\r\n} else {\r\nvar _STAR_current_level_STAR__orig_val__20831_22826 \x3d cljs.pprint._STAR_current_level_STAR_;\r\nvar _STAR_current_length_STAR__orig_val__20832_22827 \x3d cljs.pprint._STAR_current_length_STAR_;\r\nvar _STAR_current_level_STAR__temp_val__20833_22828 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\r\nvar _STAR_current_length_STAR__temp_val__20834_22829 \x3d (0);\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__20833_22828);\r\n\r\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__20834_22829);\r\n\r\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,start,null,end);\r\n\r\n(function (){var format_in__16840__auto__ \x3d \x22~w~:i\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn (function() { \r\nvar G__22830__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22830 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22831__i \x3d 0, G__22831__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22831__i \x3c G__22831__a.length) {G__22831__a[G__22831__i] \x3d arguments[G__22831__i + 0]; ++G__22831__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22831__a,0,null);\r\n} \r\nreturn G__22830__delegate.call(this,args__16842__auto__);};\r\nG__22830.cljs$lang$maxFixedArity \x3d 0;\r\nG__22830.cljs$lang$applyTo \x3d (function (arglist__22832){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22832);\r\nreturn G__22830__delegate(args__16842__auto__);\r\n});\r\nG__22830.cljs$core$IFn$_invoke$arity$variadic \x3d G__22830__delegate;\r\nreturn G__22830;\r\n})()\r\n;\r\n})()(keyw);\r\n\r\nvar args_22833__$1 \x3d args;\r\nwhile(true){\r\nif(cljs.core.seq(args_22833__$1)){\r\n(function (){var format_in__16840__auto__ \x3d \x22 \x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn ((function (args_22833__$1,format_in__16840__auto__,cf__16841__auto__,_STAR_current_level_STAR__orig_val__20831_22826,_STAR_current_length_STAR__orig_val__20832_22827,_STAR_current_level_STAR__temp_val__20833_22828,_STAR_current_length_STAR__temp_val__20834_22829,vec__20821,start,end,vec__20824,seq__20825,first__20826,seq__20825__$1,keyw,args){\r\nreturn (function() { \r\nvar G__22835__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22835 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22836__i \x3d 0, G__22836__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22836__i \x3c G__22836__a.length) {G__22836__a[G__22836__i] \x3d arguments[G__22836__i + 0]; ++G__22836__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22836__a,0,null);\r\n} \r\nreturn G__22835__delegate.call(this,args__16842__auto__);};\r\nG__22835.cljs$lang$maxFixedArity \x3d 0;\r\nG__22835.cljs$lang$applyTo \x3d (function (arglist__22837){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22837);\r\nreturn G__22835__delegate(args__16842__auto__);\r\n});\r\nG__22835.cljs$core$IFn$_invoke$arity$variadic \x3d G__22835__delegate;\r\nreturn G__22835;\r\n})()\r\n;\r\n;})(args_22833__$1,format_in__16840__auto__,cf__16841__auto__,_STAR_current_level_STAR__orig_val__20831_22826,_STAR_current_length_STAR__orig_val__20832_22827,_STAR_current_level_STAR__temp_val__20833_22828,_STAR_current_length_STAR__temp_val__20834_22829,vec__20821,start,end,vec__20824,seq__20825,first__20826,seq__20825__$1,keyw,args))\r\n})()();\r\n\r\nvar arg_22838 \x3d cljs.core.first(args_22833__$1);\r\nif(cljs.core.sequential_QMARK_(arg_22838)){\r\nvar vec__20843_22839 \x3d cljs.pprint.brackets(arg_22838);\r\nvar start_22840__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20843_22839,(0),null);\r\nvar end_22841__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20843_22839,(1),null);\r\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\r\n} else {\r\nvar _STAR_current_level_STAR__orig_val__20847_22842 \x3d cljs.pprint._STAR_current_level_STAR_;\r\nvar _STAR_current_length_STAR__orig_val__20848_22843 \x3d cljs.pprint._STAR_current_length_STAR_;\r\nvar _STAR_current_level_STAR__temp_val__20849_22844 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\r\nvar _STAR_current_length_STAR__temp_val__20850_22845 \x3d (0);\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__20849_22844);\r\n\r\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__20850_22845);\r\n\r\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,start_22840__$1,null,end_22841__$1);\r\n\r\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(arg_22838),(3))) \x26\x26 ((cljs.core.second(arg_22838) instanceof cljs.core.Keyword)))){\r\nvar vec__20851_22846 \x3d arg_22838;\r\nvar ns_22847 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20851_22846,(0),null);\r\nvar kw_22848 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20851_22846,(1),null);\r\nvar lis_22849 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20851_22846,(2),null);\r\n(function (){var format_in__16840__auto__ \x3d \x22~w ~w \x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn ((function (args_22833__$1,format_in__16840__auto__,cf__16841__auto__,vec__20851_22846,ns_22847,kw_22848,lis_22849,_STAR_current_level_STAR__orig_val__20847_22842,_STAR_current_length_STAR__orig_val__20848_22843,_STAR_current_level_STAR__temp_val__20849_22844,_STAR_current_length_STAR__temp_val__20850_22845,vec__20843_22839,start_22840__$1,end_22841__$1,arg_22838,_STAR_current_level_STAR__orig_val__20831_22826,_STAR_current_length_STAR__orig_val__20832_22827,_STAR_current_level_STAR__temp_val__20833_22828,_STAR_current_length_STAR__temp_val__20834_22829,vec__20821,start,end,vec__20824,seq__20825,first__20826,seq__20825__$1,keyw,args){\r\nreturn (function() { \r\nvar G__22850__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22850 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22851__i \x3d 0, G__22851__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22851__i \x3c G__22851__a.length) {G__22851__a[G__22851__i] \x3d arguments[G__22851__i + 0]; ++G__22851__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22851__a,0,null);\r\n} \r\nreturn G__22850__delegate.call(this,args__16842__auto__);};\r\nG__22850.cljs$lang$maxFixedArity \x3d 0;\r\nG__22850.cljs$lang$applyTo \x3d (function (arglist__22852){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22852);\r\nreturn G__22850__delegate(args__16842__auto__);\r\n});\r\nG__22850.cljs$core$IFn$_invoke$arity$variadic \x3d G__22850__delegate;\r\nreturn G__22850;\r\n})()\r\n;\r\n;})(args_22833__$1,format_in__16840__auto__,cf__16841__auto__,vec__20851_22846,ns_22847,kw_22848,lis_22849,_STAR_current_level_STAR__orig_val__20847_22842,_STAR_current_length_STAR__orig_val__20848_22843,_STAR_current_level_STAR__temp_val__20849_22844,_STAR_current_length_STAR__temp_val__20850_22845,vec__20843_22839,start_22840__$1,end_22841__$1,arg_22838,_STAR_current_level_STAR__orig_val__20831_22826,_STAR_current_length_STAR__orig_val__20832_22827,_STAR_current_level_STAR__temp_val__20833_22828,_STAR_current_length_STAR__temp_val__20834_22829,vec__20821,start,end,vec__20824,seq__20825,first__20826,seq__20825__$1,keyw,args))\r\n})()(ns_22847,kw_22848);\r\n\r\nif(cljs.core.sequential_QMARK_(lis_22849)){\r\n(function (){var format_in__16840__auto__ \x3d ((cljs.core.vector_QMARK_(lis_22849))?\x22~\x3c[~;~@{~w~^ ~:_~}~;]~:\x3e\x22:\x22~\x3c(~;~@{~w~^ ~:_~}~;)~:\x3e\x22);\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn ((function (args_22833__$1,format_in__16840__auto__,cf__16841__auto__,vec__20851_22846,ns_22847,kw_22848,lis_22849,_STAR_current_level_STAR__orig_val__20847_22842,_STAR_current_length_STAR__orig_val__20848_22843,_STAR_current_level_STAR__temp_val__20849_22844,_STAR_current_length_STAR__temp_val__20850_22845,vec__20843_22839,start_22840__$1,end_22841__$1,arg_22838,_STAR_current_level_STAR__orig_val__20831_22826,_STAR_current_length_STAR__orig_val__20832_22827,_STAR_current_level_STAR__temp_val__20833_22828,_STAR_current_length_STAR__temp_val__20834_22829,vec__20821,start,end,vec__20824,seq__20825,first__20826,seq__20825__$1,keyw,args){\r\nreturn (function() { \r\nvar G__22854__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22854 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22855__i \x3d 0, G__22855__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22855__i \x3c G__22855__a.length) {G__22855__a[G__22855__i] \x3d arguments[G__22855__i + 0]; ++G__22855__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22855__a,0,null);\r\n} \r\nreturn G__22854__delegate.call(this,args__16842__auto__);};\r\nG__22854.cljs$lang$maxFixedArity \x3d 0;\r\nG__22854.cljs$lang$applyTo \x3d (function (arglist__22856){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22856);\r\nreturn G__22854__delegate(args__16842__auto__);\r\n});\r\nG__22854.cljs$core$IFn$_invoke$arity$variadic \x3d G__22854__delegate;\r\nreturn G__22854;\r\n})()\r\n;\r\n;})(args_22833__$1,format_in__16840__auto__,cf__16841__auto__,vec__20851_22846,ns_22847,kw_22848,lis_22849,_STAR_current_level_STAR__orig_val__20847_22842,_STAR_current_length_STAR__orig_val__20848_22843,_STAR_current_level_STAR__temp_val__20849_22844,_STAR_current_length_STAR__temp_val__20850_22845,vec__20843_22839,start_22840__$1,end_22841__$1,arg_22838,_STAR_current_level_STAR__orig_val__20831_22826,_STAR_current_length_STAR__orig_val__20832_22827,_STAR_current_level_STAR__temp_val__20833_22828,_STAR_current_length_STAR__temp_val__20834_22829,vec__20821,start,end,vec__20824,seq__20825,first__20826,seq__20825__$1,keyw,args))\r\n})()(lis_22849);\r\n} else {\r\ncljs.pprint.write_out(lis_22849);\r\n}\r\n} else {\r\ncljs.core.apply.cljs$core$IFn$_invoke$arity$2((function (){var format_in__16840__auto__ \x3d \x22~w ~:i~@{~w~^ ~:_~}\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn ((function (args_22833__$1,format_in__16840__auto__,cf__16841__auto__,_STAR_current_level_STAR__orig_val__20847_22842,_STAR_current_length_STAR__orig_val__20848_22843,_STAR_current_level_STAR__temp_val__20849_22844,_STAR_current_length_STAR__temp_val__20850_22845,vec__20843_22839,start_22840__$1,end_22841__$1,arg_22838,_STAR_current_level_STAR__orig_val__20831_22826,_STAR_current_length_STAR__orig_val__20832_22827,_STAR_current_level_STAR__temp_val__20833_22828,_STAR_current_length_STAR__temp_val__20834_22829,vec__20821,start,end,vec__20824,seq__20825,first__20826,seq__20825__$1,keyw,args){\r\nreturn (function() { \r\nvar G__22857__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22857 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22858__i \x3d 0, G__22858__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22858__i \x3c G__22858__a.length) {G__22858__a[G__22858__i] \x3d arguments[G__22858__i + 0]; ++G__22858__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22858__a,0,null);\r\n} \r\nreturn G__22857__delegate.call(this,args__16842__auto__);};\r\nG__22857.cljs$lang$maxFixedArity \x3d 0;\r\nG__22857.cljs$lang$applyTo \x3d (function (arglist__22859){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22859);\r\nreturn G__22857__delegate(args__16842__auto__);\r\n});\r\nG__22857.cljs$core$IFn$_invoke$arity$variadic \x3d G__22857__delegate;\r\nreturn G__22857;\r\n})()\r\n;\r\n;})(args_22833__$1,format_in__16840__auto__,cf__16841__auto__,_STAR_current_level_STAR__orig_val__20847_22842,_STAR_current_length_STAR__orig_val__20848_22843,_STAR_current_level_STAR__temp_val__20849_22844,_STAR_current_length_STAR__temp_val__20850_22845,vec__20843_22839,start_22840__$1,end_22841__$1,arg_22838,_STAR_current_level_STAR__orig_val__20831_22826,_STAR_current_length_STAR__orig_val__20832_22827,_STAR_current_level_STAR__temp_val__20833_22828,_STAR_current_length_STAR__temp_val__20834_22829,vec__20821,start,end,vec__20824,seq__20825,first__20826,seq__20825__$1,keyw,args))\r\n})(),arg_22838);\r\n}\r\n\r\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\r\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__20848_22843);\r\n\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__20847_22842);\r\n}}\r\n\r\n\r\nif(cljs.core.next(args_22833__$1)){\r\n(function (){var format_in__16840__auto__ \x3d \x22~_\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn ((function (args_22833__$1,format_in__16840__auto__,cf__16841__auto__,vec__20843_22839,start_22840__$1,end_22841__$1,arg_22838,_STAR_current_level_STAR__orig_val__20831_22826,_STAR_current_length_STAR__orig_val__20832_22827,_STAR_current_level_STAR__temp_val__20833_22828,_STAR_current_length_STAR__temp_val__20834_22829,vec__20821,start,end,vec__20824,seq__20825,first__20826,seq__20825__$1,keyw,args){\r\nreturn (function() { \r\nvar G__22860__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22860 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22861__i \x3d 0, G__22861__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22861__i \x3c G__22861__a.length) {G__22861__a[G__22861__i] \x3d arguments[G__22861__i + 0]; ++G__22861__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22861__a,0,null);\r\n} \r\nreturn G__22860__delegate.call(this,args__16842__auto__);};\r\nG__22860.cljs$lang$maxFixedArity \x3d 0;\r\nG__22860.cljs$lang$applyTo \x3d (function (arglist__22862){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22862);\r\nreturn G__22860__delegate(args__16842__auto__);\r\n});\r\nG__22860.cljs$core$IFn$_invoke$arity$variadic \x3d G__22860__delegate;\r\nreturn G__22860;\r\n})()\r\n;\r\n;})(args_22833__$1,format_in__16840__auto__,cf__16841__auto__,vec__20843_22839,start_22840__$1,end_22841__$1,arg_22838,_STAR_current_level_STAR__orig_val__20831_22826,_STAR_current_length_STAR__orig_val__20832_22827,_STAR_current_level_STAR__temp_val__20833_22828,_STAR_current_length_STAR__temp_val__20834_22829,vec__20821,start,end,vec__20824,seq__20825,first__20826,seq__20825__$1,keyw,args))\r\n})()();\r\n} else {\r\n}\r\n} else {\r\ncljs.pprint.write_out(arg_22838);\r\n\r\nif(cljs.core.next(args_22833__$1)){\r\n(function (){var format_in__16840__auto__ \x3d \x22~:_\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn ((function (args_22833__$1,format_in__16840__auto__,cf__16841__auto__,arg_22838,_STAR_current_level_STAR__orig_val__20831_22826,_STAR_current_length_STAR__orig_val__20832_22827,_STAR_current_level_STAR__temp_val__20833_22828,_STAR_current_length_STAR__temp_val__20834_22829,vec__20821,start,end,vec__20824,seq__20825,first__20826,seq__20825__$1,keyw,args){\r\nreturn (function() { \r\nvar G__22863__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22863 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22864__i \x3d 0, G__22864__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22864__i \x3c G__22864__a.length) {G__22864__a[G__22864__i] \x3d arguments[G__22864__i + 0]; ++G__22864__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22864__a,0,null);\r\n} \r\nreturn G__22863__delegate.call(this,args__16842__auto__);};\r\nG__22863.cljs$lang$maxFixedArity \x3d 0;\r\nG__22863.cljs$lang$applyTo \x3d (function (arglist__22865){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22865);\r\nreturn G__22863__delegate(args__16842__auto__);\r\n});\r\nG__22863.cljs$core$IFn$_invoke$arity$variadic \x3d G__22863__delegate;\r\nreturn G__22863;\r\n})()\r\n;\r\n;})(args_22833__$1,format_in__16840__auto__,cf__16841__auto__,arg_22838,_STAR_current_level_STAR__orig_val__20831_22826,_STAR_current_length_STAR__orig_val__20832_22827,_STAR_current_level_STAR__temp_val__20833_22828,_STAR_current_length_STAR__temp_val__20834_22829,vec__20821,start,end,vec__20824,seq__20825,first__20826,seq__20825__$1,keyw,args))\r\n})()();\r\n} else {\r\n}\r\n}\r\n\r\nvar G__22866 \x3d cljs.core.next(args_22833__$1);\r\nargs_22833__$1 \x3d G__22866;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\r\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__20832_22827);\r\n\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__20831_22826);\r\n}}\r\n\r\nreturn null;\r\n} else {\r\nreturn cljs.pprint.write_out(reference);\r\n}\r\n});\r\n/**\r\n * The pretty print dispatch chunk for the ns macro\r\n */\r\ncljs.pprint.pprint_ns \x3d (function cljs$pprint$pprint_ns(alis){\r\nif(cljs.core.next(alis)){\r\nvar vec__20858 \x3d alis;\r\nvar seq__20859 \x3d cljs.core.seq(vec__20858);\r\nvar first__20860 \x3d cljs.core.first(seq__20859);\r\nvar seq__20859__$1 \x3d cljs.core.next(seq__20859);\r\nvar ns_sym \x3d first__20860;\r\nvar first__20860__$1 \x3d cljs.core.first(seq__20859__$1);\r\nvar seq__20859__$2 \x3d cljs.core.next(seq__20859__$1);\r\nvar ns_name \x3d first__20860__$1;\r\nvar stuff \x3d seq__20859__$2;\r\nvar vec__20861 \x3d ((typeof cljs.core.first(stuff) \x3d\x3d\x3d \x27string\x27)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(stuff),cljs.core.next(stuff)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,stuff], null));\r\nvar doc_str \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20861,(0),null);\r\nvar stuff__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20861,(1),null);\r\nvar vec__20864 \x3d ((cljs.core.map_QMARK_(cljs.core.first(stuff__$1)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(stuff__$1),cljs.core.next(stuff__$1)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,stuff__$1], null));\r\nvar attr_map \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20864,(0),null);\r\nvar references \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20864,(1),null);\r\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\r\n} else {\r\nvar _STAR_current_level_STAR__orig_val__20867_22868 \x3d cljs.pprint._STAR_current_level_STAR_;\r\nvar _STAR_current_length_STAR__orig_val__20868_22869 \x3d cljs.pprint._STAR_current_length_STAR_;\r\nvar _STAR_current_level_STAR__temp_val__20869_22870 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\r\nvar _STAR_current_length_STAR__temp_val__20870_22871 \x3d (0);\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__20869_22870);\r\n\r\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__20870_22871);\r\n\r\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,\x22(\x22,null,\x22)\x22);\r\n\r\n(function (){var format_in__16840__auto__ \x3d \x22~w ~1I~@_~w\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn (function() { \r\nvar G__22872__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22872 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22873__i \x3d 0, G__22873__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22873__i \x3c G__22873__a.length) {G__22873__a[G__22873__i] \x3d arguments[G__22873__i + 0]; ++G__22873__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22873__a,0,null);\r\n} \r\nreturn G__22872__delegate.call(this,args__16842__auto__);};\r\nG__22872.cljs$lang$maxFixedArity \x3d 0;\r\nG__22872.cljs$lang$applyTo \x3d (function (arglist__22874){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22874);\r\nreturn G__22872__delegate(args__16842__auto__);\r\n});\r\nG__22872.cljs$core$IFn$_invoke$arity$variadic \x3d G__22872__delegate;\r\nreturn G__22872;\r\n})()\r\n;\r\n})()(ns_sym,ns_name);\r\n\r\nif(cljs.core.truth_((function (){var or__4253__auto__ \x3d doc_str;\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar or__4253__auto____$1 \x3d attr_map;\r\nif(cljs.core.truth_(or__4253__auto____$1)){\r\nreturn or__4253__auto____$1;\r\n} else {\r\nreturn cljs.core.seq(references);\r\n}\r\n}\r\n})())){\r\n(function (){var format_in__16840__auto__ \x3d \x22~@:_\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn (function() { \r\nvar G__22875__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22875 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22876__i \x3d 0, G__22876__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22876__i \x3c G__22876__a.length) {G__22876__a[G__22876__i] \x3d arguments[G__22876__i + 0]; ++G__22876__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22876__a,0,null);\r\n} \r\nreturn G__22875__delegate.call(this,args__16842__auto__);};\r\nG__22875.cljs$lang$maxFixedArity \x3d 0;\r\nG__22875.cljs$lang$applyTo \x3d (function (arglist__22877){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22877);\r\nreturn G__22875__delegate(args__16842__auto__);\r\n});\r\nG__22875.cljs$core$IFn$_invoke$arity$variadic \x3d G__22875__delegate;\r\nreturn G__22875;\r\n})()\r\n;\r\n})()();\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_(doc_str)){\r\ncljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(true,\x22\\\x22~a\\\x22~:[~;~:@_~]\x22,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([doc_str,(function (){var or__4253__auto__ \x3d attr_map;\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.core.seq(references);\r\n}\r\n})()], 0));\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_(attr_map)){\r\n(function (){var format_in__16840__auto__ \x3d \x22~w~:[~;~:@_~]\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn (function() { \r\nvar G__22878__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22878 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22879__i \x3d 0, G__22879__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22879__i \x3c G__22879__a.length) {G__22879__a[G__22879__i] \x3d arguments[G__22879__i + 0]; ++G__22879__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22879__a,0,null);\r\n} \r\nreturn G__22878__delegate.call(this,args__16842__auto__);};\r\nG__22878.cljs$lang$maxFixedArity \x3d 0;\r\nG__22878.cljs$lang$applyTo \x3d (function (arglist__22880){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22880);\r\nreturn G__22878__delegate(args__16842__auto__);\r\n});\r\nG__22878.cljs$core$IFn$_invoke$arity$variadic \x3d G__22878__delegate;\r\nreturn G__22878;\r\n})()\r\n;\r\n})()(attr_map,cljs.core.seq(references));\r\n} else {\r\n}\r\n\r\nvar references_22881__$1 \x3d references;\r\nwhile(true){\r\ncljs.pprint.pprint_ns_reference(cljs.core.first(references_22881__$1));\r\n\r\nvar temp__5753__auto___22882 \x3d cljs.core.next(references_22881__$1);\r\nif(temp__5753__auto___22882){\r\nvar references_22883__$2 \x3d temp__5753__auto___22882;\r\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697));\r\n\r\nvar G__22884 \x3d references_22883__$2;\r\nreferences_22881__$1 \x3d G__22884;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\r\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__20868_22869);\r\n\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__20867_22868);\r\n}}\r\n\r\nreturn null;\r\n} else {\r\nreturn cljs.pprint.write_out(alis);\r\n}\r\n});\r\ncljs.pprint.pprint_hold_first \x3d (function (){var format_in__16840__auto__ \x3d \x22~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn (function() { \r\nvar G__22887__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22887 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22888__i \x3d 0, G__22888__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22888__i \x3c G__22888__a.length) {G__22888__a[G__22888__i] \x3d arguments[G__22888__i + 0]; ++G__22888__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22888__a,0,null);\r\n} \r\nreturn G__22887__delegate.call(this,args__16842__auto__);};\r\nG__22887.cljs$lang$maxFixedArity \x3d 0;\r\nG__22887.cljs$lang$applyTo \x3d (function (arglist__22889){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22889);\r\nreturn G__22887__delegate(args__16842__auto__);\r\n});\r\nG__22887.cljs$core$IFn$_invoke$arity$variadic \x3d G__22887__delegate;\r\nreturn G__22887;\r\n})()\r\n;\r\n})();\r\ncljs.pprint.single_defn \x3d (function cljs$pprint$single_defn(alis,has_doc_str_QMARK_){\r\nif(cljs.core.seq(alis)){\r\nif(cljs.core.truth_(has_doc_str_QMARK_)){\r\n(function (){var format_in__16840__auto__ \x3d \x22 ~_\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn (function() { \r\nvar G__22890__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22890 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22891__i \x3d 0, G__22891__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22891__i \x3c G__22891__a.length) {G__22891__a[G__22891__i] \x3d arguments[G__22891__i + 0]; ++G__22891__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22891__a,0,null);\r\n} \r\nreturn G__22890__delegate.call(this,args__16842__auto__);};\r\nG__22890.cljs$lang$maxFixedArity \x3d 0;\r\nG__22890.cljs$lang$applyTo \x3d (function (arglist__22892){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22892);\r\nreturn G__22890__delegate(args__16842__auto__);\r\n});\r\nG__22890.cljs$core$IFn$_invoke$arity$variadic \x3d G__22890__delegate;\r\nreturn G__22890;\r\n})()\r\n;\r\n})()();\r\n} else {\r\n(function (){var format_in__16840__auto__ \x3d \x22 ~@_\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn (function() { \r\nvar G__22893__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22893 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22894__i \x3d 0, G__22894__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22894__i \x3c G__22894__a.length) {G__22894__a[G__22894__i] \x3d arguments[G__22894__i + 0]; ++G__22894__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22894__a,0,null);\r\n} \r\nreturn G__22893__delegate.call(this,args__16842__auto__);};\r\nG__22893.cljs$lang$maxFixedArity \x3d 0;\r\nG__22893.cljs$lang$applyTo \x3d (function (arglist__22895){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22895);\r\nreturn G__22893__delegate(args__16842__auto__);\r\n});\r\nG__22893.cljs$core$IFn$_invoke$arity$variadic \x3d G__22893__delegate;\r\nreturn G__22893;\r\n})()\r\n;\r\n})()();\r\n}\r\n\r\nreturn (function (){var format_in__16840__auto__ \x3d \x22~{~w~^ ~_~}\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn (function() { \r\nvar G__22896__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22896 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22897__i \x3d 0, G__22897__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22897__i \x3c G__22897__a.length) {G__22897__a[G__22897__i] \x3d arguments[G__22897__i + 0]; ++G__22897__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22897__a,0,null);\r\n} \r\nreturn G__22896__delegate.call(this,args__16842__auto__);};\r\nG__22896.cljs$lang$maxFixedArity \x3d 0;\r\nG__22896.cljs$lang$applyTo \x3d (function (arglist__22898){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22898);\r\nreturn G__22896__delegate(args__16842__auto__);\r\n});\r\nG__22896.cljs$core$IFn$_invoke$arity$variadic \x3d G__22896__delegate;\r\nreturn G__22896;\r\n})()\r\n;\r\n})()(alis);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ncljs.pprint.multi_defn \x3d (function cljs$pprint$multi_defn(alis,has_doc_str_QMARK_){\r\nif(cljs.core.seq(alis)){\r\nreturn (function (){var format_in__16840__auto__ \x3d \x22 ~_~{~w~^ ~_~}\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn (function() { \r\nvar G__22899__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22899 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22900__i \x3d 0, G__22900__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22900__i \x3c G__22900__a.length) {G__22900__a[G__22900__i] \x3d arguments[G__22900__i + 0]; ++G__22900__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22900__a,0,null);\r\n} \r\nreturn G__22899__delegate.call(this,args__16842__auto__);};\r\nG__22899.cljs$lang$maxFixedArity \x3d 0;\r\nG__22899.cljs$lang$applyTo \x3d (function (arglist__22901){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22901);\r\nreturn G__22899__delegate(args__16842__auto__);\r\n});\r\nG__22899.cljs$core$IFn$_invoke$arity$variadic \x3d G__22899__delegate;\r\nreturn G__22899;\r\n})()\r\n;\r\n})()(alis);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ncljs.pprint.pprint_defn \x3d (function cljs$pprint$pprint_defn(alis){\r\nif(cljs.core.next(alis)){\r\nvar vec__20894 \x3d alis;\r\nvar seq__20895 \x3d cljs.core.seq(vec__20894);\r\nvar first__20896 \x3d cljs.core.first(seq__20895);\r\nvar seq__20895__$1 \x3d cljs.core.next(seq__20895);\r\nvar defn_sym \x3d first__20896;\r\nvar first__20896__$1 \x3d cljs.core.first(seq__20895__$1);\r\nvar seq__20895__$2 \x3d cljs.core.next(seq__20895__$1);\r\nvar defn_name \x3d first__20896__$1;\r\nvar stuff \x3d seq__20895__$2;\r\nvar vec__20897 \x3d ((typeof cljs.core.first(stuff) \x3d\x3d\x3d \x27string\x27)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(stuff),cljs.core.next(stuff)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,stuff], null));\r\nvar doc_str \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20897,(0),null);\r\nvar stuff__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20897,(1),null);\r\nvar vec__20900 \x3d ((cljs.core.map_QMARK_(cljs.core.first(stuff__$1)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(stuff__$1),cljs.core.next(stuff__$1)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,stuff__$1], null));\r\nvar attr_map \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20900,(0),null);\r\nvar stuff__$2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20900,(1),null);\r\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\r\n} else {\r\nvar _STAR_current_level_STAR__orig_val__20929_22905 \x3d cljs.pprint._STAR_current_level_STAR_;\r\nvar _STAR_current_length_STAR__orig_val__20930_22906 \x3d cljs.pprint._STAR_current_length_STAR_;\r\nvar _STAR_current_level_STAR__temp_val__20931_22907 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\r\nvar _STAR_current_length_STAR__temp_val__20932_22908 \x3d (0);\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__20931_22907);\r\n\r\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__20932_22908);\r\n\r\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,\x22(\x22,null,\x22)\x22);\r\n\r\n(function (){var format_in__16840__auto__ \x3d \x22~w ~1I~@_~w\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn (function() { \r\nvar G__22909__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22909 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22910__i \x3d 0, G__22910__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22910__i \x3c G__22910__a.length) {G__22910__a[G__22910__i] \x3d arguments[G__22910__i + 0]; ++G__22910__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22910__a,0,null);\r\n} \r\nreturn G__22909__delegate.call(this,args__16842__auto__);};\r\nG__22909.cljs$lang$maxFixedArity \x3d 0;\r\nG__22909.cljs$lang$applyTo \x3d (function (arglist__22911){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22911);\r\nreturn G__22909__delegate(args__16842__auto__);\r\n});\r\nG__22909.cljs$core$IFn$_invoke$arity$variadic \x3d G__22909__delegate;\r\nreturn G__22909;\r\n})()\r\n;\r\n})()(defn_sym,defn_name);\r\n\r\nif(cljs.core.truth_(doc_str)){\r\n(function (){var format_in__16840__auto__ \x3d \x22 ~_~w\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn (function() { \r\nvar G__22913__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22913 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22914__i \x3d 0, G__22914__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22914__i \x3c G__22914__a.length) {G__22914__a[G__22914__i] \x3d arguments[G__22914__i + 0]; ++G__22914__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22914__a,0,null);\r\n} \r\nreturn G__22913__delegate.call(this,args__16842__auto__);};\r\nG__22913.cljs$lang$maxFixedArity \x3d 0;\r\nG__22913.cljs$lang$applyTo \x3d (function (arglist__22915){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22915);\r\nreturn G__22913__delegate(args__16842__auto__);\r\n});\r\nG__22913.cljs$core$IFn$_invoke$arity$variadic \x3d G__22913__delegate;\r\nreturn G__22913;\r\n})()\r\n;\r\n})()(doc_str);\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_(attr_map)){\r\n(function (){var format_in__16840__auto__ \x3d \x22 ~_~w\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn (function() { \r\nvar G__22916__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22916 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22917__i \x3d 0, G__22917__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22917__i \x3c G__22917__a.length) {G__22917__a[G__22917__i] \x3d arguments[G__22917__i + 0]; ++G__22917__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22917__a,0,null);\r\n} \r\nreturn G__22916__delegate.call(this,args__16842__auto__);};\r\nG__22916.cljs$lang$maxFixedArity \x3d 0;\r\nG__22916.cljs$lang$applyTo \x3d (function (arglist__22919){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22919);\r\nreturn G__22916__delegate(args__16842__auto__);\r\n});\r\nG__22916.cljs$core$IFn$_invoke$arity$variadic \x3d G__22916__delegate;\r\nreturn G__22916;\r\n})()\r\n;\r\n})()(attr_map);\r\n} else {\r\n}\r\n\r\nif(cljs.core.vector_QMARK_(cljs.core.first(stuff__$2))){\r\ncljs.pprint.single_defn(stuff__$2,(function (){var or__4253__auto__ \x3d doc_str;\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn attr_map;\r\n}\r\n})());\r\n} else {\r\ncljs.pprint.multi_defn(stuff__$2,(function (){var or__4253__auto__ \x3d doc_str;\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn attr_map;\r\n}\r\n})());\r\n\r\n}\r\n\r\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\r\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__20930_22906);\r\n\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__20929_22905);\r\n}}\r\n\r\nreturn null;\r\n} else {\r\nreturn cljs.pprint.pprint_simple_code_list(alis);\r\n}\r\n});\r\ncljs.pprint.pprint_binding_form \x3d (function cljs$pprint$pprint_binding_form(binding_vec){\r\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\r\n} else {\r\nvar _STAR_current_level_STAR__orig_val__21042_22921 \x3d cljs.pprint._STAR_current_level_STAR_;\r\nvar _STAR_current_length_STAR__orig_val__21043_22922 \x3d cljs.pprint._STAR_current_length_STAR_;\r\nvar _STAR_current_level_STAR__temp_val__21045_22923 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\r\nvar _STAR_current_length_STAR__temp_val__21047_22924 \x3d (0);\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__21045_22923);\r\n\r\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__21047_22924);\r\n\r\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,\x22[\x22,null,\x22]\x22);\r\n\r\nvar length_count21057_22926 \x3d (0);\r\nvar binding_22927 \x3d binding_vec;\r\nwhile(true){\r\nif(((cljs.core.not(cljs.core._STAR_print_length_STAR_)) || ((length_count21057_22926 \x3c cljs.core._STAR_print_length_STAR_)))){\r\nif(cljs.core.seq(binding_22927)){\r\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\r\n} else {\r\nvar _STAR_current_level_STAR__orig_val__21058_22928 \x3d cljs.pprint._STAR_current_level_STAR_;\r\nvar _STAR_current_length_STAR__orig_val__21059_22929 \x3d cljs.pprint._STAR_current_length_STAR_;\r\nvar _STAR_current_level_STAR__temp_val__21060_22930 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\r\nvar _STAR_current_length_STAR__temp_val__21061_22931 \x3d (0);\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__21060_22930);\r\n\r\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__21061_22931);\r\n\r\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,null,null,null);\r\n\r\n\r\ncljs.pprint.write_out(cljs.core.first(binding_22927));\r\n\r\nif(cljs.core.next(binding_22927)){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22 \x22);\r\n\r\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22miser\x22,\x22miser\x22,-556060186));\r\n\r\ncljs.pprint.write_out(cljs.core.second(binding_22927));\r\n} else {\r\n}\r\n\r\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\r\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__21059_22929);\r\n\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__21058_22928);\r\n}}\r\n\r\n\r\nif(cljs.core.next(cljs.core.rest(binding_22927))){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22 \x22);\r\n\r\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697));\r\n\r\nvar G__22932 \x3d (length_count21057_22926 + (1));\r\nvar G__22933 \x3d cljs.core.next(cljs.core.rest(binding_22927));\r\nlength_count21057_22926 \x3d G__22932;\r\nbinding_22927 \x3d G__22933;\r\ncontinue;\r\n} else {\r\n}\r\n} else {\r\n}\r\n} else {\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22...\x22);\r\n}\r\nbreak;\r\n}\r\n\r\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\r\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__21043_22922);\r\n\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__21042_22921);\r\n}}\r\n\r\nreturn null;\r\n});\r\ncljs.pprint.pprint_let \x3d (function cljs$pprint$pprint_let(alis){\r\nvar base_sym \x3d cljs.core.first(alis);\r\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\r\n} else {\r\nvar _STAR_current_level_STAR__orig_val__21084_22934 \x3d cljs.pprint._STAR_current_level_STAR_;\r\nvar _STAR_current_length_STAR__orig_val__21085_22935 \x3d cljs.pprint._STAR_current_length_STAR_;\r\nvar _STAR_current_level_STAR__temp_val__21086_22936 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\r\nvar _STAR_current_length_STAR__temp_val__21087_22937 \x3d (0);\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__21086_22936);\r\n\r\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__21087_22937);\r\n\r\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,\x22(\x22,null,\x22)\x22);\r\n\r\nif(((cljs.core.next(alis)) \x26\x26 (cljs.core.vector_QMARK_(cljs.core.second(alis))))){\r\n(function (){var format_in__16840__auto__ \x3d \x22~w ~1I~@_\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn (function() { \r\nvar G__22941__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22941 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22942__i \x3d 0, G__22942__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22942__i \x3c G__22942__a.length) {G__22942__a[G__22942__i] \x3d arguments[G__22942__i + 0]; ++G__22942__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22942__a,0,null);\r\n} \r\nreturn G__22941__delegate.call(this,args__16842__auto__);};\r\nG__22941.cljs$lang$maxFixedArity \x3d 0;\r\nG__22941.cljs$lang$applyTo \x3d (function (arglist__22943){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22943);\r\nreturn G__22941__delegate(args__16842__auto__);\r\n});\r\nG__22941.cljs$core$IFn$_invoke$arity$variadic \x3d G__22941__delegate;\r\nreturn G__22941;\r\n})()\r\n;\r\n})()(base_sym);\r\n\r\ncljs.pprint.pprint_binding_form(cljs.core.second(alis));\r\n\r\n(function (){var format_in__16840__auto__ \x3d \x22 ~_~{~w~^ ~_~}\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn (function() { \r\nvar G__22945__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22945 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22946__i \x3d 0, G__22946__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22946__i \x3c G__22946__a.length) {G__22946__a[G__22946__i] \x3d arguments[G__22946__i + 0]; ++G__22946__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22946__a,0,null);\r\n} \r\nreturn G__22945__delegate.call(this,args__16842__auto__);};\r\nG__22945.cljs$lang$maxFixedArity \x3d 0;\r\nG__22945.cljs$lang$applyTo \x3d (function (arglist__22947){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22947);\r\nreturn G__22945__delegate(args__16842__auto__);\r\n});\r\nG__22945.cljs$core$IFn$_invoke$arity$variadic \x3d G__22945__delegate;\r\nreturn G__22945;\r\n})()\r\n;\r\n})()(cljs.core.next(cljs.core.rest(alis)));\r\n} else {\r\ncljs.pprint.pprint_simple_code_list(alis);\r\n}\r\n\r\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\r\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__21085_22935);\r\n\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__21084_22934);\r\n}}\r\n\r\nreturn null;\r\n});\r\ncljs.pprint.pprint_if \x3d (function (){var format_in__16840__auto__ \x3d \x22~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn (function() { \r\nvar G__22948__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22948 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22949__i \x3d 0, G__22949__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22949__i \x3c G__22949__a.length) {G__22949__a[G__22949__i] \x3d arguments[G__22949__i + 0]; ++G__22949__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22949__a,0,null);\r\n} \r\nreturn G__22948__delegate.call(this,args__16842__auto__);};\r\nG__22948.cljs$lang$maxFixedArity \x3d 0;\r\nG__22948.cljs$lang$applyTo \x3d (function (arglist__22950){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22950);\r\nreturn G__22948__delegate(args__16842__auto__);\r\n});\r\nG__22948.cljs$core$IFn$_invoke$arity$variadic \x3d G__22948__delegate;\r\nreturn G__22948;\r\n})()\r\n;\r\n})();\r\ncljs.pprint.pprint_cond \x3d (function cljs$pprint$pprint_cond(alis){\r\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\r\n} else {\r\nvar _STAR_current_level_STAR__orig_val__21110_22951 \x3d cljs.pprint._STAR_current_level_STAR_;\r\nvar _STAR_current_length_STAR__orig_val__21111_22952 \x3d cljs.pprint._STAR_current_length_STAR_;\r\nvar _STAR_current_level_STAR__temp_val__21112_22953 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\r\nvar _STAR_current_length_STAR__temp_val__21113_22954 \x3d (0);\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__21112_22953);\r\n\r\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__21113_22954);\r\n\r\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,\x22(\x22,null,\x22)\x22);\r\n\r\ncljs.pprint.pprint_indent(new cljs.core.Keyword(null,\x22block\x22,\x22block\x22,664686210),(1));\r\n\r\ncljs.pprint.write_out(cljs.core.first(alis));\r\n\r\nif(cljs.core.next(alis)){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22 \x22);\r\n\r\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697));\r\n\r\nvar length_count21120_22955 \x3d (0);\r\nvar alis_22956__$1 \x3d cljs.core.next(alis);\r\nwhile(true){\r\nif(((cljs.core.not(cljs.core._STAR_print_length_STAR_)) || ((length_count21120_22955 \x3c cljs.core._STAR_print_length_STAR_)))){\r\nif(alis_22956__$1){\r\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\r\n} else {\r\nvar _STAR_current_level_STAR__orig_val__21121_22957 \x3d cljs.pprint._STAR_current_level_STAR_;\r\nvar _STAR_current_length_STAR__orig_val__21122_22958 \x3d cljs.pprint._STAR_current_length_STAR_;\r\nvar _STAR_current_level_STAR__temp_val__21123_22959 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\r\nvar _STAR_current_length_STAR__temp_val__21124_22960 \x3d (0);\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__21123_22959);\r\n\r\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__21124_22960);\r\n\r\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,null,null,null);\r\n\r\n\r\ncljs.pprint.write_out(cljs.core.first(alis_22956__$1));\r\n\r\nif(cljs.core.next(alis_22956__$1)){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22 \x22);\r\n\r\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22miser\x22,\x22miser\x22,-556060186));\r\n\r\ncljs.pprint.write_out(cljs.core.second(alis_22956__$1));\r\n} else {\r\n}\r\n\r\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\r\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__21122_22958);\r\n\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__21121_22957);\r\n}}\r\n\r\n\r\nif(cljs.core.next(cljs.core.rest(alis_22956__$1))){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22 \x22);\r\n\r\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697));\r\n\r\nvar G__22962 \x3d (length_count21120_22955 + (1));\r\nvar G__22963 \x3d cljs.core.next(cljs.core.rest(alis_22956__$1));\r\nlength_count21120_22955 \x3d G__22962;\r\nalis_22956__$1 \x3d G__22963;\r\ncontinue;\r\n} else {\r\n}\r\n} else {\r\n}\r\n} else {\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22...\x22);\r\n}\r\nbreak;\r\n}\r\n} else {\r\n}\r\n\r\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\r\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__21111_22952);\r\n\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__21110_22951);\r\n}}\r\n\r\nreturn null;\r\n});\r\ncljs.pprint.pprint_condp \x3d (function cljs$pprint$pprint_condp(alis){\r\nif((cljs.core.count(alis) \x3e (3))){\r\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\r\n} else {\r\nvar _STAR_current_level_STAR__orig_val__21142_22964 \x3d cljs.pprint._STAR_current_level_STAR_;\r\nvar _STAR_current_length_STAR__orig_val__21143_22965 \x3d cljs.pprint._STAR_current_length_STAR_;\r\nvar _STAR_current_level_STAR__temp_val__21144_22966 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\r\nvar _STAR_current_length_STAR__temp_val__21145_22967 \x3d (0);\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__21144_22966);\r\n\r\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__21145_22967);\r\n\r\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,\x22(\x22,null,\x22)\x22);\r\n\r\ncljs.pprint.pprint_indent(new cljs.core.Keyword(null,\x22block\x22,\x22block\x22,664686210),(1));\r\n\r\ncljs.core.apply.cljs$core$IFn$_invoke$arity$2((function (){var format_in__16840__auto__ \x3d \x22~w ~@_~w ~@_~w ~_\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn (function() { \r\nvar G__22969__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22969 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22970__i \x3d 0, G__22970__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22970__i \x3c G__22970__a.length) {G__22970__a[G__22970__i] \x3d arguments[G__22970__i + 0]; ++G__22970__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22970__a,0,null);\r\n} \r\nreturn G__22969__delegate.call(this,args__16842__auto__);};\r\nG__22969.cljs$lang$maxFixedArity \x3d 0;\r\nG__22969.cljs$lang$applyTo \x3d (function (arglist__22971){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22971);\r\nreturn G__22969__delegate(args__16842__auto__);\r\n});\r\nG__22969.cljs$core$IFn$_invoke$arity$variadic \x3d G__22969__delegate;\r\nreturn G__22969;\r\n})()\r\n;\r\n})(),alis);\r\n\r\nvar length_count21150_22972 \x3d (0);\r\nvar alis_22973__$1 \x3d cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2((3),alis));\r\nwhile(true){\r\nif(((cljs.core.not(cljs.core._STAR_print_length_STAR_)) || ((length_count21150_22972 \x3c cljs.core._STAR_print_length_STAR_)))){\r\nif(alis_22973__$1){\r\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\r\n} else {\r\nvar _STAR_current_level_STAR__orig_val__21153_22976 \x3d cljs.pprint._STAR_current_level_STAR_;\r\nvar _STAR_current_length_STAR__orig_val__21154_22977 \x3d cljs.pprint._STAR_current_length_STAR_;\r\nvar _STAR_current_level_STAR__temp_val__21155_22978 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\r\nvar _STAR_current_length_STAR__temp_val__21156_22979 \x3d (0);\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__21155_22978);\r\n\r\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__21156_22979);\r\n\r\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,null,null,null);\r\n\r\n\r\ncljs.pprint.write_out(cljs.core.first(alis_22973__$1));\r\n\r\nif(cljs.core.next(alis_22973__$1)){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22 \x22);\r\n\r\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22miser\x22,\x22miser\x22,-556060186));\r\n\r\ncljs.pprint.write_out(cljs.core.second(alis_22973__$1));\r\n} else {\r\n}\r\n\r\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\r\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__21154_22977);\r\n\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__21153_22976);\r\n}}\r\n\r\n\r\nif(cljs.core.next(cljs.core.rest(alis_22973__$1))){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22 \x22);\r\n\r\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697));\r\n\r\nvar G__22981 \x3d (length_count21150_22972 + (1));\r\nvar G__22982 \x3d cljs.core.next(cljs.core.rest(alis_22973__$1));\r\nlength_count21150_22972 \x3d G__22981;\r\nalis_22973__$1 \x3d G__22982;\r\ncontinue;\r\n} else {\r\n}\r\n} else {\r\n}\r\n} else {\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22...\x22);\r\n}\r\nbreak;\r\n}\r\n\r\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\r\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__21143_22965);\r\n\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__21142_22964);\r\n}}\r\n\r\nreturn null;\r\n} else {\r\nreturn cljs.pprint.pprint_simple_code_list(alis);\r\n}\r\n});\r\ncljs.pprint._STAR_symbol_map_STAR_ \x3d cljs.core.PersistentArrayMap.EMPTY;\r\ncljs.pprint.pprint_anon_func \x3d (function cljs$pprint$pprint_anon_func(alis){\r\nvar args \x3d cljs.core.second(alis);\r\nvar nlis \x3d cljs.core.first(cljs.core.rest(cljs.core.rest(alis)));\r\nif(cljs.core.vector_QMARK_(args)){\r\nvar _STAR_symbol_map_STAR__orig_val__21177 \x3d cljs.pprint._STAR_symbol_map_STAR_;\r\nvar _STAR_symbol_map_STAR__temp_val__21178 \x3d ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(args)))?cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.first(args),\x22%\x22]):cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (p1__21166_SHARP_,p2__21167_SHARP_){\r\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__21166_SHARP_,[\x22%\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__21167_SHARP_)].join(\x27\x27)],null));\r\n}),args,cljs.core.range.cljs$core$IFn$_invoke$arity$2((1),(cljs.core.count(args) + (1))))));\r\n(cljs.pprint._STAR_symbol_map_STAR_ \x3d _STAR_symbol_map_STAR__temp_val__21178);\r\n\r\ntry{return (function (){var format_in__16840__auto__ \x3d \x22~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e\x22;\r\nvar cf__16841__auto__ \x3d ((typeof format_in__16840__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__16840__auto__):format_in__16840__auto__);\r\nreturn (function() { \r\nvar G__22986__delegate \x3d function (args__16842__auto__){\r\nvar navigator__16843__auto__ \x3d cljs.pprint.init_navigator(args__16842__auto__);\r\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__16841__auto__,navigator__16843__auto__);\r\n};\r\nvar G__22986 \x3d function (var_args){\r\nvar args__16842__auto__ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__22988__i \x3d 0, G__22988__a \x3d new Array(arguments.length -  0);\r\nwhile (G__22988__i \x3c G__22988__a.length) {G__22988__a[G__22988__i] \x3d arguments[G__22988__i + 0]; ++G__22988__i;}\r\n  args__16842__auto__ \x3d new cljs.core.IndexedSeq(G__22988__a,0,null);\r\n} \r\nreturn G__22986__delegate.call(this,args__16842__auto__);};\r\nG__22986.cljs$lang$maxFixedArity \x3d 0;\r\nG__22986.cljs$lang$applyTo \x3d (function (arglist__22989){\r\nvar args__16842__auto__ \x3d cljs.core.seq(arglist__22989);\r\nreturn G__22986__delegate(args__16842__auto__);\r\n});\r\nG__22986.cljs$core$IFn$_invoke$arity$variadic \x3d G__22986__delegate;\r\nreturn G__22986;\r\n})()\r\n;\r\n})()(nlis);\r\n}finally {(cljs.pprint._STAR_symbol_map_STAR_ \x3d _STAR_symbol_map_STAR__orig_val__21177);\r\n}} else {\r\nreturn cljs.pprint.pprint_simple_code_list(alis);\r\n}\r\n});\r\ncljs.pprint.pprint_simple_code_list \x3d (function cljs$pprint$pprint_simple_code_list(alis){\r\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\r\n} else {\r\nvar _STAR_current_level_STAR__orig_val__21190_22991 \x3d cljs.pprint._STAR_current_level_STAR_;\r\nvar _STAR_current_length_STAR__orig_val__21191_22992 \x3d cljs.pprint._STAR_current_length_STAR_;\r\nvar _STAR_current_level_STAR__temp_val__21192_22993 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\r\nvar _STAR_current_length_STAR__temp_val__21193_22994 \x3d (0);\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__21192_22993);\r\n\r\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__21193_22994);\r\n\r\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,\x22(\x22,null,\x22)\x22);\r\n\r\ncljs.pprint.pprint_indent(new cljs.core.Keyword(null,\x22block\x22,\x22block\x22,664686210),(1));\r\n\r\nvar length_count21195_22998 \x3d (0);\r\nvar alis_22999__$1 \x3d cljs.core.seq(alis);\r\nwhile(true){\r\nif(((cljs.core.not(cljs.core._STAR_print_length_STAR_)) || ((length_count21195_22998 \x3c cljs.core._STAR_print_length_STAR_)))){\r\nif(alis_22999__$1){\r\ncljs.pprint.write_out(cljs.core.first(alis_22999__$1));\r\n\r\nif(cljs.core.next(alis_22999__$1)){\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22 \x22);\r\n\r\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697));\r\n\r\nvar G__23000 \x3d (length_count21195_22998 + (1));\r\nvar G__23001 \x3d cljs.core.next(alis_22999__$1);\r\nlength_count21195_22998 \x3d G__23000;\r\nalis_22999__$1 \x3d G__23001;\r\ncontinue;\r\n} else {\r\n}\r\n} else {\r\n}\r\n} else {\r\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22...\x22);\r\n}\r\nbreak;\r\n}\r\n\r\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\r\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__21191_22992);\r\n\r\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__21190_22991);\r\n}}\r\n\r\nreturn null;\r\n});\r\ncljs.pprint.two_forms \x3d (function cljs$pprint$two_forms(amap){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.identity,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var iter__4652__auto__ \x3d (function cljs$pprint$two_forms_$_iter__21201(s__21202){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s__21202__$1 \x3d s__21202;\r\nwhile(true){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(s__21202__$1);\r\nif(temp__5753__auto__){\r\nvar s__21202__$2 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__21202__$2)){\r\nvar c__4650__auto__ \x3d cljs.core.chunk_first(s__21202__$2);\r\nvar size__4651__auto__ \x3d cljs.core.count(c__4650__auto__);\r\nvar b__21204 \x3d cljs.core.chunk_buffer(size__4651__auto__);\r\nif((function (){var i__21203 \x3d (0);\r\nwhile(true){\r\nif((i__21203 \x3c size__4651__auto__)){\r\nvar x \x3d cljs.core._nth(c__4650__auto__,i__21203);\r\ncljs.core.chunk_append(b__21204,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(cljs.core.first(x))),cljs.core.second(x)], null)], null));\r\n\r\nvar G__23011 \x3d (i__21203 + (1));\r\ni__21203 \x3d G__23011;\r\ncontinue;\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__21204),cljs$pprint$two_forms_$_iter__21201(cljs.core.chunk_rest(s__21202__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__21204),null);\r\n}\r\n} else {\r\nvar x \x3d cljs.core.first(s__21202__$2);\r\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(cljs.core.first(x))),cljs.core.second(x)], null)], null),cljs$pprint$two_forms_$_iter__21201(cljs.core.rest(s__21202__$2)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}),null,null));\r\n});\r\nreturn iter__4652__auto__(amap);\r\n})()], 0)));\r\n});\r\ncljs.pprint.add_core_ns \x3d (function cljs$pprint$add_core_ns(amap){\r\nvar core \x3d \x22clojure.core\x22;\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__21213_SHARP_){\r\nvar vec__21217 \x3d p1__21213_SHARP_;\r\nvar s \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21217,(0),null);\r\nvar f \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21217,(1),null);\r\nif(cljs.core.not((function (){var or__4253__auto__ \x3d cljs.core.namespace(s);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.core.special_symbol_QMARK_(s);\r\n}\r\n})())){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(core,cljs.core.name(s)),f], null);\r\n} else {\r\nreturn p1__21213_SHARP_;\r\n}\r\n}),amap));\r\n});\r\ncljs.pprint._STAR_code_table_STAR_ \x3d cljs.pprint.two_forms(cljs.pprint.add_core_ns(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null,\x22.\x22,\x22.\x22,1975675962,null),new cljs.core.Symbol(null,\x22fn*\x22,\x22fn*\x22,-752876845,null),new cljs.core.Symbol(null,\x22when-first\x22,\x22when-first\x22,821699168,null),new cljs.core.Symbol(null,\x22if\x22,\x22if\x22,1181717262,null),new cljs.core.Symbol(null,\x22condp\x22,\x22condp\x22,1054325175,null),new cljs.core.Symbol(null,\x22..\x22,\x22..\x22,-300507420,null),new cljs.core.Symbol(null,\x22defmacro\x22,\x22defmacro\x22,2054157304,null),new cljs.core.Symbol(null,\x22defn\x22,\x22defn\x22,-126010802,null),new cljs.core.Symbol(null,\x22loop\x22,\x22loop\x22,1244978678,null),new cljs.core.Symbol(null,\x22struct\x22,\x22struct\x22,325972931,null),new cljs.core.Symbol(null,\x22doseq\x22,\x22doseq\x22,221164135,null),new cljs.core.Symbol(null,\x22if-not\x22,\x22if-not\x22,-265415609,null),new cljs.core.Symbol(null,\x22when-not\x22,\x22when-not\x22,-1223136340,null),new cljs.core.Symbol(null,\x22def\x22,\x22def\x22,597100991,null),new cljs.core.Symbol(null,\x22when\x22,\x22when\x22,1064114221,null),new cljs.core.Symbol(null,\x22with-open\x22,\x22with-open\x22,172119667,null),new cljs.core.Symbol(null,\x22with-local-vars\x22,\x22with-local-vars\x22,837642072,null),new cljs.core.Symbol(null,\x22defonce\x22,\x22defonce\x22,-1681484013,null),new cljs.core.Symbol(null,\x22when-let\x22,\x22when-let\x22,-1383043480,null),new cljs.core.Symbol(null,\x22ns\x22,\x22ns\x22,2082130287,null),new cljs.core.Symbol(null,\x22dotimes\x22,\x22dotimes\x22,-818708397,null),new cljs.core.Symbol(null,\x22cond\x22,\x22cond\x22,1606708055,null),new cljs.core.Symbol(null,\x22let\x22,\x22let\x22,358118826,null),new cljs.core.Symbol(null,\x22fn\x22,\x22fn\x22,465265323,null),new cljs.core.Symbol(null,\x22defn-\x22,\x22defn-\x22,1097765044,null),new cljs.core.Symbol(null,\x22locking\x22,\x22locking\x22,1542862874,null),new cljs.core.Symbol(null,\x22-\x3e\x22,\x22-\x3e\x22,-2139605430,null),new cljs.core.Symbol(null,\x22if-let\x22,\x22if-let\x22,1803593690,null),new cljs.core.Symbol(null,\x22binding\x22,\x22binding\x22,-2114503176,null),new cljs.core.Symbol(null,\x22struct-map\x22,\x22struct-map\x22,-1387540878,null)],[cljs.pprint.pprint_hold_first,cljs.pprint.pprint_anon_func,cljs.pprint.pprint_let,cljs.pprint.pprint_if,cljs.pprint.pprint_condp,cljs.pprint.pprint_hold_first,cljs.pprint.pprint_defn,cljs.pprint.pprint_defn,cljs.pprint.pprint_let,cljs.pprint.pprint_hold_first,cljs.pprint.pprint_let,cljs.pprint.pprint_if,cljs.pprint.pprint_if,cljs.pprint.pprint_hold_first,cljs.pprint.pprint_if,cljs.pprint.pprint_let,cljs.pprint.pprint_let,cljs.pprint.pprint_hold_first,cljs.pprint.pprint_let,cljs.pprint.pprint_ns,cljs.pprint.pprint_let,cljs.pprint.pprint_cond,cljs.pprint.pprint_let,cljs.pprint.pprint_defn,cljs.pprint.pprint_defn,cljs.pprint.pprint_hold_first,cljs.pprint.pprint_hold_first,cljs.pprint.pprint_let,cljs.pprint.pprint_let,cljs.pprint.pprint_hold_first])));\r\ncljs.pprint.pprint_code_list \x3d (function cljs$pprint$pprint_code_list(alis){\r\nif(cljs.core.not(cljs.pprint.pprint_reader_macro(alis))){\r\nvar temp__5751__auto__ \x3d cljs.pprint._STAR_code_table_STAR_.call(null,cljs.core.first(alis));\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar special_form \x3d temp__5751__auto__;\r\nreturn (special_form.cljs$core$IFn$_invoke$arity$1 ? special_form.cljs$core$IFn$_invoke$arity$1(alis) : special_form.call(null,alis));\r\n} else {\r\nreturn cljs.pprint.pprint_simple_code_list(alis);\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ncljs.pprint.pprint_code_symbol \x3d (function cljs$pprint$pprint_code_symbol(sym){\r\nvar temp__5751__auto__ \x3d (sym.cljs$core$IFn$_invoke$arity$1 ? sym.cljs$core$IFn$_invoke$arity$1(cljs.pprint._STAR_symbol_map_STAR_) : sym.call(null,cljs.pprint._STAR_symbol_map_STAR_));\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar arg_num \x3d temp__5751__auto__;\r\nreturn cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arg_num], 0));\r\n} else {\r\nif(cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_)){\r\nreturn cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.name(sym)], 0));\r\n} else {\r\nreturn cljs.pprint.pr.call(null,sym);\r\n}\r\n}\r\n});\r\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint.code_dispatch !\x3d\x3d \x27undefined\x27)){\r\n} else {\r\n/**\r\n * The pretty print dispatch function for pretty printing Clojure code.\r\n */\r\ncljs.pprint.code_dispatch \x3d (function (){var method_table__4747__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar prefer_table__4748__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar method_cache__4749__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar cached_hierarchy__4750__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar hierarchy__4751__auto__ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22hierarchy\x22,\x22hierarchy\x22,-1053470341),(function (){var fexpr__21237 \x3d cljs.core.get_global_hierarchy;\r\nreturn (fexpr__21237.cljs$core$IFn$_invoke$arity$0 ? fexpr__21237.cljs$core$IFn$_invoke$arity$0() : fexpr__21237.call(null));\r\n})());\r\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\x22cljs.pprint\x22,\x22code-dispatch\x22),cljs.pprint.type_dispatcher,new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),hierarchy__4751__auto__,method_table__4747__auto__,prefer_table__4748__auto__,method_cache__4749__auto__,cached_hierarchy__4750__auto__));\r\n})();\r\n}\r\ncljs.pprint.use_method(cljs.pprint.code_dispatch,new cljs.core.Keyword(null,\x22list\x22,\x22list\x22,765357683),cljs.pprint.pprint_code_list);\r\ncljs.pprint.use_method(cljs.pprint.code_dispatch,new cljs.core.Keyword(null,\x22symbol\x22,\x22symbol\x22,-1038572696),cljs.pprint.pprint_code_symbol);\r\ncljs.pprint.use_method(cljs.pprint.code_dispatch,new cljs.core.Keyword(null,\x22vector\x22,\x22vector\x22,1902966158),cljs.pprint.pprint_vector);\r\ncljs.pprint.use_method(cljs.pprint.code_dispatch,new cljs.core.Keyword(null,\x22map\x22,\x22map\x22,1371690461),cljs.pprint.pprint_map);\r\ncljs.pprint.use_method(cljs.pprint.code_dispatch,new cljs.core.Keyword(null,\x22set\x22,\x22set\x22,304602554),cljs.pprint.pprint_set);\r\ncljs.pprint.use_method(cljs.pprint.code_dispatch,new cljs.core.Keyword(null,\x22queue\x22,\x22queue\x22,1455835879),cljs.pprint.pprint_pqueue);\r\ncljs.pprint.use_method(cljs.pprint.code_dispatch,new cljs.core.Keyword(null,\x22deref\x22,\x22deref\x22,-145586795),cljs.pprint.pprint_ideref);\r\ncljs.pprint.use_method(cljs.pprint.code_dispatch,null,cljs.pprint.pr);\r\ncljs.pprint.use_method(cljs.pprint.code_dispatch,new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),cljs.pprint.pprint_simple_default);\r\ncljs.pprint.set_pprint_dispatch(cljs.pprint.simple_dispatch);\r\ncljs.pprint.add_padding \x3d (function cljs$pprint$add_padding(width,s){\r\nvar padding \x3d (function (){var x__4336__auto__ \x3d (0);\r\nvar y__4337__auto__ \x3d (width - cljs.core.count(s));\r\nreturn ((x__4336__auto__ \x3e y__4337__auto__) ? x__4336__auto__ : y__4337__auto__);\r\n})();\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.str,clojure.string.join.cljs$core$IFn$_invoke$arity$1(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(padding,\x22 \x22)),s);\r\n});\r\n/**\r\n * Prints a collection of maps in a textual table. Prints table headings\r\n * ks, and then a line of output for each row, corresponding to the keys\r\n * in ks. If ks are not specified, use the keys of the first item in rows.\r\n */\r\ncljs.pprint.print_table \x3d (function cljs$pprint$print_table(var_args){\r\nvar G__21251 \x3d arguments.length;\r\nswitch (G__21251) {\r\ncase 2:\r\nreturn cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2 \x3d (function (ks,rows){\r\nif(cljs.core.seq(rows)){\r\nvar widths \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.max,((cljs.core.str.cljs$core$IFn$_invoke$arity$1(k)).length),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__21247_SHARP_){\r\nreturn ((cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.cljs$core$IFn$_invoke$arity$2(p1__21247_SHARP_,k))).length);\r\n}),rows));\r\n}),ks);\r\nvar spacers \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__21248_SHARP_){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(p1__21248_SHARP_,\x22-\x22));\r\n}),widths);\r\nvar fmt_row \x3d (function (leader,divider,trailer,row){\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(leader),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(divider,(function (){var iter__4652__auto__ \x3d (function cljs$pprint$iter__21266(s__21267){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s__21267__$1 \x3d s__21267;\r\nwhile(true){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(s__21267__$1);\r\nif(temp__5753__auto__){\r\nvar s__21267__$2 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__21267__$2)){\r\nvar c__4650__auto__ \x3d cljs.core.chunk_first(s__21267__$2);\r\nvar size__4651__auto__ \x3d cljs.core.count(c__4650__auto__);\r\nvar b__21269 \x3d cljs.core.chunk_buffer(size__4651__auto__);\r\nif((function (){var i__21268 \x3d (0);\r\nwhile(true){\r\nif((i__21268 \x3c size__4651__auto__)){\r\nvar vec__21273 \x3d cljs.core._nth(c__4650__auto__,i__21268);\r\nvar col \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21273,(0),null);\r\nvar width \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21273,(1),null);\r\ncljs.core.chunk_append(b__21269,cljs.pprint.add_padding(width,cljs.core.str.cljs$core$IFn$_invoke$arity$1(col)));\r\n\r\nvar G__23034 \x3d (i__21268 + (1));\r\ni__21268 \x3d G__23034;\r\ncontinue;\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__21269),cljs$pprint$iter__21266(cljs.core.chunk_rest(s__21267__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__21269),null);\r\n}\r\n} else {\r\nvar vec__21277 \x3d cljs.core.first(s__21267__$2);\r\nvar col \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21277,(0),null);\r\nvar width \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21277,(1),null);\r\nreturn cljs.core.cons(cljs.pprint.add_padding(width,cljs.core.str.cljs$core$IFn$_invoke$arity$1(col)),cljs$pprint$iter__21266(cljs.core.rest(s__21267__$2)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}),null,null));\r\n});\r\nreturn iter__4652__auto__(cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__21249_SHARP_){\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(row,p1__21249_SHARP_);\r\n}),ks),widths));\r\n})()))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(trailer)].join(\x27\x27);\r\n});\r\ncljs.core.println();\r\n\r\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fmt_row(\x22| \x22,\x22 | \x22,\x22 |\x22,cljs.core.zipmap(ks,ks))], 0));\r\n\r\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fmt_row(\x22|-\x22,\x22-+-\x22,\x22-|\x22,cljs.core.zipmap(ks,spacers))], 0));\r\n\r\nvar seq__21282 \x3d cljs.core.seq(rows);\r\nvar chunk__21283 \x3d null;\r\nvar count__21284 \x3d (0);\r\nvar i__21285 \x3d (0);\r\nwhile(true){\r\nif((i__21285 \x3c count__21284)){\r\nvar row \x3d chunk__21283.cljs$core$IIndexed$_nth$arity$2(null,i__21285);\r\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fmt_row(\x22| \x22,\x22 | \x22,\x22 |\x22,row)], 0));\r\n\r\n\r\nvar G__23066 \x3d seq__21282;\r\nvar G__23067 \x3d chunk__21283;\r\nvar G__23068 \x3d count__21284;\r\nvar G__23069 \x3d (i__21285 + (1));\r\nseq__21282 \x3d G__23066;\r\nchunk__21283 \x3d G__23067;\r\ncount__21284 \x3d G__23068;\r\ni__21285 \x3d G__23069;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto__ \x3d cljs.core.seq(seq__21282);\r\nif(temp__5753__auto__){\r\nvar seq__21282__$1 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__21282__$1)){\r\nvar c__4679__auto__ \x3d cljs.core.chunk_first(seq__21282__$1);\r\nvar G__23073 \x3d cljs.core.chunk_rest(seq__21282__$1);\r\nvar G__23074 \x3d c__4679__auto__;\r\nvar G__23075 \x3d cljs.core.count(c__4679__auto__);\r\nvar G__23076 \x3d (0);\r\nseq__21282 \x3d G__23073;\r\nchunk__21283 \x3d G__23074;\r\ncount__21284 \x3d G__23075;\r\ni__21285 \x3d G__23076;\r\ncontinue;\r\n} else {\r\nvar row \x3d cljs.core.first(seq__21282__$1);\r\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fmt_row(\x22| \x22,\x22 | \x22,\x22 |\x22,row)], 0));\r\n\r\n\r\nvar G__23078 \x3d cljs.core.next(seq__21282__$1);\r\nvar G__23079 \x3d null;\r\nvar G__23080 \x3d (0);\r\nvar G__23081 \x3d (0);\r\nseq__21282 \x3d G__23078;\r\nchunk__21283 \x3d G__23079;\r\ncount__21284 \x3d G__23080;\r\ni__21285 \x3d G__23081;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1 \x3d (function (rows){\r\nreturn cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2(cljs.core.keys(cljs.core.first(rows)),rows);\r\n}));\r\n\r\n(cljs.pprint.print_table.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n");
SHADOW_ENV.evalLoad("clojure.walk.js", true , "goog.provide(\x27clojure.walk\x27);\r\n/**\r\n * Traverses form, an arbitrary data structure.  inner and outer are\r\n *   functions.  Applies inner to each element of form, building up a\r\n *   data structure of the same type, then applies outer to the result.\r\n *   Recognizes all Clojure data structures. Consumes seqs as with doall.\r\n */\r\nclojure.walk.walk \x3d (function clojure$walk$walk(inner,outer,form){\r\nif(cljs.core.list_QMARK_(form)){\r\nvar G__22309 \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.list,cljs.core.map.cljs$core$IFn$_invoke$arity$2(inner,form));\r\nreturn (outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(G__22309) : outer.call(null,G__22309));\r\n} else {\r\nif(cljs.core.map_entry_QMARK_(form)){\r\nvar G__22316 \x3d (new cljs.core.MapEntry((function (){var G__22317 \x3d cljs.core.key(form);\r\nreturn (inner.cljs$core$IFn$_invoke$arity$1 ? inner.cljs$core$IFn$_invoke$arity$1(G__22317) : inner.call(null,G__22317));\r\n})(),(function (){var G__22318 \x3d cljs.core.val(form);\r\nreturn (inner.cljs$core$IFn$_invoke$arity$1 ? inner.cljs$core$IFn$_invoke$arity$1(G__22318) : inner.call(null,G__22318));\r\n})(),null));\r\nreturn (outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(G__22316) : outer.call(null,G__22316));\r\n} else {\r\nif(cljs.core.seq_QMARK_(form)){\r\nvar G__22319 \x3d cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(inner,form));\r\nreturn (outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(G__22319) : outer.call(null,G__22319));\r\n} else {\r\nif(cljs.core.record_QMARK_(form)){\r\nvar G__22320 \x3d cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (r,x){\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(r,(inner.cljs$core$IFn$_invoke$arity$1 ? inner.cljs$core$IFn$_invoke$arity$1(x) : inner.call(null,x)));\r\n}),form,form);\r\nreturn (outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(G__22320) : outer.call(null,G__22320));\r\n} else {\r\nif(cljs.core.coll_QMARK_(form)){\r\nvar G__22325 \x3d cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(form),cljs.core.map.cljs$core$IFn$_invoke$arity$2(inner,form));\r\nreturn (outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(G__22325) : outer.call(null,G__22325));\r\n} else {\r\nreturn (outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(form) : outer.call(null,form));\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Performs a depth-first, post-order traversal of form.  Calls f on\r\n *   each sub-form, uses f\x27s return value in place of the original.\r\n *   Recognizes all Clojure data structures. Consumes seqs as with doall.\r\n */\r\nclojure.walk.postwalk \x3d (function clojure$walk$postwalk(f,form){\r\nreturn clojure.walk.walk(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(clojure.walk.postwalk,f),f,form);\r\n});\r\n/**\r\n * Like postwalk, but does pre-order traversal.\r\n */\r\nclojure.walk.prewalk \x3d (function clojure$walk$prewalk(f,form){\r\nreturn clojure.walk.walk(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(clojure.walk.prewalk,f),cljs.core.identity,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(form) : f.call(null,form)));\r\n});\r\n/**\r\n * Recursively transforms all map keys from strings to keywords.\r\n */\r\nclojure.walk.keywordize_keys \x3d (function clojure$walk$keywordize_keys(m){\r\nvar f \x3d (function (p__22358){\r\nvar vec__22359 \x3d p__22358;\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22359,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22359,(1),null);\r\nif(typeof k \x3d\x3d\x3d \x27string\x27){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),v], null);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v], null);\r\n}\r\n});\r\nreturn clojure.walk.postwalk((function (x){\r\nif(cljs.core.map_QMARK_(x)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(f,x));\r\n} else {\r\nreturn x;\r\n}\r\n}),m);\r\n});\r\n/**\r\n * Recursively transforms all map keys from keywords to strings.\r\n */\r\nclojure.walk.stringify_keys \x3d (function clojure$walk$stringify_keys(m){\r\nvar f \x3d (function (p__22363){\r\nvar vec__22364 \x3d p__22363;\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22364,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22364,(1),null);\r\nif((k instanceof cljs.core.Keyword)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name(k),v], null);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v], null);\r\n}\r\n});\r\nreturn clojure.walk.postwalk((function (x){\r\nif(cljs.core.map_QMARK_(x)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(f,x));\r\n} else {\r\nreturn x;\r\n}\r\n}),m);\r\n});\r\n/**\r\n * Recursively transforms form by replacing keys in smap with their\r\n *   values.  Like clojure/replace but works on any data structure.  Does\r\n *   replacement at the root of the tree first.\r\n */\r\nclojure.walk.prewalk_replace \x3d (function clojure$walk$prewalk_replace(smap,form){\r\nreturn clojure.walk.prewalk((function (x){\r\nif(cljs.core.contains_QMARK_(smap,x)){\r\nreturn (smap.cljs$core$IFn$_invoke$arity$1 ? smap.cljs$core$IFn$_invoke$arity$1(x) : smap.call(null,x));\r\n} else {\r\nreturn x;\r\n}\r\n}),form);\r\n});\r\n/**\r\n * Recursively transforms form by replacing keys in smap with their\r\n *   values.  Like clojure/replace but works on any data structure.  Does\r\n *   replacement at the leaves of the tree first.\r\n */\r\nclojure.walk.postwalk_replace \x3d (function clojure$walk$postwalk_replace(smap,form){\r\nreturn clojure.walk.postwalk((function (x){\r\nif(cljs.core.contains_QMARK_(smap,x)){\r\nreturn (smap.cljs$core$IFn$_invoke$arity$1 ? smap.cljs$core$IFn$_invoke$arity$1(x) : smap.call(null,x));\r\n} else {\r\nreturn x;\r\n}\r\n}),form);\r\n});\r\n");
SHADOW_ENV.evalLoad("instaparse.auto_flatten_seq.js", true , "goog.provide(\x27instaparse.auto_flatten_seq\x27);\r\ninstaparse.auto_flatten_seq.threshold \x3d (32);\r\n\r\n/**\r\n * @interface\r\n */\r\ninstaparse.auto_flatten_seq.ConjFlat \x3d function(){};\r\n\r\nvar instaparse$auto_flatten_seq$ConjFlat$conj_flat$dyn_26066 \x3d (function (self,obj){\r\nvar x__4550__auto__ \x3d (((self \x3d\x3d null))?null:self);\r\nvar m__4551__auto__ \x3d (instaparse.auto_flatten_seq.conj_flat[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(self,obj) : m__4551__auto__.call(null,self,obj));\r\n} else {\r\nvar m__4549__auto__ \x3d (instaparse.auto_flatten_seq.conj_flat[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(self,obj) : m__4549__auto__.call(null,self,obj));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ConjFlat.conj-flat\x22,self);\r\n}\r\n}\r\n});\r\ninstaparse.auto_flatten_seq.conj_flat \x3d (function instaparse$auto_flatten_seq$conj_flat(self,obj){\r\nif((((!((self \x3d\x3d null)))) \x26\x26 ((!((self.instaparse$auto_flatten_seq$ConjFlat$conj_flat$arity$2 \x3d\x3d null)))))){\r\nreturn self.instaparse$auto_flatten_seq$ConjFlat$conj_flat$arity$2(self,obj);\r\n} else {\r\nreturn instaparse$auto_flatten_seq$ConjFlat$conj_flat$dyn_26066(self,obj);\r\n}\r\n});\r\n\r\nvar instaparse$auto_flatten_seq$ConjFlat$cached_QMARK_$dyn_26068 \x3d (function (self){\r\nvar x__4550__auto__ \x3d (((self \x3d\x3d null))?null:self);\r\nvar m__4551__auto__ \x3d (instaparse.auto_flatten_seq.cached_QMARK_[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(self) : m__4551__auto__.call(null,self));\r\n} else {\r\nvar m__4549__auto__ \x3d (instaparse.auto_flatten_seq.cached_QMARK_[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(self) : m__4549__auto__.call(null,self));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22ConjFlat.cached?\x22,self);\r\n}\r\n}\r\n});\r\ninstaparse.auto_flatten_seq.cached_QMARK_ \x3d (function instaparse$auto_flatten_seq$cached_QMARK_(self){\r\nif((((!((self \x3d\x3d null)))) \x26\x26 ((!((self.instaparse$auto_flatten_seq$ConjFlat$cached_QMARK_$arity$1 \x3d\x3d null)))))){\r\nreturn self.instaparse$auto_flatten_seq$ConjFlat$cached_QMARK_$arity$1(self);\r\n} else {\r\nreturn instaparse$auto_flatten_seq$ConjFlat$cached_QMARK_$dyn_26068(self);\r\n}\r\n});\r\n\r\n\r\n\r\n\r\n/**\r\n * Returns the hash code, consistent with \x3d, for an external ordered\r\n *   collection implementing Iterable.\r\n *   See http://clojure.org/data_structures#hash for full algorithms.\r\n */\r\ninstaparse.auto_flatten_seq.hash_conj \x3d (function instaparse$auto_flatten_seq$hash_conj(unmixed_hash,item){\r\nreturn (cljs.core.imul((31),unmixed_hash) + cljs.core.hash(item));\r\n});\r\ninstaparse.auto_flatten_seq.expt \x3d (function instaparse$auto_flatten_seq$expt(base,pow){\r\nif((pow \x3d\x3d\x3d (0))){\r\nreturn (1);\r\n} else {\r\nvar n \x3d (pow | (0));\r\nvar y \x3d ((1) | (0));\r\nvar z \x3d (base | (0));\r\nwhile(true){\r\nvar t \x3d cljs.core.even_QMARK_(n);\r\nvar n__$1 \x3d cljs.core.quot(n,(2));\r\nif(t){\r\nvar G__26070 \x3d n__$1;\r\nvar G__26071 \x3d y;\r\nvar G__26072 \x3d cljs.core.imul(z,z);\r\nn \x3d G__26070;\r\ny \x3d G__26071;\r\nz \x3d G__26072;\r\ncontinue;\r\n} else {\r\nif((n__$1 \x3d\x3d\x3d (0))){\r\nreturn cljs.core.imul(z,y);\r\n} else {\r\nvar G__26074 \x3d n__$1;\r\nvar G__26075 \x3d cljs.core.imul(z,y);\r\nvar G__26076 \x3d cljs.core.imul(z,z);\r\nn \x3d G__26074;\r\ny \x3d G__26075;\r\nz \x3d G__26076;\r\ncontinue;\r\n\r\n}\r\n}\r\nbreak;\r\n}\r\n}\r\n});\r\ninstaparse.auto_flatten_seq.delve \x3d (function instaparse$auto_flatten_seq$delve(v,index){\r\nvar v__$1 \x3d cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(v,index);\r\nvar index__$1 \x3d index;\r\nwhile(true){\r\nif(cljs.core.truth_((instaparse.auto_flatten_seq.afs_QMARK_.cljs$core$IFn$_invoke$arity$1 ? instaparse.auto_flatten_seq.afs_QMARK_.cljs$core$IFn$_invoke$arity$1(v__$1) : instaparse.auto_flatten_seq.afs_QMARK_.call(null,v__$1)))){\r\nvar G__26077 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(v__$1,(0));\r\nvar G__26078 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(index__$1,(0));\r\nv__$1 \x3d G__26077;\r\nindex__$1 \x3d G__26078;\r\ncontinue;\r\n} else {\r\nreturn index__$1;\r\n}\r\nbreak;\r\n}\r\n});\r\ninstaparse.auto_flatten_seq.advance \x3d (function instaparse$auto_flatten_seq$advance(v,index){\r\nwhile(true){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(index),(1))){\r\nif((cljs.core.peek(index) \x3c ((instaparse.auto_flatten_seq.true_count.cljs$core$IFn$_invoke$arity$1 ? instaparse.auto_flatten_seq.true_count.cljs$core$IFn$_invoke$arity$1(v) : instaparse.auto_flatten_seq.true_count.call(null,v)) - (1)))){\r\nreturn instaparse.auto_flatten_seq.delve(v,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.peek(index) + (1))], null));\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nif((cljs.core.peek(index) \x3c ((function (){var G__25897 \x3d cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(v,cljs.core.pop(index));\r\nreturn (instaparse.auto_flatten_seq.true_count.cljs$core$IFn$_invoke$arity$1 ? instaparse.auto_flatten_seq.true_count.cljs$core$IFn$_invoke$arity$1(G__25897) : instaparse.auto_flatten_seq.true_count.call(null,G__25897));\r\n})() - (1)))){\r\nreturn instaparse.auto_flatten_seq.delve(v,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.pop(index),(cljs.core.peek(index) + (1))));\r\n} else {\r\nvar G__26079 \x3d v;\r\nvar G__26080 \x3d cljs.core.pop(index);\r\nv \x3d G__26079;\r\nindex \x3d G__26080;\r\ncontinue;\r\n\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ninstaparse.auto_flatten_seq.flat_seq \x3d (function instaparse$auto_flatten_seq$flat_seq(var_args){\r\nvar G__25905 \x3d arguments.length;\r\nswitch (G__25905) {\r\ncase 1:\r\nreturn instaparse.auto_flatten_seq.flat_seq.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn instaparse.auto_flatten_seq.flat_seq.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(instaparse.auto_flatten_seq.flat_seq.cljs$core$IFn$_invoke$arity$1 \x3d (function (v){\r\nif((cljs.core.count(v) \x3e (0))){\r\nreturn instaparse.auto_flatten_seq.flat_seq.cljs$core$IFn$_invoke$arity$2(v,instaparse.auto_flatten_seq.delve(v,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0)], null)));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.flat_seq.cljs$core$IFn$_invoke$arity$2 \x3d (function (v,index){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nreturn cljs.core.cons(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(v,index),(function (){var temp__5753__auto__ \x3d instaparse.auto_flatten_seq.advance(v,index);\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar next_index \x3d temp__5753__auto__;\r\nreturn instaparse.auto_flatten_seq.flat_seq.cljs$core$IFn$_invoke$arity$2(v,next_index);\r\n} else {\r\nreturn null;\r\n}\r\n})());\r\n}),null,null));\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.flat_seq.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeq}\r\n * @implements {cljs.core.INext}\r\n * @implements {instaparse.auto_flatten_seq.ConjFlat}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ninstaparse.auto_flatten_seq.AutoFlattenSeq \x3d (function (v,premix_hashcode,hashcode,cnt,dirty,cached_seq){\r\nthis.v \x3d v;\r\nthis.premix_hashcode \x3d premix_hashcode;\r\nthis.hashcode \x3d hashcode;\r\nthis.cnt \x3d cnt;\r\nthis.dirty \x3d dirty;\r\nthis.cached_seq \x3d cached_seq;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 31850958;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\r\n});\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar self \x3d this;\r\nreturn cljs.core.pr_str_STAR_(cljs.core.seq(self));\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (self,key){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn self__.v.cljs$core$ILookup$_lookup$arity$2(null,key);\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (self,key,not_found){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn self__.v.cljs$core$ILookup$_lookup$arity$3(null,key,not_found);\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (self){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn cljs.core.meta(self__.v);\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (self){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn cljs.core.next(cljs.core.seq(self__$1));\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (self){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn self__.cnt;\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (self){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn self__.hashcode;\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (self,other){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.hashcode,cljs.core.hash(other))) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.cnt,cljs.core.count(other))) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.cnt,(0))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.seq(self__$1),other)))))));\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (self){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn cljs.core.with_meta(instaparse.auto_flatten_seq.EMPTY,cljs.core.meta(self__$1));\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (self){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn cljs.core.first(cljs.core.seq(self__$1));\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (self){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn cljs.core.rest(cljs.core.seq(self__$1));\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (self){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nif(cljs.core.truth_(self__.cached_seq)){\r\nreturn self__.cached_seq;\r\n} else {\r\n(self__.cached_seq \x3d ((self__.dirty)?instaparse.auto_flatten_seq.flat_seq.cljs$core$IFn$_invoke$arity$1(self__.v):cljs.core.seq(self__.v)));\r\n\r\nreturn self__.cached_seq;\r\n}\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (self,metamap){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn (new instaparse.auto_flatten_seq.AutoFlattenSeq(cljs.core.with_meta(self__.v,metamap),self__.premix_hashcode,self__.hashcode,self__.cnt,self__.dirty,null));\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (self,o){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn cljs.core.cons(o,self__$1);\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.prototype.instaparse$auto_flatten_seq$ConjFlat$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.prototype.instaparse$auto_flatten_seq$ConjFlat$conj_flat$arity$2 \x3d (function (self,obj){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nif((obj \x3d\x3d null)){\r\nreturn self__$1;\r\n} else {\r\nif(cljs.core.truth_((instaparse.auto_flatten_seq.afs_QMARK_.cljs$core$IFn$_invoke$arity$1 ? instaparse.auto_flatten_seq.afs_QMARK_.cljs$core$IFn$_invoke$arity$1(obj) : instaparse.auto_flatten_seq.afs_QMARK_.call(null,obj)))){\r\nif((self__.cnt \x3d\x3d\x3d (0))){\r\nreturn obj;\r\n} else {\r\nif((cljs.core.count(obj) \x3c\x3d (32))){\r\nvar phc \x3d (instaparse.auto_flatten_seq.hash_cat.cljs$core$IFn$_invoke$arity$2 ? instaparse.auto_flatten_seq.hash_cat.cljs$core$IFn$_invoke$arity$2(self__$1,obj) : instaparse.auto_flatten_seq.hash_cat.call(null,self__$1,obj));\r\nvar new_cnt \x3d (self__.cnt + cljs.core.count(obj));\r\nreturn (new instaparse.auto_flatten_seq.AutoFlattenSeq(cljs.core.into.cljs$core$IFn$_invoke$arity$2(self__.v,obj),phc,cljs.core.mix_collection_hash(phc,new_cnt),new_cnt,(function (){var or__4253__auto__ \x3d self__.dirty;\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn obj.dirty;\r\n}\r\n})(),null));\r\n} else {\r\nvar phc \x3d (instaparse.auto_flatten_seq.hash_cat.cljs$core$IFn$_invoke$arity$2 ? instaparse.auto_flatten_seq.hash_cat.cljs$core$IFn$_invoke$arity$2(self__$1,obj) : instaparse.auto_flatten_seq.hash_cat.call(null,self__$1,obj));\r\nvar new_cnt \x3d (self__.cnt + cljs.core.count(obj));\r\nreturn (new instaparse.auto_flatten_seq.AutoFlattenSeq(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.v,obj),phc,cljs.core.mix_collection_hash(phc,new_cnt),new_cnt,true,null));\r\n\r\n}\r\n}\r\n} else {\r\nvar phc \x3d instaparse.auto_flatten_seq.hash_conj(self__.premix_hashcode,obj);\r\nvar new_cnt \x3d (self__.cnt + (1));\r\nreturn (new instaparse.auto_flatten_seq.AutoFlattenSeq(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.v,obj),phc,cljs.core.mix_collection_hash(phc,new_cnt),new_cnt,self__.dirty,null));\r\n\r\n}\r\n}\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.prototype.instaparse$auto_flatten_seq$ConjFlat$cached_QMARK_$arity$1 \x3d (function (self){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn self__.cached_seq;\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22v\x22,\x22v\x22,1661996586,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22PersistentVector\x22,\x22PersistentVector\x22,-837570443,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22premix-hashcode\x22,\x22premix-hashcode\x22,-1918840795,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22number\x22,\x22number\x22,-1084057331,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22hashcode\x22,\x22hashcode\x22,1350412446,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22number\x22,\x22number\x22,-1084057331,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22cnt\x22,\x22cnt\x22,1924510325,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22number\x22,\x22number\x22,-1084057331,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22dirty\x22,\x22dirty\x22,-1924882488,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22boolean\x22,\x22boolean\x22,-278886877,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22cached-seq\x22,\x22cached-seq\x22,1369780142,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22ISeq\x22,\x22ISeq\x22,1517365813,null),new cljs.core.Keyword(null,\x22unsynchronized-mutable\x22,\x22unsynchronized-mutable\x22,-164143950),true], null))], null);\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.cljs$lang$type \x3d true);\r\n\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.cljs$lang$ctorStr \x3d \x22instaparse.auto-flatten-seq/AutoFlattenSeq\x22);\r\n\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22instaparse.auto-flatten-seq/AutoFlattenSeq\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for instaparse.auto-flatten-seq/AutoFlattenSeq.\r\n */\r\ninstaparse.auto_flatten_seq.__GT_AutoFlattenSeq \x3d (function instaparse$auto_flatten_seq$__GT_AutoFlattenSeq(v,premix_hashcode,hashcode,cnt,dirty,cached_seq){\r\nreturn (new instaparse.auto_flatten_seq.AutoFlattenSeq(v,premix_hashcode,hashcode,cnt,dirty,cached_seq));\r\n});\r\n\r\ninstaparse.auto_flatten_seq.hash_cat \x3d (function instaparse$auto_flatten_seq$hash_cat(v1,v2){\r\nvar c \x3d cljs.core.count(v2);\r\nvar e \x3d (instaparse.auto_flatten_seq.expt((31),c) | (0));\r\nreturn (cljs.core.imul(e,v1.premix_hashcode) + (v2.premix_hashcode - e));\r\n});\r\n/**\r\n * Returns the partially calculated hash code, still requires a call to mix-collection-hash\r\n */\r\ninstaparse.auto_flatten_seq.hash_ordered_coll_without_mix \x3d (function instaparse$auto_flatten_seq$hash_ordered_coll_without_mix(var_args){\r\nvar G__25961 \x3d arguments.length;\r\nswitch (G__25961) {\r\ncase 1:\r\nreturn instaparse.auto_flatten_seq.hash_ordered_coll_without_mix.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn instaparse.auto_flatten_seq.hash_ordered_coll_without_mix.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(instaparse.auto_flatten_seq.hash_ordered_coll_without_mix.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\r\nreturn instaparse.auto_flatten_seq.hash_ordered_coll_without_mix.cljs$core$IFn$_invoke$arity$2((1),coll);\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.hash_ordered_coll_without_mix.cljs$core$IFn$_invoke$arity$2 \x3d (function (existing_unmixed_hash,coll){\r\nvar unmixed_hash \x3d existing_unmixed_hash;\r\nvar coll__$1 \x3d cljs.core.seq(coll);\r\nwhile(true){\r\nif((!((coll__$1 \x3d\x3d null)))){\r\nvar G__26092 \x3d ((cljs.core.imul((31),unmixed_hash) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));\r\nvar G__26093 \x3d cljs.core.next(coll__$1);\r\nunmixed_hash \x3d G__26092;\r\ncoll__$1 \x3d G__26093;\r\ncontinue;\r\n} else {\r\nreturn unmixed_hash;\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.hash_ordered_coll_without_mix.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(instaparse.auto_flatten_seq.AutoFlattenSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (afs,writer,opts){\r\nvar afs__$1 \x3d this;\r\nreturn cljs.core._pr_writer(cljs.core.seq(afs__$1),writer,opts);\r\n}));\r\ninstaparse.auto_flatten_seq.auto_flatten_seq \x3d (function instaparse$auto_flatten_seq$auto_flatten_seq(v){\r\nvar v__$1 \x3d cljs.core.vec(v);\r\nreturn (new instaparse.auto_flatten_seq.AutoFlattenSeq(v__$1,instaparse.auto_flatten_seq.hash_ordered_coll_without_mix.cljs$core$IFn$_invoke$arity$1(v__$1),cljs.core.hash(v__$1),cljs.core.count(v__$1),false,null));\r\n});\r\ninstaparse.auto_flatten_seq.EMPTY \x3d instaparse.auto_flatten_seq.auto_flatten_seq(cljs.core.PersistentVector.EMPTY);\r\ninstaparse.auto_flatten_seq.afs_QMARK_ \x3d (function instaparse$auto_flatten_seq$afs_QMARK_(s){\r\nreturn (s instanceof instaparse.auto_flatten_seq.AutoFlattenSeq);\r\n});\r\ninstaparse.auto_flatten_seq.true_count \x3d (function instaparse$auto_flatten_seq$true_count(v){\r\nif(instaparse.auto_flatten_seq.afs_QMARK_(v)){\r\nreturn cljs.core.count(v.v);\r\n} else {\r\nreturn cljs.core.count(v);\r\n}\r\n});\r\ninstaparse.auto_flatten_seq.flat_vec_helper \x3d (function instaparse$auto_flatten_seq$flat_vec_helper(acc,v){\r\nwhile(true){\r\nvar temp__5751__auto__ \x3d cljs.core.seq(v);\r\nif(temp__5751__auto__){\r\nvar s \x3d temp__5751__auto__;\r\nvar fst \x3d cljs.core.first(v);\r\nif(instaparse.auto_flatten_seq.afs_QMARK_(fst)){\r\nvar G__26094 \x3d (instaparse.auto_flatten_seq.flat_vec_helper.cljs$core$IFn$_invoke$arity$2 ? instaparse.auto_flatten_seq.flat_vec_helper.cljs$core$IFn$_invoke$arity$2(acc,fst) : instaparse.auto_flatten_seq.flat_vec_helper.call(null,acc,fst));\r\nvar G__26095 \x3d cljs.core.next(v);\r\nacc \x3d G__26094;\r\nv \x3d G__26095;\r\ncontinue;\r\n} else {\r\nvar G__26096 \x3d cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(acc,fst);\r\nvar G__26097 \x3d cljs.core.next(v);\r\nacc \x3d G__26096;\r\nv \x3d G__26097;\r\ncontinue;\r\n}\r\n} else {\r\nreturn acc;\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Turns deep vector (like the vector inside of FlattenOnDemandVector) into a flat vec\r\n */\r\ninstaparse.auto_flatten_seq.flat_vec \x3d (function instaparse$auto_flatten_seq$flat_vec(v){\r\nreturn cljs.core.persistent_BANG_(instaparse.auto_flatten_seq.flat_vec_helper(cljs.core.transient$(cljs.core.PersistentVector.EMPTY),v));\r\n});\r\n\r\n/**\r\n * @interface\r\n */\r\ninstaparse.auto_flatten_seq.GetVec \x3d function(){};\r\n\r\nvar instaparse$auto_flatten_seq$GetVec$get_vec$dyn_26098 \x3d (function (self){\r\nvar x__4550__auto__ \x3d (((self \x3d\x3d null))?null:self);\r\nvar m__4551__auto__ \x3d (instaparse.auto_flatten_seq.get_vec[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(self) : m__4551__auto__.call(null,self));\r\n} else {\r\nvar m__4549__auto__ \x3d (instaparse.auto_flatten_seq.get_vec[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(self) : m__4549__auto__.call(null,self));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22GetVec.get-vec\x22,self);\r\n}\r\n}\r\n});\r\ninstaparse.auto_flatten_seq.get_vec \x3d (function instaparse$auto_flatten_seq$get_vec(self){\r\nif((((!((self \x3d\x3d null)))) \x26\x26 ((!((self.instaparse$auto_flatten_seq$GetVec$get_vec$arity$1 \x3d\x3d null)))))){\r\nreturn self.instaparse$auto_flatten_seq$GetVec$get_vec$arity$1(self);\r\n} else {\r\nreturn instaparse$auto_flatten_seq$GetVec$get_vec$dyn_26098(self);\r\n}\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IIndexed}\r\n * @implements {cljs.core.IVector}\r\n * @implements {cljs.core.IReversible}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IFn}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.IEmptyableCollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {instaparse.auto_flatten_seq.GetVec}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.IStack}\r\n * @implements {cljs.core.IComparable}\r\n * @implements {cljs.core.ISequential}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ninstaparse.auto_flatten_seq.FlattenOnDemandVector \x3d (function (v,hashcode,cnt,flat){\r\nthis.v \x3d v;\r\nthis.hashcode \x3d hashcode;\r\nthis.cnt \x3d cnt;\r\nthis.flat \x3d flat;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 167142175;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 2048;\r\n});\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.toString \x3d (function (){\r\nvar self__ \x3d this;\r\nvar self \x3d this;\r\nreturn cljs.core.pr_str_STAR_(self.instaparse$auto_flatten_seq$GetVec$get_vec$arity$1(null));\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (self,key){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn self__$1.instaparse$auto_flatten_seq$GetVec$get_vec$arity$1(null).cljs$core$ILookup$_lookup$arity$2(null,key);\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (self,key,not_found){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn self__$1.instaparse$auto_flatten_seq$GetVec$get_vec$arity$1(null).cljs$core$ILookup$_lookup$arity$3(null,key,not_found);\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.instaparse$auto_flatten_seq$GetVec$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.instaparse$auto_flatten_seq$GetVec$get_vec$arity$1 \x3d (function (self){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nif(cljs.core.not(cljs.core.deref(self__.flat))){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.flat,(function (_){\r\nreturn cljs.core.with_meta(instaparse.auto_flatten_seq.flat_vec(cljs.core.deref(self__.v)),cljs.core.meta(cljs.core.deref(self__.v)));\r\n}));\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.v,(function (_){\r\nreturn null;\r\n}));\r\n} else {\r\n}\r\n\r\nreturn cljs.core.deref(self__.flat);\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (self,f,init){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn self__$1.instaparse$auto_flatten_seq$GetVec$get_vec$arity$1(null).cljs$core$IKVReduce$_kv_reduce$arity$3(null,f,init);\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$IIndexed$_nth$arity$2 \x3d (function (self,i){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn self__$1.instaparse$auto_flatten_seq$GetVec$get_vec$arity$1(null).cljs$core$IIndexed$_nth$arity$2(null,i);\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$IIndexed$_nth$arity$3 \x3d (function (self,i,not_found){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn self__$1.instaparse$auto_flatten_seq$GetVec$get_vec$arity$1(null).cljs$core$IIndexed$_nth$arity$3(null,i,not_found);\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$IVector$_assoc_n$arity$3 \x3d (function (self,i,val){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn self__$1.instaparse$auto_flatten_seq$GetVec$get_vec$arity$1(null).cljs$core$IVector$_assoc_n$arity$3(null,i,val);\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (self){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nif(cljs.core.truth_(cljs.core.deref(self__.flat))){\r\nreturn cljs.core.meta(cljs.core.deref(self__.flat));\r\n} else {\r\nreturn cljs.core.meta(cljs.core.deref(self__.v));\r\n}\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (self){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn self__.cnt;\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$IStack$_peek$arity$1 \x3d (function (self){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn self__$1.instaparse$auto_flatten_seq$GetVec$get_vec$arity$1(null).cljs$core$IStack$_peek$arity$1(null);\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$IStack$_pop$arity$1 \x3d (function (self){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn self__$1.instaparse$auto_flatten_seq$GetVec$get_vec$arity$1(null).cljs$core$IStack$_pop$arity$1(null);\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$IReversible$_rseq$arity$1 \x3d (function (self){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nif((self__.cnt \x3e (0))){\r\nreturn cljs.core.rseq(self__$1.instaparse$auto_flatten_seq$GetVec$get_vec$arity$1(null));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (self){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn self__.hashcode;\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (self,other){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.hashcode,cljs.core.hash(other))) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.cnt,cljs.core.count(other))) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__$1.instaparse$auto_flatten_seq$GetVec$get_vec$arity$1(null),other)))));\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (self){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,cljs.core.meta(self__$1));\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (self,i,val){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__$1.instaparse$auto_flatten_seq$GetVec$get_vec$arity$1(null),i,val);\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (self,k){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn self__$1.instaparse$auto_flatten_seq$GetVec$get_vec$arity$1(null).cljs$core$IAssociative$_contains_key_QMARK_$arity$2(null,k);\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (self){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn cljs.core.seq(self__$1.instaparse$auto_flatten_seq$GetVec$get_vec$arity$1(null));\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (self,metamap){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nif(cljs.core.truth_(cljs.core.deref(self__.flat))){\r\nreturn (new instaparse.auto_flatten_seq.FlattenOnDemandVector(cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.v)),self__.hashcode,self__.cnt,cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.with_meta(cljs.core.deref(self__.flat),metamap))));\r\n} else {\r\nreturn (new instaparse.auto_flatten_seq.FlattenOnDemandVector(cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.with_meta(cljs.core.deref(self__.v),metamap)),self__.hashcode,self__.cnt,cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.flat))));\r\n}\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (self,obj){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__$1.instaparse$auto_flatten_seq$GetVec$get_vec$arity$1(null),obj);\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.call \x3d (function (unused__9633__auto__){\r\nvar self__ \x3d this;\r\nvar self__ \x3d this;\r\nvar G__26014 \x3d (arguments.length - (1));\r\nswitch (G__26014) {\r\ncase (1):\r\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\r\n\r\nbreak;\r\ncase (2):\r\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.apply \x3d (function (self__,args25988){\r\nvar self__ \x3d this;\r\nvar self____$1 \x3d this;\r\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25988)));\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (arg){\r\nvar self__ \x3d this;\r\nvar self \x3d this;\r\nreturn self.instaparse$auto_flatten_seq$GetVec$get_vec$arity$1(null).cljs$core$IFn$_invoke$arity$2(null,arg);\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (arg,not_found){\r\nvar self__ \x3d this;\r\nvar self \x3d this;\r\nreturn self.instaparse$auto_flatten_seq$GetVec$get_vec$arity$1(null).cljs$core$IFn$_invoke$arity$3(null,arg,not_found);\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$IComparable$_compare$arity$2 \x3d (function (self,that){\r\nvar self__ \x3d this;\r\nvar self__$1 \x3d this;\r\nreturn cljs.core._compare(self__$1.instaparse$auto_flatten_seq$GetVec$get_vec$arity$1(null),that);\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22v\x22,\x22v\x22,1661996586,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22hashcode\x22,\x22hashcode\x22,1350412446,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22number\x22,\x22number\x22,-1084057331,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22cnt\x22,\x22cnt\x22,1924510325,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22number\x22,\x22number\x22,-1084057331,null)], null)),new cljs.core.Symbol(null,\x22flat\x22,\x22flat\x22,-2076841507,null)], null);\r\n}));\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.cljs$lang$type \x3d true);\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.cljs$lang$ctorStr \x3d \x22instaparse.auto-flatten-seq/FlattenOnDemandVector\x22);\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22instaparse.auto-flatten-seq/FlattenOnDemandVector\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for instaparse.auto-flatten-seq/FlattenOnDemandVector.\r\n */\r\ninstaparse.auto_flatten_seq.__GT_FlattenOnDemandVector \x3d (function instaparse$auto_flatten_seq$__GT_FlattenOnDemandVector(v,hashcode,cnt,flat){\r\nreturn (new instaparse.auto_flatten_seq.FlattenOnDemandVector(v,hashcode,cnt,flat));\r\n});\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(instaparse.auto_flatten_seq.FlattenOnDemandVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (v,writer,opts){\r\nvar v__$1 \x3d this;\r\nreturn cljs.core._pr_writer(v__$1.instaparse$auto_flatten_seq$GetVec$get_vec$arity$1(null),writer,opts);\r\n}));\r\ninstaparse.auto_flatten_seq.convert_afs_to_vec \x3d (function instaparse$auto_flatten_seq$convert_afs_to_vec(afs){\r\nif(cljs.core.truth_(afs.dirty)){\r\nif(cljs.core.truth_(afs.instaparse$auto_flatten_seq$ConjFlat$cached_QMARK_$arity$1(null))){\r\nreturn cljs.core.vec(cljs.core.seq(afs));\r\n} else {\r\nreturn (new instaparse.auto_flatten_seq.FlattenOnDemandVector(cljs.core.atom.cljs$core$IFn$_invoke$arity$1(afs.v),afs.hashcode,afs.cnt,cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null)));\r\n}\r\n} else {\r\nreturn afs.v;\r\n\r\n}\r\n});\r\n");
SHADOW_ENV.evalLoad("instaparse.print.js", true , "goog.provide(\x27instaparse.print\x27);\r\ninstaparse.print.paren_for_tags \x3d (function instaparse$print$paren_for_tags(tag_set,hidden_QMARK_,parser){\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d cljs.core.not(hidden_QMARK_);\r\nif(and__4251__auto__){\r\nvar G__25903 \x3d (parser.cljs$core$IFn$_invoke$arity$1 ? parser.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223)) : parser.call(null,new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223)));\r\nreturn (tag_set.cljs$core$IFn$_invoke$arity$1 ? tag_set.cljs$core$IFn$_invoke$arity$1(G__25903) : tag_set.call(null,G__25903));\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nreturn [\x22(\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$2 ? instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$2(parser,false) : instaparse.print.combinators__GT_str.call(null,parser,false))),\x22)\x22].join(\x27\x27);\r\n} else {\r\nreturn (instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$2 ? instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$2(parser,false) : instaparse.print.combinators__GT_str.call(null,parser,false));\r\n}\r\n});\r\ninstaparse.print.paren_for_compound \x3d cljs.core.partial.cljs$core$IFn$_invoke$arity$2(instaparse.print.paren_for_tags,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),null,new cljs.core.Keyword(null,\x22ord\x22,\x22ord\x22,1142548323),null,new cljs.core.Keyword(null,\x22alt\x22,\x22alt\x22,-3214426),null], null), null));\r\n/**\r\n * Replaces whitespace characters with escape sequences for better printing\r\n */\r\ninstaparse.print.regexp_replace \x3d (function instaparse$print$regexp_replace(s){\r\nvar G__25907 \x3d s;\r\nswitch (G__25907) {\r\ncase \x22\\n\x22:\r\nreturn \x22\\\\n\x22;\r\n\r\nbreak;\r\ncase \x22\\b\x22:\r\nreturn \x22\\\\b\x22;\r\n\r\nbreak;\r\ncase \x22\\f\x22:\r\nreturn \x22\\\\f\x22;\r\n\r\nbreak;\r\ncase \x22\\r\x22:\r\nreturn \x22\\\\r\x22;\r\n\r\nbreak;\r\ncase \x22\\t\x22:\r\nreturn \x22\\\\t\x22;\r\n\r\nbreak;\r\ndefault:\r\nreturn s;\r\n\r\n}\r\n});\r\ninstaparse.print.regexp__GT_str \x3d (function instaparse$print$regexp__GT_str(r){\r\nreturn clojure.string.replace([\x22#\\\x22\x22,cljs.core.subs.cljs$core$IFn$_invoke$arity$2(r.source,(1)),\x22\\\x22\x22].join(\x27\x27),/[\\s]/,instaparse.print.regexp_replace);\r\n});\r\ninstaparse.print.number__GT_hex_padded \x3d (function instaparse$print$number__GT_hex_padded(n){\r\nif((n \x3c\x3d (4095))){\r\nreturn [\x220000\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(n.toString((16)))].join(\x27\x27).substr((-4));\r\n} else {\r\nreturn n.toString((16));\r\n}\r\n});\r\n\r\ninstaparse.print.char_range__GT_str \x3d (function instaparse$print$char_range__GT_str(p__25910){\r\nvar map__25913 \x3d p__25910;\r\nvar map__25913__$1 \x3d cljs.core.__destructure_map(map__25913);\r\nvar lo \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25913__$1,new cljs.core.Keyword(null,\x22lo\x22,\x22lo\x22,-931799889));\r\nvar hi \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25913__$1,new cljs.core.Keyword(null,\x22hi\x22,\x22hi\x22,-1821422114));\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(lo,hi)){\r\nreturn [\x22%x\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(instaparse.print.number__GT_hex_padded(lo))].join(\x27\x27);\r\n} else {\r\nreturn [\x22%x\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(instaparse.print.number__GT_hex_padded(lo)),\x22-\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(instaparse.print.number__GT_hex_padded(hi))].join(\x27\x27);\r\n}\r\n});\r\n/**\r\n * Stringifies a parser built from combinators\r\n */\r\ninstaparse.print.combinators__GT_str \x3d (function instaparse$print$combinators__GT_str(var_args){\r\nvar G__25918 \x3d arguments.length;\r\nswitch (G__25918) {\r\ncase 1:\r\nreturn instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$1 \x3d (function (p){\r\nreturn instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$2(p,false);\r\n}));\r\n\r\n(instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$2 \x3d (function (p__25921,hidden_QMARK_){\r\nvar map__25922 \x3d p__25921;\r\nvar map__25922__$1 \x3d cljs.core.__destructure_map(map__25922);\r\nvar p \x3d map__25922__$1;\r\nvar parser \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25922__$1,new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310));\r\nvar parser1 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25922__$1,new cljs.core.Keyword(null,\x22parser1\x22,\x22parser1\x22,-439601422));\r\nvar parser2 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25922__$1,new cljs.core.Keyword(null,\x22parser2\x22,\x22parser2\x22,1013754688));\r\nvar parsers \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25922__$1,new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827));\r\nvar tag \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25922__$1,new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223));\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d cljs.core.not(hidden_QMARK_);\r\nif(and__4251__auto__){\r\nreturn new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169).cljs$core$IFn$_invoke$arity$1(p);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nreturn [\x22\x3c\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$2(p,true)),\x22\x3e\x22].join(\x27\x27);\r\n} else {\r\nvar G__25923 \x3d tag;\r\nvar G__25923__$1 \x3d (((G__25923 instanceof cljs.core.Keyword))?G__25923.fqn:null);\r\nswitch (G__25923__$1) {\r\ncase \x22epsilon\x22:\r\nreturn \x22\\u03B5\x22;\r\n\r\nbreak;\r\ncase \x22opt\x22:\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(instaparse.print.paren_for_compound(hidden_QMARK_,parser)),\x22?\x22].join(\x27\x27);\r\n\r\nbreak;\r\ncase \x22plus\x22:\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(instaparse.print.paren_for_compound(hidden_QMARK_,parser)),\x22+\x22].join(\x27\x27);\r\n\r\nbreak;\r\ncase \x22star\x22:\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(instaparse.print.paren_for_compound(hidden_QMARK_,parser)),\x22*\x22].join(\x27\x27);\r\n\r\nbreak;\r\ncase \x22rep\x22:\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22min\x22,\x22min\x22,444991522).cljs$core$IFn$_invoke$arity$1(p),new cljs.core.Keyword(null,\x22max\x22,\x22max\x22,61366548).cljs$core$IFn$_invoke$arity$1(p))){\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(instaparse.print.paren_for_compound(hidden_QMARK_,parser)),\x22{\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22min\x22,\x22min\x22,444991522).cljs$core$IFn$_invoke$arity$1(p)),\x22,\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22max\x22,\x22max\x22,61366548).cljs$core$IFn$_invoke$arity$1(p)),\x22}\x22].join(\x27\x27);\r\n} else {\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(instaparse.print.paren_for_compound(hidden_QMARK_,parser)),\x22{\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22min\x22,\x22min\x22,444991522).cljs$core$IFn$_invoke$arity$1(p)),\x22}\x22].join(\x27\x27);\r\n}\r\n\r\nbreak;\r\ncase \x22alt\x22:\r\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$2(\x22 | \x22,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$3(instaparse.print.paren_for_tags,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22ord\x22,\x22ord\x22,1142548323),null], null), null),hidden_QMARK_),parsers));\r\n\r\nbreak;\r\ncase \x22ord\x22:\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(instaparse.print.paren_for_tags(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22alt\x22,\x22alt\x22,-3214426),null], null), null),hidden_QMARK_,parser1)),\x22 / \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(instaparse.print.paren_for_tags(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22alt\x22,\x22alt\x22,-3214426),null], null), null),hidden_QMARK_,parser2))].join(\x27\x27);\r\n\r\nbreak;\r\ncase \x22cat\x22:\r\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$2(\x22 \x22,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$3(instaparse.print.paren_for_tags,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22ord\x22,\x22ord\x22,1142548323),null,new cljs.core.Keyword(null,\x22alt\x22,\x22alt\x22,-3214426),null], null), null),hidden_QMARK_),parsers));\r\n\r\nbreak;\r\ncase \x22string\x22:\r\nvar sb__4795__auto__ \x3d (new goog.string.StringBuffer());\r\nvar _STAR_print_newline_STAR__orig_val__25926_25968 \x3d cljs.core._STAR_print_newline_STAR_;\r\nvar _STAR_print_fn_STAR__orig_val__25927_25969 \x3d cljs.core._STAR_print_fn_STAR_;\r\nvar _STAR_print_newline_STAR__temp_val__25928_25970 \x3d true;\r\nvar _STAR_print_fn_STAR__temp_val__25929_25971 \x3d (function (x__4796__auto__){\r\nreturn sb__4795__auto__.append(x__4796__auto__);\r\n});\r\n(cljs.core._STAR_print_newline_STAR_ \x3d _STAR_print_newline_STAR__temp_val__25928_25970);\r\n\r\n(cljs.core._STAR_print_fn_STAR_ \x3d _STAR_print_fn_STAR__temp_val__25929_25971);\r\n\r\ntry{cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586).cljs$core$IFn$_invoke$arity$1(p)], 0));\r\n}finally {(cljs.core._STAR_print_fn_STAR_ \x3d _STAR_print_fn_STAR__orig_val__25927_25969);\r\n\r\n(cljs.core._STAR_print_newline_STAR_ \x3d _STAR_print_newline_STAR__orig_val__25926_25968);\r\n}\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4795__auto__);\r\n\r\nbreak;\r\ncase \x22string-ci\x22:\r\nvar sb__4795__auto__ \x3d (new goog.string.StringBuffer());\r\nvar _STAR_print_newline_STAR__orig_val__25931_25973 \x3d cljs.core._STAR_print_newline_STAR_;\r\nvar _STAR_print_fn_STAR__orig_val__25932_25974 \x3d cljs.core._STAR_print_fn_STAR_;\r\nvar _STAR_print_newline_STAR__temp_val__25933_25975 \x3d true;\r\nvar _STAR_print_fn_STAR__temp_val__25934_25976 \x3d (function (x__4796__auto__){\r\nreturn sb__4795__auto__.append(x__4796__auto__);\r\n});\r\n(cljs.core._STAR_print_newline_STAR_ \x3d _STAR_print_newline_STAR__temp_val__25933_25975);\r\n\r\n(cljs.core._STAR_print_fn_STAR_ \x3d _STAR_print_fn_STAR__temp_val__25934_25976);\r\n\r\ntry{cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586).cljs$core$IFn$_invoke$arity$1(p)], 0));\r\n}finally {(cljs.core._STAR_print_fn_STAR_ \x3d _STAR_print_fn_STAR__orig_val__25932_25974);\r\n\r\n(cljs.core._STAR_print_newline_STAR_ \x3d _STAR_print_newline_STAR__orig_val__25931_25973);\r\n}\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4795__auto__);\r\n\r\nbreak;\r\ncase \x22char\x22:\r\nreturn instaparse.print.char_range__GT_str(p);\r\n\r\nbreak;\r\ncase \x22regexp\x22:\r\nreturn instaparse.print.regexp__GT_str(new cljs.core.Keyword(null,\x22regexp\x22,\x22regexp\x22,-541372782).cljs$core$IFn$_invoke$arity$1(p));\r\n\r\nbreak;\r\ncase \x22nt\x22:\r\nreturn cljs.core.subs.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747).cljs$core$IFn$_invoke$arity$1(p)),(1));\r\n\r\nbreak;\r\ncase \x22look\x22:\r\nreturn [\x22\x26\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(instaparse.print.paren_for_compound(hidden_QMARK_,parser))].join(\x27\x27);\r\n\r\nbreak;\r\ncase \x22neg\x22:\r\nreturn [\x22!\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(instaparse.print.paren_for_compound(hidden_QMARK_,parser))].join(\x27\x27);\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__25923__$1)].join(\x27\x27)));\r\n\r\n}\r\n}\r\n}));\r\n\r\n(instaparse.print.combinators__GT_str.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Takes a non-terminal symbol and a parser built from combinators,\r\n * and returns a string for the rule.\r\n */\r\ninstaparse.print.rule__GT_str \x3d (function instaparse$print$rule__GT_str(non_terminal,parser){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204).cljs$core$IFn$_invoke$arity$1(parser)),new cljs.core.Keyword(null,\x22raw\x22,\x22raw\x22,1604651272))){\r\nreturn [\x22\x3c\x22,cljs.core.name(non_terminal),\x22\x3e\x22,\x22 \x3d \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$1(parser))].join(\x27\x27);\r\n} else {\r\nreturn [cljs.core.name(non_terminal),\x22 \x3d \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$1(parser))].join(\x27\x27);\r\n}\r\n});\r\n/**\r\n * Takes a Parser object, i.e., something with a grammar map and a start \r\n * production keyword, and stringifies it.\r\n */\r\ninstaparse.print.Parser__GT_str \x3d (function instaparse$print$Parser__GT_str(p__25946){\r\nvar map__25947 \x3d p__25946;\r\nvar map__25947__$1 \x3d cljs.core.__destructure_map(map__25947);\r\nvar grammar \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25947__$1,new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267));\r\nvar start \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25947__$1,new cljs.core.Keyword(null,\x22start-production\x22,\x22start-production\x22,687546537));\r\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$2(\x22\\n\x22,cljs.core.cons(instaparse.print.rule__GT_str(start,(grammar.cljs$core$IFn$_invoke$arity$1 ? grammar.cljs$core$IFn$_invoke$arity$1(start) : grammar.call(null,start))),(function (){var iter__4652__auto__ \x3d (function instaparse$print$Parser__GT_str_$_iter__25948(s__25949){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s__25949__$1 \x3d s__25949;\r\nwhile(true){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(s__25949__$1);\r\nif(temp__5753__auto__){\r\nvar s__25949__$2 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__25949__$2)){\r\nvar c__4650__auto__ \x3d cljs.core.chunk_first(s__25949__$2);\r\nvar size__4651__auto__ \x3d cljs.core.count(c__4650__auto__);\r\nvar b__25951 \x3d cljs.core.chunk_buffer(size__4651__auto__);\r\nif((function (){var i__25950 \x3d (0);\r\nwhile(true){\r\nif((i__25950 \x3c size__4651__auto__)){\r\nvar vec__25952 \x3d cljs.core._nth(c__4650__auto__,i__25950);\r\nvar non_terminal \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25952,(0),null);\r\nvar parser \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25952,(1),null);\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(non_terminal,start)){\r\ncljs.core.chunk_append(b__25951,instaparse.print.rule__GT_str(non_terminal,parser));\r\n\r\nvar G__25981 \x3d (i__25950 + (1));\r\ni__25950 \x3d G__25981;\r\ncontinue;\r\n} else {\r\nvar G__25982 \x3d (i__25950 + (1));\r\ni__25950 \x3d G__25982;\r\ncontinue;\r\n}\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__25951),instaparse$print$Parser__GT_str_$_iter__25948(cljs.core.chunk_rest(s__25949__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__25951),null);\r\n}\r\n} else {\r\nvar vec__25955 \x3d cljs.core.first(s__25949__$2);\r\nvar non_terminal \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25955,(0),null);\r\nvar parser \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25955,(1),null);\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(non_terminal,start)){\r\nreturn cljs.core.cons(instaparse.print.rule__GT_str(non_terminal,parser),instaparse$print$Parser__GT_str_$_iter__25948(cljs.core.rest(s__25949__$2)));\r\n} else {\r\nvar G__25983 \x3d cljs.core.rest(s__25949__$2);\r\ns__25949__$1 \x3d G__25983;\r\ncontinue;\r\n}\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}),null,null));\r\n});\r\nreturn iter__4652__auto__(grammar);\r\n})()));\r\n});\r\n");
SHADOW_ENV.evalLoad("instaparse.failure.js", true , "goog.provide(\x27instaparse.failure\x27);\r\n/**\r\n * Takes an index into text, and determines the line and column info\r\n */\r\ninstaparse.failure.index__GT_line_column \x3d (function instaparse$failure$index__GT_line_column(index,text){\r\nvar line \x3d (1);\r\nvar col \x3d (1);\r\nvar counter \x3d (0);\r\nwhile(true){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(index,counter)){\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),line,new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),col], null);\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22\\n\x22,cljs.core.get.cljs$core$IFn$_invoke$arity$2(text,counter))){\r\nvar G__26019 \x3d (line + (1));\r\nvar G__26020 \x3d (1);\r\nvar G__26021 \x3d (counter + (1));\r\nline \x3d G__26019;\r\ncol \x3d G__26020;\r\ncounter \x3d G__26021;\r\ncontinue;\r\n} else {\r\nvar G__26022 \x3d line;\r\nvar G__26023 \x3d (col + (1));\r\nvar G__26024 \x3d (counter + (1));\r\nline \x3d G__26022;\r\ncol \x3d G__26023;\r\ncounter \x3d G__26024;\r\ncontinue;\r\n\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ninstaparse.failure.get_line \x3d (function instaparse$failure$get_line(n,text){\r\nvar chars \x3d cljs.core.seq(clojure.string.replace(text,\x22\\r\\n\x22,\x22\\n\x22));\r\nvar n__$1 \x3d n;\r\nwhile(true){\r\nif(cljs.core.empty_QMARK_(chars)){\r\nreturn \x22\x22;\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(n__$1,(1))){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [\x22\\n\x22,null], null), null)),chars));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22\\n\x22,cljs.core.first(chars))){\r\nvar G__26025 \x3d cljs.core.next(chars);\r\nvar G__26026 \x3d (n__$1 - (1));\r\nchars \x3d G__26025;\r\nn__$1 \x3d G__26026;\r\ncontinue;\r\n} else {\r\nvar G__26027 \x3d cljs.core.next(chars);\r\nvar G__26028 \x3d n__$1;\r\nchars \x3d G__26027;\r\nn__$1 \x3d G__26028;\r\ncontinue;\r\n\r\n}\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Creates string with caret at nth position, 1-based\r\n */\r\ninstaparse.failure.marker \x3d (function instaparse$failure$marker(n){\r\nif(cljs.core.integer_QMARK_(n)){\r\nif((n \x3c\x3d (1))){\r\nreturn \x22^\x22;\r\n} else {\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((n - (1)),\x22 \x22),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22^\x22], null)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Adds text, line, and column info to failure object.\r\n */\r\ninstaparse.failure.augment_failure \x3d (function instaparse$failure$augment_failure(failure,text){\r\nvar lc \x3d instaparse.failure.index__GT_line_column(new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915).cljs$core$IFn$_invoke$arity$1(failure),text);\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([failure,lc,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697),instaparse.failure.get_line(new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235).cljs$core$IFn$_invoke$arity$1(lc),text)], null)], 0));\r\n});\r\n/**\r\n * Provides special case for printing negative lookahead reasons\r\n */\r\ninstaparse.failure.print_reason \x3d (function instaparse$failure$print_reason(r){\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22NOT\x22,\x22NOT\x22,-1689245341).cljs$core$IFn$_invoke$arity$1(r))){\r\ncljs.core.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22NOT \x22], 0));\r\n\r\nreturn cljs.core.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22NOT\x22,\x22NOT\x22,-1689245341).cljs$core$IFn$_invoke$arity$1(r)], 0));\r\n} else {\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22char-range\x22,\x22char-range\x22,1443391389).cljs$core$IFn$_invoke$arity$1(r))){\r\nreturn cljs.core.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.print.char_range__GT_str(r)], 0));\r\n} else {\r\nif((r instanceof RegExp)){\r\nreturn cljs.core.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.print.regexp__GT_str(r)], 0));\r\n} else {\r\nreturn cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([r], 0));\r\n\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Takes an augmented failure object and prints the error message\r\n */\r\ninstaparse.failure.pprint_failure \x3d (function instaparse$failure$pprint_failure(p__25991){\r\nvar map__25992 \x3d p__25991;\r\nvar map__25992__$1 \x3d cljs.core.__destructure_map(map__25992);\r\nvar line \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25992__$1,new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235));\r\nvar column \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25992__$1,new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095));\r\nvar text \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25992__$1,new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697));\r\nvar reason \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25992__$1,new cljs.core.Keyword(null,\x22reason\x22,\x22reason\x22,-2070751759));\r\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\x22Parse error at line \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(line),\x22, column \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(column),\x22:\x22].join(\x27\x27)], 0));\r\n\r\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([text], 0));\r\n\r\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.failure.marker(column)], 0));\r\n\r\nvar full_reasons \x3d cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22expecting\x22,\x22expecting\x22,-57706705),cljs.core.filter.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22full\x22,\x22full\x22,436801220),reason)));\r\nvar partial_reasons \x3d cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22expecting\x22,\x22expecting\x22,-57706705),cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(new cljs.core.Keyword(null,\x22full\x22,\x22full\x22,436801220)),reason)));\r\nvar total \x3d (cljs.core.count(full_reasons) + cljs.core.count(partial_reasons));\r\nif((total \x3d\x3d\x3d (0))){\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),total)){\r\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Expected:\x22], 0));\r\n} else {\r\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Expected one of:\x22], 0));\r\n\r\n}\r\n}\r\n\r\nvar seq__25997_26029 \x3d cljs.core.seq(full_reasons);\r\nvar chunk__25998_26030 \x3d null;\r\nvar count__25999_26031 \x3d (0);\r\nvar i__26000_26032 \x3d (0);\r\nwhile(true){\r\nif((i__26000_26032 \x3c count__25999_26031)){\r\nvar r_26033 \x3d chunk__25998_26030.cljs$core$IIndexed$_nth$arity$2(null,i__26000_26032);\r\ninstaparse.failure.print_reason(r_26033);\r\n\r\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22 (followed by end-of-string)\x22], 0));\r\n\r\n\r\nvar G__26034 \x3d seq__25997_26029;\r\nvar G__26035 \x3d chunk__25998_26030;\r\nvar G__26036 \x3d count__25999_26031;\r\nvar G__26037 \x3d (i__26000_26032 + (1));\r\nseq__25997_26029 \x3d G__26034;\r\nchunk__25998_26030 \x3d G__26035;\r\ncount__25999_26031 \x3d G__26036;\r\ni__26000_26032 \x3d G__26037;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto___26038 \x3d cljs.core.seq(seq__25997_26029);\r\nif(temp__5753__auto___26038){\r\nvar seq__25997_26039__$1 \x3d temp__5753__auto___26038;\r\nif(cljs.core.chunked_seq_QMARK_(seq__25997_26039__$1)){\r\nvar c__4679__auto___26040 \x3d cljs.core.chunk_first(seq__25997_26039__$1);\r\nvar G__26041 \x3d cljs.core.chunk_rest(seq__25997_26039__$1);\r\nvar G__26042 \x3d c__4679__auto___26040;\r\nvar G__26043 \x3d cljs.core.count(c__4679__auto___26040);\r\nvar G__26044 \x3d (0);\r\nseq__25997_26029 \x3d G__26041;\r\nchunk__25998_26030 \x3d G__26042;\r\ncount__25999_26031 \x3d G__26043;\r\ni__26000_26032 \x3d G__26044;\r\ncontinue;\r\n} else {\r\nvar r_26045 \x3d cljs.core.first(seq__25997_26039__$1);\r\ninstaparse.failure.print_reason(r_26045);\r\n\r\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22 (followed by end-of-string)\x22], 0));\r\n\r\n\r\nvar G__26046 \x3d cljs.core.next(seq__25997_26039__$1);\r\nvar G__26047 \x3d null;\r\nvar G__26048 \x3d (0);\r\nvar G__26049 \x3d (0);\r\nseq__25997_26029 \x3d G__26046;\r\nchunk__25998_26030 \x3d G__26047;\r\ncount__25999_26031 \x3d G__26048;\r\ni__26000_26032 \x3d G__26049;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nvar seq__26003 \x3d cljs.core.seq(partial_reasons);\r\nvar chunk__26004 \x3d null;\r\nvar count__26005 \x3d (0);\r\nvar i__26006 \x3d (0);\r\nwhile(true){\r\nif((i__26006 \x3c count__26005)){\r\nvar r \x3d chunk__26004.cljs$core$IIndexed$_nth$arity$2(null,i__26006);\r\ninstaparse.failure.print_reason(r);\r\n\r\ncljs.core.println();\r\n\r\n\r\nvar G__26051 \x3d seq__26003;\r\nvar G__26052 \x3d chunk__26004;\r\nvar G__26053 \x3d count__26005;\r\nvar G__26054 \x3d (i__26006 + (1));\r\nseq__26003 \x3d G__26051;\r\nchunk__26004 \x3d G__26052;\r\ncount__26005 \x3d G__26053;\r\ni__26006 \x3d G__26054;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto__ \x3d cljs.core.seq(seq__26003);\r\nif(temp__5753__auto__){\r\nvar seq__26003__$1 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__26003__$1)){\r\nvar c__4679__auto__ \x3d cljs.core.chunk_first(seq__26003__$1);\r\nvar G__26055 \x3d cljs.core.chunk_rest(seq__26003__$1);\r\nvar G__26056 \x3d c__4679__auto__;\r\nvar G__26057 \x3d cljs.core.count(c__4679__auto__);\r\nvar G__26058 \x3d (0);\r\nseq__26003 \x3d G__26055;\r\nchunk__26004 \x3d G__26056;\r\ncount__26005 \x3d G__26057;\r\ni__26006 \x3d G__26058;\r\ncontinue;\r\n} else {\r\nvar r \x3d cljs.core.first(seq__26003__$1);\r\ninstaparse.failure.print_reason(r);\r\n\r\ncljs.core.println();\r\n\r\n\r\nvar G__26059 \x3d cljs.core.next(seq__26003__$1);\r\nvar G__26060 \x3d null;\r\nvar G__26061 \x3d (0);\r\nvar G__26062 \x3d (0);\r\nseq__26003 \x3d G__26059;\r\nchunk__26004 \x3d G__26060;\r\ncount__26005 \x3d G__26061;\r\ni__26006 \x3d G__26062;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\n");
SHADOW_ENV.evalLoad("instaparse.util.js", true , "goog.provide(\x27instaparse.util\x27);\r\ninstaparse.util.throw_runtime_exception \x3d (function instaparse$util$throw_runtime_exception(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___25940 \x3d arguments.length;\r\nvar i__4865__auto___25941 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___25941 \x3c len__4864__auto___25940)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___25941]));\r\n\r\nvar G__25942 \x3d (i__4865__auto___25941 + (1));\r\ni__4865__auto___25941 \x3d G__25942;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn instaparse.util.throw_runtime_exception.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(instaparse.util.throw_runtime_exception.cljs$core$IFn$_invoke$arity$variadic \x3d (function (message){\r\nvar text \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,message);\r\nthrow text;\r\n}));\r\n\r\n(instaparse.util.throw_runtime_exception.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(instaparse.util.throw_runtime_exception.cljs$lang$applyTo \x3d (function (seq25920){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq25920));\r\n}));\r\n\r\ninstaparse.util.throw_illegal_argument_exception \x3d (function instaparse$util$throw_illegal_argument_exception(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___25943 \x3d arguments.length;\r\nvar i__4865__auto___25944 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___25944 \x3c len__4864__auto___25943)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___25944]));\r\n\r\nvar G__25945 \x3d (i__4865__auto___25944 + (1));\r\ni__4865__auto___25944 \x3d G__25945;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn instaparse.util.throw_illegal_argument_exception.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(instaparse.util.throw_illegal_argument_exception.cljs$core$IFn$_invoke$arity$variadic \x3d (function (message){\r\nvar text \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,message);\r\nthrow text;\r\n}));\r\n\r\n(instaparse.util.throw_illegal_argument_exception.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(instaparse.util.throw_illegal_argument_exception.cljs$lang$applyTo \x3d (function (seq25925){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq25925));\r\n}));\r\n\r\ninstaparse.util.regexp_flags \x3d (function instaparse$util$regexp_flags(re){\r\nvar G__25935 \x3d \x22\x22;\r\nvar G__25935__$1 \x3d (cljs.core.truth_(re.ignoreCase)?[G__25935,\x22i\x22].join(\x27\x27):G__25935);\r\nvar G__25935__$2 \x3d (cljs.core.truth_(re.multiline)?[G__25935__$1,\x22m\x22].join(\x27\x27):G__25935__$1);\r\nif(cljs.core.truth_(re.unicode)){\r\nreturn [G__25935__$2,\x22u\x22].join(\x27\x27);\r\n} else {\r\nreturn G__25935__$2;\r\n}\r\n});\r\n");
SHADOW_ENV.evalLoad("instaparse.reduction.js", true , "goog.provide(\x27instaparse.reduction\x27);\r\ninstaparse.reduction.singleton_QMARK_ \x3d (function instaparse$reduction$singleton_QMARK_(s){\r\nreturn ((cljs.core.seq(s)) \x26\x26 (cljs.core.not(cljs.core.next(s))));\r\n});\r\ninstaparse.reduction.red \x3d (function instaparse$reduction$red(parser,f){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),f);\r\n});\r\ninstaparse.reduction.raw_non_terminal_reduction \x3d new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22raw\x22,\x22raw\x22,1604651272)], null);\r\ninstaparse.reduction.HiccupNonTerminalReduction \x3d (function instaparse$reduction$HiccupNonTerminalReduction(key){\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),key], null);\r\n});\r\ninstaparse.reduction.EnliveNonTerminalReduction \x3d (function instaparse$reduction$EnliveNonTerminalReduction(key){\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22enlive\x22,\x22enlive\x22,1679023921),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),key], null);\r\n});\r\ninstaparse.reduction.reduction_types \x3d new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),instaparse.reduction.HiccupNonTerminalReduction,new cljs.core.Keyword(null,\x22enlive\x22,\x22enlive\x22,1679023921),instaparse.reduction.EnliveNonTerminalReduction], null);\r\ninstaparse.reduction.node_builders \x3d new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22enlive\x22,\x22enlive\x22,1679023921),(function (tag,item){\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),tag,new cljs.core.Keyword(null,\x22content\x22,\x22content\x22,15833224),(new cljs.core.List(null,item,null,(1),null))], null);\r\n}),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),(function (tag,item){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag,item], null);\r\n})], null);\r\ninstaparse.reduction.standard_non_terminal_reduction \x3d new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238);\r\ninstaparse.reduction.apply_reduction \x3d (function instaparse$reduction$apply_reduction(f,result){\r\nvar G__26102 \x3d new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450).cljs$core$IFn$_invoke$arity$1(f);\r\nvar G__26102__$1 \x3d (((G__26102 instanceof cljs.core.Keyword))?G__26102.fqn:null);\r\nswitch (G__26102__$1) {\r\ncase \x22raw\x22:\r\nreturn instaparse.auto_flatten_seq.EMPTY.instaparse$auto_flatten_seq$ConjFlat$conj_flat$arity$2(null,result);\r\n\r\nbreak;\r\ncase \x22hiccup\x22:\r\nreturn instaparse.auto_flatten_seq.convert_afs_to_vec(instaparse.auto_flatten_seq.auto_flatten_seq(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587).cljs$core$IFn$_invoke$arity$1(f)], null)).instaparse$auto_flatten_seq$ConjFlat$conj_flat$arity$2(null,result));\r\n\r\nbreak;\r\ncase \x22enlive\x22:\r\nvar content \x3d instaparse.auto_flatten_seq.EMPTY.instaparse$auto_flatten_seq$ConjFlat$conj_flat$arity$2(null,result);\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587).cljs$core$IFn$_invoke$arity$1(f),new cljs.core.Keyword(null,\x22content\x22,\x22content\x22,15833224),(((cljs.core.count(content) \x3d\x3d\x3d (0)))?null:content)], null);\r\n\r\nbreak;\r\ndefault:\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(result) : f.call(null,result));\r\n\r\n}\r\n});\r\ninstaparse.reduction.apply_standard_reductions \x3d (function instaparse$reduction$apply_standard_reductions(var_args){\r\nvar G__26104 \x3d arguments.length;\r\nswitch (G__26104) {\r\ncase 1:\r\nreturn instaparse.reduction.apply_standard_reductions.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn instaparse.reduction.apply_standard_reductions.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(instaparse.reduction.apply_standard_reductions.cljs$core$IFn$_invoke$arity$1 \x3d (function (grammar){\r\nreturn instaparse.reduction.apply_standard_reductions.cljs$core$IFn$_invoke$arity$2(instaparse.reduction.standard_non_terminal_reduction,grammar);\r\n}));\r\n\r\n(instaparse.reduction.apply_standard_reductions.cljs$core$IFn$_invoke$arity$2 \x3d (function (reduction_type,grammar){\r\nvar temp__5751__auto__ \x3d (instaparse.reduction.reduction_types.cljs$core$IFn$_invoke$arity$1 ? instaparse.reduction.reduction_types.cljs$core$IFn$_invoke$arity$1(reduction_type) : instaparse.reduction.reduction_types.call(null,reduction_type));\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar reduction \x3d temp__5751__auto__;\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4652__auto__ \x3d (function instaparse$reduction$iter__26105(s__26106){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s__26106__$1 \x3d s__26106;\r\nwhile(true){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(s__26106__$1);\r\nif(temp__5753__auto__){\r\nvar s__26106__$2 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__26106__$2)){\r\nvar c__4650__auto__ \x3d cljs.core.chunk_first(s__26106__$2);\r\nvar size__4651__auto__ \x3d cljs.core.count(c__4650__auto__);\r\nvar b__26108 \x3d cljs.core.chunk_buffer(size__4651__auto__);\r\nif((function (){var i__26107 \x3d (0);\r\nwhile(true){\r\nif((i__26107 \x3c size__4651__auto__)){\r\nvar vec__26110 \x3d cljs.core._nth(c__4650__auto__,i__26107);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26110,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26110,(1),null);\r\ncljs.core.chunk_append(b__26108,(cljs.core.truth_(new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204).cljs$core$IFn$_invoke$arity$1(v))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),(reduction.cljs$core$IFn$_invoke$arity$1 ? reduction.cljs$core$IFn$_invoke$arity$1(k) : reduction.call(null,k)))], null)));\r\n\r\nvar G__26120 \x3d (i__26107 + (1));\r\ni__26107 \x3d G__26120;\r\ncontinue;\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__26108),instaparse$reduction$iter__26105(cljs.core.chunk_rest(s__26106__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__26108),null);\r\n}\r\n} else {\r\nvar vec__26113 \x3d cljs.core.first(s__26106__$2);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26113,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26113,(1),null);\r\nreturn cljs.core.cons((cljs.core.truth_(new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204).cljs$core$IFn$_invoke$arity$1(v))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),(reduction.cljs$core$IFn$_invoke$arity$1 ? reduction.cljs$core$IFn$_invoke$arity$1(k) : reduction.call(null,k)))], null)),instaparse$reduction$iter__26105(cljs.core.rest(s__26106__$2)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}),null,null));\r\n});\r\nreturn iter__4652__auto__(grammar);\r\n})());\r\n} else {\r\nreturn instaparse.util.throw_illegal_argument_exception.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid output format \x22,reduction_type,\x22. Use :enlive or :hiccup.\x22], 0));\r\n}\r\n}));\r\n\r\n(instaparse.reduction.apply_standard_reductions.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n");
SHADOW_ENV.evalLoad("instaparse.combinators_source.js", true , "goog.provide(\x27instaparse.combinators_source\x27);\r\ninstaparse.combinators_source.Epsilon \x3d new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22epsilon\x22,\x22epsilon\x22,-730158570)], null);\r\n/**\r\n * Optional, i.e., parser?\r\n */\r\ninstaparse.combinators_source.opt \x3d (function instaparse$combinators_source$opt(parser){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(parser,instaparse.combinators_source.Epsilon)){\r\nreturn instaparse.combinators_source.Epsilon;\r\n} else {\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22opt\x22,\x22opt\x22,-794706369),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),parser], null);\r\n}\r\n});\r\n/**\r\n * One or more, i.e., parser+\r\n */\r\ninstaparse.combinators_source.plus \x3d (function instaparse$combinators_source$plus(parser){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(parser,instaparse.combinators_source.Epsilon)){\r\nreturn instaparse.combinators_source.Epsilon;\r\n} else {\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22plus\x22,\x22plus\x22,211540661),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),parser], null);\r\n}\r\n});\r\n/**\r\n * Zero or more, i.e., parser*\r\n */\r\ninstaparse.combinators_source.star \x3d (function instaparse$combinators_source$star(parser){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(parser,instaparse.combinators_source.Epsilon)){\r\nreturn instaparse.combinators_source.Epsilon;\r\n} else {\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22star\x22,\x22star\x22,279424429),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),parser], null);\r\n}\r\n});\r\n/**\r\n * Between m and n repetitions\r\n */\r\ninstaparse.combinators_source.rep \x3d (function instaparse$combinators_source$rep(m,n,parser){\r\nif((m \x3c\x3d n)){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (\x3c\x3d m n)\x22));\r\n}\r\n\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(parser,instaparse.combinators_source.Epsilon)){\r\nreturn instaparse.combinators_source.Epsilon;\r\n} else {\r\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22rep\x22,\x22rep\x22,-1226820564),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),parser,new cljs.core.Keyword(null,\x22min\x22,\x22min\x22,444991522),m,new cljs.core.Keyword(null,\x22max\x22,\x22max\x22,61366548),n], null);\r\n}\r\n});\r\n/**\r\n * Alternation, i.e., parser1 | parser2 | parser3 | ...\r\n */\r\ninstaparse.combinators_source.alt \x3d (function instaparse$combinators_source$alt(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___26250 \x3d arguments.length;\r\nvar i__4865__auto___26251 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___26251 \x3c len__4864__auto___26250)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___26251]));\r\n\r\nvar G__26252 \x3d (i__4865__auto___26251 + (1));\r\ni__4865__auto___26251 \x3d G__26252;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic \x3d (function (parsers){\r\nif(cljs.core.every_QMARK_(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core._EQ_,instaparse.combinators_source.Epsilon),parsers)){\r\nreturn instaparse.combinators_source.Epsilon;\r\n} else {\r\nif(instaparse.reduction.singleton_QMARK_(parsers)){\r\nreturn cljs.core.first(parsers);\r\n} else {\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22alt\x22,\x22alt\x22,-3214426),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),parsers], null);\r\n\r\n}\r\n}\r\n}));\r\n\r\n(instaparse.combinators_source.alt.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(instaparse.combinators_source.alt.cljs$lang$applyTo \x3d (function (seq26161){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq26161));\r\n}));\r\n\r\ninstaparse.combinators_source.ord2 \x3d (function instaparse$combinators_source$ord2(parser1,parser2){\r\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22ord\x22,\x22ord\x22,1142548323),new cljs.core.Keyword(null,\x22parser1\x22,\x22parser1\x22,-439601422),parser1,new cljs.core.Keyword(null,\x22parser2\x22,\x22parser2\x22,1013754688),parser2], null);\r\n});\r\n/**\r\n * Ordered choice, i.e., parser1 / parser2\r\n */\r\ninstaparse.combinators_source.ord \x3d (function instaparse$combinators_source$ord(var_args){\r\nvar G__26176 \x3d arguments.length;\r\nswitch (G__26176) {\r\ncase 0:\r\nreturn instaparse.combinators_source.ord.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4885__auto__ \x3d [];\r\nvar len__4864__auto___26254 \x3d arguments.length;\r\nvar i__4865__auto___26255 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___26255 \x3c len__4864__auto___26254)){\r\nargs_arr__4885__auto__.push((arguments[i__4865__auto___26255]));\r\n\r\nvar G__26257 \x3d (i__4865__auto___26255 + (1));\r\ni__4865__auto___26255 \x3d G__26257;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4886__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((1)),(0),null));\r\nreturn instaparse.combinators_source.ord.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4886__auto__);\r\n\r\n}\r\n});\r\n\r\n(instaparse.combinators_source.ord.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\r\nreturn instaparse.combinators_source.Epsilon;\r\n}));\r\n\r\n(instaparse.combinators_source.ord.cljs$core$IFn$_invoke$arity$variadic \x3d (function (parser1,parsers){\r\nvar parsers__$1 \x3d ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(parser1,instaparse.combinators_source.Epsilon))?cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.createAsIfByAssoc([instaparse.combinators_source.Epsilon]),parsers):parsers);\r\nif(cljs.core.seq(parsers__$1)){\r\nreturn instaparse.combinators_source.ord2(parser1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(instaparse.combinators_source.ord,parsers__$1));\r\n} else {\r\nreturn parser1;\r\n}\r\n}));\r\n\r\n/** @this {Function} */\r\n(instaparse.combinators_source.ord.cljs$lang$applyTo \x3d (function (seq26174){\r\nvar G__26175 \x3d cljs.core.first(seq26174);\r\nvar seq26174__$1 \x3d cljs.core.next(seq26174);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__26175,seq26174__$1);\r\n}));\r\n\r\n(instaparse.combinators_source.ord.cljs$lang$maxFixedArity \x3d (1));\r\n\r\n/**\r\n * Concatenation, i.e., parser1 parser2 ...\r\n */\r\ninstaparse.combinators_source.cat \x3d (function instaparse$combinators_source$cat(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___26259 \x3d arguments.length;\r\nvar i__4865__auto___26260 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___26260 \x3c len__4864__auto___26259)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___26260]));\r\n\r\nvar G__26261 \x3d (i__4865__auto___26260 + (1));\r\ni__4865__auto___26260 \x3d G__26261;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic \x3d (function (parsers){\r\nif(cljs.core.every_QMARK_(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core._EQ_,instaparse.combinators_source.Epsilon),parsers)){\r\nreturn instaparse.combinators_source.Epsilon;\r\n} else {\r\nvar parsers__$1 \x3d cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.createAsIfByAssoc([instaparse.combinators_source.Epsilon]),parsers);\r\nif(instaparse.reduction.singleton_QMARK_(parsers__$1)){\r\nreturn cljs.core.first(parsers__$1);\r\n} else {\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),parsers__$1], null);\r\n}\r\n}\r\n}));\r\n\r\n(instaparse.combinators_source.cat.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(instaparse.combinators_source.cat.cljs$lang$applyTo \x3d (function (seq26178){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq26178));\r\n}));\r\n\r\n/**\r\n * Create a string terminal out of s\r\n */\r\ninstaparse.combinators_source.string \x3d (function instaparse$combinators_source$string(s){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(s,\x22\x22)){\r\nreturn instaparse.combinators_source.Epsilon;\r\n} else {\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),s], null);\r\n}\r\n});\r\n/**\r\n * Create a case-insensitive string terminal out of s\r\n */\r\ninstaparse.combinators_source.string_ci \x3d (function instaparse$combinators_source$string_ci(s){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(s,\x22\x22)){\r\nreturn instaparse.combinators_source.Epsilon;\r\n} else {\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string-ci\x22,\x22string-ci\x22,374631805),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),s], null);\r\n}\r\n});\r\n/**\r\n * Matches a Unicode code point or a range of code points\r\n */\r\ninstaparse.combinators_source.unicode_char \x3d (function instaparse$combinators_source$unicode_char(var_args){\r\nvar G__26182 \x3d arguments.length;\r\nswitch (G__26182) {\r\ncase 1:\r\nreturn instaparse.combinators_source.unicode_char.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn instaparse.combinators_source.unicode_char.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(instaparse.combinators_source.unicode_char.cljs$core$IFn$_invoke$arity$1 \x3d (function (code_point){\r\nreturn instaparse.combinators_source.unicode_char.cljs$core$IFn$_invoke$arity$2(code_point,code_point);\r\n}));\r\n\r\n(instaparse.combinators_source.unicode_char.cljs$core$IFn$_invoke$arity$2 \x3d (function (lo,hi){\r\nif((lo \x3c\x3d hi)){\r\n} else {\r\nthrow (new Error([\x22Assert failed: \x22,\x22Character range minimum must be less than or equal the maximum\x22,\x22\\n\x22,\x22(\x3c\x3d lo hi)\x22].join(\x27\x27)));\r\n}\r\n\r\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22char\x22,\x22char\x22,-641587586),new cljs.core.Keyword(null,\x22lo\x22,\x22lo\x22,-931799889),lo,new cljs.core.Keyword(null,\x22hi\x22,\x22hi\x22,-1821422114),hi], null);\r\n}));\r\n\r\n(instaparse.combinators_source.unicode_char.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * JavaScript regexes have no .lookingAt method, so in cljs we just\r\n *   add a \x27^\x27 character to the front of the regex.\r\n */\r\ninstaparse.combinators_source.add_beginning_constraint \x3d (function instaparse$combinators_source$add_beginning_constraint(r){\r\nif(cljs.core.regexp_QMARK_(r)){\r\nreturn (new RegExp([\x22^\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(r.source)].join(\x27\x27),instaparse.util.regexp_flags(r)));\r\n} else {\r\nreturn r;\r\n}\r\n});\r\n/**\r\n * Create a regexp terminal out of regular expression r\r\n */\r\ninstaparse.combinators_source.regexp \x3d (function instaparse$combinators_source$regexp(r){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(r,\x22\x22)){\r\nreturn instaparse.combinators_source.Epsilon;\r\n} else {\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22regexp\x22,\x22regexp\x22,-541372782),new cljs.core.Keyword(null,\x22regexp\x22,\x22regexp\x22,-541372782),instaparse.combinators_source.add_beginning_constraint(cljs.core.re_pattern(r))], null);\r\n}\r\n});\r\n/**\r\n * Refers to a non-terminal defined by the grammar map\r\n */\r\ninstaparse.combinators_source.nt \x3d (function instaparse$combinators_source$nt(s){\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),s], null);\r\n});\r\n/**\r\n * Lookahead, i.e., \x26parser\r\n */\r\ninstaparse.combinators_source.look \x3d (function instaparse$combinators_source$look(parser){\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22look\x22,\x22look\x22,-539441433),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),parser], null);\r\n});\r\n/**\r\n * Negative lookahead, i.e., !parser\r\n */\r\ninstaparse.combinators_source.neg \x3d (function instaparse$combinators_source$neg(parser){\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22neg\x22,\x22neg\x22,1800032960),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),parser], null);\r\n});\r\n/**\r\n * Hide the result of parser, i.e., \x3cparser\x3e\r\n */\r\ninstaparse.combinators_source.hide \x3d (function instaparse$combinators_source$hide(parser){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true);\r\n});\r\n/**\r\n * Hide the tag associated with this rule.  \r\n *   Wrap this combinator around the entire right-hand side.\r\n */\r\ninstaparse.combinators_source.hide_tag \x3d (function instaparse$combinators_source$hide_tag(parser){\r\nreturn instaparse.reduction.red(parser,instaparse.reduction.raw_non_terminal_reduction);\r\n});\r\n/**\r\n * Tests whether parser was created with hide-tag combinator\r\n */\r\ninstaparse.combinators_source.hidden_tag_QMARK_ \x3d (function instaparse$combinators_source$hidden_tag_QMARK_(parser){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204).cljs$core$IFn$_invoke$arity$1(parser),instaparse.reduction.raw_non_terminal_reduction);\r\n});\r\n/**\r\n * Recursively undoes the effect of hide on one parser\r\n */\r\ninstaparse.combinators_source.unhide_content \x3d (function instaparse$combinators_source$unhide_content(parser){\r\nvar parser__$1 \x3d (cljs.core.truth_(new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169).cljs$core$IFn$_invoke$arity$1(parser))?cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parser,new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169)):parser);\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310).cljs$core$IFn$_invoke$arity$1(parser__$1))){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser__$1,new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),(function (){var G__26189 \x3d new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310).cljs$core$IFn$_invoke$arity$1(parser__$1);\r\nreturn (instaparse.combinators_source.unhide_content.cljs$core$IFn$_invoke$arity$1 ? instaparse.combinators_source.unhide_content.cljs$core$IFn$_invoke$arity$1(G__26189) : instaparse.combinators_source.unhide_content.call(null,G__26189));\r\n})());\r\n} else {\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827).cljs$core$IFn$_invoke$arity$1(parser__$1))){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser__$1,new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),cljs.core.map.cljs$core$IFn$_invoke$arity$2(instaparse.combinators_source.unhide_content,new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827).cljs$core$IFn$_invoke$arity$1(parser__$1)));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223).cljs$core$IFn$_invoke$arity$1(parser__$1),new cljs.core.Keyword(null,\x22ord\x22,\x22ord\x22,1142548323))){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(parser__$1,new cljs.core.Keyword(null,\x22parser1\x22,\x22parser1\x22,-439601422),(function (){var G__26190 \x3d new cljs.core.Keyword(null,\x22parser1\x22,\x22parser1\x22,-439601422).cljs$core$IFn$_invoke$arity$1(parser__$1);\r\nreturn (instaparse.combinators_source.unhide_content.cljs$core$IFn$_invoke$arity$1 ? instaparse.combinators_source.unhide_content.cljs$core$IFn$_invoke$arity$1(G__26190) : instaparse.combinators_source.unhide_content.call(null,G__26190));\r\n})(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22parser2\x22,\x22parser2\x22,1013754688),(function (){var G__26192 \x3d new cljs.core.Keyword(null,\x22parser2\x22,\x22parser2\x22,1013754688).cljs$core$IFn$_invoke$arity$1(parser__$1);\r\nreturn (instaparse.combinators_source.unhide_content.cljs$core$IFn$_invoke$arity$1 ? instaparse.combinators_source.unhide_content.cljs$core$IFn$_invoke$arity$1(G__26192) : instaparse.combinators_source.unhide_content.call(null,G__26192));\r\n})()], 0));\r\n} else {\r\nreturn parser__$1;\r\n\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Recursively undoes the effect of hide on all parsers in the grammar\r\n */\r\ninstaparse.combinators_source.unhide_all_content \x3d (function instaparse$combinators_source$unhide_all_content(grammar){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4652__auto__ \x3d (function instaparse$combinators_source$unhide_all_content_$_iter__26194(s__26195){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s__26195__$1 \x3d s__26195;\r\nwhile(true){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(s__26195__$1);\r\nif(temp__5753__auto__){\r\nvar s__26195__$2 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__26195__$2)){\r\nvar c__4650__auto__ \x3d cljs.core.chunk_first(s__26195__$2);\r\nvar size__4651__auto__ \x3d cljs.core.count(c__4650__auto__);\r\nvar b__26197 \x3d cljs.core.chunk_buffer(size__4651__auto__);\r\nif((function (){var i__26196 \x3d (0);\r\nwhile(true){\r\nif((i__26196 \x3c size__4651__auto__)){\r\nvar vec__26198 \x3d cljs.core._nth(c__4650__auto__,i__26196);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26198,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26198,(1),null);\r\ncljs.core.chunk_append(b__26197,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,instaparse.combinators_source.unhide_content(v)], null));\r\n\r\nvar G__26271 \x3d (i__26196 + (1));\r\ni__26196 \x3d G__26271;\r\ncontinue;\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__26197),instaparse$combinators_source$unhide_all_content_$_iter__26194(cljs.core.chunk_rest(s__26195__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__26197),null);\r\n}\r\n} else {\r\nvar vec__26201 \x3d cljs.core.first(s__26195__$2);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26201,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26201,(1),null);\r\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,instaparse.combinators_source.unhide_content(v)], null),instaparse$combinators_source$unhide_all_content_$_iter__26194(cljs.core.rest(s__26195__$2)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}),null,null));\r\n});\r\nreturn iter__4652__auto__(grammar);\r\n})());\r\n});\r\n/**\r\n * Recursively undoes the effect of hide-tag\r\n */\r\ninstaparse.combinators_source.unhide_tags \x3d (function instaparse$combinators_source$unhide_tags(reduction_type,grammar){\r\nvar temp__5751__auto__ \x3d (instaparse.reduction.reduction_types.cljs$core$IFn$_invoke$arity$1 ? instaparse.reduction.reduction_types.cljs$core$IFn$_invoke$arity$1(reduction_type) : instaparse.reduction.reduction_types.call(null,reduction_type));\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar reduction \x3d temp__5751__auto__;\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4652__auto__ \x3d (function instaparse$combinators_source$unhide_tags_$_iter__26204(s__26205){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s__26205__$1 \x3d s__26205;\r\nwhile(true){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(s__26205__$1);\r\nif(temp__5753__auto__){\r\nvar s__26205__$2 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__26205__$2)){\r\nvar c__4650__auto__ \x3d cljs.core.chunk_first(s__26205__$2);\r\nvar size__4651__auto__ \x3d cljs.core.count(c__4650__auto__);\r\nvar b__26207 \x3d cljs.core.chunk_buffer(size__4651__auto__);\r\nif((function (){var i__26206 \x3d (0);\r\nwhile(true){\r\nif((i__26206 \x3c size__4651__auto__)){\r\nvar vec__26208 \x3d cljs.core._nth(c__4650__auto__,i__26206);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26208,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26208,(1),null);\r\ncljs.core.chunk_append(b__26207,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),(reduction.cljs$core$IFn$_invoke$arity$1 ? reduction.cljs$core$IFn$_invoke$arity$1(k) : reduction.call(null,k)))], null));\r\n\r\nvar G__26272 \x3d (i__26206 + (1));\r\ni__26206 \x3d G__26272;\r\ncontinue;\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__26207),instaparse$combinators_source$unhide_tags_$_iter__26204(cljs.core.chunk_rest(s__26205__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__26207),null);\r\n}\r\n} else {\r\nvar vec__26211 \x3d cljs.core.first(s__26205__$2);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26211,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26211,(1),null);\r\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),(reduction.cljs$core$IFn$_invoke$arity$1 ? reduction.cljs$core$IFn$_invoke$arity$1(k) : reduction.call(null,k)))], null),instaparse$combinators_source$unhide_tags_$_iter__26204(cljs.core.rest(s__26205__$2)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}),null,null));\r\n});\r\nreturn iter__4652__auto__(grammar);\r\n})());\r\n} else {\r\nreturn instaparse.util.throw_illegal_argument_exception.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid output format \x22,reduction_type,\x22. Use :enlive or :hiccup.\x22], 0));\r\n}\r\n});\r\n/**\r\n * Recursively undoes the effect of both hide and hide-tag\r\n */\r\ninstaparse.combinators_source.unhide_all \x3d (function instaparse$combinators_source$unhide_all(reduction_type,grammar){\r\nvar temp__5751__auto__ \x3d (instaparse.reduction.reduction_types.cljs$core$IFn$_invoke$arity$1 ? instaparse.reduction.reduction_types.cljs$core$IFn$_invoke$arity$1(reduction_type) : instaparse.reduction.reduction_types.call(null,reduction_type));\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar reduction \x3d temp__5751__auto__;\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4652__auto__ \x3d (function instaparse$combinators_source$unhide_all_$_iter__26215(s__26216){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s__26216__$1 \x3d s__26216;\r\nwhile(true){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(s__26216__$1);\r\nif(temp__5753__auto__){\r\nvar s__26216__$2 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__26216__$2)){\r\nvar c__4650__auto__ \x3d cljs.core.chunk_first(s__26216__$2);\r\nvar size__4651__auto__ \x3d cljs.core.count(c__4650__auto__);\r\nvar b__26218 \x3d cljs.core.chunk_buffer(size__4651__auto__);\r\nif((function (){var i__26217 \x3d (0);\r\nwhile(true){\r\nif((i__26217 \x3c size__4651__auto__)){\r\nvar vec__26220 \x3d cljs.core._nth(c__4650__auto__,i__26217);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26220,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26220,(1),null);\r\ncljs.core.chunk_append(b__26218,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(instaparse.combinators_source.unhide_content(v),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),(reduction.cljs$core$IFn$_invoke$arity$1 ? reduction.cljs$core$IFn$_invoke$arity$1(k) : reduction.call(null,k)))], null));\r\n\r\nvar G__26283 \x3d (i__26217 + (1));\r\ni__26217 \x3d G__26283;\r\ncontinue;\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__26218),instaparse$combinators_source$unhide_all_$_iter__26215(cljs.core.chunk_rest(s__26216__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__26218),null);\r\n}\r\n} else {\r\nvar vec__26223 \x3d cljs.core.first(s__26216__$2);\r\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26223,(0),null);\r\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26223,(1),null);\r\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(instaparse.combinators_source.unhide_content(v),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),(reduction.cljs$core$IFn$_invoke$arity$1 ? reduction.cljs$core$IFn$_invoke$arity$1(k) : reduction.call(null,k)))], null),instaparse$combinators_source$unhide_all_$_iter__26215(cljs.core.rest(s__26216__$2)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}),null,null));\r\n});\r\nreturn iter__4652__auto__(grammar);\r\n})());\r\n} else {\r\nreturn instaparse.util.throw_illegal_argument_exception.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid output format \x22,reduction_type,\x22. Use :enlive or :hiccup.\x22], 0));\r\n}\r\n});\r\ninstaparse.combinators_source.auto_whitespace_parser \x3d (function instaparse$combinators_source$auto_whitespace_parser(parser,ws_parser){\r\nvar G__26227 \x3d new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223).cljs$core$IFn$_invoke$arity$1(parser);\r\nvar G__26227__$1 \x3d (((G__26227 instanceof cljs.core.Keyword))?G__26227.fqn:null);\r\nswitch (G__26227__$1) {\r\ncase \x22nt\x22:\r\ncase \x22epsilon\x22:\r\nreturn parser;\r\n\r\nbreak;\r\ncase \x22opt\x22:\r\ncase \x22plus\x22:\r\ncase \x22star\x22:\r\ncase \x22rep\x22:\r\ncase \x22look\x22:\r\ncase \x22neg\x22:\r\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(parser,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310)], null),instaparse.combinators_source.auto_whitespace_parser,ws_parser);\r\n\r\nbreak;\r\ncase \x22alt\x22:\r\ncase \x22cat\x22:\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__26226_SHARP_){\r\nreturn (instaparse.combinators_source.auto_whitespace_parser.cljs$core$IFn$_invoke$arity$2 ? instaparse.combinators_source.auto_whitespace_parser.cljs$core$IFn$_invoke$arity$2(p1__26226_SHARP_,ws_parser) : instaparse.combinators_source.auto_whitespace_parser.call(null,p1__26226_SHARP_,ws_parser));\r\n}),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827).cljs$core$IFn$_invoke$arity$1(parser)));\r\n\r\nbreak;\r\ncase \x22ord\x22:\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(parser,new cljs.core.Keyword(null,\x22parser1\x22,\x22parser1\x22,-439601422),(function (){var G__26228 \x3d new cljs.core.Keyword(null,\x22parser1\x22,\x22parser1\x22,-439601422).cljs$core$IFn$_invoke$arity$1(parser);\r\nvar G__26229 \x3d ws_parser;\r\nreturn (instaparse.combinators_source.auto_whitespace_parser.cljs$core$IFn$_invoke$arity$2 ? instaparse.combinators_source.auto_whitespace_parser.cljs$core$IFn$_invoke$arity$2(G__26228,G__26229) : instaparse.combinators_source.auto_whitespace_parser.call(null,G__26228,G__26229));\r\n})(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22parser2\x22,\x22parser2\x22,1013754688),(function (){var G__26230 \x3d new cljs.core.Keyword(null,\x22parser2\x22,\x22parser2\x22,1013754688).cljs$core$IFn$_invoke$arity$1(parser);\r\nvar G__26231 \x3d ws_parser;\r\nreturn (instaparse.combinators_source.auto_whitespace_parser.cljs$core$IFn$_invoke$arity$2 ? instaparse.combinators_source.auto_whitespace_parser.cljs$core$IFn$_invoke$arity$2(G__26230,G__26231) : instaparse.combinators_source.auto_whitespace_parser.call(null,G__26230,G__26231));\r\n})()], 0));\r\n\r\nbreak;\r\ncase \x22string\x22:\r\ncase \x22string-ci\x22:\r\ncase \x22regexp\x22:\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204).cljs$core$IFn$_invoke$arity$1(parser))){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ws_parser,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parser,new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204))], 0)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204).cljs$core$IFn$_invoke$arity$1(parser));\r\n} else {\r\nreturn instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ws_parser,parser], 0));\r\n}\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__26227__$1)].join(\x27\x27)));\r\n\r\n}\r\n});\r\ninstaparse.combinators_source.auto_whitespace \x3d (function instaparse$combinators_source$auto_whitespace(grammar,start,grammar_ws,start_ws){\r\nvar ws_parser \x3d instaparse.combinators_source.hide(instaparse.combinators_source.opt(instaparse.combinators_source.nt(start_ws)));\r\nvar grammar_ws__$1 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(grammar_ws,start_ws,instaparse.combinators_source.hide_tag((grammar_ws.cljs$core$IFn$_invoke$arity$1 ? grammar_ws.cljs$core$IFn$_invoke$arity$1(start_ws) : grammar_ws.call(null,start_ws))));\r\nvar modified_grammar \x3d cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4652__auto__ \x3d (function instaparse$combinators_source$auto_whitespace_$_iter__26232(s__26233){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s__26233__$1 \x3d s__26233;\r\nwhile(true){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(s__26233__$1);\r\nif(temp__5753__auto__){\r\nvar s__26233__$2 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__26233__$2)){\r\nvar c__4650__auto__ \x3d cljs.core.chunk_first(s__26233__$2);\r\nvar size__4651__auto__ \x3d cljs.core.count(c__4650__auto__);\r\nvar b__26235 \x3d cljs.core.chunk_buffer(size__4651__auto__);\r\nif((function (){var i__26234 \x3d (0);\r\nwhile(true){\r\nif((i__26234 \x3c size__4651__auto__)){\r\nvar vec__26238 \x3d cljs.core._nth(c__4650__auto__,i__26234);\r\nvar nt \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26238,(0),null);\r\nvar parser \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26238,(1),null);\r\ncljs.core.chunk_append(b__26235,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [nt,instaparse.combinators_source.auto_whitespace_parser(parser,ws_parser)], null));\r\n\r\nvar G__26285 \x3d (i__26234 + (1));\r\ni__26234 \x3d G__26285;\r\ncontinue;\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__26235),instaparse$combinators_source$auto_whitespace_$_iter__26232(cljs.core.chunk_rest(s__26233__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__26235),null);\r\n}\r\n} else {\r\nvar vec__26241 \x3d cljs.core.first(s__26233__$2);\r\nvar nt \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26241,(0),null);\r\nvar parser \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26241,(1),null);\r\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [nt,instaparse.combinators_source.auto_whitespace_parser(parser,ws_parser)], null),instaparse$combinators_source$auto_whitespace_$_iter__26232(cljs.core.rest(s__26233__$2)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}),null,null));\r\n});\r\nreturn iter__4652__auto__(grammar);\r\n})());\r\nvar final_grammar \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(modified_grammar,start,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2((modified_grammar.cljs$core$IFn$_invoke$arity$1 ? modified_grammar.cljs$core$IFn$_invoke$arity$1(start) : modified_grammar.call(null,start)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204)),ws_parser], 0)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204).cljs$core$IFn$_invoke$arity$1((modified_grammar.cljs$core$IFn$_invoke$arity$1 ? modified_grammar.cljs$core$IFn$_invoke$arity$1(start) : modified_grammar.call(null,start)))));\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([final_grammar,grammar_ws__$1], 0));\r\n});\r\n");
SHADOW_ENV.evalLoad("goog.i18n.uchar.js", true , "goog.provide(\x22goog.i18n.uChar\x22);\ngoog.i18n.uChar.SUPPLEMENTARY_CODE_POINT_MIN_VALUE_ \x3d 65536;\ngoog.i18n.uChar.CODE_POINT_MAX_VALUE_ \x3d 1114111;\ngoog.i18n.uChar.LEAD_SURROGATE_MIN_VALUE_ \x3d 55296;\ngoog.i18n.uChar.LEAD_SURROGATE_MAX_VALUE_ \x3d 56319;\ngoog.i18n.uChar.TRAIL_SURROGATE_MIN_VALUE_ \x3d 56320;\ngoog.i18n.uChar.TRAIL_SURROGATE_MAX_VALUE_ \x3d 57343;\ngoog.i18n.uChar.TRAIL_SURROGATE_BIT_COUNT_ \x3d 10;\ngoog.i18n.uChar.toHexString \x3d function(ch) {\n  const chCode \x3d goog.i18n.uChar.toCharCode(ch);\n  const chCodeStr \x3d \x22U+\x22 + goog.i18n.uChar.padString_(chCode.toString(16).toUpperCase(), 4, \x220\x22);\n  return chCodeStr;\n};\ngoog.i18n.uChar.padString_ \x3d function(str, length, ch) {\n  while (str.length \x3c length) {\n    str \x3d ch + str;\n  }\n  return str;\n};\ngoog.i18n.uChar.toCharCode \x3d function(ch) {\n  return goog.i18n.uChar.getCodePointAround(ch, 0);\n};\ngoog.i18n.uChar.fromCharCode \x3d function(code) {\n  if (code \x3d\x3d null || !(code \x3e\x3d 0 \x26\x26 code \x3c\x3d goog.i18n.uChar.CODE_POINT_MAX_VALUE_)) {\n    return null;\n  }\n  if (goog.i18n.uChar.isSupplementaryCodePoint(code)) {\n    const leadBits \x3d code \x3e\x3e goog.i18n.uChar.TRAIL_SURROGATE_BIT_COUNT_;\n    const trailBits \x3d code \x26 (1 \x3c\x3c goog.i18n.uChar.TRAIL_SURROGATE_BIT_COUNT_) - 1;\n    const leadCodePoint \x3d leadBits + (goog.i18n.uChar.LEAD_SURROGATE_MIN_VALUE_ - (goog.i18n.uChar.SUPPLEMENTARY_CODE_POINT_MIN_VALUE_ \x3e\x3e goog.i18n.uChar.TRAIL_SURROGATE_BIT_COUNT_));\n    const trailCodePoint \x3d trailBits + goog.i18n.uChar.TRAIL_SURROGATE_MIN_VALUE_;\n    return String.fromCharCode(leadCodePoint) + String.fromCharCode(trailCodePoint);\n  }\n  return String.fromCharCode(code);\n};\ngoog.i18n.uChar.getCodePointAround \x3d function(string, index) {\n  const charCode \x3d string.charCodeAt(index);\n  if (goog.i18n.uChar.isLeadSurrogateCodePoint(charCode) \x26\x26 index + 1 \x3c string.length) {\n    const trail \x3d string.charCodeAt(index + 1);\n    if (goog.i18n.uChar.isTrailSurrogateCodePoint(trail)) {\n      return goog.i18n.uChar.buildSupplementaryCodePoint(charCode, trail);\n    }\n  } else if (goog.i18n.uChar.isTrailSurrogateCodePoint(charCode) \x26\x26 index \x3e 0) {\n    const lead \x3d string.charCodeAt(index - 1);\n    if (goog.i18n.uChar.isLeadSurrogateCodePoint(lead)) {\n      const codepoint \x3d goog.i18n.uChar.buildSupplementaryCodePoint(lead, charCode);\n      return -codepoint;\n    }\n  }\n  return charCode;\n};\ngoog.i18n.uChar.charCount \x3d function(codePoint) {\n  return goog.i18n.uChar.isSupplementaryCodePoint(codePoint) ? 2 : 1;\n};\ngoog.i18n.uChar.isSupplementaryCodePoint \x3d function(codePoint) {\n  return codePoint \x3e\x3d goog.i18n.uChar.SUPPLEMENTARY_CODE_POINT_MIN_VALUE_ \x26\x26 codePoint \x3c\x3d goog.i18n.uChar.CODE_POINT_MAX_VALUE_;\n};\ngoog.i18n.uChar.isLeadSurrogateCodePoint \x3d function(codePoint) {\n  return codePoint \x3e\x3d goog.i18n.uChar.LEAD_SURROGATE_MIN_VALUE_ \x26\x26 codePoint \x3c\x3d goog.i18n.uChar.LEAD_SURROGATE_MAX_VALUE_;\n};\ngoog.i18n.uChar.isTrailSurrogateCodePoint \x3d function(codePoint) {\n  return codePoint \x3e\x3d goog.i18n.uChar.TRAIL_SURROGATE_MIN_VALUE_ \x26\x26 codePoint \x3c\x3d goog.i18n.uChar.TRAIL_SURROGATE_MAX_VALUE_;\n};\ngoog.i18n.uChar.buildSupplementaryCodePoint \x3d function(lead, trail) {\n  if (goog.i18n.uChar.isLeadSurrogateCodePoint(lead) \x26\x26 goog.i18n.uChar.isTrailSurrogateCodePoint(trail)) {\n    const shiftedLeadOffset \x3d (lead \x3c\x3c goog.i18n.uChar.TRAIL_SURROGATE_BIT_COUNT_) - (goog.i18n.uChar.LEAD_SURROGATE_MIN_VALUE_ \x3c\x3c goog.i18n.uChar.TRAIL_SURROGATE_BIT_COUNT_);\n    const trailOffset \x3d trail - goog.i18n.uChar.TRAIL_SURROGATE_MIN_VALUE_ + goog.i18n.uChar.SUPPLEMENTARY_CODE_POINT_MIN_VALUE_;\n    return shiftedLeadOffset + trailOffset;\n  }\n  return null;\n};\n");
SHADOW_ENV.evalLoad("instaparse.gll.js", true , "goog.provide(\x27instaparse.gll\x27);\r\ninstaparse.gll._STAR_diagnostic_char_lookahead_STAR_ \x3d (10);\r\n\r\ninstaparse.gll.get_parser \x3d (function instaparse$gll$get_parser(grammar,p){\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(grammar,p,p);\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ninstaparse.gll._parse \x3d (function instaparse$gll$_parse(parser,index,tramp){\r\n\r\nvar G__27614 \x3d new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223).cljs$core$IFn$_invoke$arity$1(parser);\r\nvar G__27614__$1 \x3d (((G__27614 instanceof cljs.core.Keyword))?G__27614.fqn:null);\r\nswitch (G__27614__$1) {\r\ncase \x22nt\x22:\r\nreturn (instaparse.gll.non_terminal_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.non_terminal_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.non_terminal_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22alt\x22:\r\nreturn (instaparse.gll.alt_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.alt_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.alt_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22cat\x22:\r\nreturn (instaparse.gll.cat_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.cat_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.cat_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22string\x22:\r\nreturn (instaparse.gll.string_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.string_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.string_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22string-ci\x22:\r\nreturn (instaparse.gll.string_case_insensitive_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.string_case_insensitive_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.string_case_insensitive_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22char\x22:\r\nreturn (instaparse.gll.char_range_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.char_range_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.char_range_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22epsilon\x22:\r\nreturn (instaparse.gll.epsilon_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.epsilon_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.epsilon_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22opt\x22:\r\nreturn (instaparse.gll.opt_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.opt_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.opt_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22plus\x22:\r\nreturn (instaparse.gll.plus_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.plus_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.plus_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22rep\x22:\r\nreturn (instaparse.gll.rep_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.rep_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.rep_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22star\x22:\r\nreturn (instaparse.gll.star_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.star_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.star_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22regexp\x22:\r\nreturn (instaparse.gll.regexp_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.regexp_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.regexp_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22look\x22:\r\nreturn (instaparse.gll.lookahead_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.lookahead_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.lookahead_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22neg\x22:\r\nreturn (instaparse.gll.negative_lookahead_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.negative_lookahead_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.negative_lookahead_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22ord\x22:\r\nreturn (instaparse.gll.ordered_alt_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.ordered_alt_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.ordered_alt_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__27614__$1)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ninstaparse.gll._full_parse \x3d (function instaparse$gll$_full_parse(parser,index,tramp){\r\n\r\nvar G__27616 \x3d new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223).cljs$core$IFn$_invoke$arity$1(parser);\r\nvar G__27616__$1 \x3d (((G__27616 instanceof cljs.core.Keyword))?G__27616.fqn:null);\r\nswitch (G__27616__$1) {\r\ncase \x22nt\x22:\r\nreturn (instaparse.gll.non_terminal_full_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.non_terminal_full_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.non_terminal_full_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22alt\x22:\r\nreturn (instaparse.gll.alt_full_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.alt_full_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.alt_full_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22cat\x22:\r\nreturn (instaparse.gll.cat_full_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.cat_full_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.cat_full_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22string\x22:\r\nreturn (instaparse.gll.string_full_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.string_full_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.string_full_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22string-ci\x22:\r\nreturn (instaparse.gll.string_case_insensitive_full_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.string_case_insensitive_full_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.string_case_insensitive_full_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22char\x22:\r\nreturn (instaparse.gll.char_range_full_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.char_range_full_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.char_range_full_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22epsilon\x22:\r\nreturn (instaparse.gll.epsilon_full_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.epsilon_full_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.epsilon_full_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22opt\x22:\r\nreturn (instaparse.gll.opt_full_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.opt_full_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.opt_full_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22plus\x22:\r\nreturn (instaparse.gll.plus_full_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.plus_full_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.plus_full_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22rep\x22:\r\nreturn (instaparse.gll.rep_full_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.rep_full_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.rep_full_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22star\x22:\r\nreturn (instaparse.gll.star_full_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.star_full_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.star_full_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22regexp\x22:\r\nreturn (instaparse.gll.regexp_full_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.regexp_full_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.regexp_full_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22look\x22:\r\nreturn (instaparse.gll.lookahead_full_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.lookahead_full_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.lookahead_full_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22neg\x22:\r\nreturn (instaparse.gll.negative_lookahead_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.negative_lookahead_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.negative_lookahead_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ncase \x22ord\x22:\r\nreturn (instaparse.gll.ordered_alt_full_parse.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.ordered_alt_full_parse.cljs$core$IFn$_invoke$arity$3(parser,index,tramp) : instaparse.gll.ordered_alt_full_parse.call(null,parser,index,tramp));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__27616__$1)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IRecord}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ninstaparse.gll.Failure \x3d (function (index,reason,__meta,__extmap,__hash){\r\nthis.index \x3d index;\r\nthis.reason \x3d reason;\r\nthis.__meta \x3d __meta;\r\nthis.__extmap \x3d __extmap;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\r\n});\r\n(instaparse.gll.Failure.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__4502__auto__,k__4503__auto__){\r\nvar self__ \x3d this;\r\nvar this__4502__auto____$1 \x3d this;\r\nreturn this__4502__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4503__auto__,null);\r\n}));\r\n\r\n(instaparse.gll.Failure.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__4504__auto__,k27622,else__4505__auto__){\r\nvar self__ \x3d this;\r\nvar this__4504__auto____$1 \x3d this;\r\nvar G__27628 \x3d k27622;\r\nvar G__27628__$1 \x3d (((G__27628 instanceof cljs.core.Keyword))?G__27628.fqn:null);\r\nswitch (G__27628__$1) {\r\ncase \x22index\x22:\r\nreturn self__.index;\r\n\r\nbreak;\r\ncase \x22reason\x22:\r\nreturn self__.reason;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k27622,else__4505__auto__);\r\n\r\n}\r\n}));\r\n\r\n(instaparse.gll.Failure.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__4522__auto__,f__4523__auto__,init__4524__auto__){\r\nvar self__ \x3d this;\r\nvar this__4522__auto____$1 \x3d this;\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4525__auto__,p__27629){\r\nvar vec__27630 \x3d p__27629;\r\nvar k__4526__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27630,(0),null);\r\nvar v__4527__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27630,(1),null);\r\nreturn (f__4523__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4523__auto__.cljs$core$IFn$_invoke$arity$3(ret__4525__auto__,k__4526__auto__,v__4527__auto__) : f__4523__auto__.call(null,ret__4525__auto__,k__4526__auto__,v__4527__auto__));\r\n}),init__4524__auto__,this__4522__auto____$1);\r\n}));\r\n\r\n(instaparse.gll.Failure.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__4517__auto__,writer__4518__auto__,opts__4519__auto__){\r\nvar self__ \x3d this;\r\nvar this__4517__auto____$1 \x3d this;\r\nvar pr_pair__4520__auto__ \x3d (function (keyval__4521__auto__){\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__4519__auto__,keyval__4521__auto__);\r\n});\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,pr_pair__4520__auto__,\x22#instaparse.gll.Failure{\x22,\x22, \x22,\x22}\x22,opts__4519__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915),self__.index],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22reason\x22,\x22reason\x22,-2070751759),self__.reason],null))], null),self__.__extmap));\r\n}));\r\n\r\n(instaparse.gll.Failure.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__27621){\r\nvar self__ \x3d this;\r\nvar G__27621__$1 \x3d this;\r\nreturn (new cljs.core.RecordIter((0),G__27621__$1,2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915),new cljs.core.Keyword(null,\x22reason\x22,\x22reason\x22,-2070751759)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\r\n}));\r\n\r\n(instaparse.gll.Failure.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__4500__auto__){\r\nvar self__ \x3d this;\r\nvar this__4500__auto____$1 \x3d this;\r\nreturn self__.__meta;\r\n}));\r\n\r\n(instaparse.gll.Failure.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__4497__auto__){\r\nvar self__ \x3d this;\r\nvar this__4497__auto____$1 \x3d this;\r\nreturn (new instaparse.gll.Failure(self__.index,self__.reason,self__.__meta,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(instaparse.gll.Failure.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__4506__auto__){\r\nvar self__ \x3d this;\r\nvar this__4506__auto____$1 \x3d this;\r\nreturn (2 + cljs.core.count(self__.__extmap));\r\n}));\r\n\r\n(instaparse.gll.Failure.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__4498__auto__){\r\nvar self__ \x3d this;\r\nvar this__4498__auto____$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d (function (coll__4499__auto__){\r\nreturn (-1140991288 ^ cljs.core.hash_unordered_coll(coll__4499__auto__));\r\n})(this__4498__auto____$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(instaparse.gll.Failure.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this27623,other27624){\r\nvar self__ \x3d this;\r\nvar this27623__$1 \x3d this;\r\nreturn (((!((other27624 \x3d\x3d null)))) \x26\x26 ((((this27623__$1.constructor \x3d\x3d\x3d other27624.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27623__$1.index,other27624.index)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27623__$1.reason,other27624.reason)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27623__$1.__extmap,other27624.__extmap)))))))));\r\n}));\r\n\r\n(instaparse.gll.Failure.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__4512__auto__,k__4513__auto__){\r\nvar self__ \x3d this;\r\nvar this__4512__auto____$1 \x3d this;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915),null,new cljs.core.Keyword(null,\x22reason\x22,\x22reason\x22,-2070751759),null], null), null),k__4513__auto__)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4512__auto____$1),self__.__meta),k__4513__auto__);\r\n} else {\r\nreturn (new instaparse.gll.Failure(self__.index,self__.reason,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4513__auto__)),null));\r\n}\r\n}));\r\n\r\n(instaparse.gll.Failure.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__4509__auto__,k27622){\r\nvar self__ \x3d this;\r\nvar this__4509__auto____$1 \x3d this;\r\nvar G__27641 \x3d k27622;\r\nvar G__27641__$1 \x3d (((G__27641 instanceof cljs.core.Keyword))?G__27641.fqn:null);\r\nswitch (G__27641__$1) {\r\ncase \x22index\x22:\r\ncase \x22reason\x22:\r\nreturn true;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.contains_QMARK_(self__.__extmap,k27622);\r\n\r\n}\r\n}));\r\n\r\n(instaparse.gll.Failure.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__4510__auto__,k__4511__auto__,G__27621){\r\nvar self__ \x3d this;\r\nvar this__4510__auto____$1 \x3d this;\r\nvar pred__27642 \x3d cljs.core.keyword_identical_QMARK_;\r\nvar expr__27643 \x3d k__4511__auto__;\r\nif(cljs.core.truth_((pred__27642.cljs$core$IFn$_invoke$arity$2 ? pred__27642.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915),expr__27643) : pred__27642.call(null,new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915),expr__27643)))){\r\nreturn (new instaparse.gll.Failure(G__27621,self__.reason,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__27642.cljs$core$IFn$_invoke$arity$2 ? pred__27642.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22reason\x22,\x22reason\x22,-2070751759),expr__27643) : pred__27642.call(null,new cljs.core.Keyword(null,\x22reason\x22,\x22reason\x22,-2070751759),expr__27643)))){\r\nreturn (new instaparse.gll.Failure(self__.index,G__27621,self__.__meta,self__.__extmap,null));\r\n} else {\r\nreturn (new instaparse.gll.Failure(self__.index,self__.reason,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4511__auto__,G__27621),null));\r\n}\r\n}\r\n}));\r\n\r\n(instaparse.gll.Failure.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__4515__auto__){\r\nvar self__ \x3d this;\r\nvar this__4515__auto____$1 \x3d this;\r\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915),self__.index,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22reason\x22,\x22reason\x22,-2070751759),self__.reason,null))], null),self__.__extmap));\r\n}));\r\n\r\n(instaparse.gll.Failure.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__4501__auto__,G__27621){\r\nvar self__ \x3d this;\r\nvar this__4501__auto____$1 \x3d this;\r\nreturn (new instaparse.gll.Failure(self__.index,self__.reason,G__27621,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(instaparse.gll.Failure.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__4507__auto__,entry__4508__auto__){\r\nvar self__ \x3d this;\r\nvar this__4507__auto____$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(entry__4508__auto__)){\r\nreturn this__4507__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4508__auto__,(0)),cljs.core._nth(entry__4508__auto__,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4507__auto____$1,entry__4508__auto__);\r\n}\r\n}));\r\n\r\n(instaparse.gll.Failure.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22index\x22,\x22index\x22,108845612,null),new cljs.core.Symbol(null,\x22reason\x22,\x22reason\x22,-430220232,null)], null);\r\n}));\r\n\r\n(instaparse.gll.Failure.cljs$lang$type \x3d true);\r\n\r\n(instaparse.gll.Failure.cljs$lang$ctorPrSeq \x3d (function (this__4546__auto__){\r\nreturn (new cljs.core.List(null,\x22instaparse.gll/Failure\x22,null,(1),null));\r\n}));\r\n\r\n(instaparse.gll.Failure.cljs$lang$ctorPrWriter \x3d (function (this__4546__auto__,writer__4547__auto__){\r\nreturn cljs.core._write(writer__4547__auto__,\x22instaparse.gll/Failure\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for instaparse.gll/Failure.\r\n */\r\ninstaparse.gll.__GT_Failure \x3d (function instaparse$gll$__GT_Failure(index,reason){\r\nreturn (new instaparse.gll.Failure(index,reason,null,null,null));\r\n});\r\n\r\n/**\r\n * Factory function for instaparse.gll/Failure, taking a map of keywords to field values.\r\n */\r\ninstaparse.gll.map__GT_Failure \x3d (function instaparse$gll$map__GT_Failure(G__27625){\r\nvar extmap__4542__auto__ \x3d (function (){var G__27649 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__27625,new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22reason\x22,\x22reason\x22,-2070751759)], 0));\r\nif(cljs.core.record_QMARK_(G__27625)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__27649);\r\n} else {\r\nreturn G__27649;\r\n}\r\n})();\r\nreturn (new instaparse.gll.Failure(new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915).cljs$core$IFn$_invoke$arity$1(G__27625),new cljs.core.Keyword(null,\x22reason\x22,\x22reason\x22,-2070751759).cljs$core$IFn$_invoke$arity$1(G__27625),null,cljs.core.not_empty(extmap__4542__auto__),null));\r\n});\r\n\r\n(instaparse.gll.Failure.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(instaparse.gll.Failure.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (fail,writer,_){\r\nvar fail__$1 \x3d this;\r\nreturn cljs.core._write(writer,(function (){var sb__4795__auto__ \x3d (new goog.string.StringBuffer());\r\nvar _STAR_print_newline_STAR__orig_val__27652_27902 \x3d cljs.core._STAR_print_newline_STAR_;\r\nvar _STAR_print_fn_STAR__orig_val__27653_27903 \x3d cljs.core._STAR_print_fn_STAR_;\r\nvar _STAR_print_newline_STAR__temp_val__27654_27904 \x3d true;\r\nvar _STAR_print_fn_STAR__temp_val__27655_27905 \x3d (function (x__4796__auto__){\r\nreturn sb__4795__auto__.append(x__4796__auto__);\r\n});\r\n(cljs.core._STAR_print_newline_STAR_ \x3d _STAR_print_newline_STAR__temp_val__27654_27904);\r\n\r\n(cljs.core._STAR_print_fn_STAR_ \x3d _STAR_print_fn_STAR__temp_val__27655_27905);\r\n\r\ntry{instaparse.failure.pprint_failure(fail__$1);\r\n}finally {(cljs.core._STAR_print_fn_STAR_ \x3d _STAR_print_fn_STAR__orig_val__27653_27903);\r\n\r\n(cljs.core._STAR_print_newline_STAR_ \x3d _STAR_print_newline_STAR__orig_val__27652_27902);\r\n}\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4795__auto__);\r\n})());\r\n}));\r\ninstaparse.gll.failure_type \x3d cljs.core.type((new instaparse.gll.Failure(null,null,null,null,null)));\r\ninstaparse.gll.text__GT_segment \x3d (function instaparse$gll$text__GT_segment(text){\r\nreturn text;\r\n});\r\ninstaparse.gll.sub_sequence \x3d cljs.core.subs;\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IRecord}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ninstaparse.gll.Tramp \x3d (function (grammar,text,segment,fail_index,node_builder,stack,next_stack,generation,negative_listeners,msg_cache,nodes,success,failure,trace_QMARK_,__meta,__extmap,__hash){\r\nthis.grammar \x3d grammar;\r\nthis.text \x3d text;\r\nthis.segment \x3d segment;\r\nthis.fail_index \x3d fail_index;\r\nthis.node_builder \x3d node_builder;\r\nthis.stack \x3d stack;\r\nthis.next_stack \x3d next_stack;\r\nthis.generation \x3d generation;\r\nthis.negative_listeners \x3d negative_listeners;\r\nthis.msg_cache \x3d msg_cache;\r\nthis.nodes \x3d nodes;\r\nthis.success \x3d success;\r\nthis.failure \x3d failure;\r\nthis.trace_QMARK_ \x3d trace_QMARK_;\r\nthis.__meta \x3d __meta;\r\nthis.__extmap \x3d __extmap;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\r\n});\r\n(instaparse.gll.Tramp.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__4502__auto__,k__4503__auto__){\r\nvar self__ \x3d this;\r\nvar this__4502__auto____$1 \x3d this;\r\nreturn this__4502__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4503__auto__,null);\r\n}));\r\n\r\n(instaparse.gll.Tramp.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__4504__auto__,k27658,else__4505__auto__){\r\nvar self__ \x3d this;\r\nvar this__4504__auto____$1 \x3d this;\r\nvar G__27665 \x3d k27658;\r\nvar G__27665__$1 \x3d (((G__27665 instanceof cljs.core.Keyword))?G__27665.fqn:null);\r\nswitch (G__27665__$1) {\r\ncase \x22grammar\x22:\r\nreturn self__.grammar;\r\n\r\nbreak;\r\ncase \x22text\x22:\r\nreturn self__.text;\r\n\r\nbreak;\r\ncase \x22segment\x22:\r\nreturn self__.segment;\r\n\r\nbreak;\r\ncase \x22fail-index\x22:\r\nreturn self__.fail_index;\r\n\r\nbreak;\r\ncase \x22node-builder\x22:\r\nreturn self__.node_builder;\r\n\r\nbreak;\r\ncase \x22stack\x22:\r\nreturn self__.stack;\r\n\r\nbreak;\r\ncase \x22next-stack\x22:\r\nreturn self__.next_stack;\r\n\r\nbreak;\r\ncase \x22generation\x22:\r\nreturn self__.generation;\r\n\r\nbreak;\r\ncase \x22negative-listeners\x22:\r\nreturn self__.negative_listeners;\r\n\r\nbreak;\r\ncase \x22msg-cache\x22:\r\nreturn self__.msg_cache;\r\n\r\nbreak;\r\ncase \x22nodes\x22:\r\nreturn self__.nodes;\r\n\r\nbreak;\r\ncase \x22success\x22:\r\nreturn self__.success;\r\n\r\nbreak;\r\ncase \x22failure\x22:\r\nreturn self__.failure;\r\n\r\nbreak;\r\ncase \x22trace?\x22:\r\nreturn self__.trace_QMARK_;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k27658,else__4505__auto__);\r\n\r\n}\r\n}));\r\n\r\n(instaparse.gll.Tramp.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__4522__auto__,f__4523__auto__,init__4524__auto__){\r\nvar self__ \x3d this;\r\nvar this__4522__auto____$1 \x3d this;\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4525__auto__,p__27666){\r\nvar vec__27667 \x3d p__27666;\r\nvar k__4526__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27667,(0),null);\r\nvar v__4527__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27667,(1),null);\r\nreturn (f__4523__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4523__auto__.cljs$core$IFn$_invoke$arity$3(ret__4525__auto__,k__4526__auto__,v__4527__auto__) : f__4523__auto__.call(null,ret__4525__auto__,k__4526__auto__,v__4527__auto__));\r\n}),init__4524__auto__,this__4522__auto____$1);\r\n}));\r\n\r\n(instaparse.gll.Tramp.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__4517__auto__,writer__4518__auto__,opts__4519__auto__){\r\nvar self__ \x3d this;\r\nvar this__4517__auto____$1 \x3d this;\r\nvar pr_pair__4520__auto__ \x3d (function (keyval__4521__auto__){\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__4519__auto__,keyval__4521__auto__);\r\n});\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,pr_pair__4520__auto__,\x22#instaparse.gll.Tramp{\x22,\x22, \x22,\x22}\x22,opts__4519__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267),self__.grammar],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697),self__.text],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22segment\x22,\x22segment\x22,-964921196),self__.segment],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22fail-index\x22,\x22fail-index\x22,248726923),self__.fail_index],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22node-builder\x22,\x22node-builder\x22,-1956562605),self__.node_builder],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22stack\x22,\x22stack\x22,-793405930),self__.stack],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22next-stack\x22,\x22next-stack\x22,-481930728),self__.next_stack],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22generation\x22,\x22generation\x22,-2132542044),self__.generation],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22negative-listeners\x22,\x22negative-listeners\x22,55241092),self__.negative_listeners],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22msg-cache\x22,\x22msg-cache\x22,-733775070),self__.msg_cache],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22nodes\x22,\x22nodes\x22,-2099585805),self__.nodes],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22success\x22,\x22success\x22,1890645906),self__.success],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22failure\x22,\x22failure\x22,720415879),self__.failure],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22trace?\x22,\x22trace?\x22,1730690679),self__.trace_QMARK_],null))], null),self__.__extmap));\r\n}));\r\n\r\n(instaparse.gll.Tramp.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__27657){\r\nvar self__ \x3d this;\r\nvar G__27657__$1 \x3d this;\r\nreturn (new cljs.core.RecordIter((0),G__27657__$1,14,new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267),new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697),new cljs.core.Keyword(null,\x22segment\x22,\x22segment\x22,-964921196),new cljs.core.Keyword(null,\x22fail-index\x22,\x22fail-index\x22,248726923),new cljs.core.Keyword(null,\x22node-builder\x22,\x22node-builder\x22,-1956562605),new cljs.core.Keyword(null,\x22stack\x22,\x22stack\x22,-793405930),new cljs.core.Keyword(null,\x22next-stack\x22,\x22next-stack\x22,-481930728),new cljs.core.Keyword(null,\x22generation\x22,\x22generation\x22,-2132542044),new cljs.core.Keyword(null,\x22negative-listeners\x22,\x22negative-listeners\x22,55241092),new cljs.core.Keyword(null,\x22msg-cache\x22,\x22msg-cache\x22,-733775070),new cljs.core.Keyword(null,\x22nodes\x22,\x22nodes\x22,-2099585805),new cljs.core.Keyword(null,\x22success\x22,\x22success\x22,1890645906),new cljs.core.Keyword(null,\x22failure\x22,\x22failure\x22,720415879),new cljs.core.Keyword(null,\x22trace?\x22,\x22trace?\x22,1730690679)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\r\n}));\r\n\r\n(instaparse.gll.Tramp.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__4500__auto__){\r\nvar self__ \x3d this;\r\nvar this__4500__auto____$1 \x3d this;\r\nreturn self__.__meta;\r\n}));\r\n\r\n(instaparse.gll.Tramp.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__4497__auto__){\r\nvar self__ \x3d this;\r\nvar this__4497__auto____$1 \x3d this;\r\nreturn (new instaparse.gll.Tramp(self__.grammar,self__.text,self__.segment,self__.fail_index,self__.node_builder,self__.stack,self__.next_stack,self__.generation,self__.negative_listeners,self__.msg_cache,self__.nodes,self__.success,self__.failure,self__.trace_QMARK_,self__.__meta,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(instaparse.gll.Tramp.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__4506__auto__){\r\nvar self__ \x3d this;\r\nvar this__4506__auto____$1 \x3d this;\r\nreturn (14 + cljs.core.count(self__.__extmap));\r\n}));\r\n\r\n(instaparse.gll.Tramp.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__4498__auto__){\r\nvar self__ \x3d this;\r\nvar this__4498__auto____$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d (function (coll__4499__auto__){\r\nreturn (166878148 ^ cljs.core.hash_unordered_coll(coll__4499__auto__));\r\n})(this__4498__auto____$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(instaparse.gll.Tramp.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this27659,other27660){\r\nvar self__ \x3d this;\r\nvar this27659__$1 \x3d this;\r\nreturn (((!((other27660 \x3d\x3d null)))) \x26\x26 ((((this27659__$1.constructor \x3d\x3d\x3d other27660.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27659__$1.grammar,other27660.grammar)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27659__$1.text,other27660.text)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27659__$1.segment,other27660.segment)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27659__$1.fail_index,other27660.fail_index)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27659__$1.node_builder,other27660.node_builder)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27659__$1.stack,other27660.stack)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27659__$1.next_stack,other27660.next_stack)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27659__$1.generation,other27660.generation)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27659__$1.negative_listeners,other27660.negative_listeners)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27659__$1.msg_cache,other27660.msg_cache)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27659__$1.nodes,other27660.nodes)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27659__$1.success,other27660.success)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27659__$1.failure,other27660.failure)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27659__$1.trace_QMARK_,other27660.trace_QMARK_)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27659__$1.__extmap,other27660.__extmap)))))))))))))))))))))))))))))))));\r\n}));\r\n\r\n(instaparse.gll.Tramp.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__4512__auto__,k__4513__auto__){\r\nvar self__ \x3d this;\r\nvar this__4512__auto____$1 \x3d this;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 14, [new cljs.core.Keyword(null,\x22msg-cache\x22,\x22msg-cache\x22,-733775070),null,new cljs.core.Keyword(null,\x22negative-listeners\x22,\x22negative-listeners\x22,55241092),null,new cljs.core.Keyword(null,\x22generation\x22,\x22generation\x22,-2132542044),null,new cljs.core.Keyword(null,\x22failure\x22,\x22failure\x22,720415879),null,new cljs.core.Keyword(null,\x22fail-index\x22,\x22fail-index\x22,248726923),null,new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267),null,new cljs.core.Keyword(null,\x22success\x22,\x22success\x22,1890645906),null,new cljs.core.Keyword(null,\x22nodes\x22,\x22nodes\x22,-2099585805),null,new cljs.core.Keyword(null,\x22node-builder\x22,\x22node-builder\x22,-1956562605),null,new cljs.core.Keyword(null,\x22segment\x22,\x22segment\x22,-964921196),null,new cljs.core.Keyword(null,\x22stack\x22,\x22stack\x22,-793405930),null,new cljs.core.Keyword(null,\x22trace?\x22,\x22trace?\x22,1730690679),null,new cljs.core.Keyword(null,\x22next-stack\x22,\x22next-stack\x22,-481930728),null,new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697),null], null), null),k__4513__auto__)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4512__auto____$1),self__.__meta),k__4513__auto__);\r\n} else {\r\nreturn (new instaparse.gll.Tramp(self__.grammar,self__.text,self__.segment,self__.fail_index,self__.node_builder,self__.stack,self__.next_stack,self__.generation,self__.negative_listeners,self__.msg_cache,self__.nodes,self__.success,self__.failure,self__.trace_QMARK_,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4513__auto__)),null));\r\n}\r\n}));\r\n\r\n(instaparse.gll.Tramp.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__4509__auto__,k27658){\r\nvar self__ \x3d this;\r\nvar this__4509__auto____$1 \x3d this;\r\nvar G__27675 \x3d k27658;\r\nvar G__27675__$1 \x3d (((G__27675 instanceof cljs.core.Keyword))?G__27675.fqn:null);\r\nswitch (G__27675__$1) {\r\ncase \x22grammar\x22:\r\ncase \x22text\x22:\r\ncase \x22segment\x22:\r\ncase \x22fail-index\x22:\r\ncase \x22node-builder\x22:\r\ncase \x22stack\x22:\r\ncase \x22next-stack\x22:\r\ncase \x22generation\x22:\r\ncase \x22negative-listeners\x22:\r\ncase \x22msg-cache\x22:\r\ncase \x22nodes\x22:\r\ncase \x22success\x22:\r\ncase \x22failure\x22:\r\ncase \x22trace?\x22:\r\nreturn true;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.contains_QMARK_(self__.__extmap,k27658);\r\n\r\n}\r\n}));\r\n\r\n(instaparse.gll.Tramp.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__4510__auto__,k__4511__auto__,G__27657){\r\nvar self__ \x3d this;\r\nvar this__4510__auto____$1 \x3d this;\r\nvar pred__27677 \x3d cljs.core.keyword_identical_QMARK_;\r\nvar expr__27678 \x3d k__4511__auto__;\r\nif(cljs.core.truth_((pred__27677.cljs$core$IFn$_invoke$arity$2 ? pred__27677.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267),expr__27678) : pred__27677.call(null,new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267),expr__27678)))){\r\nreturn (new instaparse.gll.Tramp(G__27657,self__.text,self__.segment,self__.fail_index,self__.node_builder,self__.stack,self__.next_stack,self__.generation,self__.negative_listeners,self__.msg_cache,self__.nodes,self__.success,self__.failure,self__.trace_QMARK_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__27677.cljs$core$IFn$_invoke$arity$2 ? pred__27677.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697),expr__27678) : pred__27677.call(null,new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697),expr__27678)))){\r\nreturn (new instaparse.gll.Tramp(self__.grammar,G__27657,self__.segment,self__.fail_index,self__.node_builder,self__.stack,self__.next_stack,self__.generation,self__.negative_listeners,self__.msg_cache,self__.nodes,self__.success,self__.failure,self__.trace_QMARK_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__27677.cljs$core$IFn$_invoke$arity$2 ? pred__27677.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22segment\x22,\x22segment\x22,-964921196),expr__27678) : pred__27677.call(null,new cljs.core.Keyword(null,\x22segment\x22,\x22segment\x22,-964921196),expr__27678)))){\r\nreturn (new instaparse.gll.Tramp(self__.grammar,self__.text,G__27657,self__.fail_index,self__.node_builder,self__.stack,self__.next_stack,self__.generation,self__.negative_listeners,self__.msg_cache,self__.nodes,self__.success,self__.failure,self__.trace_QMARK_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__27677.cljs$core$IFn$_invoke$arity$2 ? pred__27677.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22fail-index\x22,\x22fail-index\x22,248726923),expr__27678) : pred__27677.call(null,new cljs.core.Keyword(null,\x22fail-index\x22,\x22fail-index\x22,248726923),expr__27678)))){\r\nreturn (new instaparse.gll.Tramp(self__.grammar,self__.text,self__.segment,G__27657,self__.node_builder,self__.stack,self__.next_stack,self__.generation,self__.negative_listeners,self__.msg_cache,self__.nodes,self__.success,self__.failure,self__.trace_QMARK_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__27677.cljs$core$IFn$_invoke$arity$2 ? pred__27677.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22node-builder\x22,\x22node-builder\x22,-1956562605),expr__27678) : pred__27677.call(null,new cljs.core.Keyword(null,\x22node-builder\x22,\x22node-builder\x22,-1956562605),expr__27678)))){\r\nreturn (new instaparse.gll.Tramp(self__.grammar,self__.text,self__.segment,self__.fail_index,G__27657,self__.stack,self__.next_stack,self__.generation,self__.negative_listeners,self__.msg_cache,self__.nodes,self__.success,self__.failure,self__.trace_QMARK_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__27677.cljs$core$IFn$_invoke$arity$2 ? pred__27677.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22stack\x22,\x22stack\x22,-793405930),expr__27678) : pred__27677.call(null,new cljs.core.Keyword(null,\x22stack\x22,\x22stack\x22,-793405930),expr__27678)))){\r\nreturn (new instaparse.gll.Tramp(self__.grammar,self__.text,self__.segment,self__.fail_index,self__.node_builder,G__27657,self__.next_stack,self__.generation,self__.negative_listeners,self__.msg_cache,self__.nodes,self__.success,self__.failure,self__.trace_QMARK_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__27677.cljs$core$IFn$_invoke$arity$2 ? pred__27677.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22next-stack\x22,\x22next-stack\x22,-481930728),expr__27678) : pred__27677.call(null,new cljs.core.Keyword(null,\x22next-stack\x22,\x22next-stack\x22,-481930728),expr__27678)))){\r\nreturn (new instaparse.gll.Tramp(self__.grammar,self__.text,self__.segment,self__.fail_index,self__.node_builder,self__.stack,G__27657,self__.generation,self__.negative_listeners,self__.msg_cache,self__.nodes,self__.success,self__.failure,self__.trace_QMARK_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__27677.cljs$core$IFn$_invoke$arity$2 ? pred__27677.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22generation\x22,\x22generation\x22,-2132542044),expr__27678) : pred__27677.call(null,new cljs.core.Keyword(null,\x22generation\x22,\x22generation\x22,-2132542044),expr__27678)))){\r\nreturn (new instaparse.gll.Tramp(self__.grammar,self__.text,self__.segment,self__.fail_index,self__.node_builder,self__.stack,self__.next_stack,G__27657,self__.negative_listeners,self__.msg_cache,self__.nodes,self__.success,self__.failure,self__.trace_QMARK_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__27677.cljs$core$IFn$_invoke$arity$2 ? pred__27677.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22negative-listeners\x22,\x22negative-listeners\x22,55241092),expr__27678) : pred__27677.call(null,new cljs.core.Keyword(null,\x22negative-listeners\x22,\x22negative-listeners\x22,55241092),expr__27678)))){\r\nreturn (new instaparse.gll.Tramp(self__.grammar,self__.text,self__.segment,self__.fail_index,self__.node_builder,self__.stack,self__.next_stack,self__.generation,G__27657,self__.msg_cache,self__.nodes,self__.success,self__.failure,self__.trace_QMARK_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__27677.cljs$core$IFn$_invoke$arity$2 ? pred__27677.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22msg-cache\x22,\x22msg-cache\x22,-733775070),expr__27678) : pred__27677.call(null,new cljs.core.Keyword(null,\x22msg-cache\x22,\x22msg-cache\x22,-733775070),expr__27678)))){\r\nreturn (new instaparse.gll.Tramp(self__.grammar,self__.text,self__.segment,self__.fail_index,self__.node_builder,self__.stack,self__.next_stack,self__.generation,self__.negative_listeners,G__27657,self__.nodes,self__.success,self__.failure,self__.trace_QMARK_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__27677.cljs$core$IFn$_invoke$arity$2 ? pred__27677.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22nodes\x22,\x22nodes\x22,-2099585805),expr__27678) : pred__27677.call(null,new cljs.core.Keyword(null,\x22nodes\x22,\x22nodes\x22,-2099585805),expr__27678)))){\r\nreturn (new instaparse.gll.Tramp(self__.grammar,self__.text,self__.segment,self__.fail_index,self__.node_builder,self__.stack,self__.next_stack,self__.generation,self__.negative_listeners,self__.msg_cache,G__27657,self__.success,self__.failure,self__.trace_QMARK_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__27677.cljs$core$IFn$_invoke$arity$2 ? pred__27677.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22success\x22,\x22success\x22,1890645906),expr__27678) : pred__27677.call(null,new cljs.core.Keyword(null,\x22success\x22,\x22success\x22,1890645906),expr__27678)))){\r\nreturn (new instaparse.gll.Tramp(self__.grammar,self__.text,self__.segment,self__.fail_index,self__.node_builder,self__.stack,self__.next_stack,self__.generation,self__.negative_listeners,self__.msg_cache,self__.nodes,G__27657,self__.failure,self__.trace_QMARK_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__27677.cljs$core$IFn$_invoke$arity$2 ? pred__27677.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22failure\x22,\x22failure\x22,720415879),expr__27678) : pred__27677.call(null,new cljs.core.Keyword(null,\x22failure\x22,\x22failure\x22,720415879),expr__27678)))){\r\nreturn (new instaparse.gll.Tramp(self__.grammar,self__.text,self__.segment,self__.fail_index,self__.node_builder,self__.stack,self__.next_stack,self__.generation,self__.negative_listeners,self__.msg_cache,self__.nodes,self__.success,G__27657,self__.trace_QMARK_,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__27677.cljs$core$IFn$_invoke$arity$2 ? pred__27677.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22trace?\x22,\x22trace?\x22,1730690679),expr__27678) : pred__27677.call(null,new cljs.core.Keyword(null,\x22trace?\x22,\x22trace?\x22,1730690679),expr__27678)))){\r\nreturn (new instaparse.gll.Tramp(self__.grammar,self__.text,self__.segment,self__.fail_index,self__.node_builder,self__.stack,self__.next_stack,self__.generation,self__.negative_listeners,self__.msg_cache,self__.nodes,self__.success,self__.failure,G__27657,self__.__meta,self__.__extmap,null));\r\n} else {\r\nreturn (new instaparse.gll.Tramp(self__.grammar,self__.text,self__.segment,self__.fail_index,self__.node_builder,self__.stack,self__.next_stack,self__.generation,self__.negative_listeners,self__.msg_cache,self__.nodes,self__.success,self__.failure,self__.trace_QMARK_,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4511__auto__,G__27657),null));\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(instaparse.gll.Tramp.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__4515__auto__){\r\nvar self__ \x3d this;\r\nvar this__4515__auto____$1 \x3d this;\r\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267),self__.grammar,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697),self__.text,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22segment\x22,\x22segment\x22,-964921196),self__.segment,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22fail-index\x22,\x22fail-index\x22,248726923),self__.fail_index,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22node-builder\x22,\x22node-builder\x22,-1956562605),self__.node_builder,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22stack\x22,\x22stack\x22,-793405930),self__.stack,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22next-stack\x22,\x22next-stack\x22,-481930728),self__.next_stack,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22generation\x22,\x22generation\x22,-2132542044),self__.generation,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22negative-listeners\x22,\x22negative-listeners\x22,55241092),self__.negative_listeners,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22msg-cache\x22,\x22msg-cache\x22,-733775070),self__.msg_cache,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22nodes\x22,\x22nodes\x22,-2099585805),self__.nodes,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22success\x22,\x22success\x22,1890645906),self__.success,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22failure\x22,\x22failure\x22,720415879),self__.failure,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22trace?\x22,\x22trace?\x22,1730690679),self__.trace_QMARK_,null))], null),self__.__extmap));\r\n}));\r\n\r\n(instaparse.gll.Tramp.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__4501__auto__,G__27657){\r\nvar self__ \x3d this;\r\nvar this__4501__auto____$1 \x3d this;\r\nreturn (new instaparse.gll.Tramp(self__.grammar,self__.text,self__.segment,self__.fail_index,self__.node_builder,self__.stack,self__.next_stack,self__.generation,self__.negative_listeners,self__.msg_cache,self__.nodes,self__.success,self__.failure,self__.trace_QMARK_,G__27657,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(instaparse.gll.Tramp.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__4507__auto__,entry__4508__auto__){\r\nvar self__ \x3d this;\r\nvar this__4507__auto____$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(entry__4508__auto__)){\r\nreturn this__4507__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4508__auto__,(0)),cljs.core._nth(entry__4508__auto__,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4507__auto____$1,entry__4508__auto__);\r\n}\r\n}));\r\n\r\n(instaparse.gll.Tramp.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22grammar\x22,\x22grammar\x22,-773107502,null),new cljs.core.Symbol(null,\x22text\x22,\x22text\x22,-150030170,null),new cljs.core.Symbol(null,\x22segment\x22,\x22segment\x22,675610331,null),new cljs.core.Symbol(null,\x22fail-index\x22,\x22fail-index\x22,1889258450,null),new cljs.core.Symbol(null,\x22node-builder\x22,\x22node-builder\x22,-316031078,null),new cljs.core.Symbol(null,\x22stack\x22,\x22stack\x22,847125597,null),new cljs.core.Symbol(null,\x22next-stack\x22,\x22next-stack\x22,1158600799,null),new cljs.core.Symbol(null,\x22generation\x22,\x22generation\x22,-492010517,null),new cljs.core.Symbol(null,\x22negative-listeners\x22,\x22negative-listeners\x22,1695772619,null),new cljs.core.Symbol(null,\x22msg-cache\x22,\x22msg-cache\x22,906756457,null),new cljs.core.Symbol(null,\x22nodes\x22,\x22nodes\x22,-459054278,null),new cljs.core.Symbol(null,\x22success\x22,\x22success\x22,-763789863,null),new cljs.core.Symbol(null,\x22failure\x22,\x22failure\x22,-1934019890,null),new cljs.core.Symbol(null,\x22trace?\x22,\x22trace?\x22,-923745090,null)], null);\r\n}));\r\n\r\n(instaparse.gll.Tramp.cljs$lang$type \x3d true);\r\n\r\n(instaparse.gll.Tramp.cljs$lang$ctorPrSeq \x3d (function (this__4546__auto__){\r\nreturn (new cljs.core.List(null,\x22instaparse.gll/Tramp\x22,null,(1),null));\r\n}));\r\n\r\n(instaparse.gll.Tramp.cljs$lang$ctorPrWriter \x3d (function (this__4546__auto__,writer__4547__auto__){\r\nreturn cljs.core._write(writer__4547__auto__,\x22instaparse.gll/Tramp\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for instaparse.gll/Tramp.\r\n */\r\ninstaparse.gll.__GT_Tramp \x3d (function instaparse$gll$__GT_Tramp(grammar,text,segment,fail_index,node_builder,stack,next_stack,generation,negative_listeners,msg_cache,nodes,success,failure,trace_QMARK_){\r\nreturn (new instaparse.gll.Tramp(grammar,text,segment,fail_index,node_builder,stack,next_stack,generation,negative_listeners,msg_cache,nodes,success,failure,trace_QMARK_,null,null,null));\r\n});\r\n\r\n/**\r\n * Factory function for instaparse.gll/Tramp, taking a map of keywords to field values.\r\n */\r\ninstaparse.gll.map__GT_Tramp \x3d (function instaparse$gll$map__GT_Tramp(G__27663){\r\nvar extmap__4542__auto__ \x3d (function (){var G__27685 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__27663,new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697),new cljs.core.Keyword(null,\x22segment\x22,\x22segment\x22,-964921196),new cljs.core.Keyword(null,\x22fail-index\x22,\x22fail-index\x22,248726923),new cljs.core.Keyword(null,\x22node-builder\x22,\x22node-builder\x22,-1956562605),new cljs.core.Keyword(null,\x22stack\x22,\x22stack\x22,-793405930),new cljs.core.Keyword(null,\x22next-stack\x22,\x22next-stack\x22,-481930728),new cljs.core.Keyword(null,\x22generation\x22,\x22generation\x22,-2132542044),new cljs.core.Keyword(null,\x22negative-listeners\x22,\x22negative-listeners\x22,55241092),new cljs.core.Keyword(null,\x22msg-cache\x22,\x22msg-cache\x22,-733775070),new cljs.core.Keyword(null,\x22nodes\x22,\x22nodes\x22,-2099585805),new cljs.core.Keyword(null,\x22success\x22,\x22success\x22,1890645906),new cljs.core.Keyword(null,\x22failure\x22,\x22failure\x22,720415879),new cljs.core.Keyword(null,\x22trace?\x22,\x22trace?\x22,1730690679)], 0));\r\nif(cljs.core.record_QMARK_(G__27663)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__27685);\r\n} else {\r\nreturn G__27685;\r\n}\r\n})();\r\nreturn (new instaparse.gll.Tramp(new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267).cljs$core$IFn$_invoke$arity$1(G__27663),new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697).cljs$core$IFn$_invoke$arity$1(G__27663),new cljs.core.Keyword(null,\x22segment\x22,\x22segment\x22,-964921196).cljs$core$IFn$_invoke$arity$1(G__27663),new cljs.core.Keyword(null,\x22fail-index\x22,\x22fail-index\x22,248726923).cljs$core$IFn$_invoke$arity$1(G__27663),new cljs.core.Keyword(null,\x22node-builder\x22,\x22node-builder\x22,-1956562605).cljs$core$IFn$_invoke$arity$1(G__27663),new cljs.core.Keyword(null,\x22stack\x22,\x22stack\x22,-793405930).cljs$core$IFn$_invoke$arity$1(G__27663),new cljs.core.Keyword(null,\x22next-stack\x22,\x22next-stack\x22,-481930728).cljs$core$IFn$_invoke$arity$1(G__27663),new cljs.core.Keyword(null,\x22generation\x22,\x22generation\x22,-2132542044).cljs$core$IFn$_invoke$arity$1(G__27663),new cljs.core.Keyword(null,\x22negative-listeners\x22,\x22negative-listeners\x22,55241092).cljs$core$IFn$_invoke$arity$1(G__27663),new cljs.core.Keyword(null,\x22msg-cache\x22,\x22msg-cache\x22,-733775070).cljs$core$IFn$_invoke$arity$1(G__27663),new cljs.core.Keyword(null,\x22nodes\x22,\x22nodes\x22,-2099585805).cljs$core$IFn$_invoke$arity$1(G__27663),new cljs.core.Keyword(null,\x22success\x22,\x22success\x22,1890645906).cljs$core$IFn$_invoke$arity$1(G__27663),new cljs.core.Keyword(null,\x22failure\x22,\x22failure\x22,720415879).cljs$core$IFn$_invoke$arity$1(G__27663),new cljs.core.Keyword(null,\x22trace?\x22,\x22trace?\x22,1730690679).cljs$core$IFn$_invoke$arity$1(G__27663),null,cljs.core.not_empty(extmap__4542__auto__),null));\r\n});\r\n\r\ninstaparse.gll.make_tramp \x3d (function instaparse$gll$make_tramp(var_args){\r\nvar G__27689 \x3d arguments.length;\r\nswitch (G__27689) {\r\ncase 2:\r\nreturn instaparse.gll.make_tramp.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn instaparse.gll.make_tramp.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn instaparse.gll.make_tramp.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ncase 5:\r\nreturn instaparse.gll.make_tramp.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(instaparse.gll.make_tramp.cljs$core$IFn$_invoke$arity$2 \x3d (function (grammar,text){\r\nreturn instaparse.gll.make_tramp.cljs$core$IFn$_invoke$arity$5(grammar,text,instaparse.gll.text__GT_segment(text),(-1),null);\r\n}));\r\n\r\n(instaparse.gll.make_tramp.cljs$core$IFn$_invoke$arity$3 \x3d (function (grammar,text,segment){\r\nreturn instaparse.gll.make_tramp.cljs$core$IFn$_invoke$arity$5(grammar,text,segment,(-1),null);\r\n}));\r\n\r\n(instaparse.gll.make_tramp.cljs$core$IFn$_invoke$arity$4 \x3d (function (grammar,text,fail_index,node_builder){\r\nreturn instaparse.gll.make_tramp.cljs$core$IFn$_invoke$arity$5(grammar,text,instaparse.gll.text__GT_segment(text),fail_index,node_builder);\r\n}));\r\n\r\n(instaparse.gll.make_tramp.cljs$core$IFn$_invoke$arity$5 \x3d (function (grammar,text,segment,fail_index,node_builder){\r\nreturn (new instaparse.gll.Tramp(grammar,text,segment,fail_index,node_builder,cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY),cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.sorted_map_by(cljs.core._GT_)),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),cljs.core.atom.cljs$core$IFn$_invoke$arity$1((new instaparse.gll.Failure((0),cljs.core.PersistentVector.EMPTY,null,null,null))),false,null,null,null));\r\n}));\r\n\r\n(instaparse.gll.make_tramp.cljs$lang$maxFixedArity \x3d 5);\r\n\r\ninstaparse.gll.make_success \x3d (function instaparse$gll$make_success(result,index){\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22result\x22,\x22result\x22,1415092211),result,new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915),index], null);\r\n});\r\ninstaparse.gll.total_success_QMARK_ \x3d (function instaparse$gll$total_success_QMARK_(tramp,s){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697).cljs$core$IFn$_invoke$arity$1(tramp)),new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915).cljs$core$IFn$_invoke$arity$1(s));\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IRecord}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ninstaparse.gll.Node \x3d (function (listeners,full_listeners,results,full_results,__meta,__extmap,__hash){\r\nthis.listeners \x3d listeners;\r\nthis.full_listeners \x3d full_listeners;\r\nthis.results \x3d results;\r\nthis.full_results \x3d full_results;\r\nthis.__meta \x3d __meta;\r\nthis.__extmap \x3d __extmap;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\r\n});\r\n(instaparse.gll.Node.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__4502__auto__,k__4503__auto__){\r\nvar self__ \x3d this;\r\nvar this__4502__auto____$1 \x3d this;\r\nreturn this__4502__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4503__auto__,null);\r\n}));\r\n\r\n(instaparse.gll.Node.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__4504__auto__,k27695,else__4505__auto__){\r\nvar self__ \x3d this;\r\nvar this__4504__auto____$1 \x3d this;\r\nvar G__27703 \x3d k27695;\r\nvar G__27703__$1 \x3d (((G__27703 instanceof cljs.core.Keyword))?G__27703.fqn:null);\r\nswitch (G__27703__$1) {\r\ncase \x22listeners\x22:\r\nreturn self__.listeners;\r\n\r\nbreak;\r\ncase \x22full-listeners\x22:\r\nreturn self__.full_listeners;\r\n\r\nbreak;\r\ncase \x22results\x22:\r\nreturn self__.results;\r\n\r\nbreak;\r\ncase \x22full-results\x22:\r\nreturn self__.full_results;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k27695,else__4505__auto__);\r\n\r\n}\r\n}));\r\n\r\n(instaparse.gll.Node.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__4522__auto__,f__4523__auto__,init__4524__auto__){\r\nvar self__ \x3d this;\r\nvar this__4522__auto____$1 \x3d this;\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4525__auto__,p__27704){\r\nvar vec__27705 \x3d p__27704;\r\nvar k__4526__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27705,(0),null);\r\nvar v__4527__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27705,(1),null);\r\nreturn (f__4523__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4523__auto__.cljs$core$IFn$_invoke$arity$3(ret__4525__auto__,k__4526__auto__,v__4527__auto__) : f__4523__auto__.call(null,ret__4525__auto__,k__4526__auto__,v__4527__auto__));\r\n}),init__4524__auto__,this__4522__auto____$1);\r\n}));\r\n\r\n(instaparse.gll.Node.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__4517__auto__,writer__4518__auto__,opts__4519__auto__){\r\nvar self__ \x3d this;\r\nvar this__4517__auto____$1 \x3d this;\r\nvar pr_pair__4520__auto__ \x3d (function (keyval__4521__auto__){\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__4519__auto__,keyval__4521__auto__);\r\n});\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,pr_pair__4520__auto__,\x22#instaparse.gll.Node{\x22,\x22, \x22,\x22}\x22,opts__4519__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22listeners\x22,\x22listeners\x22,394544445),self__.listeners],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22full-listeners\x22,\x22full-listeners\x22,50621827),self__.full_listeners],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22results\x22,\x22results\x22,-1134170113),self__.results],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22full-results\x22,\x22full-results\x22,-1500225407),self__.full_results],null))], null),self__.__extmap));\r\n}));\r\n\r\n(instaparse.gll.Node.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__27694){\r\nvar self__ \x3d this;\r\nvar G__27694__$1 \x3d this;\r\nreturn (new cljs.core.RecordIter((0),G__27694__$1,4,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22listeners\x22,\x22listeners\x22,394544445),new cljs.core.Keyword(null,\x22full-listeners\x22,\x22full-listeners\x22,50621827),new cljs.core.Keyword(null,\x22results\x22,\x22results\x22,-1134170113),new cljs.core.Keyword(null,\x22full-results\x22,\x22full-results\x22,-1500225407)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\r\n}));\r\n\r\n(instaparse.gll.Node.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__4500__auto__){\r\nvar self__ \x3d this;\r\nvar this__4500__auto____$1 \x3d this;\r\nreturn self__.__meta;\r\n}));\r\n\r\n(instaparse.gll.Node.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__4497__auto__){\r\nvar self__ \x3d this;\r\nvar this__4497__auto____$1 \x3d this;\r\nreturn (new instaparse.gll.Node(self__.listeners,self__.full_listeners,self__.results,self__.full_results,self__.__meta,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(instaparse.gll.Node.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__4506__auto__){\r\nvar self__ \x3d this;\r\nvar this__4506__auto____$1 \x3d this;\r\nreturn (4 + cljs.core.count(self__.__extmap));\r\n}));\r\n\r\n(instaparse.gll.Node.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__4498__auto__){\r\nvar self__ \x3d this;\r\nvar this__4498__auto____$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d (function (coll__4499__auto__){\r\nreturn (-1610074144 ^ cljs.core.hash_unordered_coll(coll__4499__auto__));\r\n})(this__4498__auto____$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(instaparse.gll.Node.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this27696,other27697){\r\nvar self__ \x3d this;\r\nvar this27696__$1 \x3d this;\r\nreturn (((!((other27697 \x3d\x3d null)))) \x26\x26 ((((this27696__$1.constructor \x3d\x3d\x3d other27697.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27696__$1.listeners,other27697.listeners)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27696__$1.full_listeners,other27697.full_listeners)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27696__$1.results,other27697.results)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27696__$1.full_results,other27697.full_results)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27696__$1.__extmap,other27697.__extmap)))))))))))));\r\n}));\r\n\r\n(instaparse.gll.Node.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__4512__auto__,k__4513__auto__){\r\nvar self__ \x3d this;\r\nvar this__4512__auto____$1 \x3d this;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22full-results\x22,\x22full-results\x22,-1500225407),null,new cljs.core.Keyword(null,\x22full-listeners\x22,\x22full-listeners\x22,50621827),null,new cljs.core.Keyword(null,\x22listeners\x22,\x22listeners\x22,394544445),null,new cljs.core.Keyword(null,\x22results\x22,\x22results\x22,-1134170113),null], null), null),k__4513__auto__)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4512__auto____$1),self__.__meta),k__4513__auto__);\r\n} else {\r\nreturn (new instaparse.gll.Node(self__.listeners,self__.full_listeners,self__.results,self__.full_results,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4513__auto__)),null));\r\n}\r\n}));\r\n\r\n(instaparse.gll.Node.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__4509__auto__,k27695){\r\nvar self__ \x3d this;\r\nvar this__4509__auto____$1 \x3d this;\r\nvar G__27718 \x3d k27695;\r\nvar G__27718__$1 \x3d (((G__27718 instanceof cljs.core.Keyword))?G__27718.fqn:null);\r\nswitch (G__27718__$1) {\r\ncase \x22listeners\x22:\r\ncase \x22full-listeners\x22:\r\ncase \x22results\x22:\r\ncase \x22full-results\x22:\r\nreturn true;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.contains_QMARK_(self__.__extmap,k27695);\r\n\r\n}\r\n}));\r\n\r\n(instaparse.gll.Node.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__4510__auto__,k__4511__auto__,G__27694){\r\nvar self__ \x3d this;\r\nvar this__4510__auto____$1 \x3d this;\r\nvar pred__27719 \x3d cljs.core.keyword_identical_QMARK_;\r\nvar expr__27720 \x3d k__4511__auto__;\r\nif(cljs.core.truth_((pred__27719.cljs$core$IFn$_invoke$arity$2 ? pred__27719.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22listeners\x22,\x22listeners\x22,394544445),expr__27720) : pred__27719.call(null,new cljs.core.Keyword(null,\x22listeners\x22,\x22listeners\x22,394544445),expr__27720)))){\r\nreturn (new instaparse.gll.Node(G__27694,self__.full_listeners,self__.results,self__.full_results,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__27719.cljs$core$IFn$_invoke$arity$2 ? pred__27719.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22full-listeners\x22,\x22full-listeners\x22,50621827),expr__27720) : pred__27719.call(null,new cljs.core.Keyword(null,\x22full-listeners\x22,\x22full-listeners\x22,50621827),expr__27720)))){\r\nreturn (new instaparse.gll.Node(self__.listeners,G__27694,self__.results,self__.full_results,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__27719.cljs$core$IFn$_invoke$arity$2 ? pred__27719.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22results\x22,\x22results\x22,-1134170113),expr__27720) : pred__27719.call(null,new cljs.core.Keyword(null,\x22results\x22,\x22results\x22,-1134170113),expr__27720)))){\r\nreturn (new instaparse.gll.Node(self__.listeners,self__.full_listeners,G__27694,self__.full_results,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__27719.cljs$core$IFn$_invoke$arity$2 ? pred__27719.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22full-results\x22,\x22full-results\x22,-1500225407),expr__27720) : pred__27719.call(null,new cljs.core.Keyword(null,\x22full-results\x22,\x22full-results\x22,-1500225407),expr__27720)))){\r\nreturn (new instaparse.gll.Node(self__.listeners,self__.full_listeners,self__.results,G__27694,self__.__meta,self__.__extmap,null));\r\n} else {\r\nreturn (new instaparse.gll.Node(self__.listeners,self__.full_listeners,self__.results,self__.full_results,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4511__auto__,G__27694),null));\r\n}\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(instaparse.gll.Node.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__4515__auto__){\r\nvar self__ \x3d this;\r\nvar this__4515__auto____$1 \x3d this;\r\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22listeners\x22,\x22listeners\x22,394544445),self__.listeners,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22full-listeners\x22,\x22full-listeners\x22,50621827),self__.full_listeners,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22results\x22,\x22results\x22,-1134170113),self__.results,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22full-results\x22,\x22full-results\x22,-1500225407),self__.full_results,null))], null),self__.__extmap));\r\n}));\r\n\r\n(instaparse.gll.Node.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__4501__auto__,G__27694){\r\nvar self__ \x3d this;\r\nvar this__4501__auto____$1 \x3d this;\r\nreturn (new instaparse.gll.Node(self__.listeners,self__.full_listeners,self__.results,self__.full_results,G__27694,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(instaparse.gll.Node.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__4507__auto__,entry__4508__auto__){\r\nvar self__ \x3d this;\r\nvar this__4507__auto____$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(entry__4508__auto__)){\r\nreturn this__4507__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4508__auto__,(0)),cljs.core._nth(entry__4508__auto__,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4507__auto____$1,entry__4508__auto__);\r\n}\r\n}));\r\n\r\n(instaparse.gll.Node.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22listeners\x22,\x22listeners\x22,2035075972,null),new cljs.core.Symbol(null,\x22full-listeners\x22,\x22full-listeners\x22,1691153354,null),new cljs.core.Symbol(null,\x22results\x22,\x22results\x22,506361414,null),new cljs.core.Symbol(null,\x22full-results\x22,\x22full-results\x22,140306120,null)], null);\r\n}));\r\n\r\n(instaparse.gll.Node.cljs$lang$type \x3d true);\r\n\r\n(instaparse.gll.Node.cljs$lang$ctorPrSeq \x3d (function (this__4546__auto__){\r\nreturn (new cljs.core.List(null,\x22instaparse.gll/Node\x22,null,(1),null));\r\n}));\r\n\r\n(instaparse.gll.Node.cljs$lang$ctorPrWriter \x3d (function (this__4546__auto__,writer__4547__auto__){\r\nreturn cljs.core._write(writer__4547__auto__,\x22instaparse.gll/Node\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for instaparse.gll/Node.\r\n */\r\ninstaparse.gll.__GT_Node \x3d (function instaparse$gll$__GT_Node(listeners,full_listeners,results,full_results){\r\nreturn (new instaparse.gll.Node(listeners,full_listeners,results,full_results,null,null,null));\r\n});\r\n\r\n/**\r\n * Factory function for instaparse.gll/Node, taking a map of keywords to field values.\r\n */\r\ninstaparse.gll.map__GT_Node \x3d (function instaparse$gll$map__GT_Node(G__27700){\r\nvar extmap__4542__auto__ \x3d (function (){var G__27722 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__27700,new cljs.core.Keyword(null,\x22listeners\x22,\x22listeners\x22,394544445),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22full-listeners\x22,\x22full-listeners\x22,50621827),new cljs.core.Keyword(null,\x22results\x22,\x22results\x22,-1134170113),new cljs.core.Keyword(null,\x22full-results\x22,\x22full-results\x22,-1500225407)], 0));\r\nif(cljs.core.record_QMARK_(G__27700)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__27722);\r\n} else {\r\nreturn G__27722;\r\n}\r\n})();\r\nreturn (new instaparse.gll.Node(new cljs.core.Keyword(null,\x22listeners\x22,\x22listeners\x22,394544445).cljs$core$IFn$_invoke$arity$1(G__27700),new cljs.core.Keyword(null,\x22full-listeners\x22,\x22full-listeners\x22,50621827).cljs$core$IFn$_invoke$arity$1(G__27700),new cljs.core.Keyword(null,\x22results\x22,\x22results\x22,-1134170113).cljs$core$IFn$_invoke$arity$1(G__27700),new cljs.core.Keyword(null,\x22full-results\x22,\x22full-results\x22,-1500225407).cljs$core$IFn$_invoke$arity$1(G__27700),null,cljs.core.not_empty(extmap__4542__auto__),null));\r\n});\r\n\r\ninstaparse.gll.make_node \x3d (function instaparse$gll$make_node(){\r\nreturn (new instaparse.gll.Node(cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashSet.EMPTY),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashSet.EMPTY),null,null,null));\r\n});\r\n/**\r\n * Pushes an item onto the trampoline\x27s stack\r\n */\r\ninstaparse.gll.push_stack \x3d (function instaparse$gll$push_stack(tramp,item){\r\n\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\x22stack\x22,\x22stack\x22,-793405930).cljs$core$IFn$_invoke$arity$1(tramp),cljs.core.conj,item);\r\n});\r\n/**\r\n * Pushes onto stack a message to a given listener about a result\r\n */\r\ninstaparse.gll.push_message \x3d (function instaparse$gll$push_message(tramp,listener,result){\r\nvar cache \x3d new cljs.core.Keyword(null,\x22msg-cache\x22,\x22msg-cache\x22,-733775070).cljs$core$IFn$_invoke$arity$1(tramp);\r\nvar i \x3d new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915).cljs$core$IFn$_invoke$arity$1(result);\r\nvar k \x3d new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [listener,i], null);\r\nvar c \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cache),k,(0));\r\nvar f \x3d (function (){\r\nreturn (listener.cljs$core$IFn$_invoke$arity$1 ? listener.cljs$core$IFn$_invoke$arity$1(result) : listener.call(null,result));\r\n});\r\n\r\nif((c \x3e cljs.core.deref(new cljs.core.Keyword(null,\x22generation\x22,\x22generation\x22,-2132542044).cljs$core$IFn$_invoke$arity$1(tramp)))){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\x22next-stack\x22,\x22next-stack\x22,-481930728).cljs$core$IFn$_invoke$arity$1(tramp),cljs.core.conj,f);\r\n} else {\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\x22stack\x22,\x22stack\x22,-793405930).cljs$core$IFn$_invoke$arity$1(tramp),cljs.core.conj,f);\r\n}\r\n\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cache,cljs.core.assoc,k,(c + (1)));\r\n});\r\n/**\r\n * Tests whether node already has a listener\r\n */\r\ninstaparse.gll.listener_exists_QMARK_ \x3d (function instaparse$gll$listener_exists_QMARK_(tramp,node_key){\r\nvar nodes \x3d new cljs.core.Keyword(null,\x22nodes\x22,\x22nodes\x22,-2099585805).cljs$core$IFn$_invoke$arity$1(tramp);\r\nvar temp__5753__auto__ \x3d (function (){var fexpr__27726 \x3d cljs.core.deref(nodes);\r\nreturn (fexpr__27726.cljs$core$IFn$_invoke$arity$1 ? fexpr__27726.cljs$core$IFn$_invoke$arity$1(node_key) : fexpr__27726.call(null,node_key));\r\n})();\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar node \x3d temp__5753__auto__;\r\nreturn (cljs.core.count(cljs.core.deref(new cljs.core.Keyword(null,\x22listeners\x22,\x22listeners\x22,394544445).cljs$core$IFn$_invoke$arity$1(node))) \x3e (0));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Tests whether node already has a listener or full-listener\r\n */\r\ninstaparse.gll.full_listener_exists_QMARK_ \x3d (function instaparse$gll$full_listener_exists_QMARK_(tramp,node_key){\r\nvar nodes \x3d new cljs.core.Keyword(null,\x22nodes\x22,\x22nodes\x22,-2099585805).cljs$core$IFn$_invoke$arity$1(tramp);\r\nvar temp__5753__auto__ \x3d (function (){var fexpr__27727 \x3d cljs.core.deref(nodes);\r\nreturn (fexpr__27727.cljs$core$IFn$_invoke$arity$1 ? fexpr__27727.cljs$core$IFn$_invoke$arity$1(node_key) : fexpr__27727.call(null,node_key));\r\n})();\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar node \x3d temp__5753__auto__;\r\nreturn (((cljs.core.count(cljs.core.deref(new cljs.core.Keyword(null,\x22full-listeners\x22,\x22full-listeners\x22,50621827).cljs$core$IFn$_invoke$arity$1(node))) \x3e (0))) || ((cljs.core.count(cljs.core.deref(new cljs.core.Keyword(null,\x22listeners\x22,\x22listeners\x22,394544445).cljs$core$IFn$_invoke$arity$1(node))) \x3e (0))));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Tests whether node has a result or full-result\r\n */\r\ninstaparse.gll.result_exists_QMARK_ \x3d (function instaparse$gll$result_exists_QMARK_(tramp,node_key){\r\nvar nodes \x3d new cljs.core.Keyword(null,\x22nodes\x22,\x22nodes\x22,-2099585805).cljs$core$IFn$_invoke$arity$1(tramp);\r\nvar temp__5753__auto__ \x3d (function (){var fexpr__27729 \x3d cljs.core.deref(nodes);\r\nreturn (fexpr__27729.cljs$core$IFn$_invoke$arity$1 ? fexpr__27729.cljs$core$IFn$_invoke$arity$1(node_key) : fexpr__27729.call(null,node_key));\r\n})();\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar node \x3d temp__5753__auto__;\r\nreturn (((cljs.core.count(cljs.core.deref(new cljs.core.Keyword(null,\x22full-results\x22,\x22full-results\x22,-1500225407).cljs$core$IFn$_invoke$arity$1(node))) \x3e (0))) || ((cljs.core.count(cljs.core.deref(new cljs.core.Keyword(null,\x22results\x22,\x22results\x22,-1134170113).cljs$core$IFn$_invoke$arity$1(node))) \x3e (0))));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Tests whether node has a full-result\r\n */\r\ninstaparse.gll.full_result_exists_QMARK_ \x3d (function instaparse$gll$full_result_exists_QMARK_(tramp,node_key){\r\nvar nodes \x3d new cljs.core.Keyword(null,\x22nodes\x22,\x22nodes\x22,-2099585805).cljs$core$IFn$_invoke$arity$1(tramp);\r\nvar temp__5753__auto__ \x3d (function (){var fexpr__27730 \x3d cljs.core.deref(nodes);\r\nreturn (fexpr__27730.cljs$core$IFn$_invoke$arity$1 ? fexpr__27730.cljs$core$IFn$_invoke$arity$1(node_key) : fexpr__27730.call(null,node_key));\r\n})();\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar node \x3d temp__5753__auto__;\r\nreturn (cljs.core.count(cljs.core.deref(new cljs.core.Keyword(null,\x22full-results\x22,\x22full-results\x22,-1500225407).cljs$core$IFn$_invoke$arity$1(node))) \x3e (0));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Gets node if already exists, otherwise creates one\r\n */\r\ninstaparse.gll.node_get \x3d (function instaparse$gll$node_get(tramp,node_key){\r\nvar nodes \x3d new cljs.core.Keyword(null,\x22nodes\x22,\x22nodes\x22,-2099585805).cljs$core$IFn$_invoke$arity$1(tramp);\r\nvar temp__5751__auto__ \x3d (function (){var fexpr__27731 \x3d cljs.core.deref(nodes);\r\nreturn (fexpr__27731.cljs$core$IFn$_invoke$arity$1 ? fexpr__27731.cljs$core$IFn$_invoke$arity$1(node_key) : fexpr__27731.call(null,node_key));\r\n})();\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar node \x3d temp__5751__auto__;\r\nreturn node;\r\n} else {\r\nvar node \x3d instaparse.gll.make_node();\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(nodes,cljs.core.assoc,node_key,node);\r\n\r\nreturn node;\r\n}\r\n});\r\ninstaparse.gll.safe_with_meta \x3d (function instaparse$gll$safe_with_meta(obj,metamap){\r\nif((((!((obj \x3d\x3d null))))?(((((obj.cljs$lang$protocol_mask$partition0$ \x26 (262144))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d obj.cljs$core$IWithMeta$))))?true:(((!obj.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,obj):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,obj))){\r\nreturn cljs.core.with_meta(obj,metamap);\r\n} else {\r\nreturn obj;\r\n}\r\n});\r\n/**\r\n * Pushes a result into the trampoline\x27s node.\r\n * Categorizes as either result or full-result.\r\n * Schedules notification to all existing listeners of result\r\n * (Full listeners only get notified about full results)\r\n */\r\ninstaparse.gll.push_result \x3d (function instaparse$gll$push_result(tramp,node_key,result){\r\n\r\nvar node \x3d instaparse.gll.node_get(tramp,node_key);\r\nvar parser \x3d (node_key.cljs$core$IFn$_invoke$arity$1 ? node_key.cljs$core$IFn$_invoke$arity$1((1)) : node_key.call(null,(1)));\r\nvar result__$1 \x3d (cljs.core.truth_(new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169).cljs$core$IFn$_invoke$arity$1(parser))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(result,new cljs.core.Keyword(null,\x22result\x22,\x22result\x22,1415092211),null):result);\r\nvar result__$2 \x3d (function (){var temp__5751__auto__ \x3d new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204).cljs$core$IFn$_invoke$arity$1(parser);\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar reduction_function \x3d temp__5751__auto__;\r\nreturn instaparse.gll.make_success(instaparse.gll.safe_with_meta(instaparse.reduction.apply_reduction(reduction_function,new cljs.core.Keyword(null,\x22result\x22,\x22result\x22,1415092211).cljs$core$IFn$_invoke$arity$1(result__$1)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(\x22instaparse.gll\x22,\x22start-index\x22,\x22instaparse.gll/start-index\x22,404653620),(node_key.cljs$core$IFn$_invoke$arity$1 ? node_key.cljs$core$IFn$_invoke$arity$1((0)) : node_key.call(null,(0))),new cljs.core.Keyword(\x22instaparse.gll\x22,\x22end-index\x22,\x22instaparse.gll/end-index\x22,-1851404441),new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915).cljs$core$IFn$_invoke$arity$1(result__$1)], null)),new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915).cljs$core$IFn$_invoke$arity$1(result__$1));\r\n} else {\r\nreturn result__$1;\r\n}\r\n})();\r\nvar total_QMARK_ \x3d instaparse.gll.total_success_QMARK_(tramp,result__$2);\r\nvar results \x3d ((total_QMARK_)?new cljs.core.Keyword(null,\x22full-results\x22,\x22full-results\x22,-1500225407).cljs$core$IFn$_invoke$arity$1(node):new cljs.core.Keyword(null,\x22results\x22,\x22results\x22,-1134170113).cljs$core$IFn$_invoke$arity$1(node));\r\nif(cljs.core.not((function (){var fexpr__27733 \x3d cljs.core.deref(results);\r\nreturn (fexpr__27733.cljs$core$IFn$_invoke$arity$1 ? fexpr__27733.cljs$core$IFn$_invoke$arity$1(result__$2) : fexpr__27733.call(null,result__$2));\r\n})())){\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(results,cljs.core.conj,result__$2);\r\n\r\nvar seq__27734_28000 \x3d cljs.core.seq(cljs.core.deref(new cljs.core.Keyword(null,\x22listeners\x22,\x22listeners\x22,394544445).cljs$core$IFn$_invoke$arity$1(node)));\r\nvar chunk__27735_28001 \x3d null;\r\nvar count__27736_28002 \x3d (0);\r\nvar i__27737_28003 \x3d (0);\r\nwhile(true){\r\nif((i__27737_28003 \x3c count__27736_28002)){\r\nvar listener_28004 \x3d chunk__27735_28001.cljs$core$IIndexed$_nth$arity$2(null,i__27737_28003);\r\ninstaparse.gll.push_message(tramp,listener_28004,result__$2);\r\n\r\n\r\nvar G__28005 \x3d seq__27734_28000;\r\nvar G__28006 \x3d chunk__27735_28001;\r\nvar G__28007 \x3d count__27736_28002;\r\nvar G__28008 \x3d (i__27737_28003 + (1));\r\nseq__27734_28000 \x3d G__28005;\r\nchunk__27735_28001 \x3d G__28006;\r\ncount__27736_28002 \x3d G__28007;\r\ni__27737_28003 \x3d G__28008;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto___28009 \x3d cljs.core.seq(seq__27734_28000);\r\nif(temp__5753__auto___28009){\r\nvar seq__27734_28010__$1 \x3d temp__5753__auto___28009;\r\nif(cljs.core.chunked_seq_QMARK_(seq__27734_28010__$1)){\r\nvar c__4679__auto___28011 \x3d cljs.core.chunk_first(seq__27734_28010__$1);\r\nvar G__28012 \x3d cljs.core.chunk_rest(seq__27734_28010__$1);\r\nvar G__28013 \x3d c__4679__auto___28011;\r\nvar G__28014 \x3d cljs.core.count(c__4679__auto___28011);\r\nvar G__28015 \x3d (0);\r\nseq__27734_28000 \x3d G__28012;\r\nchunk__27735_28001 \x3d G__28013;\r\ncount__27736_28002 \x3d G__28014;\r\ni__27737_28003 \x3d G__28015;\r\ncontinue;\r\n} else {\r\nvar listener_28019 \x3d cljs.core.first(seq__27734_28010__$1);\r\ninstaparse.gll.push_message(tramp,listener_28019,result__$2);\r\n\r\n\r\nvar G__28020 \x3d cljs.core.next(seq__27734_28010__$1);\r\nvar G__28021 \x3d null;\r\nvar G__28022 \x3d (0);\r\nvar G__28023 \x3d (0);\r\nseq__27734_28000 \x3d G__28020;\r\nchunk__27735_28001 \x3d G__28021;\r\ncount__27736_28002 \x3d G__28022;\r\ni__27737_28003 \x3d G__28023;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nif(total_QMARK_){\r\nvar seq__27738 \x3d cljs.core.seq(cljs.core.deref(new cljs.core.Keyword(null,\x22full-listeners\x22,\x22full-listeners\x22,50621827).cljs$core$IFn$_invoke$arity$1(node)));\r\nvar chunk__27739 \x3d null;\r\nvar count__27740 \x3d (0);\r\nvar i__27741 \x3d (0);\r\nwhile(true){\r\nif((i__27741 \x3c count__27740)){\r\nvar listener \x3d chunk__27739.cljs$core$IIndexed$_nth$arity$2(null,i__27741);\r\ninstaparse.gll.push_message(tramp,listener,result__$2);\r\n\r\n\r\nvar G__28024 \x3d seq__27738;\r\nvar G__28025 \x3d chunk__27739;\r\nvar G__28026 \x3d count__27740;\r\nvar G__28027 \x3d (i__27741 + (1));\r\nseq__27738 \x3d G__28024;\r\nchunk__27739 \x3d G__28025;\r\ncount__27740 \x3d G__28026;\r\ni__27741 \x3d G__28027;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto__ \x3d cljs.core.seq(seq__27738);\r\nif(temp__5753__auto__){\r\nvar seq__27738__$1 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__27738__$1)){\r\nvar c__4679__auto__ \x3d cljs.core.chunk_first(seq__27738__$1);\r\nvar G__28028 \x3d cljs.core.chunk_rest(seq__27738__$1);\r\nvar G__28029 \x3d c__4679__auto__;\r\nvar G__28030 \x3d cljs.core.count(c__4679__auto__);\r\nvar G__28031 \x3d (0);\r\nseq__27738 \x3d G__28028;\r\nchunk__27739 \x3d G__28029;\r\ncount__27740 \x3d G__28030;\r\ni__27741 \x3d G__28031;\r\ncontinue;\r\n} else {\r\nvar listener \x3d cljs.core.first(seq__27738__$1);\r\ninstaparse.gll.push_message(tramp,listener,result__$2);\r\n\r\n\r\nvar G__28032 \x3d cljs.core.next(seq__27738__$1);\r\nvar G__28033 \x3d null;\r\nvar G__28034 \x3d (0);\r\nvar G__28035 \x3d (0);\r\nseq__27738 \x3d G__28032;\r\nchunk__27739 \x3d G__28033;\r\ncount__27740 \x3d G__28034;\r\ni__27741 \x3d G__28035;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Pushes a listener into the trampoline\x27s node.\r\n * Schedules notification to listener of all existing results.\r\n * Initiates parse if necessary\r\n */\r\ninstaparse.gll.push_listener \x3d (function instaparse$gll$push_listener(tramp,node_key,listener){\r\nvar listener_already_exists_QMARK_ \x3d instaparse.gll.listener_exists_QMARK_(tramp,node_key);\r\nvar node \x3d instaparse.gll.node_get(tramp,node_key);\r\nvar listeners \x3d new cljs.core.Keyword(null,\x22listeners\x22,\x22listeners\x22,394544445).cljs$core$IFn$_invoke$arity$1(node);\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(listeners,cljs.core.conj,listener);\r\n\r\nvar seq__27742_28036 \x3d cljs.core.seq(cljs.core.deref(new cljs.core.Keyword(null,\x22results\x22,\x22results\x22,-1134170113).cljs$core$IFn$_invoke$arity$1(node)));\r\nvar chunk__27743_28037 \x3d null;\r\nvar count__27744_28038 \x3d (0);\r\nvar i__27745_28039 \x3d (0);\r\nwhile(true){\r\nif((i__27745_28039 \x3c count__27744_28038)){\r\nvar result_28040 \x3d chunk__27743_28037.cljs$core$IIndexed$_nth$arity$2(null,i__27745_28039);\r\ninstaparse.gll.push_message(tramp,listener,result_28040);\r\n\r\n\r\nvar G__28042 \x3d seq__27742_28036;\r\nvar G__28043 \x3d chunk__27743_28037;\r\nvar G__28044 \x3d count__27744_28038;\r\nvar G__28045 \x3d (i__27745_28039 + (1));\r\nseq__27742_28036 \x3d G__28042;\r\nchunk__27743_28037 \x3d G__28043;\r\ncount__27744_28038 \x3d G__28044;\r\ni__27745_28039 \x3d G__28045;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto___28046 \x3d cljs.core.seq(seq__27742_28036);\r\nif(temp__5753__auto___28046){\r\nvar seq__27742_28047__$1 \x3d temp__5753__auto___28046;\r\nif(cljs.core.chunked_seq_QMARK_(seq__27742_28047__$1)){\r\nvar c__4679__auto___28049 \x3d cljs.core.chunk_first(seq__27742_28047__$1);\r\nvar G__28050 \x3d cljs.core.chunk_rest(seq__27742_28047__$1);\r\nvar G__28051 \x3d c__4679__auto___28049;\r\nvar G__28052 \x3d cljs.core.count(c__4679__auto___28049);\r\nvar G__28053 \x3d (0);\r\nseq__27742_28036 \x3d G__28050;\r\nchunk__27743_28037 \x3d G__28051;\r\ncount__27744_28038 \x3d G__28052;\r\ni__27745_28039 \x3d G__28053;\r\ncontinue;\r\n} else {\r\nvar result_28054 \x3d cljs.core.first(seq__27742_28047__$1);\r\ninstaparse.gll.push_message(tramp,listener,result_28054);\r\n\r\n\r\nvar G__28055 \x3d cljs.core.next(seq__27742_28047__$1);\r\nvar G__28056 \x3d null;\r\nvar G__28057 \x3d (0);\r\nvar G__28058 \x3d (0);\r\nseq__27742_28036 \x3d G__28055;\r\nchunk__27743_28037 \x3d G__28056;\r\ncount__27744_28038 \x3d G__28057;\r\ni__27745_28039 \x3d G__28058;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nvar seq__27746_28059 \x3d cljs.core.seq(cljs.core.deref(new cljs.core.Keyword(null,\x22full-results\x22,\x22full-results\x22,-1500225407).cljs$core$IFn$_invoke$arity$1(node)));\r\nvar chunk__27747_28060 \x3d null;\r\nvar count__27748_28061 \x3d (0);\r\nvar i__27749_28062 \x3d (0);\r\nwhile(true){\r\nif((i__27749_28062 \x3c count__27748_28061)){\r\nvar result_28063 \x3d chunk__27747_28060.cljs$core$IIndexed$_nth$arity$2(null,i__27749_28062);\r\ninstaparse.gll.push_message(tramp,listener,result_28063);\r\n\r\n\r\nvar G__28064 \x3d seq__27746_28059;\r\nvar G__28065 \x3d chunk__27747_28060;\r\nvar G__28066 \x3d count__27748_28061;\r\nvar G__28067 \x3d (i__27749_28062 + (1));\r\nseq__27746_28059 \x3d G__28064;\r\nchunk__27747_28060 \x3d G__28065;\r\ncount__27748_28061 \x3d G__28066;\r\ni__27749_28062 \x3d G__28067;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto___28068 \x3d cljs.core.seq(seq__27746_28059);\r\nif(temp__5753__auto___28068){\r\nvar seq__27746_28069__$1 \x3d temp__5753__auto___28068;\r\nif(cljs.core.chunked_seq_QMARK_(seq__27746_28069__$1)){\r\nvar c__4679__auto___28070 \x3d cljs.core.chunk_first(seq__27746_28069__$1);\r\nvar G__28071 \x3d cljs.core.chunk_rest(seq__27746_28069__$1);\r\nvar G__28072 \x3d c__4679__auto___28070;\r\nvar G__28073 \x3d cljs.core.count(c__4679__auto___28070);\r\nvar G__28074 \x3d (0);\r\nseq__27746_28059 \x3d G__28071;\r\nchunk__27747_28060 \x3d G__28072;\r\ncount__27748_28061 \x3d G__28073;\r\ni__27749_28062 \x3d G__28074;\r\ncontinue;\r\n} else {\r\nvar result_28075 \x3d cljs.core.first(seq__27746_28069__$1);\r\ninstaparse.gll.push_message(tramp,listener,result_28075);\r\n\r\n\r\nvar G__28078 \x3d cljs.core.next(seq__27746_28069__$1);\r\nvar G__28079 \x3d null;\r\nvar G__28080 \x3d (0);\r\nvar G__28081 \x3d (0);\r\nseq__27746_28059 \x3d G__28078;\r\nchunk__27747_28060 \x3d G__28079;\r\ncount__27748_28061 \x3d G__28080;\r\ni__27749_28062 \x3d G__28081;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nif(cljs.core.not(listener_already_exists_QMARK_)){\r\nreturn instaparse.gll.push_stack(tramp,(function (){\r\nreturn instaparse.gll._parse((node_key.cljs$core$IFn$_invoke$arity$1 ? node_key.cljs$core$IFn$_invoke$arity$1((1)) : node_key.call(null,(1))),(node_key.cljs$core$IFn$_invoke$arity$1 ? node_key.cljs$core$IFn$_invoke$arity$1((0)) : node_key.call(null,(0))),tramp);\r\n}));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Pushes a listener into the trampoline\x27s node.\r\n * Schedules notification to listener of all existing full results.\r\n */\r\ninstaparse.gll.push_full_listener \x3d (function instaparse$gll$push_full_listener(tramp,node_key,listener){\r\nvar full_listener_already_exists_QMARK_ \x3d instaparse.gll.full_listener_exists_QMARK_(tramp,node_key);\r\nvar node \x3d instaparse.gll.node_get(tramp,node_key);\r\nvar listeners \x3d new cljs.core.Keyword(null,\x22full-listeners\x22,\x22full-listeners\x22,50621827).cljs$core$IFn$_invoke$arity$1(node);\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(listeners,cljs.core.conj,listener);\r\n\r\nvar seq__27750_28084 \x3d cljs.core.seq(cljs.core.deref(new cljs.core.Keyword(null,\x22full-results\x22,\x22full-results\x22,-1500225407).cljs$core$IFn$_invoke$arity$1(node)));\r\nvar chunk__27751_28085 \x3d null;\r\nvar count__27752_28086 \x3d (0);\r\nvar i__27753_28087 \x3d (0);\r\nwhile(true){\r\nif((i__27753_28087 \x3c count__27752_28086)){\r\nvar result_28088 \x3d chunk__27751_28085.cljs$core$IIndexed$_nth$arity$2(null,i__27753_28087);\r\ninstaparse.gll.push_message(tramp,listener,result_28088);\r\n\r\n\r\nvar G__28089 \x3d seq__27750_28084;\r\nvar G__28090 \x3d chunk__27751_28085;\r\nvar G__28091 \x3d count__27752_28086;\r\nvar G__28092 \x3d (i__27753_28087 + (1));\r\nseq__27750_28084 \x3d G__28089;\r\nchunk__27751_28085 \x3d G__28090;\r\ncount__27752_28086 \x3d G__28091;\r\ni__27753_28087 \x3d G__28092;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto___28093 \x3d cljs.core.seq(seq__27750_28084);\r\nif(temp__5753__auto___28093){\r\nvar seq__27750_28094__$1 \x3d temp__5753__auto___28093;\r\nif(cljs.core.chunked_seq_QMARK_(seq__27750_28094__$1)){\r\nvar c__4679__auto___28095 \x3d cljs.core.chunk_first(seq__27750_28094__$1);\r\nvar G__28096 \x3d cljs.core.chunk_rest(seq__27750_28094__$1);\r\nvar G__28097 \x3d c__4679__auto___28095;\r\nvar G__28098 \x3d cljs.core.count(c__4679__auto___28095);\r\nvar G__28099 \x3d (0);\r\nseq__27750_28084 \x3d G__28096;\r\nchunk__27751_28085 \x3d G__28097;\r\ncount__27752_28086 \x3d G__28098;\r\ni__27753_28087 \x3d G__28099;\r\ncontinue;\r\n} else {\r\nvar result_28100 \x3d cljs.core.first(seq__27750_28094__$1);\r\ninstaparse.gll.push_message(tramp,listener,result_28100);\r\n\r\n\r\nvar G__28101 \x3d cljs.core.next(seq__27750_28094__$1);\r\nvar G__28102 \x3d null;\r\nvar G__28103 \x3d (0);\r\nvar G__28104 \x3d (0);\r\nseq__27750_28084 \x3d G__28101;\r\nchunk__27751_28085 \x3d G__28102;\r\ncount__27752_28086 \x3d G__28103;\r\ni__27753_28087 \x3d G__28104;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nif(cljs.core.not(full_listener_already_exists_QMARK_)){\r\nreturn instaparse.gll.push_stack(tramp,(function (){\r\nreturn instaparse.gll._full_parse((node_key.cljs$core$IFn$_invoke$arity$1 ? node_key.cljs$core$IFn$_invoke$arity$1((1)) : node_key.call(null,(1))),(node_key.cljs$core$IFn$_invoke$arity$1 ? node_key.cljs$core$IFn$_invoke$arity$1((0)) : node_key.call(null,(0))),tramp);\r\n}));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ninstaparse.gll.merge_negative_listeners \x3d cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.merge_with,cljs.core.into);\r\n/**\r\n * Pushes a thunk onto the trampoline\x27s negative-listener stack.\r\n */\r\ninstaparse.gll.push_negative_listener \x3d (function instaparse$gll$push_negative_listener(tramp,creator,negative_listener){\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\x22negative-listeners\x22,\x22negative-listeners\x22,55241092).cljs$core$IFn$_invoke$arity$1(tramp),instaparse.gll.merge_negative_listeners,cljs.core.PersistentArrayMap.createAsIfByAssoc([(creator.cljs$core$IFn$_invoke$arity$1 ? creator.cljs$core$IFn$_invoke$arity$1((0)) : creator.call(null,(0))),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [negative_listener], null)]));\r\n});\r\ninstaparse.gll.fail \x3d (function instaparse$gll$fail(tramp,node_key,index,reason){\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22failure\x22,\x22failure\x22,720415879).cljs$core$IFn$_invoke$arity$1(tramp),(function (failure){\r\nvar current_index \x3d new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915).cljs$core$IFn$_invoke$arity$1(failure);\r\nvar G__27754 \x3d cljs.core.compare(index,current_index);\r\nswitch (G__27754) {\r\ncase (1):\r\nreturn (new instaparse.gll.Failure(index,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [reason], null),null,null,null));\r\n\r\nbreak;\r\ncase (0):\r\nreturn (new instaparse.gll.Failure(index,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22reason\x22,\x22reason\x22,-2070751759).cljs$core$IFn$_invoke$arity$1(failure),reason),null,null,null));\r\n\r\nbreak;\r\ncase (-1):\r\nreturn failure;\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__27754)].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(index,new cljs.core.Keyword(null,\x22fail-index\x22,\x22fail-index\x22,248726923).cljs$core$IFn$_invoke$arity$1(tramp))){\r\nreturn instaparse.gll.push_result(tramp,node_key,instaparse.gll.make_success((function (){var G__27755 \x3d new cljs.core.Keyword(null,\x22node-builder\x22,\x22node-builder\x22,-1956562605).cljs$core$IFn$_invoke$arity$1(tramp);\r\nvar G__27756 \x3d new cljs.core.Keyword(\x22instaparse\x22,\x22failure\x22,\x22instaparse/failure\x22,1422918607);\r\nvar G__27757 \x3d (function (){var G__27760 \x3d new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697).cljs$core$IFn$_invoke$arity$1(tramp);\r\nvar G__27761 \x3d index;\r\nreturn (instaparse.gll.sub_sequence.cljs$core$IFn$_invoke$arity$2 ? instaparse.gll.sub_sequence.cljs$core$IFn$_invoke$arity$2(G__27760,G__27761) : instaparse.gll.sub_sequence.call(null,G__27760,G__27761));\r\n})();\r\nvar G__27758 \x3d index;\r\nvar G__27759 \x3d cljs.core.count(new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697).cljs$core$IFn$_invoke$arity$1(tramp));\r\nreturn (instaparse.gll.build_node_with_meta.cljs$core$IFn$_invoke$arity$5 ? instaparse.gll.build_node_with_meta.cljs$core$IFn$_invoke$arity$5(G__27755,G__27756,G__27757,G__27758,G__27759) : instaparse.gll.build_node_with_meta.call(null,G__27755,G__27756,G__27757,G__27758,G__27759));\r\n})(),cljs.core.count(new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697).cljs$core$IFn$_invoke$arity$1(tramp))));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Executes one thing on the stack (not threadsafe)\r\n */\r\ninstaparse.gll.step \x3d (function instaparse$gll$step(stack){\r\nvar top \x3d cljs.core.peek(cljs.core.deref(stack));\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(stack,cljs.core.pop);\r\n\r\nreturn (top.cljs$core$IFn$_invoke$arity$0 ? top.cljs$core$IFn$_invoke$arity$0() : top.call(null));\r\n});\r\n/**\r\n * Executes the stack until exhausted\r\n */\r\ninstaparse.gll.run \x3d (function instaparse$gll$run(var_args){\r\nvar G__27763 \x3d arguments.length;\r\nswitch (G__27763) {\r\ncase 1:\r\nreturn instaparse.gll.run.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn instaparse.gll.run.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(instaparse.gll.run.cljs$core$IFn$_invoke$arity$1 \x3d (function (tramp){\r\nreturn instaparse.gll.run.cljs$core$IFn$_invoke$arity$2(tramp,null);\r\n}));\r\n\r\n(instaparse.gll.run.cljs$core$IFn$_invoke$arity$2 \x3d (function (tramp,found_result_QMARK_){\r\nwhile(true){\r\nvar stack \x3d new cljs.core.Keyword(null,\x22stack\x22,\x22stack\x22,-793405930).cljs$core$IFn$_invoke$arity$1(tramp);\r\nif(cljs.core.truth_(cljs.core.deref(new cljs.core.Keyword(null,\x22success\x22,\x22success\x22,1890645906).cljs$core$IFn$_invoke$arity$1(tramp)))){\r\n\r\nreturn cljs.core.cons(new cljs.core.Keyword(null,\x22result\x22,\x22result\x22,1415092211).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(new cljs.core.Keyword(null,\x22success\x22,\x22success\x22,1890645906).cljs$core$IFn$_invoke$arity$1(tramp))),(new cljs.core.LazySeq(null,((function (tramp,found_result_QMARK_,stack){\r\nreturn (function (){\r\ncljs.core.reset_BANG_(new cljs.core.Keyword(null,\x22success\x22,\x22success\x22,1890645906).cljs$core$IFn$_invoke$arity$1(tramp),null);\r\n\r\nreturn instaparse.gll.run.cljs$core$IFn$_invoke$arity$2(tramp,true);\r\n});})(tramp,found_result_QMARK_,stack))\r\n,null,null)));\r\n} else {\r\nif((cljs.core.count(cljs.core.deref(stack)) \x3e (0))){\r\ninstaparse.gll.step(stack);\r\n\r\nvar G__28112 \x3d tramp;\r\nvar G__28113 \x3d found_result_QMARK_;\r\ntramp \x3d G__28112;\r\nfound_result_QMARK_ \x3d G__28113;\r\ncontinue;\r\n} else {\r\nif((cljs.core.count(cljs.core.deref(new cljs.core.Keyword(null,\x22negative-listeners\x22,\x22negative-listeners\x22,55241092).cljs$core$IFn$_invoke$arity$1(tramp))) \x3e (0))){\r\nvar vec__27764 \x3d cljs.core.first(cljs.core.deref(new cljs.core.Keyword(null,\x22negative-listeners\x22,\x22negative-listeners\x22,55241092).cljs$core$IFn$_invoke$arity$1(tramp)));\r\nvar index \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27764,(0),null);\r\nvar listeners \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27764,(1),null);\r\nvar listener \x3d cljs.core.peek(listeners);\r\n\r\n(listener.cljs$core$IFn$_invoke$arity$0 ? listener.cljs$core$IFn$_invoke$arity$0() : listener.call(null));\r\n\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(listeners),(1))){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\x22negative-listeners\x22,\x22negative-listeners\x22,55241092).cljs$core$IFn$_invoke$arity$1(tramp),cljs.core.dissoc,index);\r\n} else {\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(null,\x22negative-listeners\x22,\x22negative-listeners\x22,55241092).cljs$core$IFn$_invoke$arity$1(tramp),cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [index], null),cljs.core.pop);\r\n}\r\n\r\nvar G__28120 \x3d tramp;\r\nvar G__28121 \x3d found_result_QMARK_;\r\ntramp \x3d G__28120;\r\nfound_result_QMARK_ \x3d G__28121;\r\ncontinue;\r\n} else {\r\nif(cljs.core.truth_(found_result_QMARK_)){\r\nvar next_stack \x3d new cljs.core.Keyword(null,\x22next-stack\x22,\x22next-stack\x22,-481930728).cljs$core$IFn$_invoke$arity$1(tramp);\r\ncljs.core.reset_BANG_(stack,cljs.core.deref(next_stack));\r\n\r\ncljs.core.reset_BANG_(next_stack,cljs.core.PersistentVector.EMPTY);\r\n\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22generation\x22,\x22generation\x22,-2132542044).cljs$core$IFn$_invoke$arity$1(tramp),cljs.core.inc);\r\n\r\nvar G__28122 \x3d tramp;\r\nvar G__28123 \x3d null;\r\ntramp \x3d G__28122;\r\nfound_result_QMARK_ \x3d G__28123;\r\ncontinue;\r\n} else {\r\nreturn null;\r\n\r\n}\r\n}\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(instaparse.gll.run.cljs$lang$maxFixedArity \x3d 2);\r\n\r\ninstaparse.gll.NodeListener \x3d (function instaparse$gll$NodeListener(node_key,tramp){\r\nreturn (function (result){\r\nreturn instaparse.gll.push_result(tramp,node_key,result);\r\n});\r\n});\r\ninstaparse.gll.LookListener \x3d (function instaparse$gll$LookListener(node_key,tramp){\r\nreturn (function (result){\r\nreturn instaparse.gll.push_result(tramp,node_key,instaparse.gll.make_success(null,(node_key.cljs$core$IFn$_invoke$arity$1 ? node_key.cljs$core$IFn$_invoke$arity$1((0)) : node_key.call(null,(0)))));\r\n});\r\n});\r\ninstaparse.gll.CatListener \x3d (function instaparse$gll$CatListener(results_so_far,parser_sequence,node_key,tramp){\r\n\r\nreturn (function (result){\r\nvar map__27767 \x3d result;\r\nvar map__27767__$1 \x3d cljs.core.__destructure_map(map__27767);\r\nvar parsed_result \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27767__$1,new cljs.core.Keyword(null,\x22result\x22,\x22result\x22,1415092211));\r\nvar continue_index \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27767__$1,new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915));\r\nvar new_results_so_far \x3d instaparse.auto_flatten_seq.conj_flat(results_so_far,parsed_result);\r\nif(cljs.core.seq(parser_sequence)){\r\nreturn instaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [continue_index,cljs.core.first(parser_sequence)], null),(function (){var G__27768 \x3d new_results_so_far;\r\nvar G__27769 \x3d cljs.core.next(parser_sequence);\r\nvar G__27770 \x3d node_key;\r\nvar G__27771 \x3d tramp;\r\nreturn (instaparse.gll.CatListener.cljs$core$IFn$_invoke$arity$4 ? instaparse.gll.CatListener.cljs$core$IFn$_invoke$arity$4(G__27768,G__27769,G__27770,G__27771) : instaparse.gll.CatListener.call(null,G__27768,G__27769,G__27770,G__27771));\r\n})());\r\n} else {\r\nreturn instaparse.gll.push_result(tramp,node_key,instaparse.gll.make_success(new_results_so_far,continue_index));\r\n}\r\n});\r\n});\r\ninstaparse.gll.CatFullListener \x3d (function instaparse$gll$CatFullListener(results_so_far,parser_sequence,node_key,tramp){\r\nreturn (function (result){\r\nvar map__27772 \x3d result;\r\nvar map__27772__$1 \x3d cljs.core.__destructure_map(map__27772);\r\nvar parsed_result \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27772__$1,new cljs.core.Keyword(null,\x22result\x22,\x22result\x22,1415092211));\r\nvar continue_index \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27772__$1,new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915));\r\nvar new_results_so_far \x3d instaparse.auto_flatten_seq.conj_flat(results_so_far,parsed_result);\r\nif(instaparse.reduction.singleton_QMARK_(parser_sequence)){\r\nreturn instaparse.gll.push_full_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [continue_index,cljs.core.first(parser_sequence)], null),(function (){var G__27773 \x3d new_results_so_far;\r\nvar G__27774 \x3d cljs.core.next(parser_sequence);\r\nvar G__27775 \x3d node_key;\r\nvar G__27776 \x3d tramp;\r\nreturn (instaparse.gll.CatFullListener.cljs$core$IFn$_invoke$arity$4 ? instaparse.gll.CatFullListener.cljs$core$IFn$_invoke$arity$4(G__27773,G__27774,G__27775,G__27776) : instaparse.gll.CatFullListener.call(null,G__27773,G__27774,G__27775,G__27776));\r\n})());\r\n} else {\r\nif(cljs.core.seq(parser_sequence)){\r\nreturn instaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [continue_index,cljs.core.first(parser_sequence)], null),(function (){var G__27777 \x3d new_results_so_far;\r\nvar G__27778 \x3d cljs.core.next(parser_sequence);\r\nvar G__27779 \x3d node_key;\r\nvar G__27780 \x3d tramp;\r\nreturn (instaparse.gll.CatFullListener.cljs$core$IFn$_invoke$arity$4 ? instaparse.gll.CatFullListener.cljs$core$IFn$_invoke$arity$4(G__27777,G__27778,G__27779,G__27780) : instaparse.gll.CatFullListener.call(null,G__27777,G__27778,G__27779,G__27780));\r\n})());\r\n} else {\r\nreturn instaparse.gll.push_result(tramp,node_key,instaparse.gll.make_success(new_results_so_far,continue_index));\r\n\r\n}\r\n}\r\n});\r\n});\r\ninstaparse.gll.PlusListener \x3d (function instaparse$gll$PlusListener(results_so_far,parser,prev_index,node_key,tramp){\r\nreturn (function (result){\r\nvar map__27781 \x3d result;\r\nvar map__27781__$1 \x3d cljs.core.__destructure_map(map__27781);\r\nvar parsed_result \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27781__$1,new cljs.core.Keyword(null,\x22result\x22,\x22result\x22,1415092211));\r\nvar continue_index \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27781__$1,new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915));\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(continue_index,prev_index)){\r\nif((cljs.core.count(results_so_far) \x3d\x3d\x3d (0))){\r\nreturn instaparse.gll.push_result(tramp,node_key,instaparse.gll.make_success(null,continue_index));\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nvar new_results_so_far \x3d instaparse.auto_flatten_seq.conj_flat(results_so_far,parsed_result);\r\ninstaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [continue_index,parser], null),(instaparse.gll.PlusListener.cljs$core$IFn$_invoke$arity$5 ? instaparse.gll.PlusListener.cljs$core$IFn$_invoke$arity$5(new_results_so_far,parser,continue_index,node_key,tramp) : instaparse.gll.PlusListener.call(null,new_results_so_far,parser,continue_index,node_key,tramp)));\r\n\r\nreturn instaparse.gll.push_result(tramp,node_key,instaparse.gll.make_success(new_results_so_far,continue_index));\r\n}\r\n});\r\n});\r\ninstaparse.gll.PlusFullListener \x3d (function instaparse$gll$PlusFullListener(results_so_far,parser,prev_index,node_key,tramp){\r\nreturn (function (result){\r\nvar map__27782 \x3d result;\r\nvar map__27782__$1 \x3d cljs.core.__destructure_map(map__27782);\r\nvar parsed_result \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27782__$1,new cljs.core.Keyword(null,\x22result\x22,\x22result\x22,1415092211));\r\nvar continue_index \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27782__$1,new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915));\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(continue_index,prev_index)){\r\nif((cljs.core.count(results_so_far) \x3d\x3d\x3d (0))){\r\nreturn instaparse.gll.push_result(tramp,node_key,instaparse.gll.make_success(null,continue_index));\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nvar new_results_so_far \x3d instaparse.auto_flatten_seq.conj_flat(results_so_far,parsed_result);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(continue_index,cljs.core.count(new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697).cljs$core$IFn$_invoke$arity$1(tramp)))){\r\nreturn instaparse.gll.push_result(tramp,node_key,instaparse.gll.make_success(new_results_so_far,continue_index));\r\n} else {\r\nreturn instaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [continue_index,parser], null),(instaparse.gll.PlusFullListener.cljs$core$IFn$_invoke$arity$5 ? instaparse.gll.PlusFullListener.cljs$core$IFn$_invoke$arity$5(new_results_so_far,parser,continue_index,node_key,tramp) : instaparse.gll.PlusFullListener.call(null,new_results_so_far,parser,continue_index,node_key,tramp)));\r\n}\r\n}\r\n});\r\n});\r\ninstaparse.gll.RepListener \x3d (function instaparse$gll$RepListener(results_so_far,n_results_so_far,parser,m,n,prev_index,node_key,tramp){\r\nreturn (function (result){\r\nvar map__27783 \x3d result;\r\nvar map__27783__$1 \x3d cljs.core.__destructure_map(map__27783);\r\nvar parsed_result \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27783__$1,new cljs.core.Keyword(null,\x22result\x22,\x22result\x22,1415092211));\r\nvar continue_index \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27783__$1,new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915));\r\nvar new_results_so_far \x3d instaparse.auto_flatten_seq.conj_flat(results_so_far,parsed_result);\r\nvar new_n_results_so_far \x3d (n_results_so_far + (1));\r\nif((((m \x3c\x3d new_n_results_so_far)) \x26\x26 ((new_n_results_so_far \x3c\x3d n)))){\r\ninstaparse.gll.push_result(tramp,node_key,instaparse.gll.make_success(new_results_so_far,continue_index));\r\n} else {\r\n}\r\n\r\nif((new_n_results_so_far \x3c n)){\r\nreturn instaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [continue_index,parser], null),(instaparse.gll.RepListener.cljs$core$IFn$_invoke$arity$8 ? instaparse.gll.RepListener.cljs$core$IFn$_invoke$arity$8(new_results_so_far,new_n_results_so_far,parser,m,n,continue_index,node_key,tramp) : instaparse.gll.RepListener.call(null,new_results_so_far,new_n_results_so_far,parser,m,n,continue_index,node_key,tramp)));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n});\r\ninstaparse.gll.RepFullListener \x3d (function instaparse$gll$RepFullListener(results_so_far,n_results_so_far,parser,m,n,prev_index,node_key,tramp){\r\nreturn (function (result){\r\nvar map__27784 \x3d result;\r\nvar map__27784__$1 \x3d cljs.core.__destructure_map(map__27784);\r\nvar parsed_result \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27784__$1,new cljs.core.Keyword(null,\x22result\x22,\x22result\x22,1415092211));\r\nvar continue_index \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27784__$1,new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915));\r\nvar new_results_so_far \x3d instaparse.auto_flatten_seq.conj_flat(results_so_far,parsed_result);\r\nvar new_n_results_so_far \x3d (n_results_so_far + (1));\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(continue_index,cljs.core.count(new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697).cljs$core$IFn$_invoke$arity$1(tramp)))){\r\nif((((m \x3c\x3d new_n_results_so_far)) \x26\x26 ((new_n_results_so_far \x3c\x3d n)))){\r\nreturn instaparse.gll.push_result(tramp,node_key,instaparse.gll.make_success(new_results_so_far,continue_index));\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nif((new_n_results_so_far \x3c n)){\r\nreturn instaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [continue_index,parser], null),(instaparse.gll.RepFullListener.cljs$core$IFn$_invoke$arity$8 ? instaparse.gll.RepFullListener.cljs$core$IFn$_invoke$arity$8(new_results_so_far,new_n_results_so_far,parser,m,n,continue_index,node_key,tramp) : instaparse.gll.RepFullListener.call(null,new_results_so_far,new_n_results_so_far,parser,m,n,continue_index,node_key,tramp)));\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n});\r\n});\r\ninstaparse.gll.TopListener \x3d (function instaparse$gll$TopListener(tramp){\r\nreturn (function (result){\r\nreturn cljs.core.reset_BANG_(new cljs.core.Keyword(null,\x22success\x22,\x22success\x22,1890645906).cljs$core$IFn$_invoke$arity$1(tramp),result);\r\n});\r\n});\r\ninstaparse.gll.string_parse \x3d (function instaparse$gll$string_parse(this$,index,tramp){\r\nvar string \x3d new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586).cljs$core$IFn$_invoke$arity$1(this$);\r\nvar text \x3d new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697).cljs$core$IFn$_invoke$arity$1(tramp);\r\nvar end \x3d (function (){var x__4339__auto__ \x3d cljs.core.count(text);\r\nvar y__4340__auto__ \x3d (index + cljs.core.count(string));\r\nreturn ((x__4339__auto__ \x3c y__4340__auto__) ? x__4339__auto__ : y__4340__auto__);\r\n})();\r\nvar head \x3d (instaparse.gll.sub_sequence.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.sub_sequence.cljs$core$IFn$_invoke$arity$3(text,index,end) : instaparse.gll.sub_sequence.call(null,text,index,end));\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(string,head)){\r\nreturn instaparse.gll.push_result(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),instaparse.gll.make_success(string,end));\r\n} else {\r\nreturn instaparse.gll.fail(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),index,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22expecting\x22,\x22expecting\x22,-57706705),string], null));\r\n}\r\n});\r\ninstaparse.gll.string_full_parse \x3d (function instaparse$gll$string_full_parse(this$,index,tramp){\r\nvar string \x3d new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586).cljs$core$IFn$_invoke$arity$1(this$);\r\nvar text \x3d new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697).cljs$core$IFn$_invoke$arity$1(tramp);\r\nvar end \x3d (function (){var x__4339__auto__ \x3d cljs.core.count(text);\r\nvar y__4340__auto__ \x3d (index + cljs.core.count(string));\r\nreturn ((x__4339__auto__ \x3c y__4340__auto__) ? x__4339__auto__ : y__4340__auto__);\r\n})();\r\nvar head \x3d (instaparse.gll.sub_sequence.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.sub_sequence.cljs$core$IFn$_invoke$arity$3(text,index,end) : instaparse.gll.sub_sequence.call(null,text,index,end));\r\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(end,cljs.core.count(text))) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(string,head)))){\r\nreturn instaparse.gll.push_result(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),instaparse.gll.make_success(string,end));\r\n} else {\r\nreturn instaparse.gll.fail(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),index,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22expecting\x22,\x22expecting\x22,-57706705),string,new cljs.core.Keyword(null,\x22full\x22,\x22full\x22,436801220),true], null));\r\n}\r\n});\r\ninstaparse.gll.equals_ignore_case \x3d (function instaparse$gll$equals_ignore_case(s1,s2){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(s1.toUpperCase(),s2.toUpperCase());\r\n});\r\ninstaparse.gll.string_case_insensitive_parse \x3d (function instaparse$gll$string_case_insensitive_parse(this$,index,tramp){\r\nvar string \x3d new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586).cljs$core$IFn$_invoke$arity$1(this$);\r\nvar text \x3d new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697).cljs$core$IFn$_invoke$arity$1(tramp);\r\nvar end \x3d (function (){var x__4339__auto__ \x3d cljs.core.count(text);\r\nvar y__4340__auto__ \x3d (index + cljs.core.count(string));\r\nreturn ((x__4339__auto__ \x3c y__4340__auto__) ? x__4339__auto__ : y__4340__auto__);\r\n})();\r\nvar head \x3d (instaparse.gll.sub_sequence.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.sub_sequence.cljs$core$IFn$_invoke$arity$3(text,index,end) : instaparse.gll.sub_sequence.call(null,text,index,end));\r\nif(instaparse.gll.equals_ignore_case(string,head)){\r\nreturn instaparse.gll.push_result(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),instaparse.gll.make_success(string,end));\r\n} else {\r\nreturn instaparse.gll.fail(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),index,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22expecting\x22,\x22expecting\x22,-57706705),string], null));\r\n}\r\n});\r\ninstaparse.gll.string_case_insensitive_full_parse \x3d (function instaparse$gll$string_case_insensitive_full_parse(this$,index,tramp){\r\nvar string \x3d new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586).cljs$core$IFn$_invoke$arity$1(this$);\r\nvar text \x3d new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697).cljs$core$IFn$_invoke$arity$1(tramp);\r\nvar end \x3d (function (){var x__4339__auto__ \x3d cljs.core.count(text);\r\nvar y__4340__auto__ \x3d (index + cljs.core.count(string));\r\nreturn ((x__4339__auto__ \x3c y__4340__auto__) ? x__4339__auto__ : y__4340__auto__);\r\n})();\r\nvar head \x3d (instaparse.gll.sub_sequence.cljs$core$IFn$_invoke$arity$3 ? instaparse.gll.sub_sequence.cljs$core$IFn$_invoke$arity$3(text,index,end) : instaparse.gll.sub_sequence.call(null,text,index,end));\r\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(end,cljs.core.count(text))) \x26\x26 (instaparse.gll.equals_ignore_case(string,head)))){\r\nreturn instaparse.gll.push_result(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),instaparse.gll.make_success(string,end));\r\n} else {\r\nreturn instaparse.gll.fail(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),index,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22expecting\x22,\x22expecting\x22,-57706705),string,new cljs.core.Keyword(null,\x22full\x22,\x22full\x22,436801220),true], null));\r\n}\r\n});\r\ninstaparse.gll.single_char_code_at \x3d (function instaparse$gll$single_char_code_at(text,index){\r\nreturn text.charCodeAt(index);\r\n});\r\ninstaparse.gll.unicode_code_point_at \x3d (function instaparse$gll$unicode_code_point_at(text,index){\r\nreturn goog.i18n.uChar.getCodePointAround(text,(index | (0)));\r\n});\r\ninstaparse.gll.code_point__GT_chars \x3d (function instaparse$gll$code_point__GT_chars(code_point){\r\nreturn goog.i18n.uChar.fromCharCode(code_point);\r\n});\r\ninstaparse.gll.char_range_parse \x3d (function instaparse$gll$char_range_parse(this$,index,tramp){\r\nvar lo \x3d new cljs.core.Keyword(null,\x22lo\x22,\x22lo\x22,-931799889).cljs$core$IFn$_invoke$arity$1(this$);\r\nvar hi \x3d new cljs.core.Keyword(null,\x22hi\x22,\x22hi\x22,-1821422114).cljs$core$IFn$_invoke$arity$1(this$);\r\nvar text \x3d new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697).cljs$core$IFn$_invoke$arity$1(tramp);\r\nif((index \x3e\x3d cljs.core.count(text))){\r\nreturn instaparse.gll.fail(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),index,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22char\x22,\x22char\x22,-641587586),new cljs.core.Keyword(null,\x22expecting\x22,\x22expecting\x22,-57706705),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22char-range\x22,\x22char-range\x22,1443391389),true,new cljs.core.Keyword(null,\x22lo\x22,\x22lo\x22,-931799889),lo,new cljs.core.Keyword(null,\x22hi\x22,\x22hi\x22,-1821422114),hi], null)], null));\r\n} else {\r\nif((hi \x3c\x3d (65535))){\r\nvar code \x3d instaparse.gll.single_char_code_at(text,index);\r\nif((((lo \x3c\x3d code)) \x26\x26 ((code \x3c\x3d hi)))){\r\nreturn instaparse.gll.push_result(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),instaparse.gll.make_success(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.char$(code)),(index + (1))));\r\n} else {\r\nreturn instaparse.gll.fail(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),index,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22char\x22,\x22char\x22,-641587586),new cljs.core.Keyword(null,\x22expecting\x22,\x22expecting\x22,-57706705),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22char-range\x22,\x22char-range\x22,1443391389),true,new cljs.core.Keyword(null,\x22lo\x22,\x22lo\x22,-931799889),lo,new cljs.core.Keyword(null,\x22hi\x22,\x22hi\x22,-1821422114),hi], null)], null));\r\n}\r\n} else {\r\nvar code_point \x3d instaparse.gll.unicode_code_point_at(text,index);\r\nvar char_string \x3d instaparse.gll.code_point__GT_chars(code_point);\r\nif((((lo \x3c\x3d code_point)) \x26\x26 ((code_point \x3c\x3d hi)))){\r\nreturn instaparse.gll.push_result(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),instaparse.gll.make_success(char_string,(index + cljs.core.count(char_string))));\r\n} else {\r\nreturn instaparse.gll.fail(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),index,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22char\x22,\x22char\x22,-641587586),new cljs.core.Keyword(null,\x22expecting\x22,\x22expecting\x22,-57706705),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22char-range\x22,\x22char-range\x22,1443391389),true,new cljs.core.Keyword(null,\x22lo\x22,\x22lo\x22,-931799889),lo,new cljs.core.Keyword(null,\x22hi\x22,\x22hi\x22,-1821422114),hi], null)], null));\r\n}\r\n\r\n}\r\n}\r\n});\r\ninstaparse.gll.char_range_full_parse \x3d (function instaparse$gll$char_range_full_parse(this$,index,tramp){\r\nvar lo \x3d new cljs.core.Keyword(null,\x22lo\x22,\x22lo\x22,-931799889).cljs$core$IFn$_invoke$arity$1(this$);\r\nvar hi \x3d new cljs.core.Keyword(null,\x22hi\x22,\x22hi\x22,-1821422114).cljs$core$IFn$_invoke$arity$1(this$);\r\nvar text \x3d new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697).cljs$core$IFn$_invoke$arity$1(tramp);\r\nvar end \x3d cljs.core.count(text);\r\nif((index \x3e\x3d cljs.core.count(text))){\r\nreturn instaparse.gll.fail(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),index,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22char\x22,\x22char\x22,-641587586),new cljs.core.Keyword(null,\x22expecting\x22,\x22expecting\x22,-57706705),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22char-range\x22,\x22char-range\x22,1443391389),true,new cljs.core.Keyword(null,\x22lo\x22,\x22lo\x22,-931799889),lo,new cljs.core.Keyword(null,\x22hi\x22,\x22hi\x22,-1821422114),hi], null)], null));\r\n} else {\r\nif((hi \x3c\x3d (65535))){\r\nvar code \x3d instaparse.gll.single_char_code_at(text,index);\r\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((index + (1)),end)) \x26\x26 ((((lo \x3c\x3d code)) \x26\x26 ((code \x3c\x3d hi)))))){\r\nreturn instaparse.gll.push_result(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),instaparse.gll.make_success(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.char$(code)),end));\r\n} else {\r\nreturn instaparse.gll.fail(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),index,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22char\x22,\x22char\x22,-641587586),new cljs.core.Keyword(null,\x22expecting\x22,\x22expecting\x22,-57706705),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22char-range\x22,\x22char-range\x22,1443391389),true,new cljs.core.Keyword(null,\x22lo\x22,\x22lo\x22,-931799889),lo,new cljs.core.Keyword(null,\x22hi\x22,\x22hi\x22,-1821422114),hi], null)], null));\r\n}\r\n} else {\r\nvar code_point \x3d instaparse.gll.unicode_code_point_at(text,index);\r\nvar char_string \x3d instaparse.gll.code_point__GT_chars(code_point);\r\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((index + cljs.core.count(char_string)),end)) \x26\x26 ((((lo \x3c\x3d code_point)) \x26\x26 ((code_point \x3c\x3d hi)))))){\r\nreturn instaparse.gll.push_result(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),instaparse.gll.make_success(char_string,end));\r\n} else {\r\nreturn instaparse.gll.fail(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),index,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22char\x22,\x22char\x22,-641587586),new cljs.core.Keyword(null,\x22expecting\x22,\x22expecting\x22,-57706705),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22char-range\x22,\x22char-range\x22,1443391389),true,new cljs.core.Keyword(null,\x22lo\x22,\x22lo\x22,-931799889),lo,new cljs.core.Keyword(null,\x22hi\x22,\x22hi\x22,-1821422114),hi], null),new cljs.core.Keyword(null,\x22full\x22,\x22full\x22,436801220),true], null));\r\n}\r\n\r\n}\r\n}\r\n});\r\ninstaparse.gll.re_match_at_front \x3d (function instaparse$gll$re_match_at_front(regexp,text){\r\nvar re \x3d (new RegExp(regexp.source,[\x22g\x22,instaparse.util.regexp_flags(regexp)].join(\x27\x27)));\r\nvar m \x3d re.exec(text);\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d m;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn (m.index \x3d\x3d\x3d (0));\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nreturn cljs.core.first(m);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ninstaparse.gll.regexp_parse \x3d (function instaparse$gll$regexp_parse(this$,index,tramp){\r\nvar regexp \x3d new cljs.core.Keyword(null,\x22regexp\x22,\x22regexp\x22,-541372782).cljs$core$IFn$_invoke$arity$1(this$);\r\nvar text \x3d new cljs.core.Keyword(null,\x22segment\x22,\x22segment\x22,-964921196).cljs$core$IFn$_invoke$arity$1(tramp);\r\nvar substring \x3d (instaparse.gll.sub_sequence.cljs$core$IFn$_invoke$arity$2 ? instaparse.gll.sub_sequence.cljs$core$IFn$_invoke$arity$2(text,index) : instaparse.gll.sub_sequence.call(null,text,index));\r\nvar match \x3d instaparse.gll.re_match_at_front(regexp,substring);\r\nif(cljs.core.truth_(match)){\r\nreturn instaparse.gll.push_result(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),instaparse.gll.make_success(match,(index + cljs.core.count(match))));\r\n} else {\r\nreturn instaparse.gll.fail(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),index,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22regexp\x22,\x22regexp\x22,-541372782),new cljs.core.Keyword(null,\x22expecting\x22,\x22expecting\x22,-57706705),regexp], null));\r\n}\r\n});\r\ninstaparse.gll.regexp_full_parse \x3d (function instaparse$gll$regexp_full_parse(this$,index,tramp){\r\nvar regexp \x3d new cljs.core.Keyword(null,\x22regexp\x22,\x22regexp\x22,-541372782).cljs$core$IFn$_invoke$arity$1(this$);\r\nvar text \x3d new cljs.core.Keyword(null,\x22segment\x22,\x22segment\x22,-964921196).cljs$core$IFn$_invoke$arity$1(tramp);\r\nvar substring \x3d (instaparse.gll.sub_sequence.cljs$core$IFn$_invoke$arity$2 ? instaparse.gll.sub_sequence.cljs$core$IFn$_invoke$arity$2(text,index) : instaparse.gll.sub_sequence.call(null,text,index));\r\nvar match \x3d instaparse.gll.re_match_at_front(regexp,substring);\r\nvar desired_length \x3d (cljs.core.count(text) - index);\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d match;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(match),desired_length);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nreturn instaparse.gll.push_result(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),instaparse.gll.make_success(match,cljs.core.count(text)));\r\n} else {\r\nreturn instaparse.gll.fail(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),index,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22regexp\x22,\x22regexp\x22,-541372782),new cljs.core.Keyword(null,\x22expecting\x22,\x22expecting\x22,-57706705),regexp,new cljs.core.Keyword(null,\x22full\x22,\x22full\x22,436801220),true], null));\r\n}\r\n});\r\ninstaparse.gll.cat_parse \x3d (function instaparse$gll$cat_parse(this$,index,tramp){\r\nvar parsers \x3d new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827).cljs$core$IFn$_invoke$arity$1(this$);\r\nreturn instaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,cljs.core.first(parsers)], null),instaparse.gll.CatListener(instaparse.auto_flatten_seq.EMPTY,cljs.core.next(parsers),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),tramp));\r\n});\r\ninstaparse.gll.cat_full_parse \x3d (function instaparse$gll$cat_full_parse(this$,index,tramp){\r\nvar parsers \x3d new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827).cljs$core$IFn$_invoke$arity$1(this$);\r\nreturn instaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,cljs.core.first(parsers)], null),instaparse.gll.CatFullListener(instaparse.auto_flatten_seq.EMPTY,cljs.core.next(parsers),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),tramp));\r\n});\r\ninstaparse.gll.plus_parse \x3d (function instaparse$gll$plus_parse(this$,index,tramp){\r\nvar parser \x3d new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310).cljs$core$IFn$_invoke$arity$1(this$);\r\nreturn instaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,parser], null),instaparse.gll.PlusListener(instaparse.auto_flatten_seq.EMPTY,parser,index,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),tramp));\r\n});\r\ninstaparse.gll.plus_full_parse \x3d (function instaparse$gll$plus_full_parse(this$,index,tramp){\r\nvar parser \x3d new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310).cljs$core$IFn$_invoke$arity$1(this$);\r\nreturn instaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,parser], null),instaparse.gll.PlusFullListener(instaparse.auto_flatten_seq.EMPTY,parser,index,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),tramp));\r\n});\r\ninstaparse.gll.rep_parse \x3d (function instaparse$gll$rep_parse(this$,index,tramp){\r\nvar parser \x3d new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310).cljs$core$IFn$_invoke$arity$1(this$);\r\nvar m \x3d new cljs.core.Keyword(null,\x22min\x22,\x22min\x22,444991522).cljs$core$IFn$_invoke$arity$1(this$);\r\nvar n \x3d new cljs.core.Keyword(null,\x22max\x22,\x22max\x22,61366548).cljs$core$IFn$_invoke$arity$1(this$);\r\nif((m \x3d\x3d\x3d (0))){\r\ninstaparse.gll.push_result(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),instaparse.gll.make_success(null,index));\r\n\r\nif((n \x3e\x3d (1))){\r\nreturn instaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,parser], null),instaparse.gll.RepListener(instaparse.auto_flatten_seq.EMPTY,(0),parser,(1),n,index,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),tramp));\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn instaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,parser], null),instaparse.gll.RepListener(instaparse.auto_flatten_seq.EMPTY,(0),parser,m,n,index,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),tramp));\r\n}\r\n});\r\ninstaparse.gll.rep_full_parse \x3d (function instaparse$gll$rep_full_parse(this$,index,tramp){\r\nvar parser \x3d new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310).cljs$core$IFn$_invoke$arity$1(this$);\r\nvar m \x3d new cljs.core.Keyword(null,\x22min\x22,\x22min\x22,444991522).cljs$core$IFn$_invoke$arity$1(this$);\r\nvar n \x3d new cljs.core.Keyword(null,\x22max\x22,\x22max\x22,61366548).cljs$core$IFn$_invoke$arity$1(this$);\r\nif((m \x3d\x3d\x3d (0))){\r\ninstaparse.gll.push_result(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),instaparse.gll.make_success(null,index));\r\n\r\nif((n \x3e\x3d (1))){\r\nreturn instaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,parser], null),instaparse.gll.RepFullListener(instaparse.auto_flatten_seq.EMPTY,(0),parser,(1),n,index,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),tramp));\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn instaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,parser], null),instaparse.gll.RepFullListener(instaparse.auto_flatten_seq.EMPTY,(0),parser,m,n,index,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),tramp));\r\n}\r\n});\r\ninstaparse.gll.star_parse \x3d (function instaparse$gll$star_parse(this$,index,tramp){\r\nvar parser \x3d new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310).cljs$core$IFn$_invoke$arity$1(this$);\r\ninstaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,parser], null),instaparse.gll.PlusListener(instaparse.auto_flatten_seq.EMPTY,parser,index,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),tramp));\r\n\r\nreturn instaparse.gll.push_result(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),instaparse.gll.make_success(null,index));\r\n});\r\ninstaparse.gll.star_full_parse \x3d (function instaparse$gll$star_full_parse(this$,index,tramp){\r\nvar parser \x3d new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310).cljs$core$IFn$_invoke$arity$1(this$);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(index,cljs.core.count(new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697).cljs$core$IFn$_invoke$arity$1(tramp)))){\r\nreturn instaparse.gll.push_result(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),instaparse.gll.make_success(null,index));\r\n} else {\r\nreturn instaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,parser], null),instaparse.gll.PlusFullListener(instaparse.auto_flatten_seq.EMPTY,parser,index,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),tramp));\r\n}\r\n});\r\ninstaparse.gll.alt_parse \x3d (function instaparse$gll$alt_parse(this$,index,tramp){\r\nvar parsers \x3d new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827).cljs$core$IFn$_invoke$arity$1(this$);\r\nvar seq__27807 \x3d cljs.core.seq(parsers);\r\nvar chunk__27808 \x3d null;\r\nvar count__27809 \x3d (0);\r\nvar i__27810 \x3d (0);\r\nwhile(true){\r\nif((i__27810 \x3c count__27809)){\r\nvar parser \x3d chunk__27808.cljs$core$IIndexed$_nth$arity$2(null,i__27810);\r\ninstaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,parser], null),instaparse.gll.NodeListener(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),tramp));\r\n\r\n\r\nvar G__28232 \x3d seq__27807;\r\nvar G__28233 \x3d chunk__27808;\r\nvar G__28234 \x3d count__27809;\r\nvar G__28235 \x3d (i__27810 + (1));\r\nseq__27807 \x3d G__28232;\r\nchunk__27808 \x3d G__28233;\r\ncount__27809 \x3d G__28234;\r\ni__27810 \x3d G__28235;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto__ \x3d cljs.core.seq(seq__27807);\r\nif(temp__5753__auto__){\r\nvar seq__27807__$1 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__27807__$1)){\r\nvar c__4679__auto__ \x3d cljs.core.chunk_first(seq__27807__$1);\r\nvar G__28239 \x3d cljs.core.chunk_rest(seq__27807__$1);\r\nvar G__28240 \x3d c__4679__auto__;\r\nvar G__28241 \x3d cljs.core.count(c__4679__auto__);\r\nvar G__28242 \x3d (0);\r\nseq__27807 \x3d G__28239;\r\nchunk__27808 \x3d G__28240;\r\ncount__27809 \x3d G__28241;\r\ni__27810 \x3d G__28242;\r\ncontinue;\r\n} else {\r\nvar parser \x3d cljs.core.first(seq__27807__$1);\r\ninstaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,parser], null),instaparse.gll.NodeListener(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),tramp));\r\n\r\n\r\nvar G__28243 \x3d cljs.core.next(seq__27807__$1);\r\nvar G__28244 \x3d null;\r\nvar G__28245 \x3d (0);\r\nvar G__28246 \x3d (0);\r\nseq__27807 \x3d G__28243;\r\nchunk__27808 \x3d G__28244;\r\ncount__27809 \x3d G__28245;\r\ni__27810 \x3d G__28246;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ninstaparse.gll.alt_full_parse \x3d (function instaparse$gll$alt_full_parse(this$,index,tramp){\r\nvar parsers \x3d new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827).cljs$core$IFn$_invoke$arity$1(this$);\r\nvar seq__27814 \x3d cljs.core.seq(parsers);\r\nvar chunk__27815 \x3d null;\r\nvar count__27816 \x3d (0);\r\nvar i__27817 \x3d (0);\r\nwhile(true){\r\nif((i__27817 \x3c count__27816)){\r\nvar parser \x3d chunk__27815.cljs$core$IIndexed$_nth$arity$2(null,i__27817);\r\ninstaparse.gll.push_full_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,parser], null),instaparse.gll.NodeListener(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),tramp));\r\n\r\n\r\nvar G__28247 \x3d seq__27814;\r\nvar G__28248 \x3d chunk__27815;\r\nvar G__28249 \x3d count__27816;\r\nvar G__28250 \x3d (i__27817 + (1));\r\nseq__27814 \x3d G__28247;\r\nchunk__27815 \x3d G__28248;\r\ncount__27816 \x3d G__28249;\r\ni__27817 \x3d G__28250;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto__ \x3d cljs.core.seq(seq__27814);\r\nif(temp__5753__auto__){\r\nvar seq__27814__$1 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__27814__$1)){\r\nvar c__4679__auto__ \x3d cljs.core.chunk_first(seq__27814__$1);\r\nvar G__28251 \x3d cljs.core.chunk_rest(seq__27814__$1);\r\nvar G__28252 \x3d c__4679__auto__;\r\nvar G__28253 \x3d cljs.core.count(c__4679__auto__);\r\nvar G__28254 \x3d (0);\r\nseq__27814 \x3d G__28251;\r\nchunk__27815 \x3d G__28252;\r\ncount__27816 \x3d G__28253;\r\ni__27817 \x3d G__28254;\r\ncontinue;\r\n} else {\r\nvar parser \x3d cljs.core.first(seq__27814__$1);\r\ninstaparse.gll.push_full_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,parser], null),instaparse.gll.NodeListener(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),tramp));\r\n\r\n\r\nvar G__28258 \x3d cljs.core.next(seq__27814__$1);\r\nvar G__28259 \x3d null;\r\nvar G__28260 \x3d (0);\r\nvar G__28261 \x3d (0);\r\nseq__27814 \x3d G__28258;\r\nchunk__27815 \x3d G__28259;\r\ncount__27816 \x3d G__28260;\r\ni__27817 \x3d G__28261;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ninstaparse.gll.ordered_alt_parse \x3d (function instaparse$gll$ordered_alt_parse(this$,index,tramp){\r\nvar parser1 \x3d new cljs.core.Keyword(null,\x22parser1\x22,\x22parser1\x22,-439601422).cljs$core$IFn$_invoke$arity$1(this$);\r\nvar parser2 \x3d new cljs.core.Keyword(null,\x22parser2\x22,\x22parser2\x22,1013754688).cljs$core$IFn$_invoke$arity$1(this$);\r\nvar node_key_parser1 \x3d new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,parser1], null);\r\nvar node_key_parser2 \x3d new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,parser2], null);\r\nvar listener \x3d instaparse.gll.NodeListener(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),tramp);\r\ninstaparse.gll.push_listener(tramp,node_key_parser1,listener);\r\n\r\nreturn instaparse.gll.push_negative_listener(tramp,node_key_parser1,(function (){\r\nreturn instaparse.gll.push_listener(tramp,node_key_parser2,listener);\r\n}));\r\n});\r\ninstaparse.gll.ordered_alt_full_parse \x3d (function instaparse$gll$ordered_alt_full_parse(this$,index,tramp){\r\nvar parser1 \x3d new cljs.core.Keyword(null,\x22parser1\x22,\x22parser1\x22,-439601422).cljs$core$IFn$_invoke$arity$1(this$);\r\nvar parser2 \x3d new cljs.core.Keyword(null,\x22parser2\x22,\x22parser2\x22,1013754688).cljs$core$IFn$_invoke$arity$1(this$);\r\nvar node_key_parser1 \x3d new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,parser1], null);\r\nvar node_key_parser2 \x3d new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,parser2], null);\r\nvar listener \x3d instaparse.gll.NodeListener(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),tramp);\r\ninstaparse.gll.push_full_listener(tramp,node_key_parser1,listener);\r\n\r\nreturn instaparse.gll.push_negative_listener(tramp,node_key_parser1,(function (){\r\nreturn instaparse.gll.push_full_listener(tramp,node_key_parser2,listener);\r\n}));\r\n});\r\ninstaparse.gll.opt_parse \x3d (function instaparse$gll$opt_parse(this$,index,tramp){\r\nvar parser \x3d new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310).cljs$core$IFn$_invoke$arity$1(this$);\r\ninstaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,parser], null),instaparse.gll.NodeListener(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),tramp));\r\n\r\nreturn instaparse.gll.push_result(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),instaparse.gll.make_success(null,index));\r\n});\r\ninstaparse.gll.opt_full_parse \x3d (function instaparse$gll$opt_full_parse(this$,index,tramp){\r\nvar parser \x3d new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310).cljs$core$IFn$_invoke$arity$1(this$);\r\ninstaparse.gll.push_full_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,parser], null),instaparse.gll.NodeListener(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),tramp));\r\n\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(index,cljs.core.count(new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697).cljs$core$IFn$_invoke$arity$1(tramp)))){\r\nreturn instaparse.gll.push_result(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),instaparse.gll.make_success(null,index));\r\n} else {\r\nreturn instaparse.gll.fail(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),index,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22optional\x22,\x22optional\x22,2053951509),new cljs.core.Keyword(null,\x22expecting\x22,\x22expecting\x22,-57706705),new cljs.core.Keyword(null,\x22end-of-string\x22,\x22end-of-string\x22,1567354241)], null));\r\n}\r\n});\r\ninstaparse.gll.non_terminal_parse \x3d (function instaparse$gll$non_terminal_parse(this$,index,tramp){\r\nvar parser \x3d instaparse.gll.get_parser(new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267).cljs$core$IFn$_invoke$arity$1(tramp),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747).cljs$core$IFn$_invoke$arity$1(this$));\r\nreturn instaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,parser], null),instaparse.gll.NodeListener(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),tramp));\r\n});\r\ninstaparse.gll.non_terminal_full_parse \x3d (function instaparse$gll$non_terminal_full_parse(this$,index,tramp){\r\nvar parser \x3d instaparse.gll.get_parser(new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267).cljs$core$IFn$_invoke$arity$1(tramp),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747).cljs$core$IFn$_invoke$arity$1(this$));\r\nreturn instaparse.gll.push_full_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,parser], null),instaparse.gll.NodeListener(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),tramp));\r\n});\r\ninstaparse.gll.lookahead_parse \x3d (function instaparse$gll$lookahead_parse(this$,index,tramp){\r\nvar parser \x3d new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310).cljs$core$IFn$_invoke$arity$1(this$);\r\nreturn instaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,parser], null),instaparse.gll.LookListener(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),tramp));\r\n});\r\ninstaparse.gll.lookahead_full_parse \x3d (function instaparse$gll$lookahead_full_parse(this$,index,tramp){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(index,cljs.core.count(new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697).cljs$core$IFn$_invoke$arity$1(tramp)))){\r\nreturn instaparse.gll.lookahead_parse(this$,index,tramp);\r\n} else {\r\nreturn instaparse.gll.fail(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),index,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22lookahead\x22,\x22lookahead\x22,-400102393),new cljs.core.Keyword(null,\x22expecting\x22,\x22expecting\x22,-57706705),new cljs.core.Keyword(null,\x22end-of-string\x22,\x22end-of-string\x22,1567354241)], null));\r\n}\r\n});\r\ninstaparse.gll.negative_lookahead_parse \x3d (function instaparse$gll$negative_lookahead_parse(this$,index,tramp){\r\nvar parser \x3d new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310).cljs$core$IFn$_invoke$arity$1(this$);\r\nvar node_key \x3d new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,parser], null);\r\nif(cljs.core.truth_(instaparse.gll.result_exists_QMARK_(tramp,node_key))){\r\nreturn instaparse.gll.fail(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),index,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22negative-lookahead\x22,\x22negative-lookahead\x22,874382387)], null));\r\n} else {\r\ninstaparse.gll.push_listener(tramp,node_key,(function (){var fail_send \x3d (new cljs.core.Delay((function (){\r\nreturn instaparse.gll.fail(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),index,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22negative-lookahead\x22,\x22negative-lookahead\x22,874382387),new cljs.core.Keyword(null,\x22expecting\x22,\x22expecting\x22,-57706705),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22NOT\x22,\x22NOT\x22,-1689245341),instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$1(parser)], null)], null));\r\n}),null));\r\nreturn (function (result){\r\nreturn cljs.core.force(fail_send);\r\n});\r\n})());\r\n\r\nreturn instaparse.gll.push_negative_listener(tramp,node_key,(function (){\r\nif(cljs.core.not(instaparse.gll.result_exists_QMARK_(tramp,node_key))){\r\nreturn instaparse.gll.push_result(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),instaparse.gll.make_success(null,index));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n}\r\n});\r\ninstaparse.gll.epsilon_parse \x3d (function instaparse$gll$epsilon_parse(this$,index,tramp){\r\nreturn instaparse.gll.push_result(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),instaparse.gll.make_success(null,index));\r\n});\r\ninstaparse.gll.epsilon_full_parse \x3d (function instaparse$gll$epsilon_full_parse(this$,index,tramp){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(index,cljs.core.count(new cljs.core.Keyword(null,\x22text\x22,\x22text\x22,-1790561697).cljs$core$IFn$_invoke$arity$1(tramp)))){\r\nreturn instaparse.gll.push_result(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),instaparse.gll.make_success(null,index));\r\n} else {\r\nreturn instaparse.gll.fail(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,this$], null),index,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22Epsilon\x22,\x22Epsilon\x22,133418452),new cljs.core.Keyword(null,\x22expecting\x22,\x22expecting\x22,-57706705),new cljs.core.Keyword(null,\x22end-of-string\x22,\x22end-of-string\x22,1567354241)], null));\r\n}\r\n});\r\ninstaparse.gll.start_parser \x3d (function instaparse$gll$start_parser(tramp,parser,partial_QMARK_){\r\nif(cljs.core.truth_(partial_QMARK_)){\r\nreturn instaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),parser], null),instaparse.gll.TopListener(tramp));\r\n} else {\r\nreturn instaparse.gll.push_full_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),parser], null),instaparse.gll.TopListener(tramp));\r\n}\r\n});\r\ninstaparse.gll.parses \x3d (function instaparse$gll$parses(grammar,start,text,partial_QMARK_){\r\n\r\nvar tramp \x3d instaparse.gll.make_tramp.cljs$core$IFn$_invoke$arity$2(grammar,text);\r\nvar parser \x3d instaparse.combinators_source.nt(start);\r\ninstaparse.gll.start_parser(tramp,parser,partial_QMARK_);\r\n\r\nvar temp__5751__auto__ \x3d instaparse.gll.run.cljs$core$IFn$_invoke$arity$1(tramp);\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar all_parses \x3d temp__5751__auto__;\r\nreturn all_parses;\r\n} else {\r\nreturn cljs.core.with_meta(cljs.core.List.EMPTY,instaparse.failure.augment_failure(cljs.core.deref(new cljs.core.Keyword(null,\x22failure\x22,\x22failure\x22,720415879).cljs$core$IFn$_invoke$arity$1(tramp)),text));\r\n}\r\n});\r\ninstaparse.gll.parse \x3d (function instaparse$gll$parse(grammar,start,text,partial_QMARK_){\r\n\r\nvar tramp \x3d instaparse.gll.make_tramp.cljs$core$IFn$_invoke$arity$2(grammar,text);\r\nvar parser \x3d instaparse.combinators_source.nt(start);\r\ninstaparse.gll.start_parser(tramp,parser,partial_QMARK_);\r\n\r\nvar temp__5751__auto__ \x3d instaparse.gll.run.cljs$core$IFn$_invoke$arity$1(tramp);\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar all_parses \x3d temp__5751__auto__;\r\nreturn cljs.core.first(all_parses);\r\n} else {\r\nreturn instaparse.failure.augment_failure(cljs.core.deref(new cljs.core.Keyword(null,\x22failure\x22,\x22failure\x22,720415879).cljs$core$IFn$_invoke$arity$1(tramp)),text);\r\n}\r\n});\r\ninstaparse.gll.build_node_with_meta \x3d (function instaparse$gll$build_node_with_meta(node_builder,tag,content,start,end){\r\nreturn cljs.core.with_meta((node_builder.cljs$core$IFn$_invoke$arity$2 ? node_builder.cljs$core$IFn$_invoke$arity$2(tag,content) : node_builder.call(null,tag,content)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(\x22instaparse.gll\x22,\x22start-index\x22,\x22instaparse.gll/start-index\x22,404653620),start,new cljs.core.Keyword(\x22instaparse.gll\x22,\x22end-index\x22,\x22instaparse.gll/end-index\x22,-1851404441),end], null));\r\n});\r\ninstaparse.gll.build_total_failure_node \x3d (function instaparse$gll$build_total_failure_node(node_builder,start,text){\r\nvar build_failure_node \x3d instaparse.gll.build_node_with_meta(node_builder,new cljs.core.Keyword(\x22instaparse\x22,\x22failure\x22,\x22instaparse/failure\x22,1422918607),text,(0),cljs.core.count(text));\r\nvar build_start_node \x3d instaparse.gll.build_node_with_meta(node_builder,start,build_failure_node,(0),cljs.core.count(text));\r\nreturn build_start_node;\r\n});\r\ninstaparse.gll.parses_total_after_fail \x3d (function instaparse$gll$parses_total_after_fail(grammar,start,text,fail_index,partial_QMARK_,node_builder){\r\nvar tramp \x3d instaparse.gll.make_tramp.cljs$core$IFn$_invoke$arity$4(grammar,text,fail_index,node_builder);\r\nvar parser \x3d instaparse.combinators_source.nt(start);\r\n\r\ninstaparse.gll.start_parser(tramp,parser,partial_QMARK_);\r\n\r\nvar temp__5751__auto__ \x3d instaparse.gll.run.cljs$core$IFn$_invoke$arity$1(tramp);\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar all_parses \x3d temp__5751__auto__;\r\nreturn all_parses;\r\n} else {\r\nreturn (new cljs.core.List(null,instaparse.gll.build_total_failure_node(node_builder,start,text),null,(1),null));\r\n}\r\n});\r\n/**\r\n * A variation on with-meta that merges the existing metamap into the new metamap,\r\n * rather than overwriting the metamap entirely.\r\n */\r\ninstaparse.gll.merge_meta \x3d (function instaparse$gll$merge_meta(obj,metamap){\r\nreturn cljs.core.with_meta(obj,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([metamap,cljs.core.meta(obj)], 0)));\r\n});\r\ninstaparse.gll.parses_total \x3d (function instaparse$gll$parses_total(grammar,start,text,partial_QMARK_,node_builder){\r\n\r\nvar all_parses \x3d instaparse.gll.parses(grammar,start,text,partial_QMARK_);\r\nif(cljs.core.seq(all_parses)){\r\nreturn all_parses;\r\n} else {\r\nreturn instaparse.gll.merge_meta(instaparse.gll.parses_total_after_fail(grammar,start,text,new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(all_parses)),partial_QMARK_,node_builder),cljs.core.meta(all_parses));\r\n}\r\n});\r\ninstaparse.gll.parse_total_after_fail \x3d (function instaparse$gll$parse_total_after_fail(grammar,start,text,fail_index,partial_QMARK_,node_builder){\r\nvar tramp \x3d instaparse.gll.make_tramp.cljs$core$IFn$_invoke$arity$4(grammar,text,fail_index,node_builder);\r\nvar parser \x3d instaparse.combinators_source.nt(start);\r\n\r\ninstaparse.gll.start_parser(tramp,parser,partial_QMARK_);\r\n\r\nvar temp__5751__auto__ \x3d instaparse.gll.run.cljs$core$IFn$_invoke$arity$1(tramp);\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar all_parses \x3d temp__5751__auto__;\r\nreturn cljs.core.first(all_parses);\r\n} else {\r\nreturn instaparse.gll.build_total_failure_node(node_builder,start,text);\r\n}\r\n});\r\ninstaparse.gll.parse_total \x3d (function instaparse$gll$parse_total(grammar,start,text,partial_QMARK_,node_builder){\r\n\r\nvar result \x3d instaparse.gll.parse(grammar,start,text,partial_QMARK_);\r\nif((!((result instanceof instaparse.gll.Failure)))){\r\nreturn result;\r\n} else {\r\nreturn instaparse.gll.merge_meta(instaparse.gll.parse_total_after_fail(grammar,start,text,new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915).cljs$core$IFn$_invoke$arity$1(result),partial_QMARK_,node_builder),result);\r\n}\r\n});\r\n");
SHADOW_ENV.evalLoad("cljs.tools.reader.impl.utils.js", true , "goog.provide(\x27cljs.tools.reader.impl.utils\x27);\r\ncljs.tools.reader.impl.utils.char$ \x3d (function cljs$tools$reader$impl$utils$char(x){\r\nif((x \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core.char$(x);\r\n}\r\n});\r\ncljs.tools.reader.impl.utils.ex_info_QMARK_ \x3d (function cljs$tools$reader$impl$utils$ex_info_QMARK_(ex){\r\nreturn (ex instanceof cljs.core.ExceptionInfo);\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IRecord}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ncljs.tools.reader.impl.utils.ReaderConditional \x3d (function (splicing_QMARK_,form,__meta,__extmap,__hash){\r\nthis.splicing_QMARK_ \x3d splicing_QMARK_;\r\nthis.form \x3d form;\r\nthis.__meta \x3d __meta;\r\nthis.__extmap \x3d __extmap;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\r\n});\r\n(cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__4502__auto__,k__4503__auto__){\r\nvar self__ \x3d this;\r\nvar this__4502__auto____$1 \x3d this;\r\nreturn this__4502__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4503__auto__,null);\r\n}));\r\n\r\n(cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__4504__auto__,k16461,else__4505__auto__){\r\nvar self__ \x3d this;\r\nvar this__4504__auto____$1 \x3d this;\r\nvar G__16473 \x3d k16461;\r\nvar G__16473__$1 \x3d (((G__16473 instanceof cljs.core.Keyword))?G__16473.fqn:null);\r\nswitch (G__16473__$1) {\r\ncase \x22splicing?\x22:\r\nreturn self__.splicing_QMARK_;\r\n\r\nbreak;\r\ncase \x22form\x22:\r\nreturn self__.form;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k16461,else__4505__auto__);\r\n\r\n}\r\n}));\r\n\r\n(cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__4522__auto__,f__4523__auto__,init__4524__auto__){\r\nvar self__ \x3d this;\r\nvar this__4522__auto____$1 \x3d this;\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4525__auto__,p__16474){\r\nvar vec__16475 \x3d p__16474;\r\nvar k__4526__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16475,(0),null);\r\nvar v__4527__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16475,(1),null);\r\nreturn (f__4523__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4523__auto__.cljs$core$IFn$_invoke$arity$3(ret__4525__auto__,k__4526__auto__,v__4527__auto__) : f__4523__auto__.call(null,ret__4525__auto__,k__4526__auto__,v__4527__auto__));\r\n}),init__4524__auto__,this__4522__auto____$1);\r\n}));\r\n\r\n(cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__4517__auto__,writer__4518__auto__,opts__4519__auto__){\r\nvar self__ \x3d this;\r\nvar this__4517__auto____$1 \x3d this;\r\nvar pr_pair__4520__auto__ \x3d (function (keyval__4521__auto__){\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__4519__auto__,keyval__4521__auto__);\r\n});\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,pr_pair__4520__auto__,\x22#cljs.tools.reader.impl.utils.ReaderConditional{\x22,\x22, \x22,\x22}\x22,opts__4519__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22splicing?\x22,\x22splicing?\x22,-428596366),self__.splicing_QMARK_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22form\x22,\x22form\x22,-1624062471),self__.form],null))], null),self__.__extmap));\r\n}));\r\n\r\n(cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__16460){\r\nvar self__ \x3d this;\r\nvar G__16460__$1 \x3d this;\r\nreturn (new cljs.core.RecordIter((0),G__16460__$1,2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22splicing?\x22,\x22splicing?\x22,-428596366),new cljs.core.Keyword(null,\x22form\x22,\x22form\x22,-1624062471)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\r\n}));\r\n\r\n(cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__4500__auto__){\r\nvar self__ \x3d this;\r\nvar this__4500__auto____$1 \x3d this;\r\nreturn self__.__meta;\r\n}));\r\n\r\n(cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__4497__auto__){\r\nvar self__ \x3d this;\r\nvar this__4497__auto____$1 \x3d this;\r\nreturn (new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_,self__.form,self__.__meta,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__4506__auto__){\r\nvar self__ \x3d this;\r\nvar this__4506__auto____$1 \x3d this;\r\nreturn (2 + cljs.core.count(self__.__extmap));\r\n}));\r\n\r\n(cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__4498__auto__){\r\nvar self__ \x3d this;\r\nvar this__4498__auto____$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d (function (coll__4499__auto__){\r\nreturn (-209062840 ^ cljs.core.hash_unordered_coll(coll__4499__auto__));\r\n})(this__4498__auto____$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this16462,other16463){\r\nvar self__ \x3d this;\r\nvar this16462__$1 \x3d this;\r\nreturn (((!((other16463 \x3d\x3d null)))) \x26\x26 ((((this16462__$1.constructor \x3d\x3d\x3d other16463.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this16462__$1.splicing_QMARK_,other16463.splicing_QMARK_)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this16462__$1.form,other16463.form)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this16462__$1.__extmap,other16463.__extmap)))))))));\r\n}));\r\n\r\n(cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__4512__auto__,k__4513__auto__){\r\nvar self__ \x3d this;\r\nvar this__4512__auto____$1 \x3d this;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22splicing?\x22,\x22splicing?\x22,-428596366),null,new cljs.core.Keyword(null,\x22form\x22,\x22form\x22,-1624062471),null], null), null),k__4513__auto__)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4512__auto____$1),self__.__meta),k__4513__auto__);\r\n} else {\r\nreturn (new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_,self__.form,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4513__auto__)),null));\r\n}\r\n}));\r\n\r\n(cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__4509__auto__,k16461){\r\nvar self__ \x3d this;\r\nvar this__4509__auto____$1 \x3d this;\r\nvar G__16487 \x3d k16461;\r\nvar G__16487__$1 \x3d (((G__16487 instanceof cljs.core.Keyword))?G__16487.fqn:null);\r\nswitch (G__16487__$1) {\r\ncase \x22splicing?\x22:\r\ncase \x22form\x22:\r\nreturn true;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.contains_QMARK_(self__.__extmap,k16461);\r\n\r\n}\r\n}));\r\n\r\n(cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__4510__auto__,k__4511__auto__,G__16460){\r\nvar self__ \x3d this;\r\nvar this__4510__auto____$1 \x3d this;\r\nvar pred__16491 \x3d cljs.core.keyword_identical_QMARK_;\r\nvar expr__16492 \x3d k__4511__auto__;\r\nif(cljs.core.truth_((pred__16491.cljs$core$IFn$_invoke$arity$2 ? pred__16491.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22splicing?\x22,\x22splicing?\x22,-428596366),expr__16492) : pred__16491.call(null,new cljs.core.Keyword(null,\x22splicing?\x22,\x22splicing?\x22,-428596366),expr__16492)))){\r\nreturn (new cljs.tools.reader.impl.utils.ReaderConditional(G__16460,self__.form,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__16491.cljs$core$IFn$_invoke$arity$2 ? pred__16491.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22form\x22,\x22form\x22,-1624062471),expr__16492) : pred__16491.call(null,new cljs.core.Keyword(null,\x22form\x22,\x22form\x22,-1624062471),expr__16492)))){\r\nreturn (new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_,G__16460,self__.__meta,self__.__extmap,null));\r\n} else {\r\nreturn (new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_,self__.form,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4511__auto__,G__16460),null));\r\n}\r\n}\r\n}));\r\n\r\n(cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__4515__auto__){\r\nvar self__ \x3d this;\r\nvar this__4515__auto____$1 \x3d this;\r\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22splicing?\x22,\x22splicing?\x22,-428596366),self__.splicing_QMARK_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22form\x22,\x22form\x22,-1624062471),self__.form,null))], null),self__.__extmap));\r\n}));\r\n\r\n(cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__4501__auto__,G__16460){\r\nvar self__ \x3d this;\r\nvar this__4501__auto____$1 \x3d this;\r\nreturn (new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_,self__.form,G__16460,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__4507__auto__,entry__4508__auto__){\r\nvar self__ \x3d this;\r\nvar this__4507__auto____$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(entry__4508__auto__)){\r\nreturn this__4507__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4508__auto__,(0)),cljs.core._nth(entry__4508__auto__,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4507__auto____$1,entry__4508__auto__);\r\n}\r\n}));\r\n\r\n(cljs.tools.reader.impl.utils.ReaderConditional.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22splicing?\x22,\x22splicing?\x22,1211935161,null),new cljs.core.Symbol(null,\x22form\x22,\x22form\x22,16469056,null)], null);\r\n}));\r\n\r\n(cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$type \x3d true);\r\n\r\n(cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$ctorPrSeq \x3d (function (this__4546__auto__){\r\nreturn (new cljs.core.List(null,\x22cljs.tools.reader.impl.utils/ReaderConditional\x22,null,(1),null));\r\n}));\r\n\r\n(cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$ctorPrWriter \x3d (function (this__4546__auto__,writer__4547__auto__){\r\nreturn cljs.core._write(writer__4547__auto__,\x22cljs.tools.reader.impl.utils/ReaderConditional\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.tools.reader.impl.utils/ReaderConditional.\r\n */\r\ncljs.tools.reader.impl.utils.__GT_ReaderConditional \x3d (function cljs$tools$reader$impl$utils$__GT_ReaderConditional(splicing_QMARK_,form){\r\nreturn (new cljs.tools.reader.impl.utils.ReaderConditional(splicing_QMARK_,form,null,null,null));\r\n});\r\n\r\n/**\r\n * Factory function for cljs.tools.reader.impl.utils/ReaderConditional, taking a map of keywords to field values.\r\n */\r\ncljs.tools.reader.impl.utils.map__GT_ReaderConditional \x3d (function cljs$tools$reader$impl$utils$map__GT_ReaderConditional(G__16467){\r\nvar extmap__4542__auto__ \x3d (function (){var G__16498 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__16467,new cljs.core.Keyword(null,\x22splicing?\x22,\x22splicing?\x22,-428596366),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22form\x22,\x22form\x22,-1624062471)], 0));\r\nif(cljs.core.record_QMARK_(G__16467)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__16498);\r\n} else {\r\nreturn G__16498;\r\n}\r\n})();\r\nreturn (new cljs.tools.reader.impl.utils.ReaderConditional(new cljs.core.Keyword(null,\x22splicing?\x22,\x22splicing?\x22,-428596366).cljs$core$IFn$_invoke$arity$1(G__16467),new cljs.core.Keyword(null,\x22form\x22,\x22form\x22,-1624062471).cljs$core$IFn$_invoke$arity$1(G__16467),null,cljs.core.not_empty(extmap__4542__auto__),null));\r\n});\r\n\r\n/**\r\n * Return true if the value is the data representation of a reader conditional\r\n */\r\ncljs.tools.reader.impl.utils.reader_conditional_QMARK_ \x3d (function cljs$tools$reader$impl$utils$reader_conditional_QMARK_(value){\r\nreturn (value instanceof cljs.tools.reader.impl.utils.ReaderConditional);\r\n});\r\n/**\r\n * Construct a data representation of a reader conditional.\r\n *   If true, splicing? indicates read-cond-splicing.\r\n */\r\ncljs.tools.reader.impl.utils.reader_conditional \x3d (function cljs$tools$reader$impl$utils$reader_conditional(form,splicing_QMARK_){\r\nreturn (new cljs.tools.reader.impl.utils.ReaderConditional(splicing_QMARK_,form,null,null,null));\r\n});\r\n(cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\r\nvar coll__$1 \x3d this;\r\ncljs.core._write(writer,[\x22#?\x22,(cljs.core.truth_(coll__$1.splicing_QMARK_)?\x22@\x22:null)].join(\x27\x27));\r\n\r\nreturn cljs.core.pr_writer(coll__$1.form,writer,opts);\r\n}));\r\ncljs.tools.reader.impl.utils.ws_rx \x3d /[\\s]/;\r\n/**\r\n * Checks whether a given character is whitespace\r\n */\r\ncljs.tools.reader.impl.utils.whitespace_QMARK_ \x3d (function cljs$tools$reader$impl$utils$whitespace_QMARK_(ch){\r\nif((ch \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nif((ch \x3d\x3d\x3d \x22,\x22)){\r\nreturn true;\r\n} else {\r\nreturn cljs.tools.reader.impl.utils.ws_rx.test(ch);\r\n}\r\n}\r\n});\r\n/**\r\n * Checks whether a given character is numeric\r\n */\r\ncljs.tools.reader.impl.utils.numeric_QMARK_ \x3d (function cljs$tools$reader$impl$utils$numeric_QMARK_(ch){\r\nif((ch \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn goog.string.isNumeric(ch);\r\n}\r\n});\r\n/**\r\n * Checks whether the character is a newline\r\n */\r\ncljs.tools.reader.impl.utils.newline_QMARK_ \x3d (function cljs$tools$reader$impl$utils$newline_QMARK_(c){\r\nreturn (((\x22\\n\x22 \x3d\x3d\x3d c)) || ((((\x22\\n\x22 \x3d\x3d\x3d c)) || ((c \x3d\x3d null)))));\r\n});\r\n/**\r\n * Resolves syntactical sugar in metadata\r\n */\r\ncljs.tools.reader.impl.utils.desugar_meta \x3d (function cljs$tools$reader$impl$utils$desugar_meta(f){\r\nif((f instanceof cljs.core.Keyword)){\r\nreturn cljs.core.PersistentArrayMap.createAsIfByAssoc([f,true]);\r\n} else {\r\nif((f instanceof cljs.core.Symbol)){\r\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),f], null);\r\n} else {\r\nif(typeof f \x3d\x3d\x3d \x27string\x27){\r\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),f], null);\r\n} else {\r\nreturn f;\r\n\r\n}\r\n}\r\n}\r\n});\r\ncljs.tools.reader.impl.utils.last_id \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\r\ncljs.tools.reader.impl.utils.next_id \x3d (function cljs$tools$reader$impl$utils$next_id(){\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.tools.reader.impl.utils.last_id,cljs.core.inc);\r\n});\r\ncljs.tools.reader.impl.utils.namespace_keys \x3d (function cljs$tools$reader$impl$utils$namespace_keys(ns,keys){\r\nvar iter__4652__auto__ \x3d (function cljs$tools$reader$impl$utils$namespace_keys_$_iter__16509(s__16510){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s__16510__$1 \x3d s__16510;\r\nwhile(true){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(s__16510__$1);\r\nif(temp__5753__auto__){\r\nvar s__16510__$2 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__16510__$2)){\r\nvar c__4650__auto__ \x3d cljs.core.chunk_first(s__16510__$2);\r\nvar size__4651__auto__ \x3d cljs.core.count(c__4650__auto__);\r\nvar b__16519 \x3d cljs.core.chunk_buffer(size__4651__auto__);\r\nif((function (){var i__16518 \x3d (0);\r\nwhile(true){\r\nif((i__16518 \x3c size__4651__auto__)){\r\nvar key \x3d cljs.core._nth(c__4650__auto__,i__16518);\r\ncljs.core.chunk_append(b__16519,(((((key instanceof cljs.core.Symbol)) || ((key instanceof cljs.core.Keyword))))?(function (){var vec__16520 \x3d cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace,cljs.core.name)(key);\r\nvar key_ns \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16520,(0),null);\r\nvar key_name \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16520,(1),null);\r\nvar __GT_key \x3d (((key instanceof cljs.core.Symbol))?cljs.core.symbol:cljs.core.keyword);\r\nif((key_ns \x3d\x3d null)){\r\nreturn (__GT_key.cljs$core$IFn$_invoke$arity$2 ? __GT_key.cljs$core$IFn$_invoke$arity$2(ns,key_name) : __GT_key.call(null,ns,key_name));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22_\x22,key_ns)){\r\nreturn (__GT_key.cljs$core$IFn$_invoke$arity$1 ? __GT_key.cljs$core$IFn$_invoke$arity$1(key_name) : __GT_key.call(null,key_name));\r\n} else {\r\nreturn key;\r\n\r\n}\r\n}\r\n})():key));\r\n\r\nvar G__16542 \x3d (i__16518 + (1));\r\ni__16518 \x3d G__16542;\r\ncontinue;\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__16519),cljs$tools$reader$impl$utils$namespace_keys_$_iter__16509(cljs.core.chunk_rest(s__16510__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__16519),null);\r\n}\r\n} else {\r\nvar key \x3d cljs.core.first(s__16510__$2);\r\nreturn cljs.core.cons((((((key instanceof cljs.core.Symbol)) || ((key instanceof cljs.core.Keyword))))?(function (){var vec__16523 \x3d cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace,cljs.core.name)(key);\r\nvar key_ns \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16523,(0),null);\r\nvar key_name \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16523,(1),null);\r\nvar __GT_key \x3d (((key instanceof cljs.core.Symbol))?cljs.core.symbol:cljs.core.keyword);\r\nif((key_ns \x3d\x3d null)){\r\nreturn (__GT_key.cljs$core$IFn$_invoke$arity$2 ? __GT_key.cljs$core$IFn$_invoke$arity$2(ns,key_name) : __GT_key.call(null,ns,key_name));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22_\x22,key_ns)){\r\nreturn (__GT_key.cljs$core$IFn$_invoke$arity$1 ? __GT_key.cljs$core$IFn$_invoke$arity$1(key_name) : __GT_key.call(null,key_name));\r\n} else {\r\nreturn key;\r\n\r\n}\r\n}\r\n})():key),cljs$tools$reader$impl$utils$namespace_keys_$_iter__16509(cljs.core.rest(s__16510__$2)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}),null,null));\r\n});\r\nreturn iter__4652__auto__(keys);\r\n});\r\ncljs.tools.reader.impl.utils.second_SINGLEQUOTE_ \x3d (function cljs$tools$reader$impl$utils$second_SINGLEQUOTE_(p__16530){\r\nvar vec__16531 \x3d p__16530;\r\nvar a \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16531,(0),null);\r\nvar b \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16531,(1),null);\r\nif(cljs.core.truth_(a)){\r\nreturn null;\r\n} else {\r\nreturn b;\r\n}\r\n});\r\ncljs.tools.reader.impl.utils.char_code \x3d (function cljs$tools$reader$impl$utils$char_code(ch,base){\r\nvar code \x3d parseInt(ch,base);\r\nif(cljs.core.truth_(isNaN(code))){\r\nreturn (-1);\r\n} else {\r\nreturn code;\r\n}\r\n});\r\n");
SHADOW_ENV.evalLoad("cljs.tools.reader.reader_types.js", true , "goog.provide(\x27cljs.tools.reader.reader_types\x27);\r\n\r\n/**\r\n * @interface\r\n */\r\ncljs.tools.reader.reader_types.Reader \x3d function(){};\r\n\r\nvar cljs$tools$reader$reader_types$Reader$read_char$dyn_16755 \x3d (function (reader){\r\nvar x__4550__auto__ \x3d (((reader \x3d\x3d null))?null:reader);\r\nvar m__4551__auto__ \x3d (cljs.tools.reader.reader_types.read_char[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(reader) : m__4551__auto__.call(null,reader));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.tools.reader.reader_types.read_char[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(reader) : m__4549__auto__.call(null,reader));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22Reader.read-char\x22,reader);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the next char from the Reader, nil if the end of stream has been reached\r\n */\r\ncljs.tools.reader.reader_types.read_char \x3d (function cljs$tools$reader$reader_types$read_char(reader){\r\nif((((!((reader \x3d\x3d null)))) \x26\x26 ((!((reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1 \x3d\x3d null)))))){\r\nreturn reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(reader);\r\n} else {\r\nreturn cljs$tools$reader$reader_types$Reader$read_char$dyn_16755(reader);\r\n}\r\n});\r\n\r\nvar cljs$tools$reader$reader_types$Reader$peek_char$dyn_16756 \x3d (function (reader){\r\nvar x__4550__auto__ \x3d (((reader \x3d\x3d null))?null:reader);\r\nvar m__4551__auto__ \x3d (cljs.tools.reader.reader_types.peek_char[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(reader) : m__4551__auto__.call(null,reader));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.tools.reader.reader_types.peek_char[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(reader) : m__4549__auto__.call(null,reader));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22Reader.peek-char\x22,reader);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the next char from the Reader without removing it from the reader stream\r\n */\r\ncljs.tools.reader.reader_types.peek_char \x3d (function cljs$tools$reader$reader_types$peek_char(reader){\r\nif((((!((reader \x3d\x3d null)))) \x26\x26 ((!((reader.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 \x3d\x3d null)))))){\r\nreturn reader.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(reader);\r\n} else {\r\nreturn cljs$tools$reader$reader_types$Reader$peek_char$dyn_16756(reader);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * @interface\r\n */\r\ncljs.tools.reader.reader_types.IPushbackReader \x3d function(){};\r\n\r\nvar cljs$tools$reader$reader_types$IPushbackReader$unread$dyn_16761 \x3d (function (reader,ch){\r\nvar x__4550__auto__ \x3d (((reader \x3d\x3d null))?null:reader);\r\nvar m__4551__auto__ \x3d (cljs.tools.reader.reader_types.unread[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(reader,ch) : m__4551__auto__.call(null,reader,ch));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.tools.reader.reader_types.unread[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(reader,ch) : m__4549__auto__.call(null,reader,ch));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IPushbackReader.unread\x22,reader);\r\n}\r\n}\r\n});\r\n/**\r\n * Pushes back a single character on to the stream\r\n */\r\ncljs.tools.reader.reader_types.unread \x3d (function cljs$tools$reader$reader_types$unread(reader,ch){\r\nif((((!((reader \x3d\x3d null)))) \x26\x26 ((!((reader.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 \x3d\x3d null)))))){\r\nreturn reader.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(reader,ch);\r\n} else {\r\nreturn cljs$tools$reader$reader_types$IPushbackReader$unread$dyn_16761(reader,ch);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * @interface\r\n */\r\ncljs.tools.reader.reader_types.IndexingReader \x3d function(){};\r\n\r\nvar cljs$tools$reader$reader_types$IndexingReader$get_line_number$dyn_16765 \x3d (function (reader){\r\nvar x__4550__auto__ \x3d (((reader \x3d\x3d null))?null:reader);\r\nvar m__4551__auto__ \x3d (cljs.tools.reader.reader_types.get_line_number[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(reader) : m__4551__auto__.call(null,reader));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.tools.reader.reader_types.get_line_number[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(reader) : m__4549__auto__.call(null,reader));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IndexingReader.get-line-number\x22,reader);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the line number of the next character to be read from the stream\r\n */\r\ncljs.tools.reader.reader_types.get_line_number \x3d (function cljs$tools$reader$reader_types$get_line_number(reader){\r\nif((((!((reader \x3d\x3d null)))) \x26\x26 ((!((reader.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 \x3d\x3d null)))))){\r\nreturn reader.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1(reader);\r\n} else {\r\nreturn cljs$tools$reader$reader_types$IndexingReader$get_line_number$dyn_16765(reader);\r\n}\r\n});\r\n\r\nvar cljs$tools$reader$reader_types$IndexingReader$get_column_number$dyn_16766 \x3d (function (reader){\r\nvar x__4550__auto__ \x3d (((reader \x3d\x3d null))?null:reader);\r\nvar m__4551__auto__ \x3d (cljs.tools.reader.reader_types.get_column_number[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(reader) : m__4551__auto__.call(null,reader));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.tools.reader.reader_types.get_column_number[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(reader) : m__4549__auto__.call(null,reader));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IndexingReader.get-column-number\x22,reader);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the column number of the next character to be read from the stream\r\n */\r\ncljs.tools.reader.reader_types.get_column_number \x3d (function cljs$tools$reader$reader_types$get_column_number(reader){\r\nif((((!((reader \x3d\x3d null)))) \x26\x26 ((!((reader.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 \x3d\x3d null)))))){\r\nreturn reader.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(reader);\r\n} else {\r\nreturn cljs$tools$reader$reader_types$IndexingReader$get_column_number$dyn_16766(reader);\r\n}\r\n});\r\n\r\nvar cljs$tools$reader$reader_types$IndexingReader$get_file_name$dyn_16767 \x3d (function (reader){\r\nvar x__4550__auto__ \x3d (((reader \x3d\x3d null))?null:reader);\r\nvar m__4551__auto__ \x3d (cljs.tools.reader.reader_types.get_file_name[goog.typeOf(x__4550__auto__)]);\r\nif((!((m__4551__auto__ \x3d\x3d null)))){\r\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(reader) : m__4551__auto__.call(null,reader));\r\n} else {\r\nvar m__4549__auto__ \x3d (cljs.tools.reader.reader_types.get_file_name[\x22_\x22]);\r\nif((!((m__4549__auto__ \x3d\x3d null)))){\r\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(reader) : m__4549__auto__.call(null,reader));\r\n} else {\r\nthrow cljs.core.missing_protocol(\x22IndexingReader.get-file-name\x22,reader);\r\n}\r\n}\r\n});\r\n/**\r\n * Returns the file name the reader is reading from, or nil\r\n */\r\ncljs.tools.reader.reader_types.get_file_name \x3d (function cljs$tools$reader$reader_types$get_file_name(reader){\r\nif((((!((reader \x3d\x3d null)))) \x26\x26 ((!((reader.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 \x3d\x3d null)))))){\r\nreturn reader.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1(reader);\r\n} else {\r\nreturn cljs$tools$reader$reader_types$IndexingReader$get_file_name$dyn_16767(reader);\r\n}\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.tools.reader.reader_types.Reader}\r\n*/\r\ncljs.tools.reader.reader_types.StringReader \x3d (function (s,s_len,s_pos){\r\nthis.s \x3d s;\r\nthis.s_len \x3d s_len;\r\nthis.s_pos \x3d s_pos;\r\n});\r\n(cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 \x3d (function (reader){\r\nvar self__ \x3d this;\r\nvar reader__$1 \x3d this;\r\nif((self__.s_len \x3e self__.s_pos)){\r\nvar r \x3d self__.s.charAt(self__.s_pos);\r\n(self__.s_pos \x3d (self__.s_pos + (1)));\r\n\r\nreturn r;\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 \x3d (function (reader){\r\nvar self__ \x3d this;\r\nvar reader__$1 \x3d this;\r\nif((self__.s_len \x3e self__.s_pos)){\r\nreturn self__.s.charAt(self__.s_pos);\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.StringReader.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22s\x22,\x22s\x22,-948495851,null),new cljs.core.Symbol(null,\x22s-len\x22,\x22s-len\x22,1869978331,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22s-pos\x22,\x22s-pos\x22,-540562492,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.StringReader.cljs$lang$type \x3d true);\r\n\r\n(cljs.tools.reader.reader_types.StringReader.cljs$lang$ctorStr \x3d \x22cljs.tools.reader.reader-types/StringReader\x22);\r\n\r\n(cljs.tools.reader.reader_types.StringReader.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.tools.reader.reader-types/StringReader\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.tools.reader.reader-types/StringReader.\r\n */\r\ncljs.tools.reader.reader_types.__GT_StringReader \x3d (function cljs$tools$reader$reader_types$__GT_StringReader(s,s_len,s_pos){\r\nreturn (new cljs.tools.reader.reader_types.StringReader(s,s_len,s_pos));\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.tools.reader.reader_types.Reader}\r\n*/\r\ncljs.tools.reader.reader_types.NodeReadableReader \x3d (function (readable,buf){\r\nthis.readable \x3d readable;\r\nthis.buf \x3d buf;\r\n});\r\n(cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 \x3d (function (reader){\r\nvar self__ \x3d this;\r\nvar reader__$1 \x3d this;\r\nif(cljs.core.truth_(self__.buf)){\r\nvar c \x3d (self__.buf[(0)]);\r\n(self__.buf \x3d null);\r\n\r\nreturn cljs.tools.reader.impl.utils.char$(c);\r\n} else {\r\nvar c \x3d cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.readable.read((1)));\r\nif(cljs.core.truth_(c)){\r\nreturn cljs.tools.reader.impl.utils.char$(c);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 \x3d (function (reader){\r\nvar self__ \x3d this;\r\nvar reader__$1 \x3d this;\r\nif(cljs.core.truth_(self__.buf)){\r\n} else {\r\n(self__.buf \x3d cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.readable.read((1))));\r\n}\r\n\r\nif(cljs.core.truth_(self__.buf)){\r\nreturn cljs.tools.reader.impl.utils.char$((self__.buf[(0)]));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.NodeReadableReader.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22readable\x22,\x22readable\x22,2113054478,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22buf\x22,\x22buf\x22,1426618187,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$type \x3d true);\r\n\r\n(cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$ctorStr \x3d \x22cljs.tools.reader.reader-types/NodeReadableReader\x22);\r\n\r\n(cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.tools.reader.reader-types/NodeReadableReader\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.tools.reader.reader-types/NodeReadableReader.\r\n */\r\ncljs.tools.reader.reader_types.__GT_NodeReadableReader \x3d (function cljs$tools$reader$reader_types$__GT_NodeReadableReader(readable,buf){\r\nreturn (new cljs.tools.reader.reader_types.NodeReadableReader(readable,buf));\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.tools.reader.reader_types.Reader}\r\n * @implements {cljs.tools.reader.reader_types.IPushbackReader}\r\n*/\r\ncljs.tools.reader.reader_types.PushbackReader \x3d (function (rdr,buf,buf_len,buf_pos){\r\nthis.rdr \x3d rdr;\r\nthis.buf \x3d buf;\r\nthis.buf_len \x3d buf_len;\r\nthis.buf_pos \x3d buf_pos;\r\n});\r\n(cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 \x3d (function (reader){\r\nvar self__ \x3d this;\r\nvar reader__$1 \x3d this;\r\nvar c \x3d (((self__.buf_pos \x3c self__.buf_len))?(self__.buf[self__.buf_pos]):self__.rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null));\r\nif((self__.buf_pos \x3c self__.buf_len)){\r\n(self__.buf_pos \x3d (self__.buf_pos + (1)));\r\n} else {\r\n}\r\n\r\nreturn cljs.tools.reader.impl.utils.char$(c);\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 \x3d (function (reader){\r\nvar self__ \x3d this;\r\nvar reader__$1 \x3d this;\r\nvar c \x3d (((self__.buf_pos \x3c self__.buf_len))?(self__.buf[self__.buf_pos]):self__.rdr.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null));\r\nreturn cljs.tools.reader.impl.utils.char$(c);\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 \x3d (function (reader,ch){\r\nvar self__ \x3d this;\r\nvar reader__$1 \x3d this;\r\nif(cljs.core.truth_(ch)){\r\nif((self__.buf_pos \x3d\x3d\x3d (0))){\r\nthrow (new Error(\x22Pushback buffer is full\x22));\r\n} else {\r\n}\r\n\r\n(self__.buf_pos \x3d (self__.buf_pos - (1)));\r\n\r\nreturn (self__.buf[self__.buf_pos] \x3d ch);\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.PushbackReader.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22rdr\x22,\x22rdr\x22,190007785,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22not-native\x22,\x22not-native\x22,-236392494,null)], null)),new cljs.core.Symbol(null,\x22buf\x22,\x22buf\x22,1426618187,null),new cljs.core.Symbol(null,\x22buf-len\x22,\x22buf-len\x22,404510846,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22buf-pos\x22,\x22buf-pos\x22,-807229033,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.PushbackReader.cljs$lang$type \x3d true);\r\n\r\n(cljs.tools.reader.reader_types.PushbackReader.cljs$lang$ctorStr \x3d \x22cljs.tools.reader.reader-types/PushbackReader\x22);\r\n\r\n(cljs.tools.reader.reader_types.PushbackReader.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.tools.reader.reader-types/PushbackReader\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.tools.reader.reader-types/PushbackReader.\r\n */\r\ncljs.tools.reader.reader_types.__GT_PushbackReader \x3d (function cljs$tools$reader$reader_types$__GT_PushbackReader(rdr,buf,buf_len,buf_pos){\r\nreturn (new cljs.tools.reader.reader_types.PushbackReader(rdr,buf,buf_len,buf_pos));\r\n});\r\n\r\ncljs.tools.reader.reader_types.normalize_newline \x3d (function cljs$tools$reader$reader_types$normalize_newline(rdr,ch){\r\nif((\x22\\r\x22 \x3d\x3d\x3d ch)){\r\nvar c \x3d rdr.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null);\r\nif((((\x22\\f\x22 \x3d\x3d\x3d c)) || ((\x22\\n\x22 \x3d\x3d\x3d c)))){\r\nrdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\n} else {\r\n}\r\n\r\nreturn \x22\\n\x22;\r\n} else {\r\nreturn ch;\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.tools.reader.reader_types.IndexingReader}\r\n * @implements {cljs.tools.reader.reader_types.Reader}\r\n * @implements {cljs.tools.reader.reader_types.IPushbackReader}\r\n*/\r\ncljs.tools.reader.reader_types.IndexingPushbackReader \x3d (function (rdr,line,column,line_start_QMARK_,prev,prev_column,file_name){\r\nthis.rdr \x3d rdr;\r\nthis.line \x3d line;\r\nthis.column \x3d column;\r\nthis.line_start_QMARK_ \x3d line_start_QMARK_;\r\nthis.prev \x3d prev;\r\nthis.prev_column \x3d prev_column;\r\nthis.file_name \x3d file_name;\r\n});\r\n(cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 \x3d (function (reader){\r\nvar self__ \x3d this;\r\nvar reader__$1 \x3d this;\r\nvar temp__5753__auto__ \x3d self__.rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar ch \x3d temp__5753__auto__;\r\nvar ch__$1 \x3d cljs.tools.reader.reader_types.normalize_newline(self__.rdr,ch);\r\n(self__.prev \x3d self__.line_start_QMARK_);\r\n\r\n(self__.line_start_QMARK_ \x3d cljs.tools.reader.impl.utils.newline_QMARK_(ch__$1));\r\n\r\nif(cljs.core.truth_(self__.line_start_QMARK_)){\r\n(self__.prev_column \x3d self__.column);\r\n\r\n(self__.column \x3d (0));\r\n\r\n(self__.line \x3d (self__.line + (1)));\r\n} else {\r\n}\r\n\r\n(self__.column \x3d (self__.column + (1)));\r\n\r\nreturn ch__$1;\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 \x3d (function (reader){\r\nvar self__ \x3d this;\r\nvar reader__$1 \x3d this;\r\nreturn self__.rdr.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null);\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 \x3d (function (reader,ch){\r\nvar self__ \x3d this;\r\nvar reader__$1 \x3d this;\r\nif(cljs.core.truth_(self__.line_start_QMARK_)){\r\n(self__.line \x3d (self__.line - (1)));\r\n\r\n(self__.column \x3d self__.prev_column);\r\n} else {\r\n(self__.column \x3d (self__.column - (1)));\r\n}\r\n\r\n(self__.line_start_QMARK_ \x3d self__.prev);\r\n\r\nreturn self__.rdr.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(null,ch);\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 \x3d (function (reader){\r\nvar self__ \x3d this;\r\nvar reader__$1 \x3d this;\r\nreturn (self__.line | (0));\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 \x3d (function (reader){\r\nvar self__ \x3d this;\r\nvar reader__$1 \x3d this;\r\nreturn (self__.column | (0));\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 \x3d (function (reader){\r\nvar self__ \x3d this;\r\nvar reader__$1 \x3d this;\r\nreturn self__.file_name;\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.IndexingPushbackReader.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22rdr\x22,\x22rdr\x22,190007785,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22not-native\x22,\x22not-native\x22,-236392494,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22line\x22,\x22line\x22,1852876762,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22column\x22,\x22column\x22,-576213674,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22line-start?\x22,\x22line-start?\x22,1357012474,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22prev\x22,\x22prev\x22,43462301,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22prev-column\x22,\x22prev-column\x22,324083974,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22file-name\x22,\x22file-name\x22,-13685732,null)], null);\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$type \x3d true);\r\n\r\n(cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$ctorStr \x3d \x22cljs.tools.reader.reader-types/IndexingPushbackReader\x22);\r\n\r\n(cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.tools.reader.reader-types/IndexingPushbackReader\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.tools.reader.reader-types/IndexingPushbackReader.\r\n */\r\ncljs.tools.reader.reader_types.__GT_IndexingPushbackReader \x3d (function cljs$tools$reader$reader_types$__GT_IndexingPushbackReader(rdr,line,column,line_start_QMARK_,prev,prev_column,file_name){\r\nreturn (new cljs.tools.reader.reader_types.IndexingPushbackReader(rdr,line,column,line_start_QMARK_,prev,prev_column,file_name));\r\n});\r\n\r\n/**\r\n * Returns an object of the same type and value as `obj`, with its\r\n * metadata merged over `m`.\r\n */\r\ncljs.tools.reader.reader_types.merge_meta \x3d (function cljs$tools$reader$reader_types$merge_meta(obj,m){\r\nvar orig_meta \x3d cljs.core.meta(obj);\r\nreturn cljs.core.with_meta(obj,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([m,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(orig_meta,new cljs.core.Keyword(null,\x22source\x22,\x22source\x22,-433931539))], 0)));\r\n});\r\n/**\r\n * Returns a string containing the contents of the top most source\r\n * logging frame.\r\n */\r\ncljs.tools.reader.reader_types.peek_source_log \x3d (function cljs$tools$reader$reader_types$peek_source_log(frames){\r\nreturn cljs.core.subs.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198).cljs$core$IFn$_invoke$arity$1(frames)),cljs.core.first(new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311).cljs$core$IFn$_invoke$arity$1(frames)));\r\n});\r\n/**\r\n * Logs `char` to all currently active source logging frames.\r\n */\r\ncljs.tools.reader.reader_types.log_source_char \x3d (function cljs$tools$reader$reader_types$log_source_char(frames,char$){\r\nvar temp__5753__auto__ \x3d new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198).cljs$core$IFn$_invoke$arity$1(frames);\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar buffer \x3d temp__5753__auto__;\r\nreturn buffer.append(char$);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Removes the last logged character from all currently active source\r\n * logging frames. Called when pushing a character back.\r\n */\r\ncljs.tools.reader.reader_types.drop_last_logged_char \x3d (function cljs$tools$reader$reader_types$drop_last_logged_char(frames){\r\nvar temp__5753__auto__ \x3d new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198).cljs$core$IFn$_invoke$arity$1(frames);\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar buffer \x3d temp__5753__auto__;\r\nreturn buffer.set(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(cljs.core.str.cljs$core$IFn$_invoke$arity$1(buffer),(0),(buffer.getLength() - (1))));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.tools.reader.reader_types.IndexingReader}\r\n * @implements {cljs.tools.reader.reader_types.Reader}\r\n * @implements {cljs.tools.reader.reader_types.IPushbackReader}\r\n*/\r\ncljs.tools.reader.reader_types.SourceLoggingPushbackReader \x3d (function (rdr,line,column,line_start_QMARK_,prev,prev_column,file_name,frames){\r\nthis.rdr \x3d rdr;\r\nthis.line \x3d line;\r\nthis.column \x3d column;\r\nthis.line_start_QMARK_ \x3d line_start_QMARK_;\r\nthis.prev \x3d prev;\r\nthis.prev_column \x3d prev_column;\r\nthis.file_name \x3d file_name;\r\nthis.frames \x3d frames;\r\n});\r\n(cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 \x3d (function (reader){\r\nvar self__ \x3d this;\r\nvar reader__$1 \x3d this;\r\nvar temp__5753__auto__ \x3d self__.rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar ch \x3d temp__5753__auto__;\r\nvar ch__$1 \x3d cljs.tools.reader.reader_types.normalize_newline(self__.rdr,ch);\r\n(self__.prev \x3d self__.line_start_QMARK_);\r\n\r\n(self__.line_start_QMARK_ \x3d cljs.tools.reader.impl.utils.newline_QMARK_(ch__$1));\r\n\r\nif(cljs.core.truth_(self__.line_start_QMARK_)){\r\n(self__.prev_column \x3d self__.column);\r\n\r\n(self__.column \x3d (0));\r\n\r\n(self__.line \x3d (self__.line + (1)));\r\n} else {\r\n}\r\n\r\n(self__.column \x3d (self__.column + (1)));\r\n\r\ncljs.tools.reader.reader_types.log_source_char(cljs.core.deref(self__.frames),ch__$1);\r\n\r\nreturn ch__$1;\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 \x3d (function (reader){\r\nvar self__ \x3d this;\r\nvar reader__$1 \x3d this;\r\nreturn self__.rdr.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null);\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 \x3d (function (reader,ch){\r\nvar self__ \x3d this;\r\nvar reader__$1 \x3d this;\r\nif(cljs.core.truth_(self__.line_start_QMARK_)){\r\n(self__.line \x3d (self__.line - (1)));\r\n\r\n(self__.column \x3d self__.prev_column);\r\n} else {\r\n(self__.column \x3d (self__.column - (1)));\r\n}\r\n\r\n(self__.line_start_QMARK_ \x3d self__.prev);\r\n\r\nif(cljs.core.truth_(ch)){\r\ncljs.tools.reader.reader_types.drop_last_logged_char(cljs.core.deref(self__.frames));\r\n} else {\r\n}\r\n\r\nreturn self__.rdr.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(null,ch);\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 \x3d (function (reader){\r\nvar self__ \x3d this;\r\nvar reader__$1 \x3d this;\r\nreturn (self__.line | (0));\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 \x3d (function (reader){\r\nvar self__ \x3d this;\r\nvar reader__$1 \x3d this;\r\nreturn (self__.column | (0));\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 \x3d (function (reader){\r\nvar self__ \x3d this;\r\nvar reader__$1 \x3d this;\r\nreturn self__.file_name;\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.SourceLoggingPushbackReader.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22rdr\x22,\x22rdr\x22,190007785,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22not-native\x22,\x22not-native\x22,-236392494,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22line\x22,\x22line\x22,1852876762,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22column\x22,\x22column\x22,-576213674,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22line-start?\x22,\x22line-start?\x22,1357012474,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22prev\x22,\x22prev\x22,43462301,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22prev-column\x22,\x22prev-column\x22,324083974,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22file-name\x22,\x22file-name\x22,-13685732,null),new cljs.core.Symbol(null,\x22frames\x22,\x22frames\x22,-888748272,null)], null);\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$type \x3d true);\r\n\r\n(cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$ctorStr \x3d \x22cljs.tools.reader.reader-types/SourceLoggingPushbackReader\x22);\r\n\r\n(cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$ctorPrWriter \x3d (function (this__4491__auto__,writer__4492__auto__,opt__4493__auto__){\r\nreturn cljs.core._write(writer__4492__auto__,\x22cljs.tools.reader.reader-types/SourceLoggingPushbackReader\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for cljs.tools.reader.reader-types/SourceLoggingPushbackReader.\r\n */\r\ncljs.tools.reader.reader_types.__GT_SourceLoggingPushbackReader \x3d (function cljs$tools$reader$reader_types$__GT_SourceLoggingPushbackReader(rdr,line,column,line_start_QMARK_,prev,prev_column,file_name,frames){\r\nreturn (new cljs.tools.reader.reader_types.SourceLoggingPushbackReader(rdr,line,column,line_start_QMARK_,prev,prev_column,file_name,frames));\r\n});\r\n\r\n/**\r\n * Returns true if the reader satisfies IndexingReader\r\n */\r\ncljs.tools.reader.reader_types.indexing_reader_QMARK_ \x3d (function cljs$tools$reader$reader_types$indexing_reader_QMARK_(rdr){\r\nif((!((rdr \x3d\x3d null)))){\r\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d rdr.cljs$tools$reader$reader_types$IndexingReader$)))){\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n} else {\r\nreturn false;\r\n}\r\n});\r\n/**\r\n * Creates a StringReader from a given string\r\n */\r\ncljs.tools.reader.reader_types.string_reader \x3d (function cljs$tools$reader$reader_types$string_reader(s){\r\nreturn (new cljs.tools.reader.reader_types.StringReader(s,cljs.core.count(s),(0)));\r\n});\r\n/**\r\n * Creates a PushbackReader from a given string\r\n */\r\ncljs.tools.reader.reader_types.string_push_back_reader \x3d (function cljs$tools$reader$reader_types$string_push_back_reader(var_args){\r\nvar G__16743 \x3d arguments.length;\r\nswitch (G__16743) {\r\ncase 1:\r\nreturn cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1 \x3d (function (s){\r\nreturn cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2(s,(1));\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2 \x3d (function (s,buf_len){\r\nreturn (new cljs.tools.reader.reader_types.PushbackReader(cljs.tools.reader.reader_types.string_reader(s),cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(buf_len),buf_len,buf_len));\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.string_push_back_reader.cljs$lang$maxFixedArity \x3d 2);\r\n\r\ncljs.tools.reader.reader_types.node_readable_push_back_reader \x3d (function cljs$tools$reader$reader_types$node_readable_push_back_reader(readable){\r\nreturn (new cljs.tools.reader.reader_types.PushbackReader((new cljs.tools.reader.reader_types.NodeReadableReader(readable,null)),cljs.core.object_array.cljs$core$IFn$_invoke$arity$1((1)),(1),(1)));\r\n});\r\n/**\r\n * Creates an IndexingPushbackReader from a given string or PushbackReader\r\n */\r\ncljs.tools.reader.reader_types.indexing_push_back_reader \x3d (function cljs$tools$reader$reader_types$indexing_push_back_reader(var_args){\r\nvar G__16751 \x3d arguments.length;\r\nswitch (G__16751) {\r\ncase 1:\r\nreturn cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1 \x3d (function (s_or_rdr){\r\nreturn cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2(s_or_rdr,(1));\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2 \x3d (function (s_or_rdr,buf_len){\r\nreturn cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3(s_or_rdr,buf_len,null);\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3 \x3d (function (s_or_rdr,buf_len,file_name){\r\nreturn (new cljs.tools.reader.reader_types.IndexingPushbackReader(((typeof s_or_rdr \x3d\x3d\x3d \x27string\x27)?cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2(s_or_rdr,buf_len):s_or_rdr),(1),(1),true,null,(0),file_name));\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n/**\r\n * Creates a SourceLoggingPushbackReader from a given string or PushbackReader\r\n */\r\ncljs.tools.reader.reader_types.source_logging_push_back_reader \x3d (function cljs$tools$reader$reader_types$source_logging_push_back_reader(var_args){\r\nvar G__16753 \x3d arguments.length;\r\nswitch (G__16753) {\r\ncase 1:\r\nreturn cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$1 \x3d (function (s_or_rdr){\r\nreturn cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2(s_or_rdr,(1));\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2 \x3d (function (s_or_rdr,buf_len){\r\nreturn cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3(s_or_rdr,buf_len,null);\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3 \x3d (function (s_or_rdr,buf_len,file_name){\r\nreturn (new cljs.tools.reader.reader_types.SourceLoggingPushbackReader(((typeof s_or_rdr \x3d\x3d\x3d \x27string\x27)?cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2(s_or_rdr,buf_len):s_or_rdr),(1),(1),true,null,(0),file_name,cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198),(new goog.string.StringBuffer()),new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),cljs.core.list((0))], null))));\r\n}));\r\n\r\n(cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n/**\r\n * Reads a line from the reader or from *in* if no reader is specified\r\n */\r\ncljs.tools.reader.reader_types.read_line \x3d (function cljs$tools$reader$reader_types$read_line(rdr){\r\nvar c \x3d rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nvar s \x3d (new goog.string.StringBuffer());\r\nwhile(true){\r\nif(cljs.tools.reader.impl.utils.newline_QMARK_(c)){\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(s);\r\n} else {\r\nvar G__16861 \x3d rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nvar G__16862 \x3d s.append(c);\r\nc \x3d G__16861;\r\ns \x3d G__16862;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.tools.reader.reader_types.source_logging_reader_QMARK_ \x3d (function cljs$tools$reader$reader_types$source_logging_reader_QMARK_(rdr){\r\nreturn (rdr instanceof cljs.tools.reader.reader_types.SourceLoggingPushbackReader);\r\n});\r\n/**\r\n * Returns true if rdr is an IndexingReader and the current char starts a new line\r\n */\r\ncljs.tools.reader.reader_types.line_start_QMARK_ \x3d (function cljs$tools$reader$reader_types$line_start_QMARK_(rdr){\r\nif(cljs.tools.reader.reader_types.indexing_reader_QMARK_(rdr)){\r\nreturn ((1) \x3d\x3d\x3d rdr.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(null));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ncljs.tools.reader.reader_types.log_source_STAR_ \x3d (function cljs$tools$reader$reader_types$log_source_STAR_(reader,f){\r\nvar buffer \x3d new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(reader.frames));\r\ntry{cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(reader.frames,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311)], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([buffer.getLength()], 0));\r\n\r\nvar ret \x3d (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\nif((((!((ret \x3d\x3d null))))?(((((ret.cljs$lang$protocol_mask$partition0$ \x26 (131072))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d ret.cljs$core$IMeta$))))?true:false):false)){\r\nreturn cljs.tools.reader.reader_types.merge_meta(ret,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22source\x22,\x22source\x22,-433931539),cljs.tools.reader.reader_types.peek_source_log(cljs.core.deref(reader.frames))], null));\r\n} else {\r\nreturn ret;\r\n}\r\n}finally {cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reader.frames,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311)], null),cljs.core.rest);\r\n}});\r\n");
SHADOW_ENV.evalLoad("cljs.tools.reader.impl.inspect.js", true , "goog.provide(\x27cljs.tools.reader.impl.inspect\x27);\r\ncljs.tools.reader.impl.inspect.inspect_STAR__col \x3d (function cljs$tools$reader$impl$inspect$inspect_STAR__col(truncate,col,start,end){\r\nvar n \x3d cljs.core.count(col);\r\nvar l \x3d (cljs.core.truth_(truncate)?(0):(function (){var x__4339__auto__ \x3d (10);\r\nvar y__4340__auto__ \x3d n;\r\nreturn ((x__4339__auto__ \x3c y__4340__auto__) ? x__4339__auto__ : y__4340__auto__);\r\n})());\r\nvar elements \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.tools.reader.impl.inspect.inspect_STAR_,true),cljs.core.take.cljs$core$IFn$_invoke$arity$2(l,col));\r\nvar content \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(\x22 \x22,elements));\r\nvar suffix \x3d (((l \x3c n))?\x22...\x22:null);\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(start),cljs.core.str.cljs$core$IFn$_invoke$arity$1(content),suffix,cljs.core.str.cljs$core$IFn$_invoke$arity$1(end)].join(\x27\x27);\r\n});\r\ncljs.tools.reader.impl.inspect.dispatch_inspect \x3d (function cljs$tools$reader$impl$inspect$dispatch_inspect(_,x){\r\nif((x \x3d\x3d null)){\r\nreturn new cljs.core.Keyword(null,\x22nil\x22,\x22nil\x22,99600501);\r\n} else {\r\nif(typeof x \x3d\x3d\x3d \x27string\x27){\r\nreturn new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586);\r\n} else {\r\nif((x instanceof cljs.core.Keyword)){\r\nreturn new cljs.core.Keyword(null,\x22strable\x22,\x22strable\x22,1877668047);\r\n} else {\r\nif(typeof x \x3d\x3d\x3d \x27number\x27){\r\nreturn new cljs.core.Keyword(null,\x22strable\x22,\x22strable\x22,1877668047);\r\n} else {\r\nif((x instanceof cljs.core.Symbol)){\r\nreturn new cljs.core.Keyword(null,\x22strable\x22,\x22strable\x22,1877668047);\r\n} else {\r\nif(cljs.core.vector_QMARK_(x)){\r\nreturn new cljs.core.Keyword(null,\x22vector\x22,\x22vector\x22,1902966158);\r\n} else {\r\nif(cljs.core.list_QMARK_(x)){\r\nreturn new cljs.core.Keyword(null,\x22list\x22,\x22list\x22,765357683);\r\n} else {\r\nif(cljs.core.map_QMARK_(x)){\r\nreturn new cljs.core.Keyword(null,\x22map\x22,\x22map\x22,1371690461);\r\n} else {\r\nif(cljs.core.set_QMARK_(x)){\r\nreturn new cljs.core.Keyword(null,\x22set\x22,\x22set\x22,304602554);\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,true)){\r\nreturn new cljs.core.Keyword(null,\x22strable\x22,\x22strable\x22,1877668047);\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,false)){\r\nreturn new cljs.core.Keyword(null,\x22strable\x22,\x22strable\x22,1877668047);\r\n} else {\r\nreturn cljs.core.type(x);\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.tools !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.tools.reader !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.tools.reader.impl !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.tools.reader.impl.inspect !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.tools.reader.impl.inspect.inspect_STAR_ !\x3d\x3d \x27undefined\x27)){\r\n} else {\r\ncljs.tools.reader.impl.inspect.inspect_STAR_ \x3d (function (){var method_table__4747__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar prefer_table__4748__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar method_cache__4749__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar cached_hierarchy__4750__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\nvar hierarchy__4751__auto__ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22hierarchy\x22,\x22hierarchy\x22,-1053470341),(function (){var fexpr__16410 \x3d cljs.core.get_global_hierarchy;\r\nreturn (fexpr__16410.cljs$core$IFn$_invoke$arity$0 ? fexpr__16410.cljs$core$IFn$_invoke$arity$0() : fexpr__16410.call(null));\r\n})());\r\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\x22cljs.tools.reader.impl.inspect\x22,\x22inspect*\x22),cljs.tools.reader.impl.inspect.dispatch_inspect,new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),hierarchy__4751__auto__,method_table__4747__auto__,prefer_table__4748__auto__,method_cache__4749__auto__,cached_hierarchy__4750__auto__));\r\n})();\r\n}\r\ncljs.tools.reader.impl.inspect.inspect_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),(function (truncate,x){\r\nvar n \x3d (cljs.core.truth_(truncate)?(5):(20));\r\nvar suffix \x3d (((x.length \x3e n))?\x22...\\\x22\x22:\x22\\\x22\x22);\r\nreturn [\x22\\\x22\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x.substring((0),(function (){var x__4339__auto__ \x3d n;\r\nvar y__4340__auto__ \x3d x.length;\r\nreturn ((x__4339__auto__ \x3c y__4340__auto__) ? x__4339__auto__ : y__4340__auto__);\r\n})())),suffix].join(\x27\x27);\r\n}));\r\ncljs.tools.reader.impl.inspect.inspect_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22strable\x22,\x22strable\x22,1877668047),(function (truncate,x){\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);\r\n}));\r\ncljs.tools.reader.impl.inspect.inspect_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,cljs.core.IndexedSeq,(function (truncate,x){\r\nreturn \x22\x3cindexed seq\x3e\x22;\r\n}));\r\ncljs.tools.reader.impl.inspect.inspect_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,cljs.core.PersistentArrayMapSeq,(function (truncate,x){\r\nreturn \x22\x3cmap seq\x3e\x22;\r\n}));\r\ncljs.tools.reader.impl.inspect.inspect_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,cljs.core.NodeSeq,(function (truncate,x){\r\nreturn \x22\x3cmap seq\x3e\x22;\r\n}));\r\ncljs.tools.reader.impl.inspect.inspect_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,cljs.core.Cons,(function (truncate,x){\r\nreturn \x22\x3ccons\x3e\x22;\r\n}));\r\ncljs.tools.reader.impl.inspect.inspect_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,cljs.core.LazySeq,(function (truncate,x){\r\nreturn \x22\x3clazy seq\x3e\x22;\r\n}));\r\ncljs.tools.reader.impl.inspect.inspect_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22nil\x22,\x22nil\x22,99600501),(function (_,___$1){\r\nreturn \x22nil\x22;\r\n}));\r\ncljs.tools.reader.impl.inspect.inspect_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22list\x22,\x22list\x22,765357683),(function (truncate,col){\r\nreturn cljs.tools.reader.impl.inspect.inspect_STAR__col(truncate,col,\x22(\x22,\x22)\x22);\r\n}));\r\ncljs.tools.reader.impl.inspect.inspect_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22map\x22,\x22map\x22,1371690461),(function (truncate,m){\r\nvar len \x3d cljs.core.count(m);\r\nvar n_shown \x3d (cljs.core.truth_(truncate)?(0):len);\r\nvar contents \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n_shown,m));\r\nvar suffix \x3d (((len \x3e n_shown))?\x22...}\x22:\x22}\x22);\r\nreturn cljs.tools.reader.impl.inspect.inspect_STAR__col(truncate,contents,\x22{\x22,suffix);\r\n}));\r\ncljs.tools.reader.impl.inspect.inspect_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22set\x22,\x22set\x22,304602554),(function (truncate,col){\r\nreturn cljs.tools.reader.impl.inspect.inspect_STAR__col(truncate,col,\x22#{\x22,\x22}\x22);\r\n}));\r\ncljs.tools.reader.impl.inspect.inspect_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22vector\x22,\x22vector\x22,1902966158),(function (truncate,col){\r\nreturn cljs.tools.reader.impl.inspect.inspect_STAR__col(truncate,col,\x22[\x22,\x22]\x22);\r\n}));\r\ncljs.tools.reader.impl.inspect.inspect_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),(function (truncate,x){\r\nreturn cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.type(x)], 0));\r\n}));\r\n/**\r\n * Return a string description of the value supplied.\r\n * May be the a string version of the value itself (e.g. \x22true\x22)\r\n * or it may be a description (e.g. \x22an instance of Foo\x22).\r\n * If truncate is true then return a very terse version of\r\n * the inspection.\r\n */\r\ncljs.tools.reader.impl.inspect.inspect \x3d (function cljs$tools$reader$impl$inspect$inspect(var_args){\r\nvar G__16415 \x3d arguments.length;\r\nswitch (G__16415) {\r\ncase 1:\r\nreturn cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\r\nreturn cljs.tools.reader.impl.inspect.inspect_STAR_.cljs$core$IFn$_invoke$arity$2(false,x);\r\n}));\r\n\r\n(cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$2 \x3d (function (truncate,x){\r\nreturn cljs.tools.reader.impl.inspect.inspect_STAR_.cljs$core$IFn$_invoke$arity$2(truncate,x);\r\n}));\r\n\r\n(cljs.tools.reader.impl.inspect.inspect.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n");
SHADOW_ENV.evalLoad("cljs.tools.reader.impl.errors.js", true , "goog.provide(\x27cljs.tools.reader.impl.errors\x27);\r\ncljs.tools.reader.impl.errors.ex_details \x3d (function cljs$tools$reader$impl$errors$ex_details(rdr,ex_type){\r\nvar details \x3d new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),new cljs.core.Keyword(null,\x22reader-exception\x22,\x22reader-exception\x22,-1938323098),new cljs.core.Keyword(null,\x22ex-kind\x22,\x22ex-kind\x22,1581199296),ex_type], null);\r\nif(cljs.tools.reader.reader_types.indexing_reader_QMARK_(rdr)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(details,new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),cljs.tools.reader.reader_types.get_file_name(rdr),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),cljs.tools.reader.reader_types.get_line_number(rdr),new cljs.core.Keyword(null,\x22col\x22,\x22col\x22,-1959363084),cljs.tools.reader.reader_types.get_column_number(rdr)], 0));\r\n} else {\r\nreturn details;\r\n}\r\n});\r\n/**\r\n * Throw an ex-info error.\r\n */\r\ncljs.tools.reader.impl.errors.throw_ex \x3d (function cljs$tools$reader$impl$errors$throw_ex(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___17037 \x3d arguments.length;\r\nvar i__4865__auto___17038 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17038 \x3c len__4864__auto___17037)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___17038]));\r\n\r\nvar G__17039 \x3d (i__4865__auto___17038 + (1));\r\ni__4865__auto___17038 \x3d G__17039;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((2) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((2)),(0),null)):null);\r\nreturn cljs.tools.reader.impl.errors.throw_ex.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4871__auto__);\r\n});\r\n\r\n(cljs.tools.reader.impl.errors.throw_ex.cljs$core$IFn$_invoke$arity$variadic \x3d (function (rdr,ex_type,msg){\r\nvar details \x3d cljs.tools.reader.impl.errors.ex_details(rdr,ex_type);\r\nvar file \x3d new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878).cljs$core$IFn$_invoke$arity$1(details);\r\nvar line \x3d new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235).cljs$core$IFn$_invoke$arity$1(details);\r\nvar col \x3d new cljs.core.Keyword(null,\x22col\x22,\x22col\x22,-1959363084).cljs$core$IFn$_invoke$arity$1(details);\r\nvar msg1 \x3d (cljs.core.truth_(file)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(file),\x22 \x22].join(\x27\x27):null);\r\nvar msg2 \x3d (cljs.core.truth_(line)?[\x22[line \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(line),\x22, col \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(col),\x22]\x22].join(\x27\x27):null);\r\nvar msg3 \x3d (cljs.core.truth_((function (){var or__4253__auto__ \x3d msg1;\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn msg2;\r\n}\r\n})())?\x22 \x22:null);\r\nvar full_msg \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$5(cljs.core.str,msg1,msg2,msg3,msg);\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(full_msg,details);\r\n}));\r\n\r\n(cljs.tools.reader.impl.errors.throw_ex.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/** @this {Function} */\r\n(cljs.tools.reader.impl.errors.throw_ex.cljs$lang$applyTo \x3d (function (seq16872){\r\nvar G__16873 \x3d cljs.core.first(seq16872);\r\nvar seq16872__$1 \x3d cljs.core.next(seq16872);\r\nvar G__16874 \x3d cljs.core.first(seq16872__$1);\r\nvar seq16872__$2 \x3d cljs.core.next(seq16872__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__16873,G__16874,seq16872__$2);\r\n}));\r\n\r\n/**\r\n * Throws an ExceptionInfo with the given message.\r\n * If rdr is an IndexingReader, additional information about column and line number is provided\r\n */\r\ncljs.tools.reader.impl.errors.reader_error \x3d (function cljs$tools$reader$impl$errors$reader_error(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___17043 \x3d arguments.length;\r\nvar i__4865__auto___17044 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17044 \x3c len__4864__auto___17043)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___17044]));\r\n\r\nvar G__17045 \x3d (i__4865__auto___17044 + (1));\r\ni__4865__auto___17044 \x3d G__17045;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((1) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((1)),(0),null)):null);\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4871__auto__);\r\n});\r\n\r\n(cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic \x3d (function (rdr,msgs){\r\nreturn cljs.tools.reader.impl.errors.throw_ex.cljs$core$IFn$_invoke$arity$variadic(rdr,new cljs.core.Keyword(null,\x22reader-error\x22,\x22reader-error\x22,1610253121),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,msgs)], 0));\r\n}));\r\n\r\n(cljs.tools.reader.impl.errors.reader_error.cljs$lang$maxFixedArity \x3d (1));\r\n\r\n/** @this {Function} */\r\n(cljs.tools.reader.impl.errors.reader_error.cljs$lang$applyTo \x3d (function (seq16879){\r\nvar G__16880 \x3d cljs.core.first(seq16879);\r\nvar seq16879__$1 \x3d cljs.core.next(seq16879);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__16880,seq16879__$1);\r\n}));\r\n\r\n/**\r\n * Throws an ExceptionInfo with the given message.\r\n * If rdr is an IndexingReader, additional information about column and line number is provided\r\n */\r\ncljs.tools.reader.impl.errors.illegal_arg_error \x3d (function cljs$tools$reader$impl$errors$illegal_arg_error(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___17046 \x3d arguments.length;\r\nvar i__4865__auto___17047 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17047 \x3c len__4864__auto___17046)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___17047]));\r\n\r\nvar G__17048 \x3d (i__4865__auto___17047 + (1));\r\ni__4865__auto___17047 \x3d G__17048;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((1) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((1)),(0),null)):null);\r\nreturn cljs.tools.reader.impl.errors.illegal_arg_error.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4871__auto__);\r\n});\r\n\r\n(cljs.tools.reader.impl.errors.illegal_arg_error.cljs$core$IFn$_invoke$arity$variadic \x3d (function (rdr,msgs){\r\nreturn cljs.tools.reader.impl.errors.throw_ex.cljs$core$IFn$_invoke$arity$variadic(rdr,new cljs.core.Keyword(null,\x22illegal-argument\x22,\x22illegal-argument\x22,-1845493170),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,msgs)], 0));\r\n}));\r\n\r\n(cljs.tools.reader.impl.errors.illegal_arg_error.cljs$lang$maxFixedArity \x3d (1));\r\n\r\n/** @this {Function} */\r\n(cljs.tools.reader.impl.errors.illegal_arg_error.cljs$lang$applyTo \x3d (function (seq16906){\r\nvar G__16907 \x3d cljs.core.first(seq16906);\r\nvar seq16906__$1 \x3d cljs.core.next(seq16906);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__16907,seq16906__$1);\r\n}));\r\n\r\n/**\r\n * Throws an ExceptionInfo with the given message.\r\n * If rdr is an IndexingReader, additional information about column and line number is provided\r\n */\r\ncljs.tools.reader.impl.errors.eof_error \x3d (function cljs$tools$reader$impl$errors$eof_error(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___17049 \x3d arguments.length;\r\nvar i__4865__auto___17050 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17050 \x3c len__4864__auto___17049)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___17050]));\r\n\r\nvar G__17051 \x3d (i__4865__auto___17050 + (1));\r\ni__4865__auto___17050 \x3d G__17051;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((1) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((1)),(0),null)):null);\r\nreturn cljs.tools.reader.impl.errors.eof_error.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4871__auto__);\r\n});\r\n\r\n(cljs.tools.reader.impl.errors.eof_error.cljs$core$IFn$_invoke$arity$variadic \x3d (function (rdr,msgs){\r\nreturn cljs.tools.reader.impl.errors.throw_ex.cljs$core$IFn$_invoke$arity$variadic(rdr,new cljs.core.Keyword(null,\x22eof\x22,\x22eof\x22,-489063237),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,msgs)], 0));\r\n}));\r\n\r\n(cljs.tools.reader.impl.errors.eof_error.cljs$lang$maxFixedArity \x3d (1));\r\n\r\n/** @this {Function} */\r\n(cljs.tools.reader.impl.errors.eof_error.cljs$lang$applyTo \x3d (function (seq16909){\r\nvar G__16910 \x3d cljs.core.first(seq16909);\r\nvar seq16909__$1 \x3d cljs.core.next(seq16909);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__16910,seq16909__$1);\r\n}));\r\n\r\ncljs.tools.reader.impl.errors.throw_eof_delimited \x3d (function cljs$tools$reader$impl$errors$throw_eof_delimited(var_args){\r\nvar G__16915 \x3d arguments.length;\r\nswitch (G__16915) {\r\ncase 4:\r\nreturn cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ncase 5:\r\nreturn cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$4 \x3d (function (rdr,kind,column,line){\r\nreturn cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$5(rdr,kind,line,column,null);\r\n}));\r\n\r\n(cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$5 \x3d (function (rdr,kind,line,column,n){\r\nreturn cljs.tools.reader.impl.errors.eof_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Unexpected EOF while reading \x22,(cljs.core.truth_(n)?[\x22item \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(n),\x22 of \x22].join(\x27\x27):null),cljs.core.name(kind),(cljs.core.truth_(line)?[\x22, starting at line \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(line),\x22 and column \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(column)].join(\x27\x27):null),\x22.\x22], 0));\r\n}));\r\n\r\n(cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$lang$maxFixedArity \x3d 5);\r\n\r\ncljs.tools.reader.impl.errors.throw_odd_map \x3d (function cljs$tools$reader$impl$errors$throw_odd_map(rdr,line,col,elements){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22The map literal starting with \x22,cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$1(cljs.core.first(elements)),(cljs.core.truth_(line)?[\x22 on line \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(line),\x22 column \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(col)].join(\x27\x27):null),\x22 contains \x22,cljs.core.count(elements),\x22 form(s). Map literals must contain an even number of forms.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_invalid_number \x3d (function cljs$tools$reader$impl$errors$throw_invalid_number(rdr,token){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid number: \x22,token,\x22.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_invalid_unicode_literal \x3d (function cljs$tools$reader$impl$errors$throw_invalid_unicode_literal(rdr,token){\r\nthrow cljs.tools.reader.impl.errors.illegal_arg_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid unicode literal: \\\\\x22,token,\x22.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_invalid_unicode_escape \x3d (function cljs$tools$reader$impl$errors$throw_invalid_unicode_escape(rdr,ch){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid unicode escape: \\\\u\x22,ch,\x22.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_invalid \x3d (function cljs$tools$reader$impl$errors$throw_invalid(rdr,kind,token){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid \x22,cljs.core.name(kind),\x22: \x22,token,\x22.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_eof_at_start \x3d (function cljs$tools$reader$impl$errors$throw_eof_at_start(rdr,kind){\r\nreturn cljs.tools.reader.impl.errors.eof_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Unexpected EOF while reading start of \x22,cljs.core.name(kind),\x22.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_bad_char \x3d (function cljs$tools$reader$impl$errors$throw_bad_char(rdr,kind,ch){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid character: \x22,ch,\x22 found while reading \x22,cljs.core.name(kind),\x22.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_eof_at_dispatch \x3d (function cljs$tools$reader$impl$errors$throw_eof_at_dispatch(rdr){\r\nreturn cljs.tools.reader.impl.errors.eof_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Unexpected EOF while reading dispatch character.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_unmatch_delimiter \x3d (function cljs$tools$reader$impl$errors$throw_unmatch_delimiter(rdr,ch){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Unmatched delimiter \x22,ch,\x22.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_eof_reading \x3d (function cljs$tools$reader$impl$errors$throw_eof_reading(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___17059 \x3d arguments.length;\r\nvar i__4865__auto___17060 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17060 \x3c len__4864__auto___17059)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___17060]));\r\n\r\nvar G__17061 \x3d (i__4865__auto___17060 + (1));\r\ni__4865__auto___17060 \x3d G__17061;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((2) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((2)),(0),null)):null);\r\nreturn cljs.tools.reader.impl.errors.throw_eof_reading.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4871__auto__);\r\n});\r\n\r\n(cljs.tools.reader.impl.errors.throw_eof_reading.cljs$core$IFn$_invoke$arity$variadic \x3d (function (rdr,kind,start){\r\nvar init \x3d (function (){var G__16966 \x3d kind;\r\nvar G__16966__$1 \x3d (((G__16966 instanceof cljs.core.Keyword))?G__16966.fqn:null);\r\nswitch (G__16966__$1) {\r\ncase \x22regex\x22:\r\nreturn \x22#\\\x22\x22;\r\n\r\nbreak;\r\ncase \x22string\x22:\r\nreturn \x22\\\x22\x22;\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__16966__$1)].join(\x27\x27)));\r\n\r\n}\r\n})();\r\nreturn cljs.tools.reader.impl.errors.eof_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Unexpected EOF reading \x22,cljs.core.name(kind),\x22 starting \x22,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.str,init,start),\x22.\x22], 0));\r\n}));\r\n\r\n(cljs.tools.reader.impl.errors.throw_eof_reading.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/** @this {Function} */\r\n(cljs.tools.reader.impl.errors.throw_eof_reading.cljs$lang$applyTo \x3d (function (seq16947){\r\nvar G__16948 \x3d cljs.core.first(seq16947);\r\nvar seq16947__$1 \x3d cljs.core.next(seq16947);\r\nvar G__16949 \x3d cljs.core.first(seq16947__$1);\r\nvar seq16947__$2 \x3d cljs.core.next(seq16947__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__16948,G__16949,seq16947__$2);\r\n}));\r\n\r\ncljs.tools.reader.impl.errors.throw_invalid_unicode_char \x3d (function cljs$tools$reader$impl$errors$throw_invalid_unicode_char(rdr,token){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid unicode character \\\\\x22,token,\x22.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_invalid_unicode_digit_in_token \x3d (function cljs$tools$reader$impl$errors$throw_invalid_unicode_digit_in_token(rdr,ch,token){\r\nreturn cljs.tools.reader.impl.errors.illegal_arg_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid digit \x22,ch,\x22 in unicode character \\\\\x22,token,\x22.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_invalid_unicode_digit \x3d (function cljs$tools$reader$impl$errors$throw_invalid_unicode_digit(rdr,ch){\r\nreturn cljs.tools.reader.impl.errors.illegal_arg_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid digit \x22,ch,\x22 in unicode character.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_invalid_unicode_len \x3d (function cljs$tools$reader$impl$errors$throw_invalid_unicode_len(rdr,actual,expected){\r\nreturn cljs.tools.reader.impl.errors.illegal_arg_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid unicode literal. Unicode literals should be \x22,expected,\x22characters long. \x22,\x22Value supplied is \x22,actual,\x22 characters long.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_invalid_character_literal \x3d (function cljs$tools$reader$impl$errors$throw_invalid_character_literal(rdr,token){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid character literal \\\\u\x22,token,\x22.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_invalid_octal_len \x3d (function cljs$tools$reader$impl$errors$throw_invalid_octal_len(rdr,token){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid octal escape sequence in a character literal: \x22,token,\x22. Octal escape sequences must be 3 or fewer digits.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_bad_octal_number \x3d (function cljs$tools$reader$impl$errors$throw_bad_octal_number(rdr){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Octal escape sequence must be in range [0, 377].\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_unsupported_character \x3d (function cljs$tools$reader$impl$errors$throw_unsupported_character(rdr,token){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Unsupported character: \x22,token,\x22.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_eof_in_character \x3d (function cljs$tools$reader$impl$errors$throw_eof_in_character(rdr){\r\nreturn cljs.tools.reader.impl.errors.eof_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Unexpected EOF while reading character.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_bad_escape_char \x3d (function cljs$tools$reader$impl$errors$throw_bad_escape_char(rdr,ch){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Unsupported escape character: \\\\\x22,ch,\x22.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_single_colon \x3d (function cljs$tools$reader$impl$errors$throw_single_colon(rdr){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22A single colon is not a valid keyword.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_bad_metadata \x3d (function cljs$tools$reader$impl$errors$throw_bad_metadata(rdr,x){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Metadata cannot be \x22,cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$1(x),\x22. Metadata must be a Symbol, Keyword, String or Map.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_bad_metadata_target \x3d (function cljs$tools$reader$impl$errors$throw_bad_metadata_target(rdr,target){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Metadata can not be applied to \x22,cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$1(target),\x22. \x22,\x22Metadata can only be applied to IMetas.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_feature_not_keyword \x3d (function cljs$tools$reader$impl$errors$throw_feature_not_keyword(rdr,feature){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Feature cannot be \x22,cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$1(feature),\x22. Features must be keywords.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_ns_map_no_map \x3d (function cljs$tools$reader$impl$errors$throw_ns_map_no_map(rdr,ns_name){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Namespaced map with namespace \x22,ns_name,\x22 does not specify a map.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_bad_ns \x3d (function cljs$tools$reader$impl$errors$throw_bad_ns(rdr,ns_name){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid value used as namespace in namespaced map: \x22,ns_name,\x22.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_bad_reader_tag \x3d (function cljs$tools$reader$impl$errors$throw_bad_reader_tag(rdr,tag){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid reader tag: \x22,cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$1(tag),\x22. Reader tags must be symbols.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_unknown_reader_tag \x3d (function cljs$tools$reader$impl$errors$throw_unknown_reader_tag(rdr,tag){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22No reader function for tag \x22,cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$1(tag),\x22.\x22], 0));\r\n});\r\ncljs.tools.reader.impl.errors.duplicate_keys_error \x3d (function cljs$tools$reader$impl$errors$duplicate_keys_error(msg,coll){\r\nvar duplicates \x3d (function cljs$tools$reader$impl$errors$duplicate_keys_error_$_duplicates(seq){\r\nvar iter__4652__auto__ \x3d (function cljs$tools$reader$impl$errors$duplicate_keys_error_$_duplicates_$_iter__17022(s__17023){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s__17023__$1 \x3d s__17023;\r\nwhile(true){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(s__17023__$1);\r\nif(temp__5753__auto__){\r\nvar s__17023__$2 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__17023__$2)){\r\nvar c__4650__auto__ \x3d cljs.core.chunk_first(s__17023__$2);\r\nvar size__4651__auto__ \x3d cljs.core.count(c__4650__auto__);\r\nvar b__17025 \x3d cljs.core.chunk_buffer(size__4651__auto__);\r\nif((function (){var i__17024 \x3d (0);\r\nwhile(true){\r\nif((i__17024 \x3c size__4651__auto__)){\r\nvar vec__17027 \x3d cljs.core._nth(c__4650__auto__,i__17024);\r\nvar id \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17027,(0),null);\r\nvar freq \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17027,(1),null);\r\nif((freq \x3e (1))){\r\ncljs.core.chunk_append(b__17025,id);\r\n\r\nvar G__17066 \x3d (i__17024 + (1));\r\ni__17024 \x3d G__17066;\r\ncontinue;\r\n} else {\r\nvar G__17067 \x3d (i__17024 + (1));\r\ni__17024 \x3d G__17067;\r\ncontinue;\r\n}\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__17025),cljs$tools$reader$impl$errors$duplicate_keys_error_$_duplicates_$_iter__17022(cljs.core.chunk_rest(s__17023__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__17025),null);\r\n}\r\n} else {\r\nvar vec__17030 \x3d cljs.core.first(s__17023__$2);\r\nvar id \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17030,(0),null);\r\nvar freq \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17030,(1),null);\r\nif((freq \x3e (1))){\r\nreturn cljs.core.cons(id,cljs$tools$reader$impl$errors$duplicate_keys_error_$_duplicates_$_iter__17022(cljs.core.rest(s__17023__$2)));\r\n} else {\r\nvar G__17068 \x3d cljs.core.rest(s__17023__$2);\r\ns__17023__$1 \x3d G__17068;\r\ncontinue;\r\n}\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}),null,null));\r\n});\r\nreturn iter__4652__auto__(cljs.core.frequencies(seq));\r\n});\r\nvar dups \x3d duplicates(coll);\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(cljs.core.str,msg,(((cljs.core.count(dups) \x3e (1)))?\x22s\x22:null),\x22: \x22,cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(\x22, \x22,dups));\r\n});\r\ncljs.tools.reader.impl.errors.throw_dup_keys \x3d (function cljs$tools$reader$impl$errors$throw_dup_keys(rdr,kind,ks){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.tools.reader.impl.errors.duplicate_keys_error([clojure.string.capitalize(cljs.core.name(kind)),\x22 literal contains duplicate key\x22].join(\x27\x27),ks)], 0));\r\n});\r\ncljs.tools.reader.impl.errors.throw_eof_error \x3d (function cljs$tools$reader$impl$errors$throw_eof_error(rdr,line){\r\nif(cljs.core.truth_(line)){\r\nreturn cljs.tools.reader.impl.errors.eof_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22EOF while reading, starting at line \x22,line,\x22.\x22], 0));\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.eof_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22EOF while reading.\x22], 0));\r\n}\r\n});\r\n");
SHADOW_ENV.evalLoad("cljs.tools.reader.impl.commons.js", true , "goog.provide(\x27cljs.tools.reader.impl.commons\x27);\r\n/**\r\n * Checks whether the reader is at the start of a number literal\r\n */\r\ncljs.tools.reader.impl.commons.number_literal_QMARK_ \x3d (function cljs$tools$reader$impl$commons$number_literal_QMARK_(reader,initch){\r\nreturn ((cljs.tools.reader.impl.utils.numeric_QMARK_(initch)) || ((((((\x22+\x22 \x3d\x3d\x3d initch)) || ((\x22-\x22 \x3d\x3d\x3d initch)))) \x26\x26 (cljs.tools.reader.impl.utils.numeric_QMARK_(reader.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null))))));\r\n});\r\n/**\r\n * Read until first character that doesn\x27t match pred, returning\r\n * char.\r\n */\r\ncljs.tools.reader.impl.commons.read_past \x3d (function cljs$tools$reader$impl$commons$read_past(pred,rdr){\r\nvar ch \x3d rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nwhile(true){\r\nif((pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(ch) : pred.call(null,ch))){\r\nvar G__17088 \x3d rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nch \x3d G__17088;\r\ncontinue;\r\n} else {\r\nreturn ch;\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Advances the reader to the end of a line. Returns the reader\r\n */\r\ncljs.tools.reader.impl.commons.skip_line \x3d (function cljs$tools$reader$impl$commons$skip_line(reader){\r\nwhile(true){\r\nif(cljs.tools.reader.impl.utils.newline_QMARK_(reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null))){\r\n} else {\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n\r\nreturn reader;\r\n});\r\ncljs.tools.reader.impl.commons.int_pattern \x3d /^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?$/;\r\ncljs.tools.reader.impl.commons.ratio_pattern \x3d /([-+]?[0-9]+)\\/([0-9]+)/;\r\ncljs.tools.reader.impl.commons.float_pattern \x3d /([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?/;\r\ncljs.tools.reader.impl.commons.match_int \x3d (function cljs$tools$reader$impl$commons$match_int(s){\r\nvar m \x3d cljs.core.vec(cljs.core.re_find(cljs.tools.reader.impl.commons.int_pattern,s));\r\nif((!(((m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1((2)) : m.call(null,(2))) \x3d\x3d null)))){\r\nreturn (0);\r\n} else {\r\nvar negate_QMARK_ \x3d (\x22-\x22 \x3d\x3d\x3d (m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1((1)) : m.call(null,(1))));\r\nvar a \x3d (((!(((m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1((3)) : m.call(null,(3))) \x3d\x3d null))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1((3)) : m.call(null,(3))),(10)], null):(((!(((m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1((4)) : m.call(null,(4))) \x3d\x3d null))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1((4)) : m.call(null,(4))),(16)], null):(((!(((m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1((5)) : m.call(null,(5))) \x3d\x3d null))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1((5)) : m.call(null,(5))),(8)], null):(((!(((m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1((7)) : m.call(null,(7))) \x3d\x3d null))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1((7)) : m.call(null,(7))),parseInt((m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1((6)) : m.call(null,(6))))], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,null], null)\r\n))));\r\nvar n \x3d (a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1((0)) : a.call(null,(0)));\r\nif((n \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nvar bn \x3d parseInt(n,(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1((1)) : a.call(null,(1))));\r\nvar bn__$1 \x3d ((negate_QMARK_)?((-1) * bn):bn);\r\nif(cljs.core.truth_(isNaN(bn__$1))){\r\nreturn null;\r\n} else {\r\nreturn bn__$1;\r\n}\r\n}\r\n}\r\n});\r\ncljs.tools.reader.impl.commons.match_ratio \x3d (function cljs$tools$reader$impl$commons$match_ratio(s){\r\nvar m \x3d cljs.core.vec(cljs.core.re_find(cljs.tools.reader.impl.commons.ratio_pattern,s));\r\nvar numerator \x3d (m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1((1)) : m.call(null,(1)));\r\nvar denominator \x3d (m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1((2)) : m.call(null,(2)));\r\nvar numerator__$1 \x3d (cljs.core.truth_(cljs.core.re_find(/^\\+/,numerator))?cljs.core.subs.cljs$core$IFn$_invoke$arity$2(numerator,(1)):numerator);\r\nreturn (parseInt(numerator__$1) / parseInt(denominator));\r\n});\r\ncljs.tools.reader.impl.commons.match_float \x3d (function cljs$tools$reader$impl$commons$match_float(s){\r\nvar m \x3d cljs.core.vec(cljs.core.re_find(cljs.tools.reader.impl.commons.float_pattern,s));\r\nif((!(((m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1((4)) : m.call(null,(4))) \x3d\x3d null)))){\r\nreturn parseFloat((m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1((1)) : m.call(null,(1))));\r\n} else {\r\nreturn parseFloat(s);\r\n}\r\n});\r\ncljs.tools.reader.impl.commons.matches_QMARK_ \x3d (function cljs$tools$reader$impl$commons$matches_QMARK_(pattern,s){\r\nvar vec__17079 \x3d cljs.core.re_find(pattern,s);\r\nvar match \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17079,(0),null);\r\nreturn (match \x3d\x3d\x3d s);\r\n});\r\ncljs.tools.reader.impl.commons.match_number \x3d (function cljs$tools$reader$impl$commons$match_number(s){\r\nif(cljs.tools.reader.impl.commons.matches_QMARK_(cljs.tools.reader.impl.commons.int_pattern,s)){\r\nreturn cljs.tools.reader.impl.commons.match_int(s);\r\n} else {\r\nif(cljs.tools.reader.impl.commons.matches_QMARK_(cljs.tools.reader.impl.commons.float_pattern,s)){\r\nreturn cljs.tools.reader.impl.commons.match_float(s);\r\n} else {\r\nif(cljs.tools.reader.impl.commons.matches_QMARK_(cljs.tools.reader.impl.commons.ratio_pattern,s)){\r\nreturn cljs.tools.reader.impl.commons.match_ratio(s);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Parses a string into a vector of the namespace and symbol\r\n */\r\ncljs.tools.reader.impl.commons.parse_symbol \x3d (function cljs$tools$reader$impl$commons$parse_symbol(token){\r\nif((((\x22\x22 \x3d\x3d\x3d token)) || (((/:$/.test(token) \x3d\x3d\x3d true) || (/^::/.test(token) \x3d\x3d\x3d true))))){\r\nreturn null;\r\n} else {\r\nvar ns_idx \x3d token.indexOf(\x22/\x22);\r\nvar ns \x3d (((ns_idx \x3e (0)))?cljs.core.subs.cljs$core$IFn$_invoke$arity$3(token,(0),ns_idx):null);\r\nif((!((ns \x3d\x3d null)))){\r\nvar ns_idx__$1 \x3d (ns_idx + (1));\r\nif((ns_idx__$1 \x3d\x3d\x3d cljs.core.count(token))){\r\nreturn null;\r\n} else {\r\nvar sym \x3d cljs.core.subs.cljs$core$IFn$_invoke$arity$2(token,ns_idx__$1);\r\nif((((!(cljs.tools.reader.impl.utils.numeric_QMARK_(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(sym,(0)))))) \x26\x26 ((((!((\x22\x22 \x3d\x3d\x3d sym)))) \x26\x26 (((/:$/.test(ns) \x3d\x3d\x3d false) \x26\x26 ((((sym \x3d\x3d\x3d \x22/\x22)) || (((-1) \x3d\x3d\x3d sym.indexOf(\x22/\x22))))))))))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,sym], null);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n} else {\r\nif((((token \x3d\x3d\x3d \x22/\x22)) || (((-1) \x3d\x3d\x3d token.indexOf(\x22/\x22))))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,token], null);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}\r\n});\r\ncljs.tools.reader.impl.commons.read_comment \x3d (function cljs$tools$reader$impl$commons$read_comment(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___17090 \x3d arguments.length;\r\nvar i__4865__auto___17091 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___17091 \x3c len__4864__auto___17090)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___17091]));\r\n\r\nvar G__17092 \x3d (i__4865__auto___17091 + (1));\r\ni__4865__auto___17091 \x3d G__17092;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((1) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((1)),(0),null)):null);\r\nreturn cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4871__auto__);\r\n});\r\n\r\n(cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic \x3d (function (rdr,_){\r\nreturn cljs.tools.reader.impl.commons.skip_line(rdr);\r\n}));\r\n\r\n(cljs.tools.reader.impl.commons.read_comment.cljs$lang$maxFixedArity \x3d (1));\r\n\r\n/** @this {Function} */\r\n(cljs.tools.reader.impl.commons.read_comment.cljs$lang$applyTo \x3d (function (seq17086){\r\nvar G__17087 \x3d cljs.core.first(seq17086);\r\nvar seq17086__$1 \x3d cljs.core.next(seq17086);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__17087,seq17086__$1);\r\n}));\r\n\r\ncljs.tools.reader.impl.commons.throwing_reader \x3d (function cljs$tools$reader$impl$commons$throwing_reader(msg){\r\nreturn (function() { \r\nvar G__17093__delegate \x3d function (rdr,_){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([msg], 0));\r\n};\r\nvar G__17093 \x3d function (rdr,var_args){\r\nvar _ \x3d null;\r\nif (arguments.length \x3e 1) {\r\nvar G__17094__i \x3d 0, G__17094__a \x3d new Array(arguments.length -  1);\r\nwhile (G__17094__i \x3c G__17094__a.length) {G__17094__a[G__17094__i] \x3d arguments[G__17094__i + 1]; ++G__17094__i;}\r\n  _ \x3d new cljs.core.IndexedSeq(G__17094__a,0,null);\r\n} \r\nreturn G__17093__delegate.call(this,rdr,_);};\r\nG__17093.cljs$lang$maxFixedArity \x3d 1;\r\nG__17093.cljs$lang$applyTo \x3d (function (arglist__17095){\r\nvar rdr \x3d cljs.core.first(arglist__17095);\r\nvar _ \x3d cljs.core.rest(arglist__17095);\r\nreturn G__17093__delegate(rdr,_);\r\n});\r\nG__17093.cljs$core$IFn$_invoke$arity$variadic \x3d G__17093__delegate;\r\nreturn G__17093;\r\n})()\r\n;\r\n});\r\n");
SHADOW_ENV.evalLoad("cljs.tools.reader.js", true , "goog.provide(\x27cljs.tools.reader\x27);\r\ngoog.scope(function(){\r\n  cljs.tools.reader.goog$module$goog$array \x3d goog.module.get(\x27goog.array\x27);\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\ncljs.tools.reader.macro_terminating_QMARK_ \x3d (function cljs$tools$reader$macro_terminating_QMARK_(ch){\r\nvar G__17240 \x3d ch;\r\nswitch (G__17240) {\r\ncase \x22\\\x22\x22:\r\ncase \x22;\x22:\r\ncase \x22@\x22:\r\ncase \x22^\x22:\r\ncase \x22`\x22:\r\ncase \x22~\x22:\r\ncase \x22(\x22:\r\ncase \x22)\x22:\r\ncase \x22[\x22:\r\ncase \x22]\x22:\r\ncase \x22{\x22:\r\ncase \x22}\x22:\r\ncase \x22\\\\\x22:\r\nreturn true;\r\n\r\nbreak;\r\ndefault:\r\nreturn false;\r\n\r\n}\r\n});\r\ncljs.tools.reader.sb \x3d (new goog.string.StringBuffer());\r\n/**\r\n * Read in a single logical token from the reader\r\n */\r\ncljs.tools.reader.read_token \x3d (function cljs$tools$reader$read_token(rdr,kind,initch){\r\nif((initch \x3d\x3d null)){\r\nreturn cljs.tools.reader.impl.errors.throw_eof_at_start(rdr,kind);\r\n} else {\r\ncljs.tools.reader.sb.clear();\r\n\r\nvar ch \x3d initch;\r\nwhile(true){\r\nif(((cljs.tools.reader.impl.utils.whitespace_QMARK_(ch)) || (((cljs.tools.reader.macro_terminating_QMARK_(ch)) || ((ch \x3d\x3d null)))))){\r\nif((ch \x3d\x3d null)){\r\n} else {\r\nrdr.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(null,ch);\r\n}\r\n\r\nreturn cljs.tools.reader.sb.toString();\r\n} else {\r\ncljs.tools.reader.sb.append(ch);\r\n\r\nvar G__18130 \x3d rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nch \x3d G__18130;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n}\r\n});\r\ncljs.tools.reader.read_dispatch \x3d (function cljs$tools$reader$read_dispatch(rdr,_,opts,pending_forms){\r\nvar temp__5751__auto__ \x3d rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar ch \x3d temp__5751__auto__;\r\nvar temp__5751__auto____$1 \x3d (cljs.tools.reader.dispatch_macros.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.dispatch_macros.cljs$core$IFn$_invoke$arity$1(ch) : cljs.tools.reader.dispatch_macros.call(null,ch));\r\nif(cljs.core.truth_(temp__5751__auto____$1)){\r\nvar dm \x3d temp__5751__auto____$1;\r\nreturn (dm.cljs$core$IFn$_invoke$arity$4 ? dm.cljs$core$IFn$_invoke$arity$4(rdr,ch,opts,pending_forms) : dm.call(null,rdr,ch,opts,pending_forms));\r\n} else {\r\nvar G__17248 \x3d (function (){var G__17252 \x3d rdr;\r\nG__17252.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(null,ch);\r\n\r\nreturn G__17252;\r\n})();\r\nvar G__17249 \x3d ch;\r\nvar G__17250 \x3d opts;\r\nvar G__17251 \x3d pending_forms;\r\nreturn (cljs.tools.reader.read_tagged.cljs$core$IFn$_invoke$arity$4 ? cljs.tools.reader.read_tagged.cljs$core$IFn$_invoke$arity$4(G__17248,G__17249,G__17250,G__17251) : cljs.tools.reader.read_tagged.call(null,G__17248,G__17249,G__17250,G__17251));\r\n}\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_eof_at_dispatch(rdr);\r\n}\r\n});\r\ncljs.tools.reader.read_unmatched_delimiter \x3d (function cljs$tools$reader$read_unmatched_delimiter(rdr,ch,opts,pending_forms){\r\nreturn cljs.tools.reader.impl.errors.throw_unmatch_delimiter(rdr,ch);\r\n});\r\ncljs.tools.reader.read_regex \x3d (function cljs$tools$reader$read_regex(rdr,ch,opts,pending_forms){\r\nvar sb \x3d (new goog.string.StringBuffer());\r\nvar ch__$1 \x3d rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nwhile(true){\r\nif((\x22\\\x22\x22 \x3d\x3d\x3d ch__$1)){\r\nreturn cljs.core.re_pattern(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb));\r\n} else {\r\nif((ch__$1 \x3d\x3d null)){\r\nreturn cljs.tools.reader.impl.errors.throw_eof_reading.cljs$core$IFn$_invoke$arity$variadic(rdr,new cljs.core.Keyword(null,\x22regex\x22,\x22regex\x22,939488856),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([sb], 0));\r\n} else {\r\nsb.append(ch__$1);\r\n\r\nif((\x22\\\\\x22 \x3d\x3d\x3d ch__$1)){\r\nvar ch_18141__$2 \x3d rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nif((ch_18141__$2 \x3d\x3d null)){\r\ncljs.tools.reader.impl.errors.throw_eof_reading.cljs$core$IFn$_invoke$arity$variadic(rdr,new cljs.core.Keyword(null,\x22regex\x22,\x22regex\x22,939488856),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([sb], 0));\r\n} else {\r\n}\r\n\r\nsb.append(ch_18141__$2);\r\n} else {\r\n}\r\n\r\nvar G__18142 \x3d rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nch__$1 \x3d G__18142;\r\ncontinue;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.tools.reader.read_unicode_char \x3d (function cljs$tools$reader$read_unicode_char(var_args){\r\nvar G__17263 \x3d arguments.length;\r\nswitch (G__17263) {\r\ncase 4:\r\nreturn cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ncase 5:\r\nreturn cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4 \x3d (function (token,offset,length,base){\r\nvar l \x3d (offset + length);\r\nif((cljs.core.count(token) \x3d\x3d\x3d l)){\r\n} else {\r\ncljs.tools.reader.impl.errors.throw_invalid_unicode_literal(null,token);\r\n}\r\n\r\nvar i \x3d offset;\r\nvar uc \x3d (0);\r\nwhile(true){\r\nif((i \x3d\x3d\x3d l)){\r\nreturn String.fromCharCode(uc);\r\n} else {\r\nvar d \x3d cljs.tools.reader.impl.utils.char_code(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(token,i),base);\r\nif((d \x3d\x3d\x3d (-1))){\r\nreturn cljs.tools.reader.impl.errors.throw_invalid_unicode_digit_in_token(null,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(token,i),token);\r\n} else {\r\nvar G__18146 \x3d (i + (1));\r\nvar G__18147 \x3d (d + (uc * base));\r\ni \x3d G__18146;\r\nuc \x3d G__18147;\r\ncontinue;\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5 \x3d (function (rdr,initch,base,length,exact_QMARK_){\r\nvar i \x3d (1);\r\nvar uc \x3d cljs.tools.reader.impl.utils.char_code(initch,base);\r\nwhile(true){\r\nif((uc \x3d\x3d\x3d (-1))){\r\nreturn cljs.tools.reader.impl.errors.throw_invalid_unicode_digit(rdr,initch);\r\n} else {\r\nif((!((i \x3d\x3d\x3d length)))){\r\nvar ch \x3d rdr.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null);\r\nif(cljs.core.truth_((function (){var or__4253__auto__ \x3d cljs.tools.reader.impl.utils.whitespace_QMARK_(ch);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar or__4253__auto____$1 \x3d (cljs.tools.reader.macros.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.macros.cljs$core$IFn$_invoke$arity$1(ch) : cljs.tools.reader.macros.call(null,ch));\r\nif(cljs.core.truth_(or__4253__auto____$1)){\r\nreturn or__4253__auto____$1;\r\n} else {\r\nreturn (ch \x3d\x3d null);\r\n}\r\n}\r\n})())){\r\nif(cljs.core.truth_(exact_QMARK_)){\r\nreturn cljs.tools.reader.impl.errors.throw_invalid_unicode_len(rdr,i,length);\r\n} else {\r\nreturn String.fromCharCode(uc);\r\n}\r\n} else {\r\nvar d \x3d cljs.tools.reader.impl.utils.char_code(ch,base);\r\nrdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\n\r\nif((d \x3d\x3d\x3d (-1))){\r\nreturn cljs.tools.reader.impl.errors.throw_invalid_unicode_digit(rdr,ch);\r\n} else {\r\nvar G__18150 \x3d (i + (1));\r\nvar G__18151 \x3d (d + (uc * base));\r\ni \x3d G__18150;\r\nuc \x3d G__18151;\r\ncontinue;\r\n}\r\n}\r\n} else {\r\nreturn String.fromCharCode(uc);\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.tools.reader.read_unicode_char.cljs$lang$maxFixedArity \x3d 5);\r\n\r\ncljs.tools.reader.upper_limit \x3d \x22\\uD7FF\x22.charCodeAt((0));\r\ncljs.tools.reader.lower_limit \x3d \x22\\uE000\x22.charCodeAt((0));\r\ncljs.tools.reader.valid_octal_QMARK_ \x3d (function cljs$tools$reader$valid_octal_QMARK_(token,base){\r\nreturn (parseInt(token,base) \x3c\x3d (255));\r\n});\r\n/**\r\n * Read in a character literal\r\n */\r\ncljs.tools.reader.read_char_STAR_ \x3d (function cljs$tools$reader$read_char_STAR_(rdr,backslash,opts,pending_forms){\r\nvar ch \x3d rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nif((!((ch \x3d\x3d null)))){\r\nvar token \x3d ((((cljs.tools.reader.macro_terminating_QMARK_(ch)) || (cljs.tools.reader.impl.utils.whitespace_QMARK_(ch))))?cljs.core.str.cljs$core$IFn$_invoke$arity$1(ch):cljs.tools.reader.read_token(rdr,new cljs.core.Keyword(null,\x22character\x22,\x22character\x22,380652989),ch));\r\nvar token_len \x3d token.length;\r\nif(((1) \x3d\x3d\x3d token_len)){\r\nreturn token.charAt((0));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(token,\x22newline\x22)){\r\nreturn \x22\\n\x22;\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(token,\x22space\x22)){\r\nreturn \x22 \x22;\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(token,\x22tab\x22)){\r\nreturn \x22\\t\x22;\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(token,\x22backspace\x22)){\r\nreturn \x22\\b\x22;\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(token,\x22formfeed\x22)){\r\nreturn \x22\\f\x22;\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(token,\x22return\x22)){\r\nreturn \x22\\r\x22;\r\n} else {\r\nif(cljs.core.truth_(goog.string.startsWith(token,\x22u\x22))){\r\nvar c \x3d cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4(token,(1),(4),(16));\r\nvar ic \x3d c.charCodeAt((0));\r\nif((((ic \x3e cljs.tools.reader.upper_limit)) \x26\x26 ((ic \x3c cljs.tools.reader.lower_limit)))){\r\nreturn cljs.tools.reader.impl.errors.throw_invalid_character_literal(rdr,ic.toString((16)));\r\n} else {\r\nreturn c;\r\n}\r\n} else {\r\nif(cljs.core.truth_(goog.string.startsWith(token,\x22o\x22))){\r\nvar len \x3d (token_len - (1));\r\nif((len \x3e (3))){\r\nreturn cljs.tools.reader.impl.errors.throw_invalid_octal_len(rdr,token);\r\n} else {\r\nvar offset \x3d (1);\r\nvar base \x3d (8);\r\nvar uc \x3d cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4(token,offset,len,base);\r\nif((!(cljs.tools.reader.valid_octal_QMARK_(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(token,offset),base)))){\r\nreturn cljs.tools.reader.impl.errors.throw_bad_octal_number(rdr);\r\n} else {\r\nreturn uc;\r\n}\r\n}\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_unsupported_character(rdr,token);\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_eof_in_character(rdr);\r\n}\r\n});\r\ncljs.tools.reader.starting_line_col_info \x3d (function cljs$tools$reader$starting_line_col_info(rdr){\r\nif(cljs.tools.reader.reader_types.indexing_reader_QMARK_(rdr)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rdr.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1(null),((rdr.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(null) - (1)) | (0))], null);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ncljs.tools.reader.ending_line_col_info \x3d (function cljs$tools$reader$ending_line_col_info(rdr){\r\nif(cljs.tools.reader.reader_types.indexing_reader_QMARK_(rdr)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rdr.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1(null),rdr.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(null)], null);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.tools !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.tools.reader !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.tools.reader.READ_EOF !\x3d\x3d \x27undefined\x27)){\r\n} else {\r\ncljs.tools.reader.READ_EOF \x3d (new Object());\r\n}\r\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.tools !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.tools.reader !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.tools.reader.READ_FINISHED !\x3d\x3d \x27undefined\x27)){\r\n} else {\r\ncljs.tools.reader.READ_FINISHED \x3d (new Object());\r\n}\r\ncljs.tools.reader._STAR_read_delim_STAR_ \x3d false;\r\ncljs.tools.reader.read_delimited_internal \x3d (function cljs$tools$reader$read_delimited_internal(kind,delim,rdr,opts,pending_forms){\r\nvar vec__17301 \x3d cljs.tools.reader.starting_line_col_info(rdr);\r\nvar start_line \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17301,(0),null);\r\nvar start_column \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17301,(1),null);\r\nvar delim__$1 \x3d cljs.tools.reader.impl.utils.char$(delim);\r\nvar a \x3d cljs.core.transient$(cljs.core.PersistentVector.EMPTY);\r\nwhile(true){\r\nvar form \x3d (cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(rdr,false,cljs.tools.reader.READ_EOF,delim__$1,opts,pending_forms) : cljs.tools.reader.read_STAR_.call(null,rdr,false,cljs.tools.reader.READ_EOF,delim__$1,opts,pending_forms));\r\nif((form \x3d\x3d\x3d cljs.tools.reader.READ_FINISHED)){\r\nreturn cljs.core.persistent_BANG_(a);\r\n} else {\r\nif((form \x3d\x3d\x3d cljs.tools.reader.READ_EOF)){\r\nreturn cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$5(rdr,kind,start_line,start_column,cljs.core.count(a));\r\n} else {\r\nvar G__18160 \x3d cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(a,form);\r\na \x3d G__18160;\r\ncontinue;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Reads and returns a collection ended with delim\r\n */\r\ncljs.tools.reader.read_delimited \x3d (function cljs$tools$reader$read_delimited(kind,delim,rdr,opts,pending_forms){\r\nvar _STAR_read_delim_STAR__orig_val__17309 \x3d cljs.tools.reader._STAR_read_delim_STAR_;\r\nvar _STAR_read_delim_STAR__temp_val__17310 \x3d true;\r\n(cljs.tools.reader._STAR_read_delim_STAR_ \x3d _STAR_read_delim_STAR__temp_val__17310);\r\n\r\ntry{return cljs.tools.reader.read_delimited_internal(kind,delim,rdr,opts,pending_forms);\r\n}finally {(cljs.tools.reader._STAR_read_delim_STAR_ \x3d _STAR_read_delim_STAR__orig_val__17309);\r\n}});\r\n/**\r\n * Read in a list, including its location if the reader is an indexing reader\r\n */\r\ncljs.tools.reader.read_list \x3d (function cljs$tools$reader$read_list(rdr,_,opts,pending_forms){\r\nvar vec__17317 \x3d cljs.tools.reader.starting_line_col_info(rdr);\r\nvar start_line \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17317,(0),null);\r\nvar start_column \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17317,(1),null);\r\nvar the_list \x3d cljs.tools.reader.read_delimited(new cljs.core.Keyword(null,\x22list\x22,\x22list\x22,765357683),\x22)\x22,rdr,opts,pending_forms);\r\nvar vec__17320 \x3d cljs.tools.reader.ending_line_col_info(rdr);\r\nvar end_line \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17320,(0),null);\r\nvar end_column \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17320,(1),null);\r\nreturn cljs.core.with_meta(((cljs.core.empty_QMARK_(the_list))?cljs.core.List.EMPTY:cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.list,the_list)),(cljs.core.truth_(start_line)?cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var temp__5753__auto__ \x3d cljs.tools.reader.reader_types.get_file_name(rdr);\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar file \x3d temp__5753__auto__;\r\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),file], null);\r\n} else {\r\nreturn null;\r\n}\r\n})(),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),start_line,new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),start_column,new cljs.core.Keyword(null,\x22end-line\x22,\x22end-line\x22,1837326455),end_line,new cljs.core.Keyword(null,\x22end-column\x22,\x22end-column\x22,1425389514),end_column], null)], 0)):null));\r\n});\r\n/**\r\n * Read in a vector, including its location if the reader is an indexing reader\r\n */\r\ncljs.tools.reader.read_vector \x3d (function cljs$tools$reader$read_vector(rdr,_,opts,pending_forms){\r\nvar vec__17350 \x3d cljs.tools.reader.starting_line_col_info(rdr);\r\nvar start_line \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17350,(0),null);\r\nvar start_column \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17350,(1),null);\r\nvar the_vector \x3d cljs.tools.reader.read_delimited(new cljs.core.Keyword(null,\x22vector\x22,\x22vector\x22,1902966158),\x22]\x22,rdr,opts,pending_forms);\r\nvar vec__17353 \x3d cljs.tools.reader.ending_line_col_info(rdr);\r\nvar end_line \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17353,(0),null);\r\nvar end_column \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17353,(1),null);\r\nreturn cljs.core.with_meta(the_vector,(cljs.core.truth_(start_line)?cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var temp__5753__auto__ \x3d cljs.tools.reader.reader_types.get_file_name(rdr);\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar file \x3d temp__5753__auto__;\r\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),file], null);\r\n} else {\r\nreturn null;\r\n}\r\n})(),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),start_line,new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),start_column,new cljs.core.Keyword(null,\x22end-line\x22,\x22end-line\x22,1837326455),end_line,new cljs.core.Keyword(null,\x22end-column\x22,\x22end-column\x22,1425389514),end_column], null)], 0)):null));\r\n});\r\n/**\r\n * Read in a map, including its location if the reader is an indexing reader\r\n */\r\ncljs.tools.reader.read_map \x3d (function cljs$tools$reader$read_map(rdr,_,opts,pending_forms){\r\nvar vec__17359 \x3d cljs.tools.reader.starting_line_col_info(rdr);\r\nvar start_line \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17359,(0),null);\r\nvar start_column \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17359,(1),null);\r\nvar the_map \x3d cljs.tools.reader.read_delimited(new cljs.core.Keyword(null,\x22map\x22,\x22map\x22,1371690461),\x22}\x22,rdr,opts,pending_forms);\r\nvar map_count \x3d cljs.core.count(the_map);\r\nvar ks \x3d cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2((2),the_map);\r\nvar key_set \x3d cljs.core.set(ks);\r\nvar vec__17362 \x3d cljs.tools.reader.ending_line_col_info(rdr);\r\nvar end_line \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17362,(0),null);\r\nvar end_column \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17362,(1),null);\r\nif(cljs.core.odd_QMARK_(map_count)){\r\ncljs.tools.reader.impl.errors.throw_odd_map(rdr,start_line,start_column,the_map);\r\n} else {\r\n}\r\n\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(key_set),cljs.core.count(ks))){\r\n} else {\r\ncljs.tools.reader.impl.errors.throw_dup_keys(rdr,new cljs.core.Keyword(null,\x22map\x22,\x22map\x22,1371690461),ks);\r\n}\r\n\r\nreturn cljs.core.with_meta((((map_count \x3c\x3d ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)))?cljs.core.PersistentArrayMap.fromArray(cljs.core.to_array(the_map),true,true):cljs.core.PersistentHashMap.fromArray(cljs.core.to_array(the_map),true)),(cljs.core.truth_(start_line)?cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var temp__5753__auto__ \x3d cljs.tools.reader.reader_types.get_file_name(rdr);\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar file \x3d temp__5753__auto__;\r\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),file], null);\r\n} else {\r\nreturn null;\r\n}\r\n})(),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),start_line,new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),start_column,new cljs.core.Keyword(null,\x22end-line\x22,\x22end-line\x22,1837326455),end_line,new cljs.core.Keyword(null,\x22end-column\x22,\x22end-column\x22,1425389514),end_column], null)], 0)):null));\r\n});\r\ncljs.tools.reader.read_number \x3d (function cljs$tools$reader$read_number(rdr,initch){\r\nvar sb \x3d (function (){var G__17375 \x3d (new goog.string.StringBuffer());\r\nG__17375.append(initch);\r\n\r\nreturn G__17375;\r\n})();\r\nvar ch \x3d rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nwhile(true){\r\nif(cljs.core.truth_((function (){var or__4253__auto__ \x3d cljs.tools.reader.impl.utils.whitespace_QMARK_(ch);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar or__4253__auto____$1 \x3d (cljs.tools.reader.macros.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.macros.cljs$core$IFn$_invoke$arity$1(ch) : cljs.tools.reader.macros.call(null,ch));\r\nif(cljs.core.truth_(or__4253__auto____$1)){\r\nreturn or__4253__auto____$1;\r\n} else {\r\nreturn (ch \x3d\x3d null);\r\n}\r\n}\r\n})())){\r\nvar s \x3d cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);\r\nrdr.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(null,ch);\r\n\r\nvar or__4253__auto__ \x3d cljs.tools.reader.impl.commons.match_number(s);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_invalid_number(rdr,s);\r\n}\r\n} else {\r\nvar G__18188 \x3d (function (){var G__17376 \x3d sb;\r\nG__17376.append(ch);\r\n\r\nreturn G__17376;\r\n})();\r\nvar G__18189 \x3d rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nsb \x3d G__18188;\r\nch \x3d G__18189;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.tools.reader.escape_char \x3d (function cljs$tools$reader$escape_char(sb,rdr){\r\nvar ch \x3d rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nvar G__17377 \x3d ch;\r\nswitch (G__17377) {\r\ncase \x22t\x22:\r\nreturn \x22\\t\x22;\r\n\r\nbreak;\r\ncase \x22r\x22:\r\nreturn \x22\\r\x22;\r\n\r\nbreak;\r\ncase \x22n\x22:\r\nreturn \x22\\n\x22;\r\n\r\nbreak;\r\ncase \x22\\\\\x22:\r\nreturn \x22\\\\\x22;\r\n\r\nbreak;\r\ncase \x22\\\x22\x22:\r\nreturn \x22\\\x22\x22;\r\n\r\nbreak;\r\ncase \x22b\x22:\r\nreturn \x22\\b\x22;\r\n\r\nbreak;\r\ncase \x22f\x22:\r\nreturn \x22\\f\x22;\r\n\r\nbreak;\r\ncase \x22u\x22:\r\nvar ch__$1 \x3d rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nif(((-1) \x3d\x3d\x3d parseInt((ch__$1 | (0)),(16)))){\r\nreturn cljs.tools.reader.impl.errors.throw_invalid_unicode_escape(rdr,ch__$1);\r\n} else {\r\nreturn cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5(rdr,ch__$1,(16),(4),true);\r\n}\r\n\r\nbreak;\r\ndefault:\r\nif(cljs.tools.reader.impl.utils.numeric_QMARK_(ch)){\r\nvar ch__$1 \x3d cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5(rdr,ch,(8),(3),false);\r\nif(((ch__$1 | (0)) \x3e (255))){\r\nreturn cljs.tools.reader.impl.errors.throw_bad_octal_number(rdr);\r\n} else {\r\nreturn ch__$1;\r\n}\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_bad_escape_char(rdr,ch);\r\n}\r\n\r\n}\r\n});\r\ncljs.tools.reader.read_string_STAR_ \x3d (function cljs$tools$reader$read_string_STAR_(reader,_,opts,pending_forms){\r\nvar sb \x3d (new goog.string.StringBuffer());\r\nvar ch \x3d reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nwhile(true){\r\nif((ch \x3d\x3d null)){\r\nreturn cljs.tools.reader.impl.errors.throw_eof_reading.cljs$core$IFn$_invoke$arity$variadic(reader,new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22\\\x22\x22,sb], 0));\r\n} else {\r\nvar G__17416 \x3d ch;\r\nswitch (G__17416) {\r\ncase \x22\\\\\x22:\r\nvar G__18194 \x3d (function (){var G__17417 \x3d sb;\r\nG__17417.append(cljs.tools.reader.escape_char(sb,reader));\r\n\r\nreturn G__17417;\r\n})();\r\nvar G__18195 \x3d reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nsb \x3d G__18194;\r\nch \x3d G__18195;\r\ncontinue;\r\n\r\nbreak;\r\ncase \x22\\\x22\x22:\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);\r\n\r\nbreak;\r\ndefault:\r\nvar G__18196 \x3d (function (){var G__17418 \x3d sb;\r\nG__17418.append(ch);\r\n\r\nreturn G__17418;\r\n})();\r\nvar G__18197 \x3d reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nsb \x3d G__18196;\r\nch \x3d G__18197;\r\ncontinue;\r\n\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.tools.reader.loc_info \x3d (function cljs$tools$reader$loc_info(rdr,line,column){\r\nif((line \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nvar file \x3d cljs.tools.reader.reader_types.get_file_name(rdr);\r\nvar filem \x3d (((file \x3d\x3d null))?null:new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),file], null));\r\nvar vec__17429 \x3d cljs.tools.reader.ending_line_col_info(rdr);\r\nvar end_line \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17429,(0),null);\r\nvar end_column \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17429,(1),null);\r\nvar lcm \x3d new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),line,new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),column,new cljs.core.Keyword(null,\x22end-line\x22,\x22end-line\x22,1837326455),end_line,new cljs.core.Keyword(null,\x22end-column\x22,\x22end-column\x22,1425389514),end_column], null);\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([filem,lcm], 0));\r\n}\r\n});\r\ncljs.tools.reader.read_symbol \x3d (function cljs$tools$reader$read_symbol(rdr,initch){\r\nvar vec__17438 \x3d cljs.tools.reader.starting_line_col_info(rdr);\r\nvar line \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17438,(0),null);\r\nvar column \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17438,(1),null);\r\nvar token \x3d cljs.tools.reader.read_token(rdr,new cljs.core.Keyword(null,\x22symbol\x22,\x22symbol\x22,-1038572696),initch);\r\nif((token \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nvar G__17442 \x3d token;\r\nswitch (G__17442) {\r\ncase \x22nil\x22:\r\nreturn null;\r\n\r\nbreak;\r\ncase \x22true\x22:\r\nreturn true;\r\n\r\nbreak;\r\ncase \x22false\x22:\r\nreturn false;\r\n\r\nbreak;\r\ncase \x22/\x22:\r\nreturn new cljs.core.Symbol(null,\x22/\x22,\x22/\x22,-1371932971,null);\r\n\r\nbreak;\r\ndefault:\r\nvar p \x3d cljs.tools.reader.impl.commons.parse_symbol(token);\r\nif((!((p \x3d\x3d null)))){\r\nvar sym \x3d cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(p.cljs$core$IIndexed$_nth$arity$2(null,(0)),p.cljs$core$IIndexed$_nth$arity$2(null,(1)));\r\nreturn sym.cljs$core$IWithMeta$_with_meta$arity$2(null,cljs.tools.reader.loc_info(rdr,line,column));\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_invalid(rdr,new cljs.core.Keyword(null,\x22symbol\x22,\x22symbol\x22,-1038572696),token);\r\n}\r\n\r\n}\r\n}\r\n});\r\n/**\r\n * Map from ns alias to ns, if non-nil, it will be used to resolve read-time\r\n * ns aliases.\r\n * \r\n * Defaults to nil\r\n */\r\ncljs.tools.reader._STAR_alias_map_STAR_ \x3d null;\r\ncljs.tools.reader.resolve_alias \x3d (function cljs$tools$reader$resolve_alias(sym){\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.tools.reader._STAR_alias_map_STAR_,sym);\r\n});\r\ncljs.tools.reader.resolve_ns \x3d (function cljs$tools$reader$resolve_ns(sym){\r\nvar or__4253__auto__ \x3d cljs.tools.reader.resolve_alias(sym);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar temp__5753__auto__ \x3d cljs.core.find_ns(sym);\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar ns \x3d temp__5753__auto__;\r\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.ns_name(ns));\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n});\r\ncljs.tools.reader.read_keyword \x3d (function cljs$tools$reader$read_keyword(reader,initch,opts,pending_forms){\r\nvar ch \x3d reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nif((!(cljs.tools.reader.impl.utils.whitespace_QMARK_(ch)))){\r\nvar token \x3d cljs.tools.reader.read_token(reader,new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),ch);\r\nvar s \x3d cljs.tools.reader.impl.commons.parse_symbol(token);\r\nif((!((s \x3d\x3d null)))){\r\nvar ns \x3d s.cljs$core$IIndexed$_nth$arity$2(null,(0));\r\nvar name \x3d s.cljs$core$IIndexed$_nth$arity$2(null,(1));\r\nif((\x22:\x22 \x3d\x3d\x3d token.charAt((0)))){\r\nif((!((ns \x3d\x3d null)))){\r\nvar temp__5751__auto__ \x3d cljs.tools.reader.resolve_alias(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(ns,(1))));\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar ns__$1 \x3d temp__5751__auto__;\r\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1),name);\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_invalid(reader,new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),[\x22:\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(token)].join(\x27\x27));\r\n}\r\n} else {\r\nvar temp__5751__auto__ \x3d cljs.core._STAR_ns_STAR_;\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar ns__$1 \x3d temp__5751__auto__;\r\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(name,(1)));\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid token: :\x22,token], 0));\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(ns,name);\r\n}\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_invalid(reader,new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),[\x22:\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(token)].join(\x27\x27));\r\n}\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_single_colon(reader);\r\n}\r\n});\r\n/**\r\n * Returns a function which wraps a reader in a call to sym\r\n */\r\ncljs.tools.reader.wrapping_reader \x3d (function cljs$tools$reader$wrapping_reader(sym){\r\nreturn (function (rdr,_,opts,pending_forms){\r\nreturn (new cljs.core.List(null,sym,(new cljs.core.List(null,(cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr,true,null,opts,pending_forms) : cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms)),null,(1),null)),(2),null));\r\n});\r\n});\r\n/**\r\n * Read metadata and return the following object with the metadata applied\r\n */\r\ncljs.tools.reader.read_meta \x3d (function cljs$tools$reader$read_meta(rdr,_,opts,pending_forms){\r\nif(((cljs.tools.reader.reader_types.source_logging_reader_QMARK_(rdr)) \x26\x26 ((!(cljs.tools.reader.impl.utils.whitespace_QMARK_(cljs.tools.reader.reader_types.peek_char(rdr))))))){\r\nreturn cljs.tools.reader.reader_types.log_source_STAR_(rdr,(function (){\r\nvar vec__17499 \x3d cljs.tools.reader.starting_line_col_info(rdr);\r\nvar line \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17499,(0),null);\r\nvar column \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17499,(1),null);\r\nvar m \x3d cljs.tools.reader.impl.utils.desugar_meta((cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr,true,null,opts,pending_forms) : cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms)));\r\nif(cljs.core.map_QMARK_(m)){\r\n} else {\r\ncljs.tools.reader.impl.errors.throw_bad_metadata(rdr,m);\r\n}\r\n\r\nvar o \x3d (cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr,true,null,opts,pending_forms) : cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms));\r\nif((((!((o \x3d\x3d null))))?(((((o.cljs$lang$protocol_mask$partition0$ \x26 (131072))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d o.cljs$core$IMeta$))))?true:false):false)){\r\nvar m__$1 \x3d (cljs.core.truth_((function (){var and__4251__auto__ \x3d line;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn cljs.core.seq_QMARK_(o);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())?cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(m,new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),line,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),column], 0)):m);\r\nif((((!((o \x3d\x3d null))))?(((((o.cljs$lang$protocol_mask$partition0$ \x26 (262144))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d o.cljs$core$IWithMeta$))))?true:false):false)){\r\nreturn cljs.core.with_meta(o,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.meta(o),m__$1], 0)));\r\n} else {\r\nreturn cljs.core.reset_meta_BANG_(o,m__$1);\r\n}\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_bad_metadata_target(rdr,o);\r\n}\r\n}));\r\n} else {\r\nvar vec__17539 \x3d cljs.tools.reader.starting_line_col_info(rdr);\r\nvar line \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17539,(0),null);\r\nvar column \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17539,(1),null);\r\nvar m \x3d cljs.tools.reader.impl.utils.desugar_meta((cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr,true,null,opts,pending_forms) : cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms)));\r\nif(cljs.core.map_QMARK_(m)){\r\n} else {\r\ncljs.tools.reader.impl.errors.throw_bad_metadata(rdr,m);\r\n}\r\n\r\nvar o \x3d (cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr,true,null,opts,pending_forms) : cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms));\r\nif((((!((o \x3d\x3d null))))?(((((o.cljs$lang$protocol_mask$partition0$ \x26 (131072))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d o.cljs$core$IMeta$))))?true:false):false)){\r\nvar m__$1 \x3d (cljs.core.truth_((function (){var and__4251__auto__ \x3d line;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn cljs.core.seq_QMARK_(o);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())?cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(m,new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),line,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),column], 0)):m);\r\nif((((!((o \x3d\x3d null))))?(((((o.cljs$lang$protocol_mask$partition0$ \x26 (262144))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d o.cljs$core$IWithMeta$))))?true:false):false)){\r\nreturn cljs.core.with_meta(o,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.meta(o),m__$1], 0)));\r\n} else {\r\nreturn cljs.core.reset_meta_BANG_(o,m__$1);\r\n}\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_bad_metadata_target(rdr,o);\r\n}\r\n}\r\n});\r\ncljs.tools.reader.read_set \x3d (function cljs$tools$reader$read_set(rdr,_,opts,pending_forms){\r\nvar vec__17568 \x3d cljs.tools.reader.starting_line_col_info(rdr);\r\nvar start_line \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17568,(0),null);\r\nvar start_column \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17568,(1),null);\r\nvar start_column__$1 \x3d (cljs.core.truth_(start_column)?((start_column - (1)) | (0)):null);\r\nvar coll \x3d cljs.tools.reader.read_delimited(new cljs.core.Keyword(null,\x22set\x22,\x22set\x22,304602554),\x22}\x22,rdr,opts,pending_forms);\r\nvar the_set \x3d cljs.core.set(coll);\r\nvar vec__17572 \x3d cljs.tools.reader.ending_line_col_info(rdr);\r\nvar end_line \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17572,(0),null);\r\nvar end_column \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17572,(1),null);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(coll),cljs.core.count(the_set))){\r\n} else {\r\ncljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.tools.reader.impl.errors.throw_dup_keys(rdr,new cljs.core.Keyword(null,\x22set\x22,\x22set\x22,304602554),coll)], 0));\r\n}\r\n\r\nreturn cljs.core.with_meta(the_set,(cljs.core.truth_(start_line)?cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var temp__5753__auto__ \x3d cljs.tools.reader.reader_types.get_file_name(rdr);\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar file \x3d temp__5753__auto__;\r\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),file], null);\r\n} else {\r\nreturn null;\r\n}\r\n})(),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),start_line,new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),start_column__$1,new cljs.core.Keyword(null,\x22end-line\x22,\x22end-line\x22,1837326455),end_line,new cljs.core.Keyword(null,\x22end-column\x22,\x22end-column\x22,1425389514),end_column], null)], 0)):null));\r\n});\r\n/**\r\n * Read and discard the first object from rdr\r\n */\r\ncljs.tools.reader.read_discard \x3d (function cljs$tools$reader$read_discard(rdr,_,opts,pending_forms){\r\nvar G__17600 \x3d rdr;\r\n(cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(G__17600,true,null,opts,pending_forms) : cljs.tools.reader.read_STAR_.call(null,G__17600,true,null,opts,pending_forms));\r\n\r\nreturn G__17600;\r\n});\r\ncljs.tools.reader.read_symbolic_value \x3d (function cljs$tools$reader$read_symbolic_value(rdr,_,opts,pending_forms){\r\nvar sym \x3d (cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr,true,null,opts,pending_forms) : cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms));\r\nvar G__17602 \x3d sym;\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\x22NaN\x22,\x22NaN\x22,666918153,null),G__17602)){\r\nreturn Number.NaN;\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\x22-Inf\x22,\x22-Inf\x22,-2123243689,null),G__17602)){\r\nreturn Number.NEGATIVE_INFINITY;\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\x22Inf\x22,\x22Inf\x22,647172781,null),G__17602)){\r\nreturn Number.POSITIVE_INFINITY;\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\x22Invalid token: ##\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)].join(\x27\x27)], 0));\r\n\r\n}\r\n}\r\n}\r\n});\r\ncljs.tools.reader.RESERVED_FEATURES \x3d new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146),null,new cljs.core.Keyword(null,\x22none\x22,\x22none\x22,1333468478),null], null), null);\r\ncljs.tools.reader.has_feature_QMARK_ \x3d (function cljs$tools$reader$has_feature_QMARK_(rdr,feature,opts){\r\nif((feature instanceof cljs.core.Keyword)){\r\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),feature)) || (cljs.core.contains_QMARK_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,\x22features\x22,\x22features\x22,-1146962336)),feature)));\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Feature should be a keyword: \x22,feature], 0));\r\n}\r\n});\r\ncljs.tools.reader.check_eof_error \x3d (function cljs$tools$reader$check_eof_error(form,rdr,first_line){\r\nif((form \x3d\x3d\x3d cljs.tools.reader.READ_EOF)){\r\nreturn cljs.tools.reader.impl.errors.throw_eof_error(rdr,(function (){var and__4251__auto__ \x3d (first_line \x3c (0));\r\nif(and__4251__auto__){\r\nreturn first_line;\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})());\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ncljs.tools.reader.check_reserved_features \x3d (function cljs$tools$reader$check_reserved_features(rdr,form){\r\nif(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.tools.reader.RESERVED_FEATURES,form))){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Feature name \x22,form,\x22 is reserved\x22], 0));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ncljs.tools.reader.check_invalid_read_cond \x3d (function cljs$tools$reader$check_invalid_read_cond(form,rdr,first_line){\r\nif((form \x3d\x3d\x3d cljs.tools.reader.READ_FINISHED)){\r\nif((first_line \x3c (0))){\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22read-cond requires an even number of forms\x22], 0));\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22read-cond starting on line \x22,first_line,\x22 requires an even number of forms\x22], 0));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n/**\r\n * Read next form and suppress. Return nil or READ_FINISHED.\r\n */\r\ncljs.tools.reader.read_suppress \x3d (function cljs$tools$reader$read_suppress(first_line,rdr,opts,pending_forms){\r\nvar _STAR_suppress_read_STAR__orig_val__17641 \x3d cljs.tools.reader._STAR_suppress_read_STAR_;\r\nvar _STAR_suppress_read_STAR__temp_val__17642 \x3d true;\r\n(cljs.tools.reader._STAR_suppress_read_STAR_ \x3d _STAR_suppress_read_STAR__temp_val__17642);\r\n\r\ntry{var form \x3d (function (){var G__17648 \x3d rdr;\r\nvar G__17649 \x3d false;\r\nvar G__17650 \x3d cljs.tools.reader.READ_EOF;\r\nvar G__17651 \x3d \x22)\x22;\r\nvar G__17652 \x3d opts;\r\nvar G__17653 \x3d pending_forms;\r\nreturn (cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(G__17648,G__17649,G__17650,G__17651,G__17652,G__17653) : cljs.tools.reader.read_STAR_.call(null,G__17648,G__17649,G__17650,G__17651,G__17652,G__17653));\r\n})();\r\ncljs.tools.reader.check_eof_error(form,rdr,first_line);\r\n\r\nif((form \x3d\x3d\x3d cljs.tools.reader.READ_FINISHED)){\r\nreturn cljs.tools.reader.READ_FINISHED;\r\n} else {\r\nreturn null;\r\n}\r\n}finally {(cljs.tools.reader._STAR_suppress_read_STAR_ \x3d _STAR_suppress_read_STAR__orig_val__17641);\r\n}});\r\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.tools !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.tools.reader !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.tools.reader.NO_MATCH !\x3d\x3d \x27undefined\x27)){\r\n} else {\r\ncljs.tools.reader.NO_MATCH \x3d (new Object());\r\n}\r\n/**\r\n * Read next feature. If matched, read next form and return.\r\n * Otherwise, read and skip next form, returning READ_FINISHED or nil.\r\n */\r\ncljs.tools.reader.match_feature \x3d (function cljs$tools$reader$match_feature(first_line,rdr,opts,pending_forms){\r\nvar feature \x3d (function (){var G__17675 \x3d rdr;\r\nvar G__17676 \x3d false;\r\nvar G__17677 \x3d cljs.tools.reader.READ_EOF;\r\nvar G__17678 \x3d \x22)\x22;\r\nvar G__17679 \x3d opts;\r\nvar G__17680 \x3d pending_forms;\r\nreturn (cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(G__17675,G__17676,G__17677,G__17678,G__17679,G__17680) : cljs.tools.reader.read_STAR_.call(null,G__17675,G__17676,G__17677,G__17678,G__17679,G__17680));\r\n})();\r\ncljs.tools.reader.check_eof_error(feature,rdr,first_line);\r\n\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(feature,cljs.tools.reader.READ_FINISHED)){\r\nreturn cljs.tools.reader.READ_FINISHED;\r\n} else {\r\ncljs.tools.reader.check_reserved_features(rdr,feature);\r\n\r\nif(cljs.tools.reader.has_feature_QMARK_(rdr,feature,opts)){\r\nvar G__17688 \x3d (function (){var G__17689 \x3d rdr;\r\nvar G__17690 \x3d false;\r\nvar G__17691 \x3d cljs.tools.reader.READ_EOF;\r\nvar G__17692 \x3d \x22)\x22;\r\nvar G__17693 \x3d opts;\r\nvar G__17694 \x3d pending_forms;\r\nreturn (cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(G__17689,G__17690,G__17691,G__17692,G__17693,G__17694) : cljs.tools.reader.read_STAR_.call(null,G__17689,G__17690,G__17691,G__17692,G__17693,G__17694));\r\n})();\r\ncljs.tools.reader.check_eof_error(G__17688,rdr,first_line);\r\n\r\ncljs.tools.reader.check_invalid_read_cond(G__17688,rdr,first_line);\r\n\r\nreturn G__17688;\r\n} else {\r\nvar or__4253__auto__ \x3d cljs.tools.reader.read_suppress(first_line,rdr,opts,pending_forms);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.tools.reader.NO_MATCH;\r\n}\r\n}\r\n}\r\n});\r\ncljs.tools.reader.read_cond_delimited \x3d (function cljs$tools$reader$read_cond_delimited(rdr,splicing,opts,pending_forms){\r\nvar first_line \x3d ((cljs.tools.reader.reader_types.indexing_reader_QMARK_(rdr))?cljs.tools.reader.reader_types.get_line_number(rdr):(-1));\r\nvar result \x3d (function (){var matched \x3d cljs.tools.reader.NO_MATCH;\r\nvar finished \x3d null;\r\nwhile(true){\r\nif((matched \x3d\x3d\x3d cljs.tools.reader.NO_MATCH)){\r\nvar match \x3d cljs.tools.reader.match_feature(first_line,rdr,opts,pending_forms);\r\nif((match \x3d\x3d\x3d cljs.tools.reader.READ_FINISHED)){\r\nreturn cljs.tools.reader.READ_FINISHED;\r\n} else {\r\nvar G__18306 \x3d match;\r\nvar G__18307 \x3d null;\r\nmatched \x3d G__18306;\r\nfinished \x3d G__18307;\r\ncontinue;\r\n}\r\n} else {\r\nif((!((finished \x3d\x3d\x3d cljs.tools.reader.READ_FINISHED)))){\r\nvar G__18308 \x3d matched;\r\nvar G__18309 \x3d cljs.tools.reader.read_suppress(first_line,rdr,opts,pending_forms);\r\nmatched \x3d G__18308;\r\nfinished \x3d G__18309;\r\ncontinue;\r\n} else {\r\nreturn matched;\r\n\r\n}\r\n}\r\nbreak;\r\n}\r\n})();\r\nif((result \x3d\x3d\x3d cljs.tools.reader.READ_FINISHED)){\r\nreturn rdr;\r\n} else {\r\nif(cljs.core.truth_(splicing)){\r\nif((((!((result \x3d\x3d null))))?(((((result.cljs$lang$protocol_mask$partition0$ \x26 (16777216))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d result.cljs$core$ISequential$))))?true:false):false)){\r\ncljs.tools.reader.goog$module$goog$array.insertArrayAt(pending_forms,cljs.core.to_array(result),(0));\r\n\r\nreturn rdr;\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Spliced form list in read-cond-splicing must implement ISequential\x22], 0));\r\n}\r\n} else {\r\nreturn result;\r\n}\r\n}\r\n});\r\ncljs.tools.reader.read_cond \x3d (function cljs$tools$reader$read_cond(rdr,_,opts,pending_forms){\r\nif(cljs.core.not((function (){var and__4251__auto__ \x3d opts;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nvar G__17766 \x3d new cljs.core.Keyword(null,\x22read-cond\x22,\x22read-cond\x22,1056899244).cljs$core$IFn$_invoke$arity$1(opts);\r\nvar fexpr__17765 \x3d new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22preserve\x22,\x22preserve\x22,1276846509),null,new cljs.core.Keyword(null,\x22allow\x22,\x22allow\x22,-1857325745),null], null), null);\r\nreturn (fexpr__17765.cljs$core$IFn$_invoke$arity$1 ? fexpr__17765.cljs$core$IFn$_invoke$arity$1(G__17766) : fexpr__17765.call(null,G__17766));\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\x22Conditional read not allowed\x22,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),new cljs.core.Keyword(null,\x22runtime-exception\x22,\x22runtime-exception\x22,-1495664514)], null));\r\n} else {\r\n}\r\n\r\nvar temp__5751__auto__ \x3d rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar ch \x3d temp__5751__auto__;\r\nvar splicing \x3d cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ch,\x22@\x22);\r\nvar ch__$1 \x3d ((splicing)?rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null):ch);\r\nif(splicing){\r\nif(cljs.core.truth_(cljs.tools.reader._STAR_read_delim_STAR_)){\r\n} else {\r\ncljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22cond-splice not in list\x22], 0));\r\n}\r\n} else {\r\n}\r\n\r\nvar temp__5751__auto____$1 \x3d ((cljs.tools.reader.impl.utils.whitespace_QMARK_(ch__$1))?cljs.tools.reader.impl.commons.read_past(cljs.tools.reader.impl.utils.whitespace_QMARK_,rdr):ch__$1);\r\nif(cljs.core.truth_(temp__5751__auto____$1)){\r\nvar ch__$2 \x3d temp__5751__auto____$1;\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(ch__$2,\x22(\x22)){\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\x22read-cond body must be a list\x22,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),new cljs.core.Keyword(null,\x22runtime-exception\x22,\x22runtime-exception\x22,-1495664514)], null));\r\n} else {\r\nvar _STAR_suppress_read_STAR__orig_val__17777 \x3d cljs.tools.reader._STAR_suppress_read_STAR_;\r\nvar _STAR_suppress_read_STAR__temp_val__17779 \x3d (function (){var or__4253__auto__ \x3d cljs.tools.reader._STAR_suppress_read_STAR_;\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22preserve\x22,\x22preserve\x22,1276846509),new cljs.core.Keyword(null,\x22read-cond\x22,\x22read-cond\x22,1056899244).cljs$core$IFn$_invoke$arity$1(opts));\r\n}\r\n})();\r\n(cljs.tools.reader._STAR_suppress_read_STAR_ \x3d _STAR_suppress_read_STAR__temp_val__17779);\r\n\r\ntry{if(cljs.core.truth_(cljs.tools.reader._STAR_suppress_read_STAR_)){\r\nreturn cljs.tools.reader.impl.utils.reader_conditional(cljs.tools.reader.read_list(rdr,ch__$2,opts,pending_forms),splicing);\r\n} else {\r\nreturn cljs.tools.reader.read_cond_delimited(rdr,splicing,opts,pending_forms);\r\n}\r\n}finally {(cljs.tools.reader._STAR_suppress_read_STAR_ \x3d _STAR_suppress_read_STAR__orig_val__17777);\r\n}}\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_eof_in_character(rdr);\r\n}\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_eof_in_character(rdr);\r\n}\r\n});\r\ncljs.tools.reader.arg_env \x3d null;\r\n/**\r\n * Get a symbol for an anonymous ?argument?\r\n */\r\ncljs.tools.reader.garg \x3d (function cljs$tools$reader$garg(n){\r\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([((((-1) \x3d\x3d\x3d n))?\x22rest\x22:[\x22p\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join(\x27\x27)),\x22__\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.tools.reader.impl.utils.next_id()),\x22#\x22].join(\x27\x27));\r\n});\r\ncljs.tools.reader.read_fn \x3d (function cljs$tools$reader$read_fn(rdr,_,opts,pending_forms){\r\nif(cljs.core.truth_(cljs.tools.reader.arg_env)){\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\x22Nested #()s are not allowed\x22,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),new cljs.core.Keyword(null,\x22illegal-state\x22,\x22illegal-state\x22,-1519851182)], null));\r\n} else {\r\n}\r\n\r\nvar arg_env_orig_val__17813 \x3d cljs.tools.reader.arg_env;\r\nvar arg_env_temp_val__17814 \x3d cljs.core.sorted_map();\r\n(cljs.tools.reader.arg_env \x3d arg_env_temp_val__17814);\r\n\r\ntry{var form \x3d (function (){var G__17819 \x3d (function (){var G__17824 \x3d rdr;\r\ncljs.tools.reader.reader_types.unread(G__17824,\x22(\x22);\r\n\r\nreturn G__17824;\r\n})();\r\nvar G__17820 \x3d true;\r\nvar G__17821 \x3d null;\r\nvar G__17822 \x3d opts;\r\nvar G__17823 \x3d pending_forms;\r\nreturn (cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(G__17819,G__17820,G__17821,G__17822,G__17823) : cljs.tools.reader.read_STAR_.call(null,G__17819,G__17820,G__17821,G__17822,G__17823));\r\n})();\r\nvar rargs \x3d cljs.core.rseq(cljs.tools.reader.arg_env);\r\nvar args \x3d ((rargs)?(function (){var higharg \x3d cljs.core.key(cljs.core.first(rargs));\r\nvar args \x3d (function (){var i \x3d (1);\r\nvar args \x3d cljs.core.transient$(cljs.core.PersistentVector.EMPTY);\r\nwhile(true){\r\nif((i \x3e higharg)){\r\nreturn cljs.core.persistent_BANG_(args);\r\n} else {\r\nvar G__18332 \x3d (i + (1));\r\nvar G__18333 \x3d cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(args,(function (){var or__4253__auto__ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.tools.reader.arg_env,i);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.tools.reader.garg(i);\r\n}\r\n})());\r\ni \x3d G__18332;\r\nargs \x3d G__18333;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n})();\r\nvar args__$1 \x3d (cljs.core.truth_(cljs.tools.reader.arg_env.call(null,(-1)))?cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(args,new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.tools.reader.arg_env.call(null,(-1))], 0)):args);\r\nreturn args__$1;\r\n})():cljs.core.PersistentVector.EMPTY);\r\nreturn (new cljs.core.List(null,new cljs.core.Symbol(null,\x22fn*\x22,\x22fn*\x22,-752876845,null),(new cljs.core.List(null,args,(new cljs.core.List(null,form,null,(1),null)),(2),null)),(3),null));\r\n}finally {(cljs.tools.reader.arg_env \x3d arg_env_orig_val__17813);\r\n}});\r\n/**\r\n * Registers an argument to the arg-env\r\n */\r\ncljs.tools.reader.register_arg \x3d (function cljs$tools$reader$register_arg(n){\r\nif(cljs.core.truth_(cljs.tools.reader.arg_env)){\r\nvar temp__5751__auto__ \x3d cljs.tools.reader.arg_env.call(null,n);\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar ret \x3d temp__5751__auto__;\r\nreturn ret;\r\n} else {\r\nvar g \x3d cljs.tools.reader.garg(n);\r\n(cljs.tools.reader.arg_env \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.tools.reader.arg_env,n,g));\r\n\r\nreturn g;\r\n}\r\n} else {\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\x22Arg literal not in #()\x22,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),new cljs.core.Keyword(null,\x22illegal-state\x22,\x22illegal-state\x22,-1519851182)], null));\r\n}\r\n});\r\ncljs.tools.reader.read_arg \x3d (function cljs$tools$reader$read_arg(rdr,pct,opts,pending_forms){\r\nif((cljs.tools.reader.arg_env \x3d\x3d null)){\r\nreturn cljs.tools.reader.read_symbol(rdr,pct);\r\n} else {\r\nvar ch \x3d rdr.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null);\r\nif(((cljs.tools.reader.impl.utils.whitespace_QMARK_(ch)) || (((cljs.tools.reader.macro_terminating_QMARK_(ch)) || ((ch \x3d\x3d null)))))){\r\nreturn cljs.tools.reader.register_arg((1));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ch,\x22\x26\x22)){\r\nrdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\n\r\nreturn cljs.tools.reader.register_arg((-1));\r\n} else {\r\nvar n \x3d (cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr,true,null,opts,pending_forms) : cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms));\r\nif((!(cljs.core.integer_QMARK_(n)))){\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\x22Arg literal must be %, %\x26 or %integer\x22,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),new cljs.core.Keyword(null,\x22illegal-state\x22,\x22illegal-state\x22,-1519851182)], null));\r\n} else {\r\nreturn cljs.tools.reader.register_arg(n);\r\n}\r\n\r\n}\r\n}\r\n}\r\n});\r\ncljs.tools.reader.gensym_env \x3d null;\r\ncljs.tools.reader.read_unquote \x3d (function cljs$tools$reader$read_unquote(rdr,comma,opts,pending_forms){\r\nvar temp__5751__auto__ \x3d rdr.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null);\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar ch \x3d temp__5751__auto__;\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22@\x22,ch)){\r\nreturn cljs.tools.reader.wrapping_reader(new cljs.core.Symbol(\x22clojure.core\x22,\x22unquote-splicing\x22,\x22clojure.core/unquote-splicing\x22,-552003150,null))((function (){var G__17899 \x3d rdr;\r\nG__17899.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\n\r\nreturn G__17899;\r\n})(),\x22@\x22,opts,pending_forms);\r\n} else {\r\nreturn cljs.tools.reader.wrapping_reader(new cljs.core.Symbol(\x22clojure.core\x22,\x22unquote\x22,\x22clojure.core/unquote\x22,843087510,null))(rdr,\x22~\x22,opts,pending_forms);\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ncljs.tools.reader.unquote_splicing_QMARK_ \x3d (function cljs$tools$reader$unquote_splicing_QMARK_(form){\r\nreturn ((cljs.core.seq_QMARK_(form)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(form),new cljs.core.Symbol(\x22clojure.core\x22,\x22unquote-splicing\x22,\x22clojure.core/unquote-splicing\x22,-552003150,null))));\r\n});\r\ncljs.tools.reader.unquote_QMARK_ \x3d (function cljs$tools$reader$unquote_QMARK_(form){\r\nreturn ((cljs.core.seq_QMARK_(form)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(form),new cljs.core.Symbol(\x22clojure.core\x22,\x22unquote\x22,\x22clojure.core/unquote\x22,843087510,null))));\r\n});\r\n/**\r\n * Expand a list by resolving its syntax quotes and unquotes\r\n */\r\ncljs.tools.reader.expand_list \x3d (function cljs$tools$reader$expand_list(s){\r\nvar s__$1 \x3d cljs.core.seq(s);\r\nvar r \x3d cljs.core.transient$(cljs.core.PersistentVector.EMPTY);\r\nwhile(true){\r\nif(s__$1){\r\nvar item \x3d cljs.core.first(s__$1);\r\nvar ret \x3d cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(r,((cljs.tools.reader.unquote_QMARK_(item))?(new cljs.core.List(null,new cljs.core.Symbol(\x22clojure.core\x22,\x22list\x22,\x22clojure.core/list\x22,-1119203325,null),(new cljs.core.List(null,cljs.core.second(item),null,(1),null)),(2),null)):((cljs.tools.reader.unquote_splicing_QMARK_(item))?cljs.core.second(item):(new cljs.core.List(null,new cljs.core.Symbol(\x22clojure.core\x22,\x22list\x22,\x22clojure.core/list\x22,-1119203325,null),(new cljs.core.List(null,(cljs.tools.reader.syntax_quote_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.syntax_quote_STAR_.cljs$core$IFn$_invoke$arity$1(item) : cljs.tools.reader.syntax_quote_STAR_.call(null,item)),null,(1),null)),(2),null))\r\n)));\r\nvar G__18350 \x3d cljs.core.next(s__$1);\r\nvar G__18351 \x3d ret;\r\ns__$1 \x3d G__18350;\r\nr \x3d G__18351;\r\ncontinue;\r\n} else {\r\nreturn cljs.core.seq(cljs.core.persistent_BANG_(r));\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Flatten a map into a seq of alternate keys and values\r\n */\r\ncljs.tools.reader.flatten_map \x3d (function cljs$tools$reader$flatten_map(form){\r\nvar s \x3d cljs.core.seq(form);\r\nvar key_vals \x3d cljs.core.transient$(cljs.core.PersistentVector.EMPTY);\r\nwhile(true){\r\nif(s){\r\nvar e \x3d cljs.core.first(s);\r\nvar G__18354 \x3d cljs.core.next(s);\r\nvar G__18355 \x3d cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(key_vals,cljs.core.key(e)),cljs.core.val(e));\r\ns \x3d G__18354;\r\nkey_vals \x3d G__18355;\r\ncontinue;\r\n} else {\r\nreturn cljs.core.seq(cljs.core.persistent_BANG_(key_vals));\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.tools.reader.register_gensym \x3d (function cljs$tools$reader$register_gensym(sym){\r\nif(cljs.core.not(cljs.tools.reader.gensym_env)){\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\x22Gensym literal not in syntax-quote\x22,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),new cljs.core.Keyword(null,\x22illegal-state\x22,\x22illegal-state\x22,-1519851182)], null));\r\n} else {\r\n}\r\n\r\nvar or__4253__auto__ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.tools.reader.gensym_env,sym);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar gs \x3d cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.subs.cljs$core$IFn$_invoke$arity$3(cljs.core.name(sym),(0),(((cljs.core.name(sym)).length) - (1))),\x22__\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.tools.reader.impl.utils.next_id()),\x22__auto__\x22].join(\x27\x27));\r\n(cljs.tools.reader.gensym_env \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.tools.reader.gensym_env,sym,gs));\r\n\r\nreturn gs;\r\n}\r\n});\r\ncljs.tools.reader.add_meta \x3d (function cljs$tools$reader$add_meta(form,ret){\r\nif((function (){var and__4251__auto__ \x3d (((!((form \x3d\x3d null))))?(((((form.cljs$lang$protocol_mask$partition0$ \x26 (262144))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d form.cljs$core$IWithMeta$))))?true:false):false);\r\nif(and__4251__auto__){\r\nreturn cljs.core.seq(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(cljs.core.meta(form),new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),new cljs.core.Keyword(null,\x22end-line\x22,\x22end-line\x22,1837326455),new cljs.core.Keyword(null,\x22end-column\x22,\x22end-column\x22,1425389514),new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),new cljs.core.Keyword(null,\x22source\x22,\x22source\x22,-433931539)], 0)));\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})()){\r\nreturn (new cljs.core.List(null,new cljs.core.Symbol(\x22cljs.core\x22,\x22with-meta\x22,\x22cljs.core/with-meta\x22,749126446,null),(new cljs.core.List(null,ret,(new cljs.core.List(null,(function (){var G__17933 \x3d cljs.core.meta(form);\r\nreturn (cljs.tools.reader.syntax_quote_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.syntax_quote_STAR_.cljs$core$IFn$_invoke$arity$1(G__17933) : cljs.tools.reader.syntax_quote_STAR_.call(null,G__17933));\r\n})(),null,(1),null)),(2),null)),(3),null));\r\n} else {\r\nreturn ret;\r\n}\r\n});\r\ncljs.tools.reader.syntax_quote_coll \x3d (function cljs$tools$reader$syntax_quote_coll(type,coll){\r\nvar res \x3d (new cljs.core.List(null,new cljs.core.Symbol(\x22cljs.core\x22,\x22sequence\x22,\x22cljs.core/sequence\x22,1908459032,null),(new cljs.core.List(null,cljs.core.cons(new cljs.core.Symbol(\x22cljs.core\x22,\x22concat\x22,\x22cljs.core/concat\x22,-1133584918,null),cljs.tools.reader.expand_list(coll)),null,(1),null)),(2),null));\r\nif(cljs.core.truth_(type)){\r\nreturn (new cljs.core.List(null,new cljs.core.Symbol(\x22cljs.core\x22,\x22apply\x22,\x22cljs.core/apply\x22,1757277831,null),(new cljs.core.List(null,type,(new cljs.core.List(null,res,null,(1),null)),(2),null)),(3),null));\r\n} else {\r\nreturn res;\r\n}\r\n});\r\n/**\r\n * Decide which map type to use, array-map if less than 16 elements\r\n */\r\ncljs.tools.reader.map_func \x3d (function cljs$tools$reader$map_func(coll){\r\nif((cljs.core.count(coll) \x3e\x3d (16))){\r\nreturn new cljs.core.Symbol(\x22cljs.core\x22,\x22hash-map\x22,\x22cljs.core/hash-map\x22,303385767,null);\r\n} else {\r\nreturn new cljs.core.Symbol(\x22cljs.core\x22,\x22array-map\x22,\x22cljs.core/array-map\x22,-1519210683,null);\r\n}\r\n});\r\ncljs.tools.reader.bool_QMARK_ \x3d (function cljs$tools$reader$bool_QMARK_(x){\r\nreturn (((x instanceof Boolean)) || (((x \x3d\x3d\x3d true) || (x \x3d\x3d\x3d false))));\r\n});\r\n/**\r\n * Resolve a symbol s into its fully qualified namespace version\r\n */\r\ncljs.tools.reader.resolve_symbol \x3d (function cljs$tools$reader$resolve_symbol(s){\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\x22resolve-symbol is not implemented\x22,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22sym\x22,\x22sym\x22,-1444860305),s], null));\r\n});\r\ncljs.tools.reader.syntax_quote_STAR_ \x3d (function cljs$tools$reader$syntax_quote_STAR_(form){\r\nreturn cljs.tools.reader.add_meta(form,((cljs.core.special_symbol_QMARK_(form))?(new cljs.core.List(null,new cljs.core.Symbol(null,\x22quote\x22,\x22quote\x22,1377916282,null),(new cljs.core.List(null,form,null,(1),null)),(2),null)):(((form instanceof cljs.core.Symbol))?(new cljs.core.List(null,new cljs.core.Symbol(null,\x22quote\x22,\x22quote\x22,1377916282,null),(new cljs.core.List(null,(cljs.core.truth_((function (){var and__4251__auto__ \x3d cljs.core.not(cljs.core.namespace(form));\r\nif(and__4251__auto__){\r\nreturn goog.string.endsWith(cljs.core.name(form),\x22#\x22);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())?cljs.tools.reader.register_gensym(form):(function (){var sym \x3d cljs.core.str.cljs$core$IFn$_invoke$arity$1(form);\r\nif(cljs.core.truth_(goog.string.endsWith(sym,\x22.\x22))){\r\nvar csym \x3d cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(sym,(0),(((sym).length) - (1))));\r\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.tools.reader.resolve_symbol.call(null,csym)),\x22.\x22].join(\x27\x27));\r\n} else {\r\nreturn cljs.tools.reader.resolve_symbol.call(null,form);\r\n}\r\n})()),null,(1),null)),(2),null)):((cljs.tools.reader.unquote_QMARK_(form))?cljs.core.second(form):((cljs.tools.reader.unquote_splicing_QMARK_(form))?(function(){throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\x22unquote-splice not in list\x22,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),new cljs.core.Keyword(null,\x22illegal-state\x22,\x22illegal-state\x22,-1519851182)], null))})():((cljs.core.coll_QMARK_(form))?(((((!((form \x3d\x3d null))))?(((((form.cljs$lang$protocol_mask$partition0$ \x26 (67108864))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d form.cljs$core$IRecord$))))?true:false):false))?form:((cljs.core.map_QMARK_(form))?cljs.tools.reader.syntax_quote_coll(cljs.tools.reader.map_func(form),cljs.tools.reader.flatten_map(form)):((cljs.core.vector_QMARK_(form))?(new cljs.core.List(null,new cljs.core.Symbol(\x22cljs.core\x22,\x22vec\x22,\x22cljs.core/vec\x22,307622519,null),(new cljs.core.List(null,cljs.tools.reader.syntax_quote_coll(null,form),null,(1),null)),(2),null)):((cljs.core.set_QMARK_(form))?cljs.tools.reader.syntax_quote_coll(new cljs.core.Symbol(\x22cljs.core\x22,\x22hash-set\x22,\x22cljs.core/hash-set\x22,1130426749,null),form):((((cljs.core.seq_QMARK_(form)) || (cljs.core.list_QMARK_(form))))?(function (){var seq \x3d cljs.core.seq(form);\r\nif(seq){\r\nreturn cljs.tools.reader.syntax_quote_coll(null,seq);\r\n} else {\r\nreturn cljs.core.list(new cljs.core.Symbol(\x22cljs.core\x22,\x22list\x22,\x22cljs.core/list\x22,-1331406371,null));\r\n}\r\n})():(function(){throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\x22Unknown Collection type\x22,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),new cljs.core.Keyword(null,\x22unsupported-operation\x22,\x22unsupported-operation\x22,1890540953)], null))})()\r\n))))):(((((form instanceof cljs.core.Keyword)) || (((typeof form \x3d\x3d\x3d \x27number\x27) || (((typeof form \x3d\x3d\x3d \x27string\x27) || ((((form \x3d\x3d null)) || (((cljs.tools.reader.bool_QMARK_(form)) || ((form instanceof RegExp))))))))))))?form:(new cljs.core.List(null,new cljs.core.Symbol(null,\x22quote\x22,\x22quote\x22,1377916282,null),(new cljs.core.List(null,form,null,(1),null)),(2),null))\r\n)))))));\r\n});\r\ncljs.tools.reader.read_syntax_quote \x3d (function cljs$tools$reader$read_syntax_quote(rdr,backquote,opts,pending_forms){\r\nvar gensym_env_orig_val__17975 \x3d cljs.tools.reader.gensym_env;\r\nvar gensym_env_temp_val__17976 \x3d cljs.core.PersistentArrayMap.EMPTY;\r\n(cljs.tools.reader.gensym_env \x3d gensym_env_temp_val__17976);\r\n\r\ntry{return cljs.tools.reader.syntax_quote_STAR_((cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr,true,null,opts,pending_forms) : cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms)));\r\n}finally {(cljs.tools.reader.gensym_env \x3d gensym_env_orig_val__17975);\r\n}});\r\ncljs.tools.reader.read_namespaced_map \x3d (function cljs$tools$reader$read_namespaced_map(rdr,_,opts,pending_forms){\r\nvar vec__17977 \x3d cljs.tools.reader.starting_line_col_info(rdr);\r\nvar start_line \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17977,(0),null);\r\nvar start_column \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17977,(1),null);\r\nvar token \x3d cljs.tools.reader.read_token(rdr,new cljs.core.Keyword(null,\x22namespaced-map\x22,\x22namespaced-map\x22,1235665380),cljs.tools.reader.reader_types.read_char(rdr));\r\nvar temp__5751__auto__ \x3d ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(token,\x22:\x22))?cljs.core.ns_name(cljs.core._STAR_ns_STAR_):((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22:\x22,cljs.core.first(token)))?(function (){var G__17982 \x3d token;\r\nvar G__17982__$1 \x3d (((G__17982 \x3d\x3d null))?null:cljs.core.subs.cljs$core$IFn$_invoke$arity$2(G__17982,(1)));\r\nvar G__17982__$2 \x3d (((G__17982__$1 \x3d\x3d null))?null:cljs.tools.reader.impl.commons.parse_symbol(G__17982__$1));\r\nvar G__17982__$3 \x3d (((G__17982__$2 \x3d\x3d null))?null:cljs.tools.reader.impl.utils.second_SINGLEQUOTE_(G__17982__$2));\r\nvar G__17982__$4 \x3d (((G__17982__$3 \x3d\x3d null))?null:cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(G__17982__$3));\r\nif((G__17982__$4 \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.tools.reader.resolve_ns(G__17982__$4);\r\n}\r\n})():(function (){var G__17985 \x3d token;\r\nvar G__17985__$1 \x3d (((G__17985 \x3d\x3d null))?null:cljs.tools.reader.impl.commons.parse_symbol(G__17985));\r\nif((G__17985__$1 \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.tools.reader.impl.utils.second_SINGLEQUOTE_(G__17985__$1);\r\n}\r\n})()\r\n));\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar ns \x3d temp__5751__auto__;\r\nvar ch \x3d cljs.tools.reader.impl.commons.read_past(cljs.tools.reader.impl.utils.whitespace_QMARK_,rdr);\r\nif((ch \x3d\x3d\x3d \x22{\x22)){\r\nvar items \x3d cljs.tools.reader.read_delimited(new cljs.core.Keyword(null,\x22namespaced-map\x22,\x22namespaced-map\x22,1235665380),\x22}\x22,rdr,opts,pending_forms);\r\nvar vec__17989 \x3d cljs.tools.reader.ending_line_col_info(rdr);\r\nvar end_line \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17989,(0),null);\r\nvar end_column \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17989,(1),null);\r\nif(cljs.core.odd_QMARK_(cljs.core.count(items))){\r\ncljs.tools.reader.impl.errors.throw_odd_map(rdr,null,null,items);\r\n} else {\r\n}\r\n\r\nvar keys \x3d cljs.tools.reader.impl.utils.namespace_keys(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2((2),items));\r\nvar vals \x3d cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2((2),cljs.core.rest(items));\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(cljs.core.set(keys)),cljs.core.count(keys))){\r\n} else {\r\ncljs.tools.reader.impl.errors.throw_dup_keys(rdr,new cljs.core.Keyword(null,\x22namespaced-map\x22,\x22namespaced-map\x22,1235665380),keys);\r\n}\r\n\r\nreturn cljs.core.with_meta(cljs.core.zipmap(keys,vals),(cljs.core.truth_(start_line)?cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var temp__5753__auto__ \x3d cljs.tools.reader.reader_types.get_file_name(rdr);\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar file \x3d temp__5753__auto__;\r\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),file], null);\r\n} else {\r\nreturn null;\r\n}\r\n})(),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),start_line,new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),start_column,new cljs.core.Keyword(null,\x22end-line\x22,\x22end-line\x22,1837326455),end_line,new cljs.core.Keyword(null,\x22end-column\x22,\x22end-column\x22,1425389514),end_column], null)], 0)):null));\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_ns_map_no_map(rdr,token);\r\n}\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_bad_ns(rdr,token);\r\n}\r\n});\r\ncljs.tools.reader.macros \x3d (function cljs$tools$reader$macros(ch){\r\nvar G__17994 \x3d ch;\r\nswitch (G__17994) {\r\ncase \x22\\\x22\x22:\r\nreturn cljs.tools.reader.read_string_STAR_;\r\n\r\nbreak;\r\ncase \x22:\x22:\r\nreturn cljs.tools.reader.read_keyword;\r\n\r\nbreak;\r\ncase \x22;\x22:\r\nreturn cljs.tools.reader.impl.commons.read_comment;\r\n\r\nbreak;\r\ncase \x22\x27\x22:\r\nreturn cljs.tools.reader.wrapping_reader(new cljs.core.Symbol(null,\x22quote\x22,\x22quote\x22,1377916282,null));\r\n\r\nbreak;\r\ncase \x22@\x22:\r\nreturn cljs.tools.reader.wrapping_reader(new cljs.core.Symbol(\x22clojure.core\x22,\x22deref\x22,\x22clojure.core/deref\x22,188719157,null));\r\n\r\nbreak;\r\ncase \x22^\x22:\r\nreturn cljs.tools.reader.read_meta;\r\n\r\nbreak;\r\ncase \x22`\x22:\r\nreturn cljs.tools.reader.read_syntax_quote;\r\n\r\nbreak;\r\ncase \x22~\x22:\r\nreturn cljs.tools.reader.read_unquote;\r\n\r\nbreak;\r\ncase \x22(\x22:\r\nreturn cljs.tools.reader.read_list;\r\n\r\nbreak;\r\ncase \x22)\x22:\r\nreturn cljs.tools.reader.read_unmatched_delimiter;\r\n\r\nbreak;\r\ncase \x22[\x22:\r\nreturn cljs.tools.reader.read_vector;\r\n\r\nbreak;\r\ncase \x22]\x22:\r\nreturn cljs.tools.reader.read_unmatched_delimiter;\r\n\r\nbreak;\r\ncase \x22{\x22:\r\nreturn cljs.tools.reader.read_map;\r\n\r\nbreak;\r\ncase \x22}\x22:\r\nreturn cljs.tools.reader.read_unmatched_delimiter;\r\n\r\nbreak;\r\ncase \x22\\\\\x22:\r\nreturn cljs.tools.reader.read_char_STAR_;\r\n\r\nbreak;\r\ncase \x22%\x22:\r\nreturn cljs.tools.reader.read_arg;\r\n\r\nbreak;\r\ncase \x22#\x22:\r\nreturn cljs.tools.reader.read_dispatch;\r\n\r\nbreak;\r\ndefault:\r\nreturn null;\r\n\r\n}\r\n});\r\ncljs.tools.reader.dispatch_macros \x3d (function cljs$tools$reader$dispatch_macros(ch){\r\nvar G__17999 \x3d ch;\r\nswitch (G__17999) {\r\ncase \x22^\x22:\r\nreturn cljs.tools.reader.read_meta;\r\n\r\nbreak;\r\ncase \x22\x27\x22:\r\nreturn cljs.tools.reader.wrapping_reader(new cljs.core.Symbol(null,\x22var\x22,\x22var\x22,870848730,null));\r\n\r\nbreak;\r\ncase \x22(\x22:\r\nreturn cljs.tools.reader.read_fn;\r\n\r\nbreak;\r\ncase \x22{\x22:\r\nreturn cljs.tools.reader.read_set;\r\n\r\nbreak;\r\ncase \x22\x3c\x22:\r\nreturn cljs.tools.reader.impl.commons.throwing_reader(\x22Unreadable form\x22);\r\n\r\nbreak;\r\ncase \x22\x3d\x22:\r\nreturn cljs.tools.reader.impl.commons.throwing_reader(\x22read-eval not supported\x22);\r\n\r\nbreak;\r\ncase \x22\\\x22\x22:\r\nreturn cljs.tools.reader.read_regex;\r\n\r\nbreak;\r\ncase \x22!\x22:\r\nreturn cljs.tools.reader.impl.commons.read_comment;\r\n\r\nbreak;\r\ncase \x22_\x22:\r\nreturn cljs.tools.reader.read_discard;\r\n\r\nbreak;\r\ncase \x22?\x22:\r\nreturn cljs.tools.reader.read_cond;\r\n\r\nbreak;\r\ncase \x22:\x22:\r\nreturn cljs.tools.reader.read_namespaced_map;\r\n\r\nbreak;\r\ncase \x22#\x22:\r\nreturn cljs.tools.reader.read_symbolic_value;\r\n\r\nbreak;\r\ndefault:\r\nreturn null;\r\n\r\n}\r\n});\r\ncljs.tools.reader.read_tagged \x3d (function cljs$tools$reader$read_tagged(rdr,initch,opts,pending_forms){\r\nvar tag \x3d (cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr,true,null,opts,pending_forms) : cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms));\r\nif((!((tag instanceof cljs.core.Symbol)))){\r\ncljs.tools.reader.impl.errors.throw_bad_reader_tag(rdr,tag);\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_(cljs.tools.reader._STAR_suppress_read_STAR_)){\r\nreturn cljs.core.tagged_literal(tag,(cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr,true,null,opts,pending_forms) : cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms)));\r\n} else {\r\nvar temp__5751__auto__ \x3d (function (){var or__4253__auto__ \x3d cljs.tools.reader._STAR_data_readers_STAR_.call(null,tag);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn (cljs.tools.reader.default_data_readers.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.default_data_readers.cljs$core$IFn$_invoke$arity$1(tag) : cljs.tools.reader.default_data_readers.call(null,tag));\r\n}\r\n})();\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar f \x3d temp__5751__auto__;\r\nvar G__18029 \x3d (cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr,true,null,opts,pending_forms) : cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms));\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18029) : f.call(null,G__18029));\r\n} else {\r\nvar temp__5751__auto____$1 \x3d cljs.tools.reader._STAR_default_data_reader_fn_STAR_;\r\nif(cljs.core.truth_(temp__5751__auto____$1)){\r\nvar f \x3d temp__5751__auto____$1;\r\nvar G__18031 \x3d tag;\r\nvar G__18032 \x3d (cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr,true,null,opts,pending_forms) : cljs.tools.reader.read_STAR_.call(null,rdr,true,null,opts,pending_forms));\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18031,G__18032) : f.call(null,G__18031,G__18032));\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_unknown_reader_tag(rdr,tag);\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Map from reader tag symbols to data reader Vars.\r\n *   Reader tags without namespace qualifiers are reserved for Clojure.\r\n *   This light version of tools.reader has no implementation for default\r\n *   reader tags such as #inst and #uuid.\r\n */\r\ncljs.tools.reader._STAR_data_readers_STAR_ \x3d cljs.core.PersistentArrayMap.EMPTY;\r\n/**\r\n * When no data reader is found for a tag and *default-data-reader-fn*\r\n *   is non-nil, it will be called with two arguments, the tag and the value.\r\n *   If *default-data-reader-fn* is nil (the default value), an exception\r\n *   will be thrown for the unknown tag.\r\n */\r\ncljs.tools.reader._STAR_default_data_reader_fn_STAR_ \x3d null;\r\ncljs.tools.reader._STAR_suppress_read_STAR_ \x3d false;\r\n/**\r\n * Default map of data reader functions provided by Clojure.\r\n *   May be overridden by binding *data-readers*\r\n */\r\ncljs.tools.reader.default_data_readers \x3d cljs.core.PersistentArrayMap.EMPTY;\r\ncljs.tools.reader.read_STAR__internal \x3d (function cljs$tools$reader$read_STAR__internal(reader,eof_error_QMARK_,sentinel,return_on,opts,pending_forms){\r\nwhile(true){\r\nif(((cljs.tools.reader.reader_types.source_logging_reader_QMARK_(reader)) \x26\x26 ((!(cljs.tools.reader.impl.utils.whitespace_QMARK_(reader.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null))))))){\r\nreturn cljs.tools.reader.reader_types.log_source_STAR_(reader,(function (){\r\nwhile(true){\r\nif((!(cljs.tools.reader.goog$module$goog$array.isEmpty(pending_forms)))){\r\nvar form \x3d (pending_forms[(0)]);\r\ncljs.tools.reader.goog$module$goog$array.removeAt(pending_forms,(0));\r\n\r\nreturn form;\r\n} else {\r\nvar ch \x3d reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nif(cljs.tools.reader.impl.utils.whitespace_QMARK_(ch)){\r\ncontinue;\r\n} else {\r\nif((ch \x3d\x3d null)){\r\nif(eof_error_QMARK_){\r\nreturn cljs.tools.reader.impl.errors.throw_eof_error(reader,null);\r\n} else {\r\nreturn sentinel;\r\n}\r\n} else {\r\nif((ch \x3d\x3d\x3d return_on)){\r\nreturn cljs.tools.reader.READ_FINISHED;\r\n} else {\r\nif(cljs.tools.reader.impl.commons.number_literal_QMARK_(reader,ch)){\r\nreturn cljs.tools.reader.read_number(reader,ch);\r\n} else {\r\nvar f \x3d cljs.tools.reader.macros(ch);\r\nif((!((f \x3d\x3d null)))){\r\nvar res \x3d (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(reader,ch,opts,pending_forms) : f.call(null,reader,ch,opts,pending_forms));\r\nif((res \x3d\x3d\x3d reader)){\r\ncontinue;\r\n} else {\r\nreturn res;\r\n}\r\n} else {\r\nreturn cljs.tools.reader.read_symbol(reader,ch);\r\n}\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n} else {\r\nif((!(cljs.tools.reader.goog$module$goog$array.isEmpty(pending_forms)))){\r\nvar form \x3d (pending_forms[(0)]);\r\ncljs.tools.reader.goog$module$goog$array.removeAt(pending_forms,(0));\r\n\r\nreturn form;\r\n} else {\r\nvar ch \x3d reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);\r\nif(cljs.tools.reader.impl.utils.whitespace_QMARK_(ch)){\r\ncontinue;\r\n} else {\r\nif((ch \x3d\x3d null)){\r\nif(eof_error_QMARK_){\r\nreturn cljs.tools.reader.impl.errors.throw_eof_error(reader,null);\r\n} else {\r\nreturn sentinel;\r\n}\r\n} else {\r\nif((ch \x3d\x3d\x3d return_on)){\r\nreturn cljs.tools.reader.READ_FINISHED;\r\n} else {\r\nif(cljs.tools.reader.impl.commons.number_literal_QMARK_(reader,ch)){\r\nreturn cljs.tools.reader.read_number(reader,ch);\r\n} else {\r\nvar f \x3d cljs.tools.reader.macros(ch);\r\nif((!((f \x3d\x3d null)))){\r\nvar res \x3d (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(reader,ch,opts,pending_forms) : f.call(null,reader,ch,opts,pending_forms));\r\nif((res \x3d\x3d\x3d reader)){\r\ncontinue;\r\n} else {\r\nreturn res;\r\n}\r\n} else {\r\nreturn cljs.tools.reader.read_symbol(reader,ch);\r\n}\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.tools.reader.read_STAR_ \x3d (function cljs$tools$reader$read_STAR_(var_args){\r\nvar G__18061 \x3d arguments.length;\r\nswitch (G__18061) {\r\ncase 5:\r\nreturn cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ncase 6:\r\nreturn cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 \x3d (function (reader,eof_error_QMARK_,sentinel,opts,pending_forms){\r\nreturn cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(reader,eof_error_QMARK_,sentinel,null,opts,pending_forms);\r\n}));\r\n\r\n(cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6 \x3d (function (reader,eof_error_QMARK_,sentinel,return_on,opts,pending_forms){\r\ntry{return cljs.tools.reader.read_STAR__internal(reader,eof_error_QMARK_,sentinel,return_on,opts,pending_forms);\r\n}catch (e18064){if((e18064 instanceof Error)){\r\nvar e \x3d e18064;\r\nif(cljs.tools.reader.impl.utils.ex_info_QMARK_(e)){\r\nvar d \x3d cljs.core.ex_data(e);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22reader-exception\x22,\x22reader-exception\x22,-1938323098),new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348).cljs$core$IFn$_invoke$arity$1(d))){\r\nthrow e;\r\n} else {\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(e.message,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),new cljs.core.Keyword(null,\x22reader-exception\x22,\x22reader-exception\x22,-1938323098)], null),d,((cljs.tools.reader.reader_types.indexing_reader_QMARK_(reader))?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),reader.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1(null),new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),reader.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(null),new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),reader.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1(null)], null):null)], 0)),e);\r\n}\r\n} else {\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(e.message,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),new cljs.core.Keyword(null,\x22reader-exception\x22,\x22reader-exception\x22,-1938323098)], null),((cljs.tools.reader.reader_types.indexing_reader_QMARK_(reader))?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),reader.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1(null),new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),reader.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(null),new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),reader.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1(null)], null):null)], 0)),e);\r\n}\r\n} else {\r\nthrow e18064;\r\n\r\n}\r\n}}));\r\n\r\n(cljs.tools.reader.read_STAR_.cljs$lang$maxFixedArity \x3d 6);\r\n\r\n/**\r\n * Reads the first object from an IPushbackReader.\r\n * Returns the object read. If EOF, throws if eof-error? is true.\r\n * Otherwise returns sentinel. If no stream is provided, *in* will be used.\r\n * \r\n * Opts is a persistent map with valid keys:\r\n *  :read-cond - :allow to process reader conditionals, or\r\n *               :preserve to keep all branches\r\n *  :features - persistent set of feature keywords for reader conditionals\r\n *  :eof - on eof, return value unless :eofthrow, then throw.\r\n *         if not specified, will throw\r\n * \r\n * To read data structures only, use cljs.tools.reader.edn/read\r\n * \r\n * Note that the function signature of cljs.tools.reader/read and\r\n * cljs.tools.reader.edn/read is not the same for eof-handling\r\n */\r\ncljs.tools.reader.read \x3d (function cljs$tools$reader$read(var_args){\r\nvar G__18071 \x3d arguments.length;\r\nswitch (G__18071) {\r\ncase 1:\r\nreturn cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$1 \x3d (function (reader){\r\nreturn cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3(reader,true,null);\r\n}));\r\n\r\n(cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2 \x3d (function (p__18074,reader){\r\nvar map__18075 \x3d p__18074;\r\nvar map__18075__$1 \x3d cljs.core.__destructure_map(map__18075);\r\nvar opts \x3d map__18075__$1;\r\nvar eof \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__18075__$1,new cljs.core.Keyword(null,\x22eof\x22,\x22eof\x22,-489063237),new cljs.core.Keyword(null,\x22eofthrow\x22,\x22eofthrow\x22,-334166531));\r\nreturn cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(reader,cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(eof,new cljs.core.Keyword(null,\x22eofthrow\x22,\x22eofthrow\x22,-334166531)),eof,null,opts,cljs.core.to_array(cljs.core.PersistentVector.EMPTY));\r\n}));\r\n\r\n(cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3 \x3d (function (reader,eof_error_QMARK_,sentinel){\r\nreturn cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(reader,eof_error_QMARK_,sentinel,null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.to_array(cljs.core.PersistentVector.EMPTY));\r\n}));\r\n\r\n(cljs.tools.reader.read.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n/**\r\n * Reads one object from the string s.\r\n * Returns nil when s is nil or empty.\r\n * \r\n * To read data structures only, use cljs.tools.reader.edn/read-string\r\n * \r\n * Note that the function signature of cljs.tools.reader/read-string and\r\n * cljs.tools.reader.edn/read-string is not the same for eof-handling\r\n */\r\ncljs.tools.reader.read_string \x3d (function cljs$tools$reader$read_string(var_args){\r\nvar G__18081 \x3d arguments.length;\r\nswitch (G__18081) {\r\ncase 1:\r\nreturn cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$1 \x3d (function (s){\r\nreturn cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,s);\r\n}));\r\n\r\n(cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2 \x3d (function (opts,s){\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d s;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn (!((s \x3d\x3d\x3d \x22\x22)));\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nreturn cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2(opts,cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1(s));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.tools.reader.read_string.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n/**\r\n * Like read, and taking the same args. reader must be a SourceLoggingPushbackReader.\r\n *   Returns a vector containing the object read and the (whitespace-trimmed) string read.\r\n */\r\ncljs.tools.reader.read_PLUS_string \x3d (function cljs$tools$reader$read_PLUS_string(var_args){\r\nvar G__18102 \x3d arguments.length;\r\nswitch (G__18102) {\r\ncase 1:\r\nreturn cljs.tools.reader.read_PLUS_string.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.tools.reader.read_PLUS_string.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.tools.reader.read_PLUS_string.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.tools.reader.read_PLUS_string.cljs$core$IFn$_invoke$arity$1 \x3d (function (stream){\r\nreturn cljs.tools.reader.read_PLUS_string.cljs$core$IFn$_invoke$arity$3(stream,true,null);\r\n}));\r\n\r\n(cljs.tools.reader.read_PLUS_string.cljs$core$IFn$_invoke$arity$3 \x3d (function (stream,eof_error_QMARK_,eof_value){\r\nvar buf \x3d (function (stream__$1){\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(stream__$1.frames)));\r\n});\r\nvar offset \x3d ((buf(stream)).length);\r\nvar o \x3d ((((cljs.tools.reader.reader_types.source_logging_reader_QMARK_(stream)) \x26\x26 ((!(cljs.tools.reader.impl.utils.whitespace_QMARK_(cljs.tools.reader.reader_types.peek_char(stream)))))))?cljs.tools.reader.reader_types.log_source_STAR_(stream,(function (){\r\nreturn cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3(stream,eof_error_QMARK_,eof_value);\r\n})):cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3(stream,eof_error_QMARK_,eof_value));\r\nvar s \x3d cljs.core.subs.cljs$core$IFn$_invoke$arity$2(buf(stream),offset).trim();\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [o,s], null);\r\n}));\r\n\r\n(cljs.tools.reader.read_PLUS_string.cljs$core$IFn$_invoke$arity$2 \x3d (function (opts,stream){\r\nvar buf \x3d (function (stream__$1){\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(stream__$1.frames)));\r\n});\r\nvar offset \x3d ((buf(stream)).length);\r\nvar o \x3d ((((cljs.tools.reader.reader_types.source_logging_reader_QMARK_(stream)) \x26\x26 ((!(cljs.tools.reader.impl.utils.whitespace_QMARK_(cljs.tools.reader.reader_types.peek_char(stream)))))))?cljs.tools.reader.reader_types.log_source_STAR_(stream,(function (){\r\nreturn cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2(opts,stream);\r\n})):cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2(opts,stream));\r\nvar s \x3d cljs.core.subs.cljs$core$IFn$_invoke$arity$2(buf(stream),offset).trim();\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [o,s], null);\r\n}));\r\n\r\n(cljs.tools.reader.read_PLUS_string.cljs$lang$maxFixedArity \x3d 3);\r\n\r\n");
SHADOW_ENV.evalLoad("instaparse.cfg.js", true , "goog.provide(\x27instaparse.cfg\x27);\r\n/**\r\n * Sets whether all string literal terminals in a built grammar\r\n *   will be treated as case insensitive.\r\n * \r\n *   `true`: case-insensitive\r\n *   `false`: case-sensitive\r\n *   `:default`: case-sensitive for EBNF, case-insensitive for ABNF\r\n */\r\ninstaparse.cfg._STAR_case_insensitive_literals_STAR_ \x3d new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328);\r\n/**\r\n * Returns a string combinator that may be case-insensntive, based\r\n *   on (in priority order):\r\n * \r\n *   1) the value of `*case-insensitive-literals*`, if it has been\r\n *   overridden to a boolean\r\n *   2) the supplied `ci-by-default?` parameter\r\n */\r\ninstaparse.cfg.string_PLUS_ \x3d (function instaparse$cfg$string_PLUS_(s,ci_by_default_QMARK_){\r\nvar G__27907 \x3d instaparse.cfg._STAR_case_insensitive_literals_STAR_;\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(true,G__27907)){\r\nreturn instaparse.combinators_source.string_ci(s);\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(false,G__27907)){\r\nreturn instaparse.combinators_source.string(s);\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),G__27907)){\r\nif(cljs.core.truth_(ci_by_default_QMARK_)){\r\nreturn instaparse.combinators_source.string_ci(s);\r\n} else {\r\nreturn instaparse.combinators_source.string(s);\r\n}\r\n} else {\r\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__27907)].join(\x27\x27)));\r\n\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Adds a comment to a Clojure regex, or no-op in ClojureScript\r\n */\r\ninstaparse.cfg.regex_doc \x3d (function instaparse$cfg$regex_doc(pattern_str,comment){\r\nreturn cljs.core.re_pattern(pattern_str);\r\n});\r\ninstaparse.cfg.single_quoted_string \x3d instaparse.cfg.regex_doc(/\x27[^\x27\\\\]*(?:\\\\.[^\x27\\\\]*)*\x27/,\x22Single-quoted string\x22);\r\ninstaparse.cfg.single_quoted_regexp \x3d instaparse.cfg.regex_doc(/#\x27[^\x27\\\\]*(?:\\\\.[^\x27\\\\]*)*\x27/,\x22Single-quoted regexp\x22);\r\ninstaparse.cfg.double_quoted_string \x3d instaparse.cfg.regex_doc(/\\\x22[^\\\x22\\\\]*(?:\\\\.[^\\\x22\\\\]*)*\\\x22/,\x22Double-quoted string\x22);\r\ninstaparse.cfg.double_quoted_regexp \x3d instaparse.cfg.regex_doc(/#\\\x22[^\\\x22\\\\]*(?:\\\\.[^\\\x22\\\\]*)*\\\x22/,\x22Double-quoted regexp\x22);\r\ninstaparse.cfg.inside_comment \x3d /(?:(?!(?:\\(\\*|\\*\\)))[\\s\\S])*/;\r\ninstaparse.cfg.ws \x3d instaparse.cfg.regex_doc(\x22[,\\\\s]*\x22,\x22optional whitespace\x22);\r\ninstaparse.cfg.opt_whitespace \x3d instaparse.combinators_source.hide(instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927)));\r\ninstaparse.cfg.cfg \x3d instaparse.reduction.apply_standard_reductions.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\x22neg\x22,\x22neg\x22,1800032960),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22ord\x22,\x22ord\x22,1142548323),new cljs.core.Keyword(null,\x22rule-separator\x22,\x22rule-separator\x22,1539322213),new cljs.core.Keyword(null,\x22alt\x22,\x22alt\x22,-3214426),new cljs.core.Keyword(null,\x22look\x22,\x22look\x22,-539441433),new cljs.core.Keyword(null,\x22rule\x22,\x22rule\x22,729973257),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22hide-nt\x22,\x22hide-nt\x22,-228813845),new cljs.core.Keyword(null,\x22inside-comment\x22,\x22inside-comment\x22,1258069708),new cljs.core.Keyword(null,\x22star\x22,\x22star\x22,279424429),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22rules\x22,\x22rules\x22,1198912366),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),new cljs.core.Keyword(null,\x22paren\x22,\x22paren\x22,-294107600),new cljs.core.Keyword(null,\x22alt-or-ord\x22,\x22alt-or-ord\x22,310249425),new cljs.core.Keyword(null,\x22regexp\x22,\x22regexp\x22,-541372782),new cljs.core.Keyword(null,\x22factor\x22,\x22factor\x22,-2103172748),new cljs.core.Keyword(null,\x22comment\x22,\x22comment\x22,532206069),new cljs.core.Keyword(null,\x22plus\x22,\x22plus\x22,211540661),new cljs.core.Keyword(null,\x22epsilon\x22,\x22epsilon\x22,-730158570),new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927),new cljs.core.Keyword(null,\x22rules-or-parser\x22,\x22rules-or-parser\x22,-314380386),new cljs.core.Keyword(null,\x22opt\x22,\x22opt\x22,-794706369)],[instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.hide(instaparse.combinators_source.string(\x22!\x22)),instaparse.cfg.opt_whitespace,instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22factor\x22,\x22factor\x22,-2103172748))], 0)),instaparse.combinators_source.plus(instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.cfg.opt_whitespace,instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22factor\x22,\x22factor\x22,-2103172748)),instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22look\x22,\x22look\x22,-539441433)),instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22neg\x22,\x22neg\x22,1800032960))], 0)),instaparse.cfg.opt_whitespace], 0))),instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207)),instaparse.combinators_source.plus(instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.cfg.opt_whitespace,instaparse.combinators_source.hide(instaparse.combinators_source.string(\x22/\x22)),instaparse.cfg.opt_whitespace,instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207))], 0)))], 0)),instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.string(\x22:\x22),instaparse.combinators_source.string(\x22:\x3d\x22),instaparse.combinators_source.string(\x22::\x3d\x22),instaparse.combinators_source.string(\x22\x3d\x22)], 0)),instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207)),instaparse.combinators_source.star(instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.cfg.opt_whitespace,instaparse.combinators_source.hide(instaparse.combinators_source.string(\x22|\x22)),instaparse.cfg.opt_whitespace,instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207))], 0)))], 0)),instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.hide(instaparse.combinators_source.string(\x22\x26\x22)),instaparse.cfg.opt_whitespace,instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22factor\x22,\x22factor\x22,-2103172748))], 0)),instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781)),instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22hide-nt\x22,\x22hide-nt\x22,-228813845))], 0)),instaparse.cfg.opt_whitespace,instaparse.combinators_source.hide(instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22rule-separator\x22,\x22rule-separator\x22,1539322213))),instaparse.cfg.opt_whitespace,instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22alt-or-ord\x22,\x22alt-or-ord\x22,310249425)),instaparse.combinators_source.hide(instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927)),instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927)),instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.string(\x22;\x22),instaparse.combinators_source.string(\x22.\x22)], 0)),instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927))], 0))], 0)))], 0)),instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.neg(instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22epsilon\x22,\x22epsilon\x22,-730158570))),instaparse.combinators_source.regexp(instaparse.cfg.regex_doc(\x22[^, \\\\r\\\\t\\\\n\x3c\x3e(){}\\\\[\\\\]+*?:\x3d|\x27\\\x22#\x26!;./]+\x22,\x22Non-terminal\x22))], 0)),instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.hide(instaparse.combinators_source.string(\x22\x3c\x22)),instaparse.cfg.opt_whitespace,instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781)),instaparse.cfg.opt_whitespace,instaparse.combinators_source.hide(instaparse.combinators_source.string(\x22\x3e\x22))], 0)),instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.regexp(instaparse.cfg.inside_comment),instaparse.combinators_source.star(instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22comment\x22,\x22comment\x22,532206069)),instaparse.combinators_source.regexp(instaparse.cfg.inside_comment)], 0)))], 0)),instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.hide(instaparse.combinators_source.string(\x22{\x22)),instaparse.cfg.opt_whitespace,instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22alt-or-ord\x22,\x22alt-or-ord\x22,310249425)),instaparse.cfg.opt_whitespace,instaparse.combinators_source.hide(instaparse.combinators_source.string(\x22}\x22))], 0)),instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22factor\x22,\x22factor\x22,-2103172748)),instaparse.cfg.opt_whitespace,instaparse.combinators_source.hide(instaparse.combinators_source.string(\x22*\x22))], 0))], 0)),instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.regexp(instaparse.cfg.single_quoted_string),instaparse.combinators_source.regexp(instaparse.cfg.double_quoted_string)], 0)),instaparse.combinators_source.hide_tag(instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.cfg.opt_whitespace,instaparse.combinators_source.plus(instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22rule\x22,\x22rule\x22,729973257)))], 0))),instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.hide(instaparse.combinators_source.string(\x22\x3c\x22)),instaparse.cfg.opt_whitespace,instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22alt-or-ord\x22,\x22alt-or-ord\x22,310249425)),instaparse.cfg.opt_whitespace,instaparse.combinators_source.hide(instaparse.combinators_source.string(\x22\x3e\x22))], 0)),instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.hide(instaparse.combinators_source.string(\x22(\x22)),instaparse.cfg.opt_whitespace,instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22alt-or-ord\x22,\x22alt-or-ord\x22,310249425)),instaparse.cfg.opt_whitespace,instaparse.combinators_source.hide(instaparse.combinators_source.string(\x22)\x22))], 0)),instaparse.combinators_source.hide_tag(instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22alt\x22,\x22alt\x22,-3214426)),instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22ord\x22,\x22ord\x22,1142548323))], 0))),instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.regexp(instaparse.cfg.single_quoted_regexp),instaparse.combinators_source.regexp(instaparse.cfg.double_quoted_regexp)], 0)),instaparse.combinators_source.hide_tag(instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781)),instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586)),instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22regexp\x22,\x22regexp\x22,-541372782)),instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22opt\x22,\x22opt\x22,-794706369)),instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22star\x22,\x22star\x22,279424429)),instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22plus\x22,\x22plus\x22,211540661)),instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22paren\x22,\x22paren\x22,-294107600)),instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169)),instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22epsilon\x22,\x22epsilon\x22,-730158570))], 0))),instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.string(\x22(*\x22),instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22inside-comment\x22,\x22inside-comment\x22,1258069708)),instaparse.combinators_source.string(\x22*)\x22)], 0)),instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22factor\x22,\x22factor\x22,-2103172748)),instaparse.cfg.opt_whitespace,instaparse.combinators_source.hide(instaparse.combinators_source.string(\x22+\x22))], 0)),instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.string(\x22Epsilon\x22),instaparse.combinators_source.string(\x22epsilon\x22),instaparse.combinators_source.string(\x22EPSILON\x22),instaparse.combinators_source.string(\x22eps\x22),instaparse.combinators_source.string(\x22\\u03B5\x22)], 0)),instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.regexp(instaparse.cfg.ws),instaparse.combinators_source.star(instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22comment\x22,\x22comment\x22,532206069)),instaparse.combinators_source.regexp(instaparse.cfg.ws)], 0)))], 0)),instaparse.combinators_source.hide_tag(instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22rules\x22,\x22rules\x22,1198912366)),instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22alt-or-ord\x22,\x22alt-or-ord\x22,310249425))], 0))),instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.hide(instaparse.combinators_source.string(\x22[\x22)),instaparse.cfg.opt_whitespace,instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22alt-or-ord\x22,\x22alt-or-ord\x22,310249425)),instaparse.cfg.opt_whitespace,instaparse.combinators_source.hide(instaparse.combinators_source.string(\x22]\x22))], 0)),instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.nt(new cljs.core.Keyword(null,\x22factor\x22,\x22factor\x22,-2103172748)),instaparse.cfg.opt_whitespace,instaparse.combinators_source.hide(instaparse.combinators_source.string(\x22?\x22))], 0))], 0))]));\r\ninstaparse.cfg.tag \x3d cljs.core.first;\r\ninstaparse.cfg.contents \x3d cljs.core.next;\r\ninstaparse.cfg.content \x3d cljs.core.fnext;\r\n/**\r\n * Converts escaped single-quotes to unescaped, and unescaped double-quotes to escaped\r\n */\r\ninstaparse.cfg.escape \x3d (function instaparse$cfg$escape(s){\r\nvar sq \x3d cljs.core.seq(s);\r\nvar v \x3d cljs.core.PersistentVector.EMPTY;\r\nwhile(true){\r\nvar temp__5751__auto__ \x3d cljs.core.first(sq);\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar c \x3d temp__5751__auto__;\r\nvar G__27937 \x3d c;\r\nswitch (G__27937) {\r\ncase \x22\\\\\x22:\r\nvar temp__5751__auto____$1 \x3d cljs.core.second(sq);\r\nif(cljs.core.truth_(temp__5751__auto____$1)){\r\nvar c2 \x3d temp__5751__auto____$1;\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(c2,\x22\x27\x22)){\r\nvar G__28133 \x3d cljs.core.drop.cljs$core$IFn$_invoke$arity$2((2),sq);\r\nvar G__28134 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(v,c2);\r\nsq \x3d G__28133;\r\nv \x3d G__28134;\r\ncontinue;\r\n} else {\r\nvar G__28135 \x3d cljs.core.drop.cljs$core$IFn$_invoke$arity$2((2),sq);\r\nvar G__28136 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(v,c,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c2], 0));\r\nsq \x3d G__28135;\r\nv \x3d G__28136;\r\ncontinue;\r\n}\r\n} else {\r\nreturn instaparse.util.throw_runtime_exception.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Encountered backslash character at end of string: \x22,s], 0));\r\n}\r\n\r\nbreak;\r\ncase \x22\\\x22\x22:\r\nvar G__28137 \x3d cljs.core.next(sq);\r\nvar G__28138 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(v,\x22\\\\\x22,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22\\\x22\x22], 0));\r\nsq \x3d G__28137;\r\nv \x3d G__28138;\r\ncontinue;\r\n\r\nbreak;\r\ndefault:\r\nvar G__28139 \x3d cljs.core.next(sq);\r\nvar G__28140 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(v,c);\r\nsq \x3d G__28139;\r\nv \x3d G__28140;\r\ncontinue;\r\n\r\n}\r\n} else {\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,v);\r\n}\r\nbreak;\r\n}\r\n});\r\nvar read_string_STAR__28141 \x3d cljs.core.deref(new cljs.core.Var(function(){return cljs.tools.reader.read_string_STAR_;},new cljs.core.Symbol(\x22cljs.tools.reader\x22,\x22read-string*\x22,\x22cljs.tools.reader/read-string*\x22,1492661621,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\x22private\x22,\x22private\x22,-558947994),new cljs.core.Keyword(null,\x22ns\x22,\x22ns\x22,441598760),new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),new cljs.core.Keyword(null,\x22end-column\x22,\x22end-column\x22,1425389514),new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),new cljs.core.Keyword(null,\x22end-line\x22,\x22end-line\x22,1837326455),new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),new cljs.core.Keyword(null,\x22test\x22,\x22test\x22,577538877)],[true,new cljs.core.Symbol(null,\x22cljs.tools.reader\x22,\x22cljs.tools.reader\x22,-831293977,null),new cljs.core.Symbol(null,\x22read-string*\x22,\x22read-string*\x22,1046768315,null),\x22cljs/tools/reader.cljs\x22,20,1,305,305,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22reader\x22,\x22reader\x22,1810192380,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22not-native\x22,\x22not-native\x22,-236392494,null)], null)),new cljs.core.Symbol(null,\x22_\x22,\x22_\x22,-1201019570,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null),new cljs.core.Symbol(null,\x22pending-forms\x22,\x22pending-forms\x22,-1225172071,null)], null)),null,(cljs.core.truth_(cljs.tools.reader.read_string_STAR_)?cljs.tools.reader.read_string_STAR_.cljs$lang$test:null)])));\r\ninstaparse.cfg.safe_read_string \x3d (function instaparse$cfg$safe_read_string(s){\r\nvar G__27942 \x3d cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1(s);\r\nvar G__27943 \x3d null;\r\nvar G__27944 \x3d null;\r\nvar G__27945 \x3d null;\r\nreturn (read_string_STAR__28141.cljs$core$IFn$_invoke$arity$4 ? read_string_STAR__28141.cljs$core$IFn$_invoke$arity$4(G__27942,G__27943,G__27944,G__27945) : read_string_STAR__28141.call(null,G__27942,G__27943,G__27944,G__27945));\r\n});\r\n/**\r\n * Converts single quoted string to double-quoted\r\n */\r\ninstaparse.cfg.process_string \x3d (function instaparse$cfg$process_string(s){\r\nvar stripped \x3d cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(1),(cljs.core.count(s) - (1)));\r\nvar remove_escaped_single_quotes \x3d instaparse.cfg.escape(stripped);\r\nvar final_string \x3d instaparse.cfg.safe_read_string([cljs.core.str.cljs$core$IFn$_invoke$arity$1(remove_escaped_single_quotes),\x22\\\x22\x22].join(\x27\x27));\r\nreturn final_string;\r\n});\r\n/**\r\n * Converts single quoted regexp to double-quoted\r\n */\r\ninstaparse.cfg.process_regexp \x3d (function instaparse$cfg$process_regexp(s){\r\nvar stripped \x3d cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(2),(cljs.core.count(s) - (1)));\r\nvar remove_escaped_single_quotes \x3d instaparse.cfg.escape(stripped);\r\nvar final_string \x3d cljs.core.re_pattern(remove_escaped_single_quotes);\r\nreturn final_string;\r\n});\r\n/**\r\n * Convert one parsed rule from the grammar into combinators\r\n */\r\ninstaparse.cfg.build_rule \x3d (function instaparse$cfg$build_rule(tree){\r\nwhile(true){\r\nvar G__27953 \x3d (instaparse.cfg.tag.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.tag.cljs$core$IFn$_invoke$arity$1(tree) : instaparse.cfg.tag.call(null,tree));\r\nvar G__27953__$1 \x3d (((G__27953 instanceof cljs.core.Keyword))?G__27953.fqn:null);\r\nswitch (G__27953__$1) {\r\ncase \x22rule\x22:\r\nvar vec__27957 \x3d (instaparse.cfg.contents.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.contents.cljs$core$IFn$_invoke$arity$1(tree) : instaparse.cfg.contents.call(null,tree));\r\nvar nt \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27957,(0),null);\r\nvar alt_or_ord \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27957,(1),null);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((instaparse.cfg.tag.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.tag.cljs$core$IFn$_invoke$arity$1(nt) : instaparse.cfg.tag.call(null,nt)),new cljs.core.Keyword(null,\x22hide-nt\x22,\x22hide-nt\x22,-228813845))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1((function (){var G__27960 \x3d (instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1(nt) : instaparse.cfg.content.call(null,nt));\r\nreturn (instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1(G__27960) : instaparse.cfg.content.call(null,G__27960));\r\n})()),instaparse.combinators_source.hide_tag((instaparse.cfg.build_rule.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.build_rule.cljs$core$IFn$_invoke$arity$1(alt_or_ord) : instaparse.cfg.build_rule.call(null,alt_or_ord)))], null);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1((instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1(nt) : instaparse.cfg.content.call(null,nt))),(instaparse.cfg.build_rule.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.build_rule.cljs$core$IFn$_invoke$arity$1(alt_or_ord) : instaparse.cfg.build_rule.call(null,alt_or_ord))], null);\r\n}\r\n\r\nbreak;\r\ncase \x22nt\x22:\r\nreturn instaparse.combinators_source.nt(cljs.core.keyword.cljs$core$IFn$_invoke$arity$1((instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1(tree) : instaparse.cfg.content.call(null,tree))));\r\n\r\nbreak;\r\ncase \x22alt\x22:\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(instaparse.combinators_source.alt,cljs.core.map.cljs$core$IFn$_invoke$arity$2(instaparse.cfg.build_rule,(instaparse.cfg.contents.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.contents.cljs$core$IFn$_invoke$arity$1(tree) : instaparse.cfg.contents.call(null,tree))));\r\n\r\nbreak;\r\ncase \x22ord\x22:\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(instaparse.combinators_source.ord,cljs.core.map.cljs$core$IFn$_invoke$arity$2(instaparse.cfg.build_rule,(instaparse.cfg.contents.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.contents.cljs$core$IFn$_invoke$arity$1(tree) : instaparse.cfg.contents.call(null,tree))));\r\n\r\nbreak;\r\ncase \x22paren\x22:\r\nvar G__28144 \x3d (instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1(tree) : instaparse.cfg.content.call(null,tree));\r\ntree \x3d G__28144;\r\ncontinue;\r\n\r\nbreak;\r\ncase \x22hide\x22:\r\nreturn instaparse.combinators_source.hide((function (){var G__27964 \x3d (instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1(tree) : instaparse.cfg.content.call(null,tree));\r\nreturn (instaparse.cfg.build_rule.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.build_rule.cljs$core$IFn$_invoke$arity$1(G__27964) : instaparse.cfg.build_rule.call(null,G__27964));\r\n})());\r\n\r\nbreak;\r\ncase \x22cat\x22:\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(instaparse.combinators_source.cat,cljs.core.map.cljs$core$IFn$_invoke$arity$2(instaparse.cfg.build_rule,(instaparse.cfg.contents.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.contents.cljs$core$IFn$_invoke$arity$1(tree) : instaparse.cfg.contents.call(null,tree))));\r\n\r\nbreak;\r\ncase \x22string\x22:\r\nreturn instaparse.cfg.string_PLUS_(instaparse.cfg.process_string((instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1(tree) : instaparse.cfg.content.call(null,tree))),false);\r\n\r\nbreak;\r\ncase \x22regexp\x22:\r\nreturn instaparse.combinators_source.regexp(instaparse.cfg.process_regexp((instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1(tree) : instaparse.cfg.content.call(null,tree))));\r\n\r\nbreak;\r\ncase \x22opt\x22:\r\nreturn instaparse.combinators_source.opt((function (){var G__27968 \x3d (instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1(tree) : instaparse.cfg.content.call(null,tree));\r\nreturn (instaparse.cfg.build_rule.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.build_rule.cljs$core$IFn$_invoke$arity$1(G__27968) : instaparse.cfg.build_rule.call(null,G__27968));\r\n})());\r\n\r\nbreak;\r\ncase \x22star\x22:\r\nreturn instaparse.combinators_source.star((function (){var G__27969 \x3d (instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1(tree) : instaparse.cfg.content.call(null,tree));\r\nreturn (instaparse.cfg.build_rule.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.build_rule.cljs$core$IFn$_invoke$arity$1(G__27969) : instaparse.cfg.build_rule.call(null,G__27969));\r\n})());\r\n\r\nbreak;\r\ncase \x22plus\x22:\r\nreturn instaparse.combinators_source.plus((function (){var G__27970 \x3d (instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1(tree) : instaparse.cfg.content.call(null,tree));\r\nreturn (instaparse.cfg.build_rule.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.build_rule.cljs$core$IFn$_invoke$arity$1(G__27970) : instaparse.cfg.build_rule.call(null,G__27970));\r\n})());\r\n\r\nbreak;\r\ncase \x22look\x22:\r\nreturn instaparse.combinators_source.look((function (){var G__27971 \x3d (instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1(tree) : instaparse.cfg.content.call(null,tree));\r\nreturn (instaparse.cfg.build_rule.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.build_rule.cljs$core$IFn$_invoke$arity$1(G__27971) : instaparse.cfg.build_rule.call(null,G__27971));\r\n})());\r\n\r\nbreak;\r\ncase \x22neg\x22:\r\nreturn instaparse.combinators_source.neg((function (){var G__27976 \x3d (instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.content.cljs$core$IFn$_invoke$arity$1(tree) : instaparse.cfg.content.call(null,tree));\r\nreturn (instaparse.cfg.build_rule.cljs$core$IFn$_invoke$arity$1 ? instaparse.cfg.build_rule.cljs$core$IFn$_invoke$arity$1(G__27976) : instaparse.cfg.build_rule.call(null,G__27976));\r\n})());\r\n\r\nbreak;\r\ncase \x22epsilon\x22:\r\nreturn instaparse.combinators_source.Epsilon;\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__27953__$1)].join(\x27\x27)));\r\n\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Returns a sequence of all non-terminals in a parser built from combinators.\r\n */\r\ninstaparse.cfg.seq_nt \x3d (function instaparse$cfg$seq_nt(parser){\r\nwhile(true){\r\nvar G__27979 \x3d new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223).cljs$core$IFn$_invoke$arity$1(parser);\r\nvar G__27979__$1 \x3d (((G__27979 instanceof cljs.core.Keyword))?G__27979.fqn:null);\r\nswitch (G__27979__$1) {\r\ncase \x22nt\x22:\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747).cljs$core$IFn$_invoke$arity$1(parser)], null);\r\n\r\nbreak;\r\ncase \x22string\x22:\r\ncase \x22string-ci\x22:\r\ncase \x22char\x22:\r\ncase \x22regexp\x22:\r\ncase \x22epsilon\x22:\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n\r\nbreak;\r\ncase \x22opt\x22:\r\ncase \x22plus\x22:\r\ncase \x22star\x22:\r\ncase \x22look\x22:\r\ncase \x22neg\x22:\r\ncase \x22rep\x22:\r\nvar G__28150 \x3d new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310).cljs$core$IFn$_invoke$arity$1(parser);\r\nparser \x3d G__28150;\r\ncontinue;\r\n\r\nbreak;\r\ncase \x22alt\x22:\r\ncase \x22cat\x22:\r\nreturn cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(instaparse.cfg.seq_nt,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827).cljs$core$IFn$_invoke$arity$1(parser)], 0));\r\n\r\nbreak;\r\ncase \x22ord\x22:\r\nreturn cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(instaparse.cfg.seq_nt,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22parser1\x22,\x22parser1\x22,-439601422).cljs$core$IFn$_invoke$arity$1(parser),new cljs.core.Keyword(null,\x22parser2\x22,\x22parser2\x22,1013754688).cljs$core$IFn$_invoke$arity$1(parser)], null)], 0));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__27979__$1)].join(\x27\x27)));\r\n\r\n}\r\nbreak;\r\n}\r\n});\r\n/**\r\n * Throw error if grammar uses any invalid non-terminals in its productions\r\n */\r\ninstaparse.cfg.check_grammar \x3d (function instaparse$cfg$check_grammar(grammar_map){\r\nvar valid_nts_28151 \x3d cljs.core.set(cljs.core.keys(grammar_map));\r\nvar seq__27982_28152 \x3d cljs.core.seq(cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(instaparse.cfg.seq_nt,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.vals(grammar_map)], 0))));\r\nvar chunk__27983_28153 \x3d null;\r\nvar count__27984_28154 \x3d (0);\r\nvar i__27985_28155 \x3d (0);\r\nwhile(true){\r\nif((i__27985_28155 \x3c count__27984_28154)){\r\nvar nt_28156 \x3d chunk__27983_28153.cljs$core$IIndexed$_nth$arity$2(null,i__27985_28155);\r\nif(cljs.core.truth_((valid_nts_28151.cljs$core$IFn$_invoke$arity$1 ? valid_nts_28151.cljs$core$IFn$_invoke$arity$1(nt_28156) : valid_nts_28151.call(null,nt_28156)))){\r\n} else {\r\ninstaparse.util.throw_runtime_exception.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.subs.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(nt_28156),(1)),\x22 occurs on the right-hand side of your grammar, but not on the left\x22], 0));\r\n}\r\n\r\n\r\nvar G__28160 \x3d seq__27982_28152;\r\nvar G__28161 \x3d chunk__27983_28153;\r\nvar G__28162 \x3d count__27984_28154;\r\nvar G__28163 \x3d (i__27985_28155 + (1));\r\nseq__27982_28152 \x3d G__28160;\r\nchunk__27983_28153 \x3d G__28161;\r\ncount__27984_28154 \x3d G__28162;\r\ni__27985_28155 \x3d G__28163;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto___28164 \x3d cljs.core.seq(seq__27982_28152);\r\nif(temp__5753__auto___28164){\r\nvar seq__27982_28166__$1 \x3d temp__5753__auto___28164;\r\nif(cljs.core.chunked_seq_QMARK_(seq__27982_28166__$1)){\r\nvar c__4679__auto___28167 \x3d cljs.core.chunk_first(seq__27982_28166__$1);\r\nvar G__28168 \x3d cljs.core.chunk_rest(seq__27982_28166__$1);\r\nvar G__28169 \x3d c__4679__auto___28167;\r\nvar G__28170 \x3d cljs.core.count(c__4679__auto___28167);\r\nvar G__28171 \x3d (0);\r\nseq__27982_28152 \x3d G__28168;\r\nchunk__27983_28153 \x3d G__28169;\r\ncount__27984_28154 \x3d G__28170;\r\ni__27985_28155 \x3d G__28171;\r\ncontinue;\r\n} else {\r\nvar nt_28172 \x3d cljs.core.first(seq__27982_28166__$1);\r\nif(cljs.core.truth_((valid_nts_28151.cljs$core$IFn$_invoke$arity$1 ? valid_nts_28151.cljs$core$IFn$_invoke$arity$1(nt_28172) : valid_nts_28151.call(null,nt_28172)))){\r\n} else {\r\ninstaparse.util.throw_runtime_exception.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.subs.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(nt_28172),(1)),\x22 occurs on the right-hand side of your grammar, but not on the left\x22], 0));\r\n}\r\n\r\n\r\nvar G__28173 \x3d cljs.core.next(seq__27982_28166__$1);\r\nvar G__28174 \x3d null;\r\nvar G__28175 \x3d (0);\r\nvar G__28176 \x3d (0);\r\nseq__27982_28152 \x3d G__28173;\r\nchunk__27983_28153 \x3d G__28174;\r\ncount__27984_28154 \x3d G__28175;\r\ni__27985_28155 \x3d G__28176;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nreturn grammar_map;\r\n});\r\ninstaparse.cfg.build_parser \x3d (function instaparse$cfg$build_parser(spec,output_format){\r\nvar rules \x3d instaparse.gll.parse(instaparse.cfg.cfg,new cljs.core.Keyword(null,\x22rules\x22,\x22rules\x22,1198912366),spec,false);\r\nif((rules instanceof instaparse.gll.Failure)){\r\nreturn instaparse.util.throw_runtime_exception.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Error parsing grammar specification:\\n\x22,(function (){var sb__4795__auto__ \x3d (new goog.string.StringBuffer());\r\nvar _STAR_print_newline_STAR__orig_val__28076_28178 \x3d cljs.core._STAR_print_newline_STAR_;\r\nvar _STAR_print_fn_STAR__orig_val__28077_28179 \x3d cljs.core._STAR_print_fn_STAR_;\r\nvar _STAR_print_newline_STAR__temp_val__28082_28180 \x3d true;\r\nvar _STAR_print_fn_STAR__temp_val__28083_28181 \x3d (function (x__4796__auto__){\r\nreturn sb__4795__auto__.append(x__4796__auto__);\r\n});\r\n(cljs.core._STAR_print_newline_STAR_ \x3d _STAR_print_newline_STAR__temp_val__28082_28180);\r\n\r\n(cljs.core._STAR_print_fn_STAR_ \x3d _STAR_print_fn_STAR__temp_val__28083_28181);\r\n\r\ntry{cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([rules], 0));\r\n}finally {(cljs.core._STAR_print_fn_STAR_ \x3d _STAR_print_fn_STAR__orig_val__28077_28179);\r\n\r\n(cljs.core._STAR_print_newline_STAR_ \x3d _STAR_print_newline_STAR__orig_val__28076_28178);\r\n}\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4795__auto__);\r\n})()], 0));\r\n} else {\r\nvar productions \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(instaparse.cfg.build_rule,rules);\r\nvar start_production \x3d cljs.core.first(cljs.core.first(productions));\r\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267),instaparse.cfg.check_grammar(instaparse.reduction.apply_standard_reductions.cljs$core$IFn$_invoke$arity$2(output_format,cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,productions))),new cljs.core.Keyword(null,\x22start-production\x22,\x22start-production\x22,687546537),start_production,new cljs.core.Keyword(null,\x22output-format\x22,\x22output-format\x22,-1826382676),output_format], null);\r\n}\r\n});\r\ninstaparse.cfg.build_parser_from_combinators \x3d (function instaparse$cfg$build_parser_from_combinators(grammar_map,output_format,start_production){\r\nif((start_production \x3d\x3d null)){\r\nreturn instaparse.util.throw_illegal_argument_exception.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22When you build a parser from a map of parser combinators, you must provide a start production using the :start keyword argument.\x22], 0));\r\n} else {\r\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267),instaparse.cfg.check_grammar(instaparse.reduction.apply_standard_reductions.cljs$core$IFn$_invoke$arity$2(output_format,grammar_map)),new cljs.core.Keyword(null,\x22start-production\x22,\x22start-production\x22,687546537),start_production,new cljs.core.Keyword(null,\x22output-format\x22,\x22output-format\x22,-1826382676),output_format], null);\r\n}\r\n});\r\n/**\r\n * Takes an EBNF grammar specification string and returns the combinator version.\r\n * If you give it the right-hand side of a rule, it will return the combinator equivalent.\r\n * If you give it a series of rules, it will give you back a grammar map.\r\n * Useful for combining with other combinators.\r\n */\r\ninstaparse.cfg.ebnf \x3d (function instaparse$cfg$ebnf(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___28186 \x3d arguments.length;\r\nvar i__4865__auto___28187 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___28187 \x3c len__4864__auto___28186)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___28187]));\r\n\r\nvar G__28189 \x3d (i__4865__auto___28187 + (1));\r\ni__4865__auto___28187 \x3d G__28189;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((1) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((1)),(0),null)):null);\r\nreturn instaparse.cfg.ebnf.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4871__auto__);\r\n});\r\n\r\n(instaparse.cfg.ebnf.cljs$core$IFn$_invoke$arity$variadic \x3d (function (spec,p__28110){\r\nvar map__28114 \x3d p__28110;\r\nvar map__28114__$1 \x3d cljs.core.__destructure_map(map__28114);\r\nvar opts \x3d map__28114__$1;\r\nvar _STAR_case_insensitive_literals_STAR__orig_val__28115 \x3d instaparse.cfg._STAR_case_insensitive_literals_STAR_;\r\nvar _STAR_case_insensitive_literals_STAR__temp_val__28116 \x3d new cljs.core.Keyword(null,\x22string-ci\x22,\x22string-ci\x22,374631805).cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328));\r\n(instaparse.cfg._STAR_case_insensitive_literals_STAR_ \x3d _STAR_case_insensitive_literals_STAR__temp_val__28116);\r\n\r\ntry{var rules \x3d instaparse.gll.parse(instaparse.cfg.cfg,new cljs.core.Keyword(null,\x22rules-or-parser\x22,\x22rules-or-parser\x22,-314380386),spec,false);\r\nif((rules instanceof instaparse.gll.Failure)){\r\nreturn instaparse.util.throw_runtime_exception.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Error parsing grammar specification:\\n\x22,(function (){var sb__4795__auto__ \x3d (new goog.string.StringBuffer());\r\nvar _STAR_print_newline_STAR__orig_val__28124_28191 \x3d cljs.core._STAR_print_newline_STAR_;\r\nvar _STAR_print_fn_STAR__orig_val__28125_28192 \x3d cljs.core._STAR_print_fn_STAR_;\r\nvar _STAR_print_newline_STAR__temp_val__28126_28193 \x3d true;\r\nvar _STAR_print_fn_STAR__temp_val__28127_28194 \x3d (function (x__4796__auto__){\r\nreturn sb__4795__auto__.append(x__4796__auto__);\r\n});\r\n(cljs.core._STAR_print_newline_STAR_ \x3d _STAR_print_newline_STAR__temp_val__28126_28193);\r\n\r\n(cljs.core._STAR_print_fn_STAR_ \x3d _STAR_print_fn_STAR__temp_val__28127_28194);\r\n\r\ntry{cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([rules], 0));\r\n}finally {(cljs.core._STAR_print_fn_STAR_ \x3d _STAR_print_fn_STAR__orig_val__28125_28192);\r\n\r\n(cljs.core._STAR_print_newline_STAR_ \x3d _STAR_print_newline_STAR__orig_val__28124_28191);\r\n}\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4795__auto__);\r\n})()], 0));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22rule\x22,\x22rule\x22,729973257),cljs.core.ffirst(rules))){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(instaparse.cfg.build_rule,rules));\r\n} else {\r\nreturn instaparse.cfg.build_rule(cljs.core.first(rules));\r\n\r\n}\r\n}\r\n}finally {(instaparse.cfg._STAR_case_insensitive_literals_STAR_ \x3d _STAR_case_insensitive_literals_STAR__orig_val__28115);\r\n}}));\r\n\r\n(instaparse.cfg.ebnf.cljs$lang$maxFixedArity \x3d (1));\r\n\r\n/** @this {Function} */\r\n(instaparse.cfg.ebnf.cljs$lang$applyTo \x3d (function (seq28106){\r\nvar G__28107 \x3d cljs.core.first(seq28106);\r\nvar seq28106__$1 \x3d cljs.core.next(seq28106);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__28107,seq28106__$1);\r\n}));\r\n\r\n");
SHADOW_ENV.evalLoad("instaparse.transform.js", true , "goog.provide(\x27instaparse.transform\x27);\r\ninstaparse.transform.map_preserving_meta \x3d (function instaparse$transform$map_preserving_meta(f,l){\r\nreturn cljs.core.with_meta(cljs.core.map.cljs$core$IFn$_invoke$arity$2(f,l),cljs.core.meta(l));\r\n});\r\n/**\r\n * This variation of the merge-meta in gll does nothing if obj is not\r\n * something that can have a metamap attached.\r\n */\r\ninstaparse.transform.merge_meta \x3d (function instaparse$transform$merge_meta(obj,metamap){\r\nif((((!((obj \x3d\x3d null))))?(((((obj.cljs$lang$protocol_mask$partition0$ \x26 (262144))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d obj.cljs$core$IWithMeta$))))?true:(((!obj.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,obj):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,obj))){\r\nreturn instaparse.gll.merge_meta(obj,metamap);\r\n} else {\r\nreturn obj;\r\n}\r\n});\r\ninstaparse.transform.enlive_transform \x3d (function instaparse$transform$enlive_transform(transform_map,parse_tree){\r\nvar transform \x3d (function (){var G__27909 \x3d new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223).cljs$core$IFn$_invoke$arity$1(parse_tree);\r\nreturn (transform_map.cljs$core$IFn$_invoke$arity$1 ? transform_map.cljs$core$IFn$_invoke$arity$1(G__27909) : transform_map.call(null,G__27909));\r\n})();\r\nif(cljs.core.truth_(transform)){\r\nreturn instaparse.transform.merge_meta(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(transform,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(instaparse.transform.enlive_transform,transform_map),new cljs.core.Keyword(null,\x22content\x22,\x22content\x22,15833224).cljs$core$IFn$_invoke$arity$1(parse_tree))),cljs.core.meta(parse_tree));\r\n} else {\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223).cljs$core$IFn$_invoke$arity$1(parse_tree))){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parse_tree,new cljs.core.Keyword(null,\x22content\x22,\x22content\x22,15833224),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(instaparse.transform.enlive_transform,transform_map),new cljs.core.Keyword(null,\x22content\x22,\x22content\x22,15833224).cljs$core$IFn$_invoke$arity$1(parse_tree)));\r\n} else {\r\nreturn parse_tree;\r\n\r\n}\r\n}\r\n});\r\ninstaparse.transform.hiccup_transform \x3d (function instaparse$transform$hiccup_transform(transform_map,parse_tree){\r\nif(((cljs.core.sequential_QMARK_(parse_tree)) \x26\x26 (cljs.core.seq(parse_tree)))){\r\nvar temp__5751__auto__ \x3d (function (){var G__27915 \x3d cljs.core.first(parse_tree);\r\nreturn (transform_map.cljs$core$IFn$_invoke$arity$1 ? transform_map.cljs$core$IFn$_invoke$arity$1(G__27915) : transform_map.call(null,G__27915));\r\n})();\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar transform \x3d temp__5751__auto__;\r\nreturn instaparse.transform.merge_meta(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(transform,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(instaparse.transform.hiccup_transform,transform_map),cljs.core.next(parse_tree))),cljs.core.meta(parse_tree));\r\n} else {\r\nreturn cljs.core.with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(parse_tree)], null),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(instaparse.transform.hiccup_transform,transform_map),cljs.core.next(parse_tree))),cljs.core.meta(parse_tree));\r\n}\r\n} else {\r\nreturn parse_tree;\r\n}\r\n});\r\n/**\r\n * Takes a transform map and a parse tree (or seq of parse-trees).\r\n * A transform map is a mapping from tags to \r\n * functions that take a node\x27s contents and return\r\n * a replacement for the node, i.e.,\r\n * {:node-tag (fn [child1 child2 ...] node-replacement),\r\n *  :another-node-tag (fn [child1 child2 ...] node-replacement)}\r\n */\r\ninstaparse.transform.transform \x3d (function instaparse$transform$transform(transform_map,parse_tree){\r\nif(typeof parse_tree \x3d\x3d\x3d \x27string\x27){\r\nreturn parse_tree;\r\n} else {\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d cljs.core.map_QMARK_(parse_tree);\r\nif(and__4251__auto__){\r\nreturn new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223).cljs$core$IFn$_invoke$arity$1(parse_tree);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nreturn instaparse.transform.enlive_transform(transform_map,parse_tree);\r\n} else {\r\nif(((cljs.core.vector_QMARK_(parse_tree)) \x26\x26 ((cljs.core.first(parse_tree) instanceof cljs.core.Keyword)))){\r\nreturn instaparse.transform.hiccup_transform(transform_map,parse_tree);\r\n} else {\r\nif(cljs.core.sequential_QMARK_(parse_tree)){\r\nreturn instaparse.transform.map_preserving_meta(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(instaparse.transform.transform,transform_map),parse_tree);\r\n} else {\r\nif((parse_tree instanceof instaparse.gll.Failure)){\r\nreturn parse_tree;\r\n} else {\r\nreturn instaparse.util.throw_illegal_argument_exception.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid parse-tree, not recognized as either enlive or hiccup format.\x22], 0));\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\n");
SHADOW_ENV.evalLoad("goog.string.stringformat.js", true , "goog.provide(\x22goog.string.format\x22);\ngoog.require(\x22goog.string\x22);\ngoog.string.format \x3d function(formatString, var_args) {\n  const args \x3d Array.prototype.slice.call(arguments);\n  const template \x3d args.shift();\n  if (typeof template \x3d\x3d \x22undefined\x22) {\n    throw new Error(\x22[goog.string.format] Template required\x22);\n  }\n  const formatRe \x3d /%([0\\- \\+]*)(\\d+)?(\\.(\\d+))?([%sfdiu])/g;\n  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {\n    if (type \x3d\x3d \x22%\x22) {\n      return \x22%\x22;\n    }\n    const value \x3d args.shift();\n    if (typeof value \x3d\x3d \x22undefined\x22) {\n      throw new Error(\x22[goog.string.format] Not enough arguments\x22);\n    }\n    arguments[0] \x3d value;\n    return goog.string.format.demuxes_[type].apply(null, arguments);\n  }\n  return template.replace(formatRe, replacerDemuxer);\n};\ngoog.string.format.demuxes_ \x3d {};\ngoog.string.format.demuxes_[\x22s\x22] \x3d function(value, flags, width, dotp, precision, type, offset, wholeString) {\n  let replacement \x3d value;\n  if (isNaN(width) || width \x3d\x3d \x22\x22 || replacement.length \x3e\x3d Number(width)) {\n    return replacement;\n  }\n  if (flags.indexOf(\x22-\x22, 0) \x3e -1) {\n    replacement \x3d replacement + goog.string.repeat(\x22 \x22, Number(width) - replacement.length);\n  } else {\n    replacement \x3d goog.string.repeat(\x22 \x22, Number(width) - replacement.length) + replacement;\n  }\n  return replacement;\n};\ngoog.string.format.demuxes_[\x22f\x22] \x3d function(value, flags, width, dotp, precision, type, offset, wholeString) {\n  let replacement \x3d value.toString();\n  if (!(isNaN(precision) || precision \x3d\x3d \x22\x22)) {\n    replacement \x3d parseFloat(value).toFixed(precision);\n  }\n  let sign;\n  if (Number(value) \x3c 0) {\n    sign \x3d \x22-\x22;\n  } else if (flags.indexOf(\x22+\x22) \x3e\x3d 0) {\n    sign \x3d \x22+\x22;\n  } else if (flags.indexOf(\x22 \x22) \x3e\x3d 0) {\n    sign \x3d \x22 \x22;\n  } else {\n    sign \x3d \x22\x22;\n  }\n  if (Number(value) \x3e\x3d 0) {\n    replacement \x3d sign + replacement;\n  }\n  if (isNaN(width) || replacement.length \x3e\x3d Number(width)) {\n    return replacement;\n  }\n  replacement \x3d isNaN(precision) ? Math.abs(Number(value)).toString() : Math.abs(Number(value)).toFixed(precision);\n  const padCount \x3d Number(width) - replacement.length - sign.length;\n  if (flags.indexOf(\x22-\x22, 0) \x3e\x3d 0) {\n    replacement \x3d sign + replacement + goog.string.repeat(\x22 \x22, padCount);\n  } else {\n    const paddingChar \x3d flags.indexOf(\x220\x22, 0) \x3e\x3d 0 ? \x220\x22 : \x22 \x22;\n    replacement \x3d sign + goog.string.repeat(paddingChar, padCount) + replacement;\n  }\n  return replacement;\n};\ngoog.string.format.demuxes_[\x22d\x22] \x3d function(value, flags, width, dotp, precision, type, offset, wholeString) {\n  return goog.string.format.demuxes_[\x22f\x22](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);\n};\ngoog.string.format.demuxes_[\x22i\x22] \x3d goog.string.format.demuxes_[\x22d\x22];\ngoog.string.format.demuxes_[\x22u\x22] \x3d goog.string.format.demuxes_[\x22d\x22];\n");
SHADOW_ENV.evalLoad("instaparse.abnf.js", true , "goog.provide(\x27instaparse.abnf\x27);\r\n/**\r\n * This is normally set to false, in which case the non-terminals\r\n * are treated as case-sensitive, which is NOT the norm\r\n * for ABNF grammars. If you really want case-insensitivity,\r\n * bind this to true, in which case all non-terminals\r\n * will be converted to upper-case internally (which\r\n * you\x27ll have to keep in mind when transforming).\r\n */\r\ninstaparse.abnf._STAR_case_insensitive_STAR_ \x3d false;\r\ninstaparse.abnf.abnf_core \x3d cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\x22CRLF\x22,\x22CRLF\x22,11418756),new cljs.core.Keyword(null,\x22HTAB\x22,\x22HTAB\x22,11392612),new cljs.core.Keyword(null,\x22LWSP\x22,\x22LWSP\x22,782998598),new cljs.core.Keyword(null,\x22LF\x22,\x22LF\x22,1177033158),new cljs.core.Keyword(null,\x22VCHAR\x22,\x22VCHAR\x22,1962437706),new cljs.core.Keyword(null,\x22DIGIT\x22,\x22DIGIT\x22,341251338),new cljs.core.Keyword(null,\x22SP\x22,\x22SP\x22,124290284),new cljs.core.Keyword(null,\x22HEXDIG\x22,\x22HEXDIG\x22,-200221072),new cljs.core.Keyword(null,\x22CTL\x22,\x22CTL\x22,-9995632),new cljs.core.Keyword(null,\x22DQUOTE\x22,\x22DQUOTE\x22,-571169808),new cljs.core.Keyword(null,\x22WSP\x22,\x22WSP\x22,-1046948716),new cljs.core.Keyword(null,\x22CR\x22,\x22CR\x22,-1654295403),new cljs.core.Keyword(null,\x22OCTET\x22,\x22OCTET\x22,-743420682),new cljs.core.Keyword(null,\x22ALPHA\x22,\x22ALPHA\x22,-1463859144),new cljs.core.Keyword(null,\x22CHAR\x22,\x22CHAR\x22,-1280338086),new cljs.core.Keyword(null,\x22BIT\x22,\x22BIT\x22,-1854474115)],[instaparse.combinators_source.string(\x22\\r\\n\x22),instaparse.combinators_source.string(\x22\\t\x22),instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.string(\x22 \x22),instaparse.combinators_source.string(\x22\\t\x22)], 0)),instaparse.combinators_source.star(instaparse.combinators_source.cat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.string(\x22\\r\\n\x22),instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.string(\x22 \x22),instaparse.combinators_source.string(\x22\\t\x22)], 0))], 0)))], 0)),instaparse.combinators_source.string(\x22\\n\x22),instaparse.combinators_source.regexp(\x22[\\\\u0021-\\\\u007E]\x22),instaparse.combinators_source.regexp(\x22[0-9]\x22),instaparse.combinators_source.string(\x22 \x22),instaparse.combinators_source.regexp(\x22[0-9a-fA-F]\x22),instaparse.combinators_source.regexp(\x22[\\\\u0000-\\\\u001F|\\\\u007F]\x22),instaparse.combinators_source.string(\x22\\\x22\x22),instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.string(\x22 \x22),instaparse.combinators_source.string(\x22\\t\x22)], 0)),instaparse.combinators_source.string(\x22\\r\x22),instaparse.combinators_source.regexp(\x22[\\\\u0000-\\\\u00FF]\x22),instaparse.combinators_source.regexp(\x22[a-zA-Z]\x22),instaparse.combinators_source.regexp(\x22[\\\\u0001-\\\\u007F]\x22),instaparse.combinators_source.regexp(\x22[01]\x22)]);\r\ninstaparse.abnf.abnf_grammar_common \x3d \x22\\n\x3crulelist\x3e \x3d \x3copt-whitespace\x3e (rule | hide-tag-rule)+;\\nrule \x3d rulename-left \x3cdefined-as\x3e alternation \x3copt-whitespace\x3e;\\nhide-tag-rule \x3d hide-tag \x3cdefined-as\x3e alternation \x3copt-whitespace\x3e;\\nrulename-left \x3d rulename;\\nrulename-right \x3d rulename;\\n\x3chide-tag\x3e \x3d \x3c\x27\x3c\x27 opt-whitespace\x3e rulename-left \x3copt-whitespace \x27\x3e\x27\x3e;\\ndefined-as \x3d \x3copt-whitespace\x3e (\x27\x3d\x27 | \x27\x3d/\x27) \x3copt-whitespace\x3e;\\nalternation \x3d concatenation (\x3copt-whitespace \x27/\x27 opt-whitespace\x3e concatenation)*;\\nconcatenation \x3d repetition (\x3cwhitespace\x3e repetition)*;\\nrepetition \x3d [repeat] \x3copt-whitespace\x3e element;\\nrepeat \x3d NUM | (NUM? \x27*\x27 NUM?);\\n\x3celement\x3e \x3d rulename-right | group | hide | option | char-val | num-val\\n          | look | neg | regexp;\\nlook \x3d \x3c\x27\x26\x27 opt-whitespace\x3e element;\\nneg \x3d \x3c\x27!\x27 opt-whitespace\x3e element;\\n\x3cgroup\x3e \x3d \x3c\x27(\x27 opt-whitespace\x3e alternation \x3copt-whitespace \x27)\x27\x3e;\\noption \x3d \x3c\x27[\x27 opt-whitespace\x3e alternation \x3copt-whitespace \x27]\x27\x3e;\\nhide \x3d \x3c\x27\x3c\x27 opt-whitespace\x3e alternation \x3copt-whitespace \x27\x3e\x27\x3e;\\nchar-val \x3d \x3c\x27\\\\u0022\x27\x3e #\x27[\\\\u0020-\\\\u0021\\\\u0023-\\\\u007E]\x27* \x3c\x27\\\\u0022\x27\x3e (* double-quoted strings *)\\n         | \x3c\x27\\\\u0027\x27\x3e #\x27[\\\\u0020-\\\\u0026(-~]\x27* \x3c\x27\\\\u0027\x27\x3e;  (* single-quoted strings *)\\n\x3cnum-val\x3e \x3d \x3c\x27%\x27\x3e (bin-val | dec-val | hex-val);\\nbin-val \x3d \x3c\x27b\x27\x3e bin-char\\n          [ (\x3c\x27.\x27\x3e bin-char)+ | (\x27-\x27 bin-char) ];\\nbin-char \x3d (\x270\x27 | \x271\x27)+;\\ndec-val \x3d \x3c\x27d\x27\x3e dec-char\\n          [ (\x3c\x27.\x27\x3e dec-char)+ | (\x27-\x27 dec-char) ];\\ndec-char \x3d DIGIT+;\\nhex-val \x3d \x3c\x27x\x27\x3e hex-char\\n          [ (\x3c\x27.\x27\x3e hex-char)+ | (\x27-\x27 hex-char) ];\\nhex-char \x3d HEXDIG+;\\nNUM \x3d DIGIT+;\\n\x3cDIGIT\x3e \x3d #\x27[0-9]\x27;\\n\x3cHEXDIG\x3e \x3d #\x27[0-9a-fA-F]\x27;\\n\\n\\n(* extra entrypoint to be used by the abnf combinator *)\\n\x3crules-or-parser\x3e \x3d rulelist | alternation;\\n  \x22;\r\ninstaparse.abnf.abnf_grammar_clj_only \x3d \x22\\n\x3crulename\x3e \x3d #\x27[a-zA-Z][-a-zA-Z0-9]*(?x) #identifier\x27;\\nopt-whitespace \x3d #\x27\\\\s*(?:;.*?(?:\\\\u000D?\\\\u000A\\\\s*|$))*(?x) # optional whitespace or comments\x27;\\nwhitespace \x3d #\x27\\\\s+(?:;.*?\\\\u000D?\\\\u000A\\\\s*)*(?x) # whitespace or comments\x27;\\nregexp \x3d #\\\x22#\x27[^\x27\\\\\\\\]*(?:\\\\\\\\.[^\x27\\\\\\\\]*)*\x27(?x) #Single-quoted regexp\\\x22\\n       | #\\\x22#\\\\\\\x22[^\\\\\\\x22\\\\\\\\]*(?:\\\\\\\\.[^\\\\\\\x22\\\\\\\\]*)*\\\\\\\x22(?x) #Double-quoted regexp\\\x22\\n\x22;\r\ninstaparse.abnf.abnf_grammar_cljs_only \x3d \x22\\n\x3crulename\x3e \x3d #\x27[a-zA-Z][-a-zA-Z0-9]*\x27;\\nopt-whitespace \x3d #\x27\\\\s*(?:;.*?(?:\\\\u000D?\\\\u000A\\\\s*|$))*\x27;\\nwhitespace \x3d #\x27\\\\s+(?:;.*?\\\\u000D?\\\\u000A\\\\s*)*\x27;\\nregexp \x3d #\\\x22#\x27[^\x27\\\\\\\\]*(?:\\\\\\\\.[^\x27\\\\\\\\]*)*\x27\\\x22\\n       | #\\\x22#\\\\\\\x22[^\\\\\\\x22\\\\\\\\]*(?:\\\\\\\\.[^\\\\\\\x22\\\\\\\\]*)*\\\\\\\x22\\\x22\\n\x22;\r\ninstaparse.abnf.abnf_parser \x3d cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\x22neg\x22,\x22neg\x22,1800032960),new cljs.core.Keyword(null,\x22group\x22,\x22group\x22,582596132),new cljs.core.Keyword(null,\x22hide-tag\x22,\x22hide-tag\x22,1347642501),new cljs.core.Keyword(null,\x22whitespace\x22,\x22whitespace\x22,-1340035483),new cljs.core.Keyword(null,\x22element\x22,\x22element\x22,1974019749),new cljs.core.Keyword(null,\x22hide-tag-rule\x22,\x22hide-tag-rule\x22,150267589),new cljs.core.Keyword(null,\x22look\x22,\x22look\x22,-539441433),new cljs.core.Keyword(null,\x22bin-char\x22,\x22bin-char\x22,-1662780697),new cljs.core.Keyword(null,\x22rule\x22,\x22rule\x22,729973257),new cljs.core.Keyword(null,\x22rulename-right\x22,\x22rulename-right\x22,1125609193),new cljs.core.Keyword(null,\x22DIGIT\x22,\x22DIGIT\x22,341251338),new cljs.core.Keyword(null,\x22NUM\x22,\x22NUM\x22,-218662260),new cljs.core.Keyword(null,\x22char-val\x22,\x22char-val\x22,1408617933),new cljs.core.Keyword(null,\x22num-val\x22,\x22num-val\x22,1497434478),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),new cljs.core.Keyword(null,\x22defined-as\x22,\x22defined-as\x22,-474679152),new cljs.core.Keyword(null,\x22HEXDIG\x22,\x22HEXDIG\x22,-200221072),new cljs.core.Keyword(null,\x22option\x22,\x22option\x22,65132272),new cljs.core.Keyword(null,\x22hex-char\x22,\x22hex-char\x22,764443568),new cljs.core.Keyword(null,\x22rulename\x22,\x22rulename\x22,948914160),new cljs.core.Keyword(null,\x22bin-val\x22,\x22bin-val\x22,1705209105),new cljs.core.Keyword(null,\x22dec-val\x22,\x22dec-val\x22,-1263870894),new cljs.core.Keyword(null,\x22concatenation\x22,\x22concatenation\x22,-951369614),new cljs.core.Keyword(null,\x22alternation\x22,\x22alternation\x22,-1162147630),new cljs.core.Keyword(null,\x22regexp\x22,\x22regexp\x22,-541372782),new cljs.core.Keyword(null,\x22repetition\x22,\x22repetition\x22,1938392115),new cljs.core.Keyword(null,\x22rulename-left\x22,\x22rulename-left\x22,-1824251564),new cljs.core.Keyword(null,\x22rulelist\x22,\x22rulelist\x22,-1871218473),new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927),new cljs.core.Keyword(null,\x22repeat\x22,\x22repeat\x22,832692087),new cljs.core.Keyword(null,\x22hex-val\x22,\x22hex-val\x22,1267737401),new cljs.core.Keyword(null,\x22dec-char\x22,\x22dec-char\x22,-646625154),new cljs.core.Keyword(null,\x22rules-or-parser\x22,\x22rules-or-parser\x22,-314380386)],[new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22!\x22], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927)], null),null,(1),null)),(2),null)),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22element\x22,\x22element\x22,1974019749)], null),null,(1),null)),(2),null)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22neg\x22,\x22neg\x22,1800032960)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22(\x22], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927)], null),null,(1),null)),(2),null)),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22alternation\x22,\x22alternation\x22,-1162147630)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22)\x22], null),null,(1),null)),(2),null)),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),null,(1),null)),(2),null)),(3),null)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22raw\x22,\x22raw\x22,1604651272)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22\x3c\x22], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927)], null),null,(1),null)),(2),null)),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22rulename-left\x22,\x22rulename-left\x22,-1824251564)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22\x3e\x22], null),null,(1),null)),(2),null)),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),null,(1),null)),(2),null)),(3),null)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22raw\x22,\x22raw\x22,1604651272)], null)], null),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.regexp(\x22\\\\s+(?:;.*?\\\\u000D?\\\\u000A\\\\s*)*\x22),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22whitespace\x22,\x22whitespace\x22,-1340035483)], null)], null)], 0)),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22alt\x22,\x22alt\x22,-3214426),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22rulename-right\x22,\x22rulename-right\x22,1125609193)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22group\x22,\x22group\x22,582596132)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22option\x22,\x22option\x22,65132272)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22char-val\x22,\x22char-val\x22,1408617933)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22num-val\x22,\x22num-val\x22,1497434478)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22look\x22,\x22look\x22,-539441433)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22neg\x22,\x22neg\x22,1800032960)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22regexp\x22,\x22regexp\x22,-541372782)], null),null,(1),null)),(2),null)),(3),null)),(4),null)),(5),null)),(6),null)),(7),null)),(8),null)),(9),null)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22raw\x22,\x22raw\x22,1604651272)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22hide-tag\x22,\x22hide-tag\x22,1347642501)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22defined-as\x22,\x22defined-as\x22,-474679152),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22alternation\x22,\x22alternation\x22,-1162147630)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),null,(1),null)),(2),null)),(3),null)),(4),null)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22hide-tag-rule\x22,\x22hide-tag-rule\x22,150267589)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22\x26\x22], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927)], null),null,(1),null)),(2),null)),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22element\x22,\x22element\x22,1974019749)], null),null,(1),null)),(2),null)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22look\x22,\x22look\x22,-539441433)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22plus\x22,\x22plus\x22,211540661),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22alt\x22,\x22alt\x22,-3214426),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x220\x22], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x221\x22], null),null,(1),null)),(2),null))], null),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22bin-char\x22,\x22bin-char\x22,-1662780697)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22rulename-left\x22,\x22rulename-left\x22,-1824251564)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22defined-as\x22,\x22defined-as\x22,-474679152),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22alternation\x22,\x22alternation\x22,-1162147630)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),null,(1),null)),(2),null)),(3),null)),(4),null)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22rule\x22,\x22rule\x22,729973257)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22rulename\x22,\x22rulename\x22,948914160),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22rulename-right\x22,\x22rulename-right\x22,1125609193)], null)], null),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.regexp(\x22[0-9]\x22),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22raw\x22,\x22raw\x22,1604651272)], null)], null)], 0)),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22plus\x22,\x22plus\x22,211540661),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22DIGIT\x22,\x22DIGIT\x22,341251338)], null),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22NUM\x22,\x22NUM\x22,-218662260)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22alt\x22,\x22alt\x22,-3214426),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22\\\x22\x22,new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22star\x22,\x22star\x22,279424429),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.regexp(\x22[\\\\u0020-\\\\u0021\\\\u0023-\\\\u007E]\x22),cljs.core.PersistentArrayMap.EMPTY], 0))], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22\\\x22\x22,new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),null,(1),null)),(2),null)),(3),null))], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22\x27\x22,new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22star\x22,\x22star\x22,279424429),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.regexp(\x22[\\\\u0020-\\\\u0026(-~]\x22),cljs.core.PersistentArrayMap.EMPTY], 0))], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22\x27\x22,new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),null,(1),null)),(2),null)),(3),null))], null),null,(1),null)),(2),null)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22char-val\x22,\x22char-val\x22,1408617933)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22%\x22,new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22alt\x22,\x22alt\x22,-3214426),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22bin-val\x22,\x22bin-val\x22,1705209105)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22dec-val\x22,\x22dec-val\x22,-1263870894)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22hex-val\x22,\x22hex-val\x22,1267737401)], null),null,(1),null)),(2),null)),(3),null))], null),null,(1),null)),(2),null)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22raw\x22,\x22raw\x22,1604651272)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22\x3c\x22], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927)], null),null,(1),null)),(2),null)),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22alternation\x22,\x22alternation\x22,-1162147630)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22\x3e\x22], null),null,(1),null)),(2),null)),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),null,(1),null)),(2),null)),(3),null)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22alt\x22,\x22alt\x22,-3214426),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22\x3d\x22], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22\x3d/\x22], null),null,(1),null)),(2),null))], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),null,(1),null)),(2),null)),(3),null)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22defined-as\x22,\x22defined-as\x22,-474679152)], null)], null),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.regexp(\x22[0-9a-fA-F]\x22),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22raw\x22,\x22raw\x22,1604651272)], null)], null)], 0)),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22[\x22], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927)], null),null,(1),null)),(2),null)),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22alternation\x22,\x22alternation\x22,-1162147630)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22]\x22], null),null,(1),null)),(2),null)),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),null,(1),null)),(2),null)),(3),null)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22option\x22,\x22option\x22,65132272)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22plus\x22,\x22plus\x22,211540661),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22HEXDIG\x22,\x22HEXDIG\x22,-200221072)], null),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22hex-char\x22,\x22hex-char\x22,764443568)], null)], null),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.regexp(\x22[a-zA-Z][-a-zA-Z0-9]*\x22),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22raw\x22,\x22raw\x22,1604651272)], null)], null)], 0)),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22b\x22,new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22bin-char\x22,\x22bin-char\x22,-1662780697)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22opt\x22,\x22opt\x22,-794706369),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22alt\x22,\x22alt\x22,-3214426),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22plus\x22,\x22plus\x22,211540661),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22.\x22,new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22bin-char\x22,\x22bin-char\x22,-1662780697)], null),null,(1),null)),(2),null))], null)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22-\x22], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22bin-char\x22,\x22bin-char\x22,-1662780697)], null),null,(1),null)),(2),null))], null),null,(1),null)),(2),null))], null)], null),null,(1),null)),(2),null)),(3),null)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22bin-val\x22,\x22bin-val\x22,1705209105)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22d\x22,new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22dec-char\x22,\x22dec-char\x22,-646625154)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22opt\x22,\x22opt\x22,-794706369),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22alt\x22,\x22alt\x22,-3214426),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22plus\x22,\x22plus\x22,211540661),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22.\x22,new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22dec-char\x22,\x22dec-char\x22,-646625154)], null),null,(1),null)),(2),null))], null)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22-\x22], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22dec-char\x22,\x22dec-char\x22,-646625154)], null),null,(1),null)),(2),null))], null),null,(1),null)),(2),null))], null)], null),null,(1),null)),(2),null)),(3),null)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22dec-val\x22,\x22dec-val\x22,-1263870894)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22repetition\x22,\x22repetition\x22,1938392115)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22star\x22,\x22star\x22,279424429),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22whitespace\x22,\x22whitespace\x22,-1340035483),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22repetition\x22,\x22repetition\x22,1938392115)], null),null,(1),null)),(2),null))], null)], null),null,(1),null)),(2),null)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22concatenation\x22,\x22concatenation\x22,-951369614)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22concatenation\x22,\x22concatenation\x22,-951369614)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22star\x22,\x22star\x22,279424429),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22/\x22], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927)], null),null,(1),null)),(2),null)),(3),null)),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22concatenation\x22,\x22concatenation\x22,-951369614)], null),null,(1),null)),(2),null))], null)], null),null,(1),null)),(2),null)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22alternation\x22,\x22alternation\x22,-1162147630)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22alt\x22,\x22alt\x22,-3214426),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.regexp(\x22#\x27[^\x27\\\\\\\\]*(?:\\\\\\\\.[^\x27\\\\\\\\]*)*\x27\x22),cljs.core.PersistentArrayMap.EMPTY], 0)),(new cljs.core.List(null,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.regexp(\x22#\\\\\\\x22[^\\\\\\\x22\\\\\\\\]*(?:\\\\\\\\.[^\\\\\\\x22\\\\\\\\]*)*\\\\\\\x22\x22),cljs.core.PersistentArrayMap.EMPTY], 0)),null,(1),null)),(2),null)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22regexp\x22,\x22regexp\x22,-541372782)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22opt\x22,\x22opt\x22,-794706369),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22repeat\x22,\x22repeat\x22,832692087)], null)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22element\x22,\x22element\x22,1974019749)], null),null,(1),null)),(2),null)),(3),null)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22repetition\x22,\x22repetition\x22,1938392115)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22rulename\x22,\x22rulename\x22,948914160),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22rulename-left\x22,\x22rulename-left\x22,-1824251564)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22plus\x22,\x22plus\x22,211540661),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22alt\x22,\x22alt\x22,-3214426),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22rule\x22,\x22rule\x22,729973257)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22hide-tag-rule\x22,\x22hide-tag-rule\x22,150267589)], null),null,(1),null)),(2),null))], null)], null),null,(1),null)),(2),null)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22raw\x22,\x22raw\x22,1604651272)], null)], null),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.combinators_source.regexp(\x22\\\\s*(?:;.*?(?:\\\\u000D?\\\\u000A\\\\s*|$))*\x22),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22opt-whitespace\x22,\x22opt-whitespace\x22,1115207927)], null)], null)], 0)),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22alt\x22,\x22alt\x22,-3214426),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22NUM\x22,\x22NUM\x22,-218662260)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22opt\x22,\x22opt\x22,-794706369),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22NUM\x22,\x22NUM\x22,-218662260)], null)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22*\x22], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22opt\x22,\x22opt\x22,-794706369),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22NUM\x22,\x22NUM\x22,-218662260)], null)], null),null,(1),null)),(2),null)),(3),null))], null),null,(1),null)),(2),null)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22repeat\x22,\x22repeat\x22,832692087)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22x\x22,new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22hex-char\x22,\x22hex-char\x22,764443568)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22opt\x22,\x22opt\x22,-794706369),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22alt\x22,\x22alt\x22,-3214426),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22plus\x22,\x22plus\x22,211540661),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22.\x22,new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),true], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22hex-char\x22,\x22hex-char\x22,764443568)], null),null,(1),null)),(2),null))], null)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),\x22-\x22], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22hex-char\x22,\x22hex-char\x22,764443568)], null),null,(1),null)),(2),null))], null),null,(1),null)),(2),null))], null)], null),null,(1),null)),(2),null)),(3),null)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22hex-val\x22,\x22hex-val\x22,1267737401)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22plus\x22,\x22plus\x22,211540661),new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22DIGIT\x22,\x22DIGIT\x22,341251338)], null),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),new cljs.core.Keyword(null,\x22dec-char\x22,\x22dec-char\x22,-646625154)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22alt\x22,\x22alt\x22,-3214426),new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22rulelist\x22,\x22rulelist\x22,-1871218473)], null),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22nt\x22,\x22nt\x22,-835425781),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22alternation\x22,\x22alternation\x22,-1162147630)], null),null,(1),null)),(2),null)),new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22reduction-type\x22,\x22reduction-type\x22,-488293450),new cljs.core.Keyword(null,\x22raw\x22,\x22raw\x22,1604651272)], null)], null)]);\r\ninstaparse.abnf.get_char_combinator \x3d (function instaparse$abnf$get_char_combinator(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___28524 \x3d arguments.length;\r\nvar i__4865__auto___28525 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___28525 \x3c len__4864__auto___28524)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___28525]));\r\n\r\nvar G__28526 \x3d (i__4865__auto___28525 + (1));\r\ni__4865__auto___28525 \x3d G__28526;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((0) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\r\nreturn instaparse.abnf.get_char_combinator.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\r\n});\r\n\r\n(instaparse.abnf.get_char_combinator.cljs$core$IFn$_invoke$arity$variadic \x3d (function (nums){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22-\x22,cljs.core.second(nums))){\r\nvar vec__28489 \x3d nums;\r\nvar lo \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28489,(0),null);\r\nvar _ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28489,(1),null);\r\nvar hi \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28489,(2),null);\r\nreturn instaparse.combinators_source.unicode_char.cljs$core$IFn$_invoke$arity$2(lo,hi);\r\n} else {\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(instaparse.combinators_source.cat,(function (){var iter__4652__auto__ \x3d (function instaparse$abnf$iter__28492(s__28493){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s__28493__$1 \x3d s__28493;\r\nwhile(true){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(s__28493__$1);\r\nif(temp__5753__auto__){\r\nvar s__28493__$2 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__28493__$2)){\r\nvar c__4650__auto__ \x3d cljs.core.chunk_first(s__28493__$2);\r\nvar size__4651__auto__ \x3d cljs.core.count(c__4650__auto__);\r\nvar b__28495 \x3d cljs.core.chunk_buffer(size__4651__auto__);\r\nif((function (){var i__28494 \x3d (0);\r\nwhile(true){\r\nif((i__28494 \x3c size__4651__auto__)){\r\nvar n \x3d cljs.core._nth(c__4650__auto__,i__28494);\r\ncljs.core.chunk_append(b__28495,instaparse.combinators_source.unicode_char.cljs$core$IFn$_invoke$arity$1(n));\r\n\r\nvar G__28527 \x3d (i__28494 + (1));\r\ni__28494 \x3d G__28527;\r\ncontinue;\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__28495),instaparse$abnf$iter__28492(cljs.core.chunk_rest(s__28493__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__28495),null);\r\n}\r\n} else {\r\nvar n \x3d cljs.core.first(s__28493__$2);\r\nreturn cljs.core.cons(instaparse.combinators_source.unicode_char.cljs$core$IFn$_invoke$arity$1(n),instaparse$abnf$iter__28492(cljs.core.rest(s__28493__$2)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}),null,null));\r\n});\r\nreturn iter__4652__auto__(nums);\r\n})());\r\n\r\n}\r\n}));\r\n\r\n(instaparse.abnf.get_char_combinator.cljs$lang$maxFixedArity \x3d (0));\r\n\r\n/** @this {Function} */\r\n(instaparse.abnf.get_char_combinator.cljs$lang$applyTo \x3d (function (seq28488){\r\nvar self__4852__auto__ \x3d this;\r\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq28488));\r\n}));\r\n\r\n/**\r\n * Restricts map to certain keys\r\n */\r\ninstaparse.abnf.project \x3d (function instaparse$abnf$project(m,ks){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4652__auto__ \x3d (function instaparse$abnf$project_$_iter__28496(s__28497){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s__28497__$1 \x3d s__28497;\r\nwhile(true){\r\nvar temp__5753__auto__ \x3d cljs.core.seq(s__28497__$1);\r\nif(temp__5753__auto__){\r\nvar s__28497__$2 \x3d temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__28497__$2)){\r\nvar c__4650__auto__ \x3d cljs.core.chunk_first(s__28497__$2);\r\nvar size__4651__auto__ \x3d cljs.core.count(c__4650__auto__);\r\nvar b__28499 \x3d cljs.core.chunk_buffer(size__4651__auto__);\r\nif((function (){var i__28498 \x3d (0);\r\nwhile(true){\r\nif((i__28498 \x3c size__4651__auto__)){\r\nvar k \x3d cljs.core._nth(c__4650__auto__,i__28498);\r\nif(cljs.core.contains_QMARK_(m,k)){\r\ncljs.core.chunk_append(b__28499,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,(m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(k) : m.call(null,k))], null));\r\n\r\nvar G__28528 \x3d (i__28498 + (1));\r\ni__28498 \x3d G__28528;\r\ncontinue;\r\n} else {\r\nvar G__28529 \x3d (i__28498 + (1));\r\ni__28498 \x3d G__28529;\r\ncontinue;\r\n}\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__28499),instaparse$abnf$project_$_iter__28496(cljs.core.chunk_rest(s__28497__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__28499),null);\r\n}\r\n} else {\r\nvar k \x3d cljs.core.first(s__28497__$2);\r\nif(cljs.core.contains_QMARK_(m,k)){\r\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,(m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(k) : m.call(null,k))], null),instaparse$abnf$project_$_iter__28496(cljs.core.rest(s__28497__$2)));\r\n} else {\r\nvar G__28530 \x3d cljs.core.rest(s__28497__$2);\r\ns__28497__$1 \x3d G__28530;\r\ncontinue;\r\n}\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}),null,null));\r\n});\r\nreturn iter__4652__auto__(ks);\r\n})());\r\n});\r\n/**\r\n * Merges abnf-core map in with parsed grammar map\r\n */\r\ninstaparse.abnf.merge_core \x3d (function instaparse$abnf$merge_core(grammar_map){\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([instaparse.abnf.project(instaparse.abnf.abnf_core,cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(instaparse.cfg.seq_nt,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.vals(grammar_map)], 0)))),grammar_map], 0));\r\n});\r\n/**\r\n * Tests whether parser was constructed with hide-tag\r\n */\r\ninstaparse.abnf.hide_tag_QMARK_ \x3d (function instaparse$abnf$hide_tag_QMARK_(p){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204).cljs$core$IFn$_invoke$arity$1(p),instaparse.reduction.raw_non_terminal_reduction);\r\n});\r\ninstaparse.abnf.alt_preserving_hide_tag \x3d (function instaparse$abnf$alt_preserving_hide_tag(p1,p2){\r\nvar hide_tag_p1_QMARK_ \x3d instaparse.abnf.hide_tag_QMARK_(p1);\r\nvar hide_tag_p2_QMARK_ \x3d instaparse.abnf.hide_tag_QMARK_(p2);\r\nif(((hide_tag_p1_QMARK_) \x26\x26 (hide_tag_p2_QMARK_))){\r\nreturn instaparse.combinators_source.hide_tag(instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(p1,new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204)),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(p2,new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204))], 0)));\r\n} else {\r\nif(hide_tag_p1_QMARK_){\r\nreturn instaparse.combinators_source.hide_tag(instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(p1,new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204)),p2], 0)));\r\n} else {\r\nif(hide_tag_p2_QMARK_){\r\nreturn instaparse.combinators_source.hide_tag(instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(p2,new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204))], 0)));\r\n} else {\r\nreturn instaparse.combinators_source.alt.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1,p2], 0));\r\n\r\n}\r\n}\r\n}\r\n});\r\ninstaparse.abnf.parse_int \x3d parseInt;\r\ninstaparse.abnf.abnf_transformer \x3d cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\x22neg\x22,\x22neg\x22,1800032960),new cljs.core.Keyword(null,\x22hide-tag-rule\x22,\x22hide-tag-rule\x22,150267589),new cljs.core.Keyword(null,\x22look\x22,\x22look\x22,-539441433),new cljs.core.Keyword(null,\x22bin-char\x22,\x22bin-char\x22,-1662780697),new cljs.core.Keyword(null,\x22rule\x22,\x22rule\x22,729973257),new cljs.core.Keyword(null,\x22rulename-right\x22,\x22rulename-right\x22,1125609193),new cljs.core.Keyword(null,\x22NUM\x22,\x22NUM\x22,-218662260),new cljs.core.Keyword(null,\x22char-val\x22,\x22char-val\x22,1408617933),new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169),new cljs.core.Keyword(null,\x22option\x22,\x22option\x22,65132272),new cljs.core.Keyword(null,\x22hex-char\x22,\x22hex-char\x22,764443568),new cljs.core.Keyword(null,\x22bin-val\x22,\x22bin-val\x22,1705209105),new cljs.core.Keyword(null,\x22dec-val\x22,\x22dec-val\x22,-1263870894),new cljs.core.Keyword(null,\x22concatenation\x22,\x22concatenation\x22,-951369614),new cljs.core.Keyword(null,\x22alternation\x22,\x22alternation\x22,-1162147630),new cljs.core.Keyword(null,\x22regexp\x22,\x22regexp\x22,-541372782),new cljs.core.Keyword(null,\x22repetition\x22,\x22repetition\x22,1938392115),new cljs.core.Keyword(null,\x22rulename-left\x22,\x22rulename-left\x22,-1824251564),new cljs.core.Keyword(null,\x22repeat\x22,\x22repeat\x22,832692087),new cljs.core.Keyword(null,\x22hex-val\x22,\x22hex-val\x22,1267737401),new cljs.core.Keyword(null,\x22dec-char\x22,\x22dec-char\x22,-646625154)],[instaparse.combinators_source.neg,(function (tag,rule){\r\nreturn cljs.core.PersistentArrayMap.createAsIfByAssoc([tag,instaparse.combinators_source.hide_tag(rule)]);\r\n}),instaparse.combinators_source.look,(function() { \r\nvar G__28531__delegate \x3d function (cs){\r\nvar G__28503 \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cs);\r\nvar G__28504 \x3d (2);\r\nreturn (instaparse.abnf.parse_int.cljs$core$IFn$_invoke$arity$2 ? instaparse.abnf.parse_int.cljs$core$IFn$_invoke$arity$2(G__28503,G__28504) : instaparse.abnf.parse_int.call(null,G__28503,G__28504));\r\n};\r\nvar G__28531 \x3d function (var_args){\r\nvar cs \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__28532__i \x3d 0, G__28532__a \x3d new Array(arguments.length -  0);\r\nwhile (G__28532__i \x3c G__28532__a.length) {G__28532__a[G__28532__i] \x3d arguments[G__28532__i + 0]; ++G__28532__i;}\r\n  cs \x3d new cljs.core.IndexedSeq(G__28532__a,0,null);\r\n} \r\nreturn G__28531__delegate.call(this,cs);};\r\nG__28531.cljs$lang$maxFixedArity \x3d 0;\r\nG__28531.cljs$lang$applyTo \x3d (function (arglist__28533){\r\nvar cs \x3d cljs.core.seq(arglist__28533);\r\nreturn G__28531__delegate(cs);\r\n});\r\nG__28531.cljs$core$IFn$_invoke$arity$variadic \x3d G__28531__delegate;\r\nreturn G__28531;\r\n})()\r\n,cljs.core.hash_map,(function() { \r\nvar G__28534__delegate \x3d function (rest__28501_SHARP_){\r\nif(cljs.core.truth_(instaparse.abnf._STAR_case_insensitive_STAR_)){\r\nreturn instaparse.combinators_source.nt(cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(clojure.string.upper_case(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,rest__28501_SHARP_))));\r\n} else {\r\nreturn instaparse.combinators_source.nt(cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,rest__28501_SHARP_)));\r\n}\r\n};\r\nvar G__28534 \x3d function (var_args){\r\nvar rest__28501_SHARP_ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__28535__i \x3d 0, G__28535__a \x3d new Array(arguments.length -  0);\r\nwhile (G__28535__i \x3c G__28535__a.length) {G__28535__a[G__28535__i] \x3d arguments[G__28535__i + 0]; ++G__28535__i;}\r\n  rest__28501_SHARP_ \x3d new cljs.core.IndexedSeq(G__28535__a,0,null);\r\n} \r\nreturn G__28534__delegate.call(this,rest__28501_SHARP_);};\r\nG__28534.cljs$lang$maxFixedArity \x3d 0;\r\nG__28534.cljs$lang$applyTo \x3d (function (arglist__28536){\r\nvar rest__28501_SHARP_ \x3d cljs.core.seq(arglist__28536);\r\nreturn G__28534__delegate(rest__28501_SHARP_);\r\n});\r\nG__28534.cljs$core$IFn$_invoke$arity$variadic \x3d G__28534__delegate;\r\nreturn G__28534;\r\n})()\r\n,(function() { \r\nvar G__28537__delegate \x3d function (rest__28502_SHARP_){\r\nvar G__28505 \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,rest__28502_SHARP_);\r\nreturn (instaparse.abnf.parse_int.cljs$core$IFn$_invoke$arity$1 ? instaparse.abnf.parse_int.cljs$core$IFn$_invoke$arity$1(G__28505) : instaparse.abnf.parse_int.call(null,G__28505));\r\n};\r\nvar G__28537 \x3d function (var_args){\r\nvar rest__28502_SHARP_ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__28538__i \x3d 0, G__28538__a \x3d new Array(arguments.length -  0);\r\nwhile (G__28538__i \x3c G__28538__a.length) {G__28538__a[G__28538__i] \x3d arguments[G__28538__i + 0]; ++G__28538__i;}\r\n  rest__28502_SHARP_ \x3d new cljs.core.IndexedSeq(G__28538__a,0,null);\r\n} \r\nreturn G__28537__delegate.call(this,rest__28502_SHARP_);};\r\nG__28537.cljs$lang$maxFixedArity \x3d 0;\r\nG__28537.cljs$lang$applyTo \x3d (function (arglist__28539){\r\nvar rest__28502_SHARP_ \x3d cljs.core.seq(arglist__28539);\r\nreturn G__28537__delegate(rest__28502_SHARP_);\r\n});\r\nG__28537.cljs$core$IFn$_invoke$arity$variadic \x3d G__28537__delegate;\r\nreturn G__28537;\r\n})()\r\n,(function() { \r\nvar G__28540__delegate \x3d function (cs){\r\nreturn instaparse.cfg.string_PLUS_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cs),true);\r\n};\r\nvar G__28540 \x3d function (var_args){\r\nvar cs \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__28541__i \x3d 0, G__28541__a \x3d new Array(arguments.length -  0);\r\nwhile (G__28541__i \x3c G__28541__a.length) {G__28541__a[G__28541__i] \x3d arguments[G__28541__i + 0]; ++G__28541__i;}\r\n  cs \x3d new cljs.core.IndexedSeq(G__28541__a,0,null);\r\n} \r\nreturn G__28540__delegate.call(this,cs);};\r\nG__28540.cljs$lang$maxFixedArity \x3d 0;\r\nG__28540.cljs$lang$applyTo \x3d (function (arglist__28542){\r\nvar cs \x3d cljs.core.seq(arglist__28542);\r\nreturn G__28540__delegate(cs);\r\n});\r\nG__28540.cljs$core$IFn$_invoke$arity$variadic \x3d G__28540__delegate;\r\nreturn G__28540;\r\n})()\r\n,instaparse.combinators_source.hide,instaparse.combinators_source.opt,(function() { \r\nvar G__28543__delegate \x3d function (cs){\r\nvar G__28506 \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cs);\r\nvar G__28507 \x3d (16);\r\nreturn (instaparse.abnf.parse_int.cljs$core$IFn$_invoke$arity$2 ? instaparse.abnf.parse_int.cljs$core$IFn$_invoke$arity$2(G__28506,G__28507) : instaparse.abnf.parse_int.call(null,G__28506,G__28507));\r\n};\r\nvar G__28543 \x3d function (var_args){\r\nvar cs \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__28544__i \x3d 0, G__28544__a \x3d new Array(arguments.length -  0);\r\nwhile (G__28544__i \x3c G__28544__a.length) {G__28544__a[G__28544__i] \x3d arguments[G__28544__i + 0]; ++G__28544__i;}\r\n  cs \x3d new cljs.core.IndexedSeq(G__28544__a,0,null);\r\n} \r\nreturn G__28543__delegate.call(this,cs);};\r\nG__28543.cljs$lang$maxFixedArity \x3d 0;\r\nG__28543.cljs$lang$applyTo \x3d (function (arglist__28545){\r\nvar cs \x3d cljs.core.seq(arglist__28545);\r\nreturn G__28543__delegate(cs);\r\n});\r\nG__28543.cljs$core$IFn$_invoke$arity$variadic \x3d G__28543__delegate;\r\nreturn G__28543;\r\n})()\r\n,instaparse.abnf.get_char_combinator,instaparse.abnf.get_char_combinator,instaparse.combinators_source.cat,instaparse.combinators_source.alt,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(instaparse.combinators_source.regexp,instaparse.cfg.process_regexp),(function() {\r\nvar G__28546 \x3d null;\r\nvar G__28546__1 \x3d (function (element){\r\nreturn element;\r\n});\r\nvar G__28546__2 \x3d (function (repeat,element){\r\nif(cljs.core.empty_QMARK_(repeat)){\r\nreturn instaparse.combinators_source.star(element);\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(repeat),(2))){\r\nreturn instaparse.combinators_source.rep(new cljs.core.Keyword(null,\x22low\x22,\x22low\x22,-1601362409).cljs$core$IFn$_invoke$arity$1(repeat),new cljs.core.Keyword(null,\x22high\x22,\x22high\x22,2027297808).cljs$core$IFn$_invoke$arity$1(repeat),element);\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22low\x22,\x22low\x22,-1601362409).cljs$core$IFn$_invoke$arity$1(repeat),(1))){\r\nreturn instaparse.combinators_source.plus(element);\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22high\x22,\x22high\x22,2027297808).cljs$core$IFn$_invoke$arity$1(repeat),(1))){\r\nreturn instaparse.combinators_source.opt(element);\r\n} else {\r\nreturn instaparse.combinators_source.rep((function (){var or__4253__auto__ \x3d new cljs.core.Keyword(null,\x22low\x22,\x22low\x22,-1601362409).cljs$core$IFn$_invoke$arity$1(repeat);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn (0);\r\n}\r\n})(),(function (){var or__4253__auto__ \x3d new cljs.core.Keyword(null,\x22high\x22,\x22high\x22,2027297808).cljs$core$IFn$_invoke$arity$1(repeat);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn Infinity;\r\n}\r\n})(),element);\r\n\r\n}\r\n}\r\n}\r\n}\r\n});\r\nG__28546 \x3d function(repeat,element){\r\nswitch(arguments.length){\r\ncase 1:\r\nreturn G__28546__1.call(this,repeat);\r\ncase 2:\r\nreturn G__28546__2.call(this,repeat,element);\r\n}\r\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\r\n};\r\nG__28546.cljs$core$IFn$_invoke$arity$1 \x3d G__28546__1;\r\nG__28546.cljs$core$IFn$_invoke$arity$2 \x3d G__28546__2;\r\nreturn G__28546;\r\n})()\r\n,(function() { \r\nvar G__28547__delegate \x3d function (rest__28500_SHARP_){\r\nif(cljs.core.truth_(instaparse.abnf._STAR_case_insensitive_STAR_)){\r\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(clojure.string.upper_case(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,rest__28500_SHARP_)));\r\n} else {\r\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,rest__28500_SHARP_));\r\n}\r\n};\r\nvar G__28547 \x3d function (var_args){\r\nvar rest__28500_SHARP_ \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__28548__i \x3d 0, G__28548__a \x3d new Array(arguments.length -  0);\r\nwhile (G__28548__i \x3c G__28548__a.length) {G__28548__a[G__28548__i] \x3d arguments[G__28548__i + 0]; ++G__28548__i;}\r\n  rest__28500_SHARP_ \x3d new cljs.core.IndexedSeq(G__28548__a,0,null);\r\n} \r\nreturn G__28547__delegate.call(this,rest__28500_SHARP_);};\r\nG__28547.cljs$lang$maxFixedArity \x3d 0;\r\nG__28547.cljs$lang$applyTo \x3d (function (arglist__28549){\r\nvar rest__28500_SHARP_ \x3d cljs.core.seq(arglist__28549);\r\nreturn G__28547__delegate(rest__28500_SHARP_);\r\n});\r\nG__28547.cljs$core$IFn$_invoke$arity$variadic \x3d G__28547__delegate;\r\nreturn G__28547;\r\n})()\r\n,(function() { \r\nvar G__28550__delegate \x3d function (items){\r\nvar G__28508 \x3d cljs.core.count(items);\r\nswitch (G__28508) {\r\ncase (1):\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(items),\x22*\x22)){\r\nreturn cljs.core.PersistentArrayMap.EMPTY;\r\n} else {\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22low\x22,\x22low\x22,-1601362409),cljs.core.first(items),new cljs.core.Keyword(null,\x22high\x22,\x22high\x22,2027297808),cljs.core.first(items)], null);\r\n\r\n}\r\n\r\nbreak;\r\ncase (2):\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(items),\x22*\x22)){\r\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22high\x22,\x22high\x22,2027297808),cljs.core.second(items)], null);\r\n} else {\r\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22low\x22,\x22low\x22,-1601362409),cljs.core.first(items)], null);\r\n\r\n}\r\n\r\nbreak;\r\ncase (3):\r\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22low\x22,\x22low\x22,-1601362409),cljs.core.first(items),new cljs.core.Keyword(null,\x22high\x22,\x22high\x22,2027297808),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(items,(2))], null);\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__28508)].join(\x27\x27)));\r\n\r\n}\r\n};\r\nvar G__28550 \x3d function (var_args){\r\nvar items \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__28552__i \x3d 0, G__28552__a \x3d new Array(arguments.length -  0);\r\nwhile (G__28552__i \x3c G__28552__a.length) {G__28552__a[G__28552__i] \x3d arguments[G__28552__i + 0]; ++G__28552__i;}\r\n  items \x3d new cljs.core.IndexedSeq(G__28552__a,0,null);\r\n} \r\nreturn G__28550__delegate.call(this,items);};\r\nG__28550.cljs$lang$maxFixedArity \x3d 0;\r\nG__28550.cljs$lang$applyTo \x3d (function (arglist__28553){\r\nvar items \x3d cljs.core.seq(arglist__28553);\r\nreturn G__28550__delegate(items);\r\n});\r\nG__28550.cljs$core$IFn$_invoke$arity$variadic \x3d G__28550__delegate;\r\nreturn G__28550;\r\n})()\r\n,instaparse.abnf.get_char_combinator,(function() { \r\nvar G__28554__delegate \x3d function (cs){\r\nvar G__28509 \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cs);\r\nreturn (instaparse.abnf.parse_int.cljs$core$IFn$_invoke$arity$1 ? instaparse.abnf.parse_int.cljs$core$IFn$_invoke$arity$1(G__28509) : instaparse.abnf.parse_int.call(null,G__28509));\r\n};\r\nvar G__28554 \x3d function (var_args){\r\nvar cs \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__28555__i \x3d 0, G__28555__a \x3d new Array(arguments.length -  0);\r\nwhile (G__28555__i \x3c G__28555__a.length) {G__28555__a[G__28555__i] \x3d arguments[G__28555__i + 0]; ++G__28555__i;}\r\n  cs \x3d new cljs.core.IndexedSeq(G__28555__a,0,null);\r\n} \r\nreturn G__28554__delegate.call(this,cs);};\r\nG__28554.cljs$lang$maxFixedArity \x3d 0;\r\nG__28554.cljs$lang$applyTo \x3d (function (arglist__28556){\r\nvar cs \x3d cljs.core.seq(arglist__28556);\r\nreturn G__28554__delegate(cs);\r\n});\r\nG__28554.cljs$core$IFn$_invoke$arity$variadic \x3d G__28554__delegate;\r\nreturn G__28554;\r\n})()\r\n]);\r\ninstaparse.abnf.rules__GT_grammar_map \x3d (function instaparse$abnf$rules__GT_grammar_map(rules){\r\nreturn instaparse.abnf.merge_core(cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.merge_with,instaparse.abnf.alt_preserving_hide_tag,rules));\r\n});\r\n/**\r\n * Takes an ABNF grammar specification string and returns the combinator version.\r\n * If you give it the right-hand side of a rule, it will return the combinator equivalent.\r\n * If you give it a series of rules, it will give you back a grammar map.\r\n * Useful for combining with other combinators.\r\n */\r\ninstaparse.abnf.abnf \x3d (function instaparse$abnf$abnf(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___28557 \x3d arguments.length;\r\nvar i__4865__auto___28558 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___28558 \x3c len__4864__auto___28557)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___28558]));\r\n\r\nvar G__28559 \x3d (i__4865__auto___28558 + (1));\r\ni__4865__auto___28558 \x3d G__28559;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((1) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((1)),(0),null)):null);\r\nreturn instaparse.abnf.abnf.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4871__auto__);\r\n});\r\n\r\n(instaparse.abnf.abnf.cljs$core$IFn$_invoke$arity$variadic \x3d (function (spec,p__28512){\r\nvar map__28513 \x3d p__28512;\r\nvar map__28513__$1 \x3d cljs.core.__destructure_map(map__28513);\r\nvar opts \x3d map__28513__$1;\r\nvar _STAR_case_insensitive_literals_STAR__orig_val__28514 \x3d instaparse.cfg._STAR_case_insensitive_literals_STAR_;\r\nvar _STAR_case_insensitive_literals_STAR__temp_val__28515 \x3d new cljs.core.Keyword(null,\x22string-ci\x22,\x22string-ci\x22,374631805).cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328));\r\n(instaparse.cfg._STAR_case_insensitive_literals_STAR_ \x3d _STAR_case_insensitive_literals_STAR__temp_val__28515);\r\n\r\ntry{var tree \x3d instaparse.gll.parse(instaparse.abnf.abnf_parser,new cljs.core.Keyword(null,\x22rules-or-parser\x22,\x22rules-or-parser\x22,-314380386),spec,false);\r\nif((tree instanceof instaparse.gll.Failure)){\r\nreturn instaparse.util.throw_runtime_exception.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Error parsing grammar specification:\\n\x22,(function (){var sb__4795__auto__ \x3d (new goog.string.StringBuffer());\r\nvar _STAR_print_newline_STAR__orig_val__28516_28560 \x3d cljs.core._STAR_print_newline_STAR_;\r\nvar _STAR_print_fn_STAR__orig_val__28517_28561 \x3d cljs.core._STAR_print_fn_STAR_;\r\nvar _STAR_print_newline_STAR__temp_val__28518_28562 \x3d true;\r\nvar _STAR_print_fn_STAR__temp_val__28519_28563 \x3d (function (x__4796__auto__){\r\nreturn sb__4795__auto__.append(x__4796__auto__);\r\n});\r\n(cljs.core._STAR_print_newline_STAR_ \x3d _STAR_print_newline_STAR__temp_val__28518_28562);\r\n\r\n(cljs.core._STAR_print_fn_STAR_ \x3d _STAR_print_fn_STAR__temp_val__28519_28563);\r\n\r\ntry{cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tree], 0));\r\n}finally {(cljs.core._STAR_print_fn_STAR_ \x3d _STAR_print_fn_STAR__orig_val__28517_28561);\r\n\r\n(cljs.core._STAR_print_newline_STAR_ \x3d _STAR_print_newline_STAR__orig_val__28516_28560);\r\n}\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4795__auto__);\r\n})()], 0));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22alternation\x22,\x22alternation\x22,-1162147630),cljs.core.ffirst(tree))){\r\nreturn instaparse.transform.transform(instaparse.abnf.abnf_transformer,cljs.core.first(tree));\r\n} else {\r\nreturn instaparse.abnf.rules__GT_grammar_map(instaparse.transform.transform(instaparse.abnf.abnf_transformer,tree));\r\n\r\n}\r\n}\r\n}finally {(instaparse.cfg._STAR_case_insensitive_literals_STAR_ \x3d _STAR_case_insensitive_literals_STAR__orig_val__28514);\r\n}}));\r\n\r\n(instaparse.abnf.abnf.cljs$lang$maxFixedArity \x3d (1));\r\n\r\n/** @this {Function} */\r\n(instaparse.abnf.abnf.cljs$lang$applyTo \x3d (function (seq28510){\r\nvar G__28511 \x3d cljs.core.first(seq28510);\r\nvar seq28510__$1 \x3d cljs.core.next(seq28510);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__28511,seq28510__$1);\r\n}));\r\n\r\ninstaparse.abnf.build_parser \x3d (function instaparse$abnf$build_parser(spec,output_format){\r\nvar rule_tree \x3d instaparse.gll.parse(instaparse.abnf.abnf_parser,new cljs.core.Keyword(null,\x22rulelist\x22,\x22rulelist\x22,-1871218473),spec,false);\r\nif((rule_tree instanceof instaparse.gll.Failure)){\r\nreturn instaparse.util.throw_runtime_exception.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Error parsing grammar specification:\\n\x22,(function (){var sb__4795__auto__ \x3d (new goog.string.StringBuffer());\r\nvar _STAR_print_newline_STAR__orig_val__28520_28564 \x3d cljs.core._STAR_print_newline_STAR_;\r\nvar _STAR_print_fn_STAR__orig_val__28521_28565 \x3d cljs.core._STAR_print_fn_STAR_;\r\nvar _STAR_print_newline_STAR__temp_val__28522_28566 \x3d true;\r\nvar _STAR_print_fn_STAR__temp_val__28523_28567 \x3d (function (x__4796__auto__){\r\nreturn sb__4795__auto__.append(x__4796__auto__);\r\n});\r\n(cljs.core._STAR_print_newline_STAR_ \x3d _STAR_print_newline_STAR__temp_val__28522_28566);\r\n\r\n(cljs.core._STAR_print_fn_STAR_ \x3d _STAR_print_fn_STAR__temp_val__28523_28567);\r\n\r\ntry{cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([rule_tree], 0));\r\n}finally {(cljs.core._STAR_print_fn_STAR_ \x3d _STAR_print_fn_STAR__orig_val__28521_28565);\r\n\r\n(cljs.core._STAR_print_newline_STAR_ \x3d _STAR_print_newline_STAR__orig_val__28520_28564);\r\n}\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4795__auto__);\r\n})()], 0));\r\n} else {\r\nvar rules \x3d instaparse.transform.transform(instaparse.abnf.abnf_transformer,rule_tree);\r\nvar grammar_map \x3d instaparse.abnf.rules__GT_grammar_map(rules);\r\nvar start_production \x3d cljs.core.first(cljs.core.first(cljs.core.first(rules)));\r\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267),instaparse.cfg.check_grammar(instaparse.reduction.apply_standard_reductions.cljs$core$IFn$_invoke$arity$2(output_format,grammar_map)),new cljs.core.Keyword(null,\x22start-production\x22,\x22start-production\x22,687546537),start_production,new cljs.core.Keyword(null,\x22output-format\x22,\x22output-format\x22,-1826382676),output_format], null);\r\n}\r\n});\r\n");
SHADOW_ENV.evalLoad("instaparse.viz.js", true , "goog.provide(\x27instaparse.viz\x27);\r\n/**\r\n * Takes a subtree of the parse tree and returns a [start-index end-index] pair\r\n * indicating the span of text parsed by this subtree.\r\n * start-index is inclusive and end-index is exclusive, as is customary\r\n * with substrings.\r\n * Returns nil if no span metadata is attached.\r\n */\r\ninstaparse.viz.span \x3d (function instaparse$viz$span(tree){\r\nvar m \x3d cljs.core.meta(tree);\r\nvar s \x3d new cljs.core.Keyword(\x22instaparse.gll\x22,\x22start-index\x22,\x22instaparse.gll/start-index\x22,404653620).cljs$core$IFn$_invoke$arity$1(m);\r\nvar e \x3d new cljs.core.Keyword(\x22instaparse.gll\x22,\x22end-index\x22,\x22instaparse.gll/end-index\x22,-1851404441).cljs$core$IFn$_invoke$arity$1(m);\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d s;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn e;\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s,e], null);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n");
SHADOW_ENV.evalLoad("instaparse.repeat.js", true , "goog.provide(\x27instaparse.repeat\x27);\r\ninstaparse.repeat.empty_result_QMARK_ \x3d (function instaparse$repeat$empty_result_QMARK_(result){\r\nreturn ((((cljs.core.vector_QMARK_(result)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(result),(1))))) || (((((cljs.core.map_QMARK_(result)) \x26\x26 (((cljs.core.contains_QMARK_(result,new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223))) \x26\x26 (cljs.core.empty_QMARK_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(result,new cljs.core.Keyword(null,\x22content\x22,\x22content\x22,15833224)))))))) || (cljs.core.empty_QMARK_(result)))));\r\n});\r\ninstaparse.repeat.failure_signal \x3d instaparse.gll.__GT_Failure(null,null);\r\ninstaparse.repeat.get_end \x3d (function instaparse$repeat$get_end(var_args){\r\nvar G__27911 \x3d arguments.length;\r\nswitch (G__27911) {\r\ncase 1:\r\nreturn instaparse.repeat.get_end.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn instaparse.repeat.get_end.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(instaparse.repeat.get_end.cljs$core$IFn$_invoke$arity$1 \x3d (function (parse){\r\nvar vec__27912 \x3d instaparse.viz.span(parse);\r\nvar start \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27912,(0),null);\r\nvar end \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27912,(1),null);\r\nif(cljs.core.truth_(end)){\r\nreturn cljs.core.long$(end);\r\n} else {\r\nreturn cljs.core.count(parse);\r\n}\r\n}));\r\n\r\n(instaparse.repeat.get_end.cljs$core$IFn$_invoke$arity$2 \x3d (function (parse,index){\r\nvar vec__27917 \x3d instaparse.viz.span(parse);\r\nvar start \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27917,(0),null);\r\nvar end \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27917,(1),null);\r\nif(cljs.core.truth_(end)){\r\nreturn cljs.core.long$(end);\r\n} else {\r\nreturn (index + cljs.core.count(parse));\r\n}\r\n}));\r\n\r\n(instaparse.repeat.get_end.cljs$lang$maxFixedArity \x3d 2);\r\n\r\ninstaparse.repeat.parse_from_index \x3d (function instaparse$repeat$parse_from_index(grammar,initial_parser,text,segment,index){\r\nvar tramp \x3d instaparse.gll.make_tramp.cljs$core$IFn$_invoke$arity$3(grammar,text,segment);\r\ninstaparse.gll.push_listener(tramp,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,initial_parser], null),instaparse.gll.TopListener(tramp));\r\n\r\nreturn instaparse.gll.run.cljs$core$IFn$_invoke$arity$1(tramp);\r\n});\r\n/**\r\n * Returns either:\r\n * [a-parse end-index a-list-of-valid-follow-up-parses]\r\n * [a-parse end-index nil] (successfully reached end of text)\r\n * nil (hit a dead-end with this strategy)\r\n */\r\ninstaparse.repeat.select_parse \x3d (function instaparse$repeat$select_parse(grammar,initial_parser,text,segment,index,parses){\r\nvar length \x3d cljs.core.count(text);\r\nvar parses__$1 \x3d cljs.core.seq(parses);\r\nwhile(true){\r\nif(parses__$1){\r\nvar parse \x3d cljs.core.first(parses__$1);\r\nvar vec__27920 \x3d instaparse.viz.span(parse);\r\nvar start \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27920,(0),null);\r\nvar end \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27920,(1),null);\r\nvar end__$1 \x3d (cljs.core.truth_(end)?end:(index + cljs.core.count(parse)));\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(end__$1,length)){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [parse,end__$1,null], null);\r\n} else {\r\nvar temp__5751__auto__ \x3d cljs.core.seq(instaparse.repeat.parse_from_index(grammar,initial_parser,text,segment,end__$1));\r\nif(temp__5751__auto__){\r\nvar follow_ups \x3d temp__5751__auto__;\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [parse,end__$1,follow_ups], null);\r\n} else {\r\nvar G__28146 \x3d cljs.core.next(parses__$1);\r\nparses__$1 \x3d G__28146;\r\ncontinue;\r\n}\r\n\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n});\r\ninstaparse.repeat.repeat_parse_hiccup \x3d (function instaparse$repeat$repeat_parse_hiccup(var_args){\r\nvar G__27924 \x3d arguments.length;\r\nswitch (G__27924) {\r\ncase 5:\r\nreturn instaparse.repeat.repeat_parse_hiccup.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ncase 6:\r\nreturn instaparse.repeat.repeat_parse_hiccup.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(instaparse.repeat.repeat_parse_hiccup.cljs$core$IFn$_invoke$arity$5 \x3d (function (grammar,initial_parser,root_tag,text,segment){\r\nreturn instaparse.repeat.repeat_parse_hiccup.cljs$core$IFn$_invoke$arity$6(grammar,initial_parser,root_tag,text,segment,(0));\r\n}));\r\n\r\n(instaparse.repeat.repeat_parse_hiccup.cljs$core$IFn$_invoke$arity$6 \x3d (function (grammar,initial_parser,root_tag,text,segment,index){\r\nvar length \x3d cljs.core.count(text);\r\nvar first_result \x3d instaparse.repeat.parse_from_index(grammar,initial_parser,text,segment,index);\r\nvar index__$1 \x3d cljs.core.long$(index);\r\nvar parses \x3d instaparse.auto_flatten_seq.auto_flatten_seq(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [root_tag], null));\r\nvar G__27930 \x3d instaparse.repeat.select_parse(grammar,initial_parser,text,segment,index__$1,first_result);\r\nvar vec__27931 \x3d G__27930;\r\nvar parse \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27931,(0),null);\r\nvar end \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27931,(1),null);\r\nvar follow_ups \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27931,(2),null);\r\nvar selection \x3d vec__27931;\r\nvar index__$2 \x3d index__$1;\r\nvar parses__$1 \x3d parses;\r\nvar G__27930__$1 \x3d G__27930;\r\nwhile(true){\r\nvar index__$3 \x3d index__$2;\r\nvar parses__$2 \x3d parses__$1;\r\nvar vec__27939 \x3d G__27930__$1;\r\nvar parse__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27939,(0),null);\r\nvar end__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27939,(1),null);\r\nvar follow_ups__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27939,(2),null);\r\nvar selection__$1 \x3d vec__27939;\r\nif((selection__$1 \x3d\x3d null)){\r\nreturn instaparse.repeat.failure_signal;\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(index__$3,end__$1)){\r\nreturn instaparse.repeat.failure_signal;\r\n} else {\r\nif((follow_ups__$1 \x3d\x3d null)){\r\nreturn instaparse.gll.safe_with_meta(instaparse.auto_flatten_seq.convert_afs_to_vec(instaparse.auto_flatten_seq.conj_flat(parses__$2,parse__$1)),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22optimize\x22,\x22optimize\x22,-1912349448),new cljs.core.Keyword(null,\x22memory\x22,\x22memory\x22,-1449401430),new cljs.core.Keyword(\x22instaparse.gll\x22,\x22start-index\x22,\x22instaparse.gll/start-index\x22,404653620),(0),new cljs.core.Keyword(\x22instaparse.gll\x22,\x22end-index\x22,\x22instaparse.gll/end-index\x22,-1851404441),length], null));\r\n} else {\r\nvar G__28157 \x3d cljs.core.long$(end__$1);\r\nvar G__28158 \x3d instaparse.auto_flatten_seq.conj_flat(parses__$2,parse__$1);\r\nvar G__28159 \x3d instaparse.repeat.select_parse(grammar,initial_parser,text,segment,end__$1,follow_ups__$1);\r\nindex__$2 \x3d G__28157;\r\nparses__$1 \x3d G__28158;\r\nG__27930__$1 \x3d G__28159;\r\ncontinue;\r\n\r\n}\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(instaparse.repeat.repeat_parse_hiccup.cljs$lang$maxFixedArity \x3d 6);\r\n\r\ninstaparse.repeat.repeat_parse_enlive \x3d (function instaparse$repeat$repeat_parse_enlive(var_args){\r\nvar G__27947 \x3d arguments.length;\r\nswitch (G__27947) {\r\ncase 5:\r\nreturn instaparse.repeat.repeat_parse_enlive.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ncase 6:\r\nreturn instaparse.repeat.repeat_parse_enlive.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(instaparse.repeat.repeat_parse_enlive.cljs$core$IFn$_invoke$arity$5 \x3d (function (grammar,initial_parser,root_tag,text,segment){\r\nreturn instaparse.repeat.repeat_parse_enlive.cljs$core$IFn$_invoke$arity$6(grammar,initial_parser,root_tag,text,segment,(0));\r\n}));\r\n\r\n(instaparse.repeat.repeat_parse_enlive.cljs$core$IFn$_invoke$arity$6 \x3d (function (grammar,initial_parser,root_tag,text,segment,index){\r\nvar length \x3d cljs.core.count(text);\r\nvar first_result \x3d instaparse.repeat.parse_from_index(grammar,initial_parser,text,segment,index);\r\nvar index__$1 \x3d cljs.core.long$(index);\r\nvar parses \x3d instaparse.auto_flatten_seq.EMPTY;\r\nvar G__27952 \x3d instaparse.repeat.select_parse(grammar,initial_parser,text,segment,index__$1,first_result);\r\nvar vec__27954 \x3d G__27952;\r\nvar parse \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27954,(0),null);\r\nvar end \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27954,(1),null);\r\nvar follow_ups \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27954,(2),null);\r\nvar selection \x3d vec__27954;\r\nvar index__$2 \x3d index__$1;\r\nvar parses__$1 \x3d parses;\r\nvar G__27952__$1 \x3d G__27952;\r\nwhile(true){\r\nvar index__$3 \x3d index__$2;\r\nvar parses__$2 \x3d parses__$1;\r\nvar vec__27965 \x3d G__27952__$1;\r\nvar parse__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27965,(0),null);\r\nvar end__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27965,(1),null);\r\nvar follow_ups__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27965,(2),null);\r\nvar selection__$1 \x3d vec__27965;\r\nif((selection__$1 \x3d\x3d null)){\r\nreturn instaparse.repeat.failure_signal;\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(index__$3,end__$1)){\r\nreturn instaparse.repeat.failure_signal;\r\n} else {\r\nif((follow_ups__$1 \x3d\x3d null)){\r\nreturn instaparse.gll.safe_with_meta(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),root_tag,new cljs.core.Keyword(null,\x22content\x22,\x22content\x22,15833224),cljs.core.seq(instaparse.auto_flatten_seq.conj_flat(parses__$2,parse__$1))], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22optimize\x22,\x22optimize\x22,-1912349448),new cljs.core.Keyword(null,\x22memory\x22,\x22memory\x22,-1449401430),new cljs.core.Keyword(\x22instaparse.gll\x22,\x22start-index\x22,\x22instaparse.gll/start-index\x22,404653620),(0),new cljs.core.Keyword(\x22instaparse.gll\x22,\x22end-index\x22,\x22instaparse.gll/end-index\x22,-1851404441),length], null));\r\n} else {\r\nvar G__28183 \x3d cljs.core.long$(end__$1);\r\nvar G__28184 \x3d instaparse.auto_flatten_seq.conj_flat(parses__$2,parse__$1);\r\nvar G__28185 \x3d instaparse.repeat.select_parse(grammar,initial_parser,text,segment,end__$1,follow_ups__$1);\r\nindex__$2 \x3d G__28183;\r\nparses__$1 \x3d G__28184;\r\nG__27952__$1 \x3d G__28185;\r\ncontinue;\r\n\r\n}\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(instaparse.repeat.repeat_parse_enlive.cljs$lang$maxFixedArity \x3d 6);\r\n\r\ninstaparse.repeat.repeat_parse_no_tag \x3d (function instaparse$repeat$repeat_parse_no_tag(var_args){\r\nvar G__27980 \x3d arguments.length;\r\nswitch (G__27980) {\r\ncase 4:\r\nreturn instaparse.repeat.repeat_parse_no_tag.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ncase 5:\r\nreturn instaparse.repeat.repeat_parse_no_tag.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(instaparse.repeat.repeat_parse_no_tag.cljs$core$IFn$_invoke$arity$4 \x3d (function (grammar,initial_parser,text,segment){\r\nreturn instaparse.repeat.repeat_parse_no_tag.cljs$core$IFn$_invoke$arity$5(grammar,initial_parser,text,segment,(0));\r\n}));\r\n\r\n(instaparse.repeat.repeat_parse_no_tag.cljs$core$IFn$_invoke$arity$5 \x3d (function (grammar,initial_parser,text,segment,index){\r\nvar length \x3d cljs.core.count(text);\r\nvar first_result \x3d instaparse.repeat.parse_from_index(grammar,initial_parser,text,segment,index);\r\nvar index__$1 \x3d cljs.core.long$(index);\r\nvar parses \x3d instaparse.auto_flatten_seq.EMPTY;\r\nvar G__27989 \x3d instaparse.repeat.select_parse(grammar,initial_parser,text,segment,index__$1,first_result);\r\nvar vec__27991 \x3d G__27989;\r\nvar parse \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27991,(0),null);\r\nvar end \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27991,(1),null);\r\nvar follow_ups \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27991,(2),null);\r\nvar selection \x3d vec__27991;\r\nvar index__$2 \x3d index__$1;\r\nvar parses__$1 \x3d parses;\r\nvar G__27989__$1 \x3d G__27989;\r\nwhile(true){\r\nvar index__$3 \x3d index__$2;\r\nvar parses__$2 \x3d parses__$1;\r\nvar vec__28016 \x3d G__27989__$1;\r\nvar parse__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28016,(0),null);\r\nvar end__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28016,(1),null);\r\nvar follow_ups__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28016,(2),null);\r\nvar selection__$1 \x3d vec__28016;\r\nif((selection__$1 \x3d\x3d null)){\r\nreturn instaparse.repeat.failure_signal;\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(index__$3,end__$1)){\r\nreturn instaparse.repeat.failure_signal;\r\n} else {\r\nif((follow_ups__$1 \x3d\x3d null)){\r\nreturn instaparse.gll.safe_with_meta(instaparse.auto_flatten_seq.conj_flat(parses__$2,parse__$1),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22optimize\x22,\x22optimize\x22,-1912349448),new cljs.core.Keyword(null,\x22memory\x22,\x22memory\x22,-1449401430),new cljs.core.Keyword(\x22instaparse.gll\x22,\x22start-index\x22,\x22instaparse.gll/start-index\x22,404653620),(0),new cljs.core.Keyword(\x22instaparse.gll\x22,\x22end-index\x22,\x22instaparse.gll/end-index\x22,-1851404441),length], null));\r\n} else {\r\nvar G__28199 \x3d cljs.core.long$(end__$1);\r\nvar G__28200 \x3d instaparse.auto_flatten_seq.conj_flat(parses__$2,parse__$1);\r\nvar G__28201 \x3d instaparse.repeat.select_parse(grammar,initial_parser,text,segment,end__$1,follow_ups__$1);\r\nindex__$2 \x3d G__28199;\r\nparses__$1 \x3d G__28200;\r\nG__27989__$1 \x3d G__28201;\r\ncontinue;\r\n\r\n}\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(instaparse.repeat.repeat_parse_no_tag.cljs$lang$maxFixedArity \x3d 5);\r\n\r\ninstaparse.repeat.repeat_parse \x3d (function instaparse$repeat$repeat_parse(var_args){\r\nvar G__28048 \x3d arguments.length;\r\nswitch (G__28048) {\r\ncase 4:\r\nreturn instaparse.repeat.repeat_parse.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ncase 5:\r\nreturn instaparse.repeat.repeat_parse.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(instaparse.repeat.repeat_parse.cljs$core$IFn$_invoke$arity$4 \x3d (function (grammar,initial_parser,output_format,text){\r\nreturn instaparse.repeat.repeat_parse_no_tag.cljs$core$IFn$_invoke$arity$4(grammar,initial_parser,text,instaparse.gll.text__GT_segment(text));\r\n}));\r\n\r\n(instaparse.repeat.repeat_parse.cljs$core$IFn$_invoke$arity$5 \x3d (function (grammar,initial_parser,output_format,root_tag,text){\r\nif(cljs.core.truth_((function (){var fexpr__28111 \x3d new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),null,new cljs.core.Keyword(null,\x22enlive\x22,\x22enlive\x22,1679023921),null], null), null);\r\nreturn (fexpr__28111.cljs$core$IFn$_invoke$arity$1 ? fexpr__28111.cljs$core$IFn$_invoke$arity$1(output_format) : fexpr__28111.call(null,output_format));\r\n})())){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (#{:hiccup :enlive} output-format)\x22));\r\n}\r\n\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(output_format,new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238))){\r\nreturn instaparse.repeat.repeat_parse_hiccup.cljs$core$IFn$_invoke$arity$5(grammar,initial_parser,root_tag,text,instaparse.gll.text__GT_segment(text));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(output_format,new cljs.core.Keyword(null,\x22enlive\x22,\x22enlive\x22,1679023921))){\r\nreturn instaparse.repeat.repeat_parse_enlive.cljs$core$IFn$_invoke$arity$5(grammar,initial_parser,root_tag,text,instaparse.gll.text__GT_segment(text));\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}));\r\n\r\n(instaparse.repeat.repeat_parse.cljs$lang$maxFixedArity \x3d 5);\r\n\r\ninstaparse.repeat.repeat_parse_with_header \x3d (function instaparse$repeat$repeat_parse_with_header(grammar,header_parser,repeating_parser,output_format,root_tag,text){\r\nvar segment \x3d instaparse.gll.text__GT_segment(text);\r\nvar length \x3d cljs.core.count(text);\r\nvar header_results \x3d instaparse.repeat.parse_from_index(grammar,header_parser,text,segment,(0));\r\nif(cljs.core.truth_((function (){var or__4253__auto__ \x3d cljs.core.empty_QMARK_(header_results);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169).cljs$core$IFn$_invoke$arity$1(header_parser);\r\n}\r\n})())){\r\nreturn instaparse.repeat.failure_signal;\r\n} else {\r\nvar header_result \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.max_key,instaparse.repeat.get_end,header_results);\r\nvar end \x3d instaparse.repeat.get_end.cljs$core$IFn$_invoke$arity$1(header_result);\r\nvar repeat_result \x3d instaparse.repeat.repeat_parse_no_tag.cljs$core$IFn$_invoke$arity$5(grammar,new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310).cljs$core$IFn$_invoke$arity$1(repeating_parser),text,segment,end);\r\nvar span_meta \x3d new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22optimize\x22,\x22optimize\x22,-1912349448),new cljs.core.Keyword(null,\x22memory\x22,\x22memory\x22,-1449401430),new cljs.core.Keyword(\x22instaparse.gll\x22,\x22start-index\x22,\x22instaparse.gll/start-index\x22,404653620),(0),new cljs.core.Keyword(\x22instaparse.gll\x22,\x22end-index\x22,\x22instaparse.gll/end-index\x22,-1851404441),length], null);\r\nif((((repeat_result instanceof instaparse.gll.Failure)) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223).cljs$core$IFn$_invoke$arity$1(repeating_parser),new cljs.core.Keyword(null,\x22star\x22,\x22star\x22,279424429))) \x26\x26 (instaparse.repeat.empty_result_QMARK_(repeat_result)))))){\r\nreturn instaparse.repeat.failure_signal;\r\n} else {\r\nvar G__28128 \x3d output_format;\r\nvar G__28128__$1 \x3d (((G__28128 instanceof cljs.core.Keyword))?G__28128.fqn:null);\r\nswitch (G__28128__$1) {\r\ncase \x22enlive\x22:\r\nreturn instaparse.gll.safe_with_meta(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),root_tag,new cljs.core.Keyword(null,\x22content\x22,\x22content\x22,15833224),instaparse.auto_flatten_seq.conj_flat(instaparse.auto_flatten_seq.EMPTY.instaparse$auto_flatten_seq$ConjFlat$conj_flat$arity$2(null,header_result),repeat_result)], null),span_meta);\r\n\r\nbreak;\r\ncase \x22hiccup\x22:\r\nreturn instaparse.gll.safe_with_meta(instaparse.auto_flatten_seq.convert_afs_to_vec(instaparse.auto_flatten_seq.conj_flat(instaparse.auto_flatten_seq.auto_flatten_seq(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [root_tag], null)).instaparse$auto_flatten_seq$ConjFlat$conj_flat$arity$2(null,header_result),repeat_result)),span_meta);\r\n\r\nbreak;\r\ndefault:\r\nreturn instaparse.gll.safe_with_meta(instaparse.auto_flatten_seq.conj_flat(instaparse.auto_flatten_seq.EMPTY.instaparse$auto_flatten_seq$ConjFlat$conj_flat$arity$2(null,header_result),repeat_result),span_meta);\r\n\r\n}\r\n}\r\n}\r\n});\r\ninstaparse.repeat.try_repeating_parse_strategy_with_header \x3d (function instaparse$repeat$try_repeating_parse_strategy_with_header(grammar,text,start_production,start_rule,output_format){\r\n\r\nvar parsers \x3d new cljs.core.Keyword(null,\x22parsers\x22,\x22parsers\x22,-804353827).cljs$core$IFn$_invoke$arity$1(start_rule);\r\nvar repeating_parser \x3d cljs.core.last(parsers);\r\nif(cljs.core.not((function (){var and__4251__auto__ \x3d cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223).cljs$core$IFn$_invoke$arity$1(start_rule),new cljs.core.Keyword(null,\x22cat\x22,\x22cat\x22,-1457810207));\r\nif(and__4251__auto__){\r\nvar and__4251__auto____$1 \x3d (function (){var G__28131 \x3d new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223).cljs$core$IFn$_invoke$arity$1(repeating_parser);\r\nvar fexpr__28130 \x3d new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22star\x22,\x22star\x22,279424429),null,new cljs.core.Keyword(null,\x22plus\x22,\x22plus\x22,211540661),null], null), null);\r\nreturn (fexpr__28130.cljs$core$IFn$_invoke$arity$1 ? fexpr__28130.cljs$core$IFn$_invoke$arity$1(G__28131) : fexpr__28130.call(null,G__28131));\r\n})();\r\nif(cljs.core.truth_(and__4251__auto____$1)){\r\nreturn ((cljs.core.not(new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169).cljs$core$IFn$_invoke$arity$1(repeating_parser))) \x26\x26 (cljs.core.not(new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310).cljs$core$IFn$_invoke$arity$1(repeating_parser)))));\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nreturn instaparse.repeat.failure_signal;\r\n} else {\r\nvar header_parser \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(instaparse.combinators_source.cat,cljs.core.butlast(parsers));\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204).cljs$core$IFn$_invoke$arity$1(start_rule),instaparse.reduction.raw_non_terminal_reduction)){\r\nreturn instaparse.repeat.repeat_parse_with_header(grammar,header_parser,repeating_parser,null,start_production,text);\r\n} else {\r\nreturn instaparse.repeat.repeat_parse_with_header(grammar,header_parser,repeating_parser,output_format,start_production,text);\r\n}\r\n}\r\n});\r\ninstaparse.repeat.try_repeating_parse_strategy \x3d (function instaparse$repeat$try_repeating_parse_strategy(parser,text,start_production){\r\nvar grammar \x3d new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267).cljs$core$IFn$_invoke$arity$1(parser);\r\nvar output_format \x3d new cljs.core.Keyword(null,\x22output-format\x22,\x22output-format\x22,-1826382676).cljs$core$IFn$_invoke$arity$1(parser);\r\nvar start_rule \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(grammar,start_production);\r\n\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22hide\x22,\x22hide\x22,-596913169).cljs$core$IFn$_invoke$arity$1(start_rule),true)){\r\nreturn instaparse.repeat.failure_signal;\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22red\x22,\x22red\x22,-969428204).cljs$core$IFn$_invoke$arity$1(start_rule),instaparse.reduction.raw_non_terminal_reduction)){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223).cljs$core$IFn$_invoke$arity$1(start_rule),new cljs.core.Keyword(null,\x22star\x22,\x22star\x22,279424429))){\r\nreturn instaparse.repeat.repeat_parse.cljs$core$IFn$_invoke$arity$4(grammar,new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310).cljs$core$IFn$_invoke$arity$1(start_rule),output_format,text);\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223).cljs$core$IFn$_invoke$arity$1(start_rule),new cljs.core.Keyword(null,\x22plus\x22,\x22plus\x22,211540661))){\r\nvar result \x3d instaparse.repeat.repeat_parse.cljs$core$IFn$_invoke$arity$4(grammar,new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310).cljs$core$IFn$_invoke$arity$1(start_rule),output_format,text);\r\nif(instaparse.repeat.empty_result_QMARK_(result)){\r\nreturn instaparse.repeat.failure_signal;\r\n} else {\r\nreturn result;\r\n}\r\n} else {\r\nreturn instaparse.repeat.try_repeating_parse_strategy_with_header(grammar,text,start_production,start_rule,output_format);\r\n\r\n}\r\n}\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223).cljs$core$IFn$_invoke$arity$1(start_rule),new cljs.core.Keyword(null,\x22star\x22,\x22star\x22,279424429))){\r\nreturn instaparse.repeat.repeat_parse.cljs$core$IFn$_invoke$arity$5(grammar,new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310).cljs$core$IFn$_invoke$arity$1(start_rule),output_format,start_production,text);\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223).cljs$core$IFn$_invoke$arity$1(start_rule),new cljs.core.Keyword(null,\x22plus\x22,\x22plus\x22,211540661))){\r\nvar result \x3d instaparse.repeat.repeat_parse.cljs$core$IFn$_invoke$arity$5(grammar,new cljs.core.Keyword(null,\x22parser\x22,\x22parser\x22,-1543495310).cljs$core$IFn$_invoke$arity$1(start_rule),output_format,start_production,text);\r\nif(instaparse.repeat.empty_result_QMARK_(result)){\r\nreturn instaparse.repeat.failure_signal;\r\n} else {\r\nreturn result;\r\n}\r\n} else {\r\nreturn instaparse.repeat.try_repeating_parse_strategy_with_header(grammar,text,start_production,start_rule,output_format);\r\n\r\n}\r\n}\r\n}\r\n}\r\n});\r\ninstaparse.repeat.used_memory_optimization_QMARK_ \x3d (function instaparse$repeat$used_memory_optimization_QMARK_(tree){\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22memory\x22,\x22memory\x22,-1449401430),new cljs.core.Keyword(null,\x22optimize\x22,\x22optimize\x22,-1912349448).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tree)));\r\n});\r\n");
SHADOW_ENV.evalLoad("instaparse.line_col.js", true , "goog.provide(\x27instaparse.line_col\x27);\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IRecord}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ninstaparse.line_col.Cursor \x3d (function (index,line,column,__meta,__extmap,__hash){\r\nthis.index \x3d index;\r\nthis.line \x3d line;\r\nthis.column \x3d column;\r\nthis.__meta \x3d __meta;\r\nthis.__extmap \x3d __extmap;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\r\n});\r\n(instaparse.line_col.Cursor.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__4502__auto__,k__4503__auto__){\r\nvar self__ \x3d this;\r\nvar this__4502__auto____$1 \x3d this;\r\nreturn this__4502__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4503__auto__,null);\r\n}));\r\n\r\n(instaparse.line_col.Cursor.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__4504__auto__,k27973,else__4505__auto__){\r\nvar self__ \x3d this;\r\nvar this__4504__auto____$1 \x3d this;\r\nvar G__27981 \x3d k27973;\r\nvar G__27981__$1 \x3d (((G__27981 instanceof cljs.core.Keyword))?G__27981.fqn:null);\r\nswitch (G__27981__$1) {\r\ncase \x22index\x22:\r\nreturn self__.index;\r\n\r\nbreak;\r\ncase \x22line\x22:\r\nreturn self__.line;\r\n\r\nbreak;\r\ncase \x22column\x22:\r\nreturn self__.column;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k27973,else__4505__auto__);\r\n\r\n}\r\n}));\r\n\r\n(instaparse.line_col.Cursor.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__4522__auto__,f__4523__auto__,init__4524__auto__){\r\nvar self__ \x3d this;\r\nvar this__4522__auto____$1 \x3d this;\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4525__auto__,p__27990){\r\nvar vec__27994 \x3d p__27990;\r\nvar k__4526__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27994,(0),null);\r\nvar v__4527__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27994,(1),null);\r\nreturn (f__4523__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4523__auto__.cljs$core$IFn$_invoke$arity$3(ret__4525__auto__,k__4526__auto__,v__4527__auto__) : f__4523__auto__.call(null,ret__4525__auto__,k__4526__auto__,v__4527__auto__));\r\n}),init__4524__auto__,this__4522__auto____$1);\r\n}));\r\n\r\n(instaparse.line_col.Cursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__4517__auto__,writer__4518__auto__,opts__4519__auto__){\r\nvar self__ \x3d this;\r\nvar this__4517__auto____$1 \x3d this;\r\nvar pr_pair__4520__auto__ \x3d (function (keyval__4521__auto__){\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__4519__auto__,keyval__4521__auto__);\r\n});\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,pr_pair__4520__auto__,\x22#instaparse.line-col.Cursor{\x22,\x22, \x22,\x22}\x22,opts__4519__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915),self__.index],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),self__.line],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),self__.column],null))], null),self__.__extmap));\r\n}));\r\n\r\n(instaparse.line_col.Cursor.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__27972){\r\nvar self__ \x3d this;\r\nvar G__27972__$1 \x3d this;\r\nreturn (new cljs.core.RecordIter((0),G__27972__$1,3,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915),new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\r\n}));\r\n\r\n(instaparse.line_col.Cursor.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__4500__auto__){\r\nvar self__ \x3d this;\r\nvar this__4500__auto____$1 \x3d this;\r\nreturn self__.__meta;\r\n}));\r\n\r\n(instaparse.line_col.Cursor.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__4497__auto__){\r\nvar self__ \x3d this;\r\nvar this__4497__auto____$1 \x3d this;\r\nreturn (new instaparse.line_col.Cursor(self__.index,self__.line,self__.column,self__.__meta,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(instaparse.line_col.Cursor.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__4506__auto__){\r\nvar self__ \x3d this;\r\nvar this__4506__auto____$1 \x3d this;\r\nreturn (3 + cljs.core.count(self__.__extmap));\r\n}));\r\n\r\n(instaparse.line_col.Cursor.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__4498__auto__){\r\nvar self__ \x3d this;\r\nvar this__4498__auto____$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d (function (coll__4499__auto__){\r\nreturn (-1036355234 ^ cljs.core.hash_unordered_coll(coll__4499__auto__));\r\n})(this__4498__auto____$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(instaparse.line_col.Cursor.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this27974,other27975){\r\nvar self__ \x3d this;\r\nvar this27974__$1 \x3d this;\r\nreturn (((!((other27975 \x3d\x3d null)))) \x26\x26 ((((this27974__$1.constructor \x3d\x3d\x3d other27975.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27974__$1.index,other27975.index)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27974__$1.line,other27975.line)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27974__$1.column,other27975.column)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this27974__$1.__extmap,other27975.__extmap)))))))))));\r\n}));\r\n\r\n(instaparse.line_col.Cursor.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__4512__auto__,k__4513__auto__){\r\nvar self__ \x3d this;\r\nvar this__4512__auto____$1 \x3d this;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915),null,new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),null,new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),null], null), null),k__4513__auto__)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4512__auto____$1),self__.__meta),k__4513__auto__);\r\n} else {\r\nreturn (new instaparse.line_col.Cursor(self__.index,self__.line,self__.column,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4513__auto__)),null));\r\n}\r\n}));\r\n\r\n(instaparse.line_col.Cursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__4509__auto__,k27973){\r\nvar self__ \x3d this;\r\nvar this__4509__auto____$1 \x3d this;\r\nvar G__28109 \x3d k27973;\r\nvar G__28109__$1 \x3d (((G__28109 instanceof cljs.core.Keyword))?G__28109.fqn:null);\r\nswitch (G__28109__$1) {\r\ncase \x22index\x22:\r\ncase \x22line\x22:\r\ncase \x22column\x22:\r\nreturn true;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.contains_QMARK_(self__.__extmap,k27973);\r\n\r\n}\r\n}));\r\n\r\n(instaparse.line_col.Cursor.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__4510__auto__,k__4511__auto__,G__27972){\r\nvar self__ \x3d this;\r\nvar this__4510__auto____$1 \x3d this;\r\nvar pred__28117 \x3d cljs.core.keyword_identical_QMARK_;\r\nvar expr__28118 \x3d k__4511__auto__;\r\nif(cljs.core.truth_((pred__28117.cljs$core$IFn$_invoke$arity$2 ? pred__28117.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915),expr__28118) : pred__28117.call(null,new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915),expr__28118)))){\r\nreturn (new instaparse.line_col.Cursor(G__27972,self__.line,self__.column,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__28117.cljs$core$IFn$_invoke$arity$2 ? pred__28117.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),expr__28118) : pred__28117.call(null,new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),expr__28118)))){\r\nreturn (new instaparse.line_col.Cursor(self__.index,G__27972,self__.column,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__28117.cljs$core$IFn$_invoke$arity$2 ? pred__28117.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),expr__28118) : pred__28117.call(null,new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),expr__28118)))){\r\nreturn (new instaparse.line_col.Cursor(self__.index,self__.line,G__27972,self__.__meta,self__.__extmap,null));\r\n} else {\r\nreturn (new instaparse.line_col.Cursor(self__.index,self__.line,self__.column,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4511__auto__,G__27972),null));\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(instaparse.line_col.Cursor.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__4515__auto__){\r\nvar self__ \x3d this;\r\nvar this__4515__auto____$1 \x3d this;\r\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915),self__.index,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),self__.line,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),self__.column,null))], null),self__.__extmap));\r\n}));\r\n\r\n(instaparse.line_col.Cursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__4501__auto__,G__27972){\r\nvar self__ \x3d this;\r\nvar this__4501__auto____$1 \x3d this;\r\nreturn (new instaparse.line_col.Cursor(self__.index,self__.line,self__.column,G__27972,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(instaparse.line_col.Cursor.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__4507__auto__,entry__4508__auto__){\r\nvar self__ \x3d this;\r\nvar this__4507__auto____$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(entry__4508__auto__)){\r\nreturn this__4507__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4508__auto__,(0)),cljs.core._nth(entry__4508__auto__,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4507__auto____$1,entry__4508__auto__);\r\n}\r\n}));\r\n\r\n(instaparse.line_col.Cursor.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22index\x22,\x22index\x22,108845612,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22int\x22,\x22int\x22,-100885395,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22line\x22,\x22line\x22,1852876762,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22long\x22,\x22long\x22,1469079434,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22column\x22,\x22column\x22,-576213674,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22long\x22,\x22long\x22,1469079434,null)], null))], null);\r\n}));\r\n\r\n(instaparse.line_col.Cursor.cljs$lang$type \x3d true);\r\n\r\n(instaparse.line_col.Cursor.cljs$lang$ctorPrSeq \x3d (function (this__4546__auto__){\r\nreturn (new cljs.core.List(null,\x22instaparse.line-col/Cursor\x22,null,(1),null));\r\n}));\r\n\r\n(instaparse.line_col.Cursor.cljs$lang$ctorPrWriter \x3d (function (this__4546__auto__,writer__4547__auto__){\r\nreturn cljs.core._write(writer__4547__auto__,\x22instaparse.line-col/Cursor\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for instaparse.line-col/Cursor.\r\n */\r\ninstaparse.line_col.__GT_Cursor \x3d (function instaparse$line_col$__GT_Cursor(index,line,column){\r\nreturn (new instaparse.line_col.Cursor(index,line,column,null,null,null));\r\n});\r\n\r\n/**\r\n * Factory function for instaparse.line-col/Cursor, taking a map of keywords to field values.\r\n */\r\ninstaparse.line_col.map__GT_Cursor \x3d (function instaparse$line_col$map__GT_Cursor(G__27977){\r\nvar extmap__4542__auto__ \x3d (function (){var G__28129 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__27977,new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095)], 0));\r\nif(cljs.core.record_QMARK_(G__27977)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__28129);\r\n} else {\r\nreturn G__28129;\r\n}\r\n})();\r\nreturn (new instaparse.line_col.Cursor(new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915).cljs$core$IFn$_invoke$arity$1(G__27977),new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235).cljs$core$IFn$_invoke$arity$1(G__27977),new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095).cljs$core$IFn$_invoke$arity$1(G__27977),null,cljs.core.not_empty(extmap__4542__auto__),null));\r\n});\r\n\r\ninstaparse.line_col.advance_cursor \x3d (function instaparse$line_col$advance_cursor(cursor,text,new_index){\r\nvar new_index__$1 \x3d (new_index | (0));\r\nif((cursor.index \x3c\x3d new_index__$1)){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (\x3c\x3d (.-index cursor) new-index)\x22));\r\n}\r\n\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cursor.index,new_index__$1)){\r\nreturn cursor;\r\n} else {\r\nvar index \x3d cursor.index;\r\nvar line \x3d cursor.line;\r\nvar column \x3d cursor.column;\r\nwhile(true){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(index,new_index__$1)){\r\nreturn (new instaparse.line_col.Cursor(index,line,column,null,null,null));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(text.charAt(index),\x22\\n\x22)){\r\nvar G__28213 \x3d (index + (1));\r\nvar G__28214 \x3d (line + (1));\r\nvar G__28215 \x3d (1);\r\nindex \x3d G__28213;\r\nline \x3d G__28214;\r\ncolumn \x3d G__28215;\r\ncontinue;\r\n} else {\r\nvar G__28216 \x3d (index + (1));\r\nvar G__28217 \x3d line;\r\nvar G__28218 \x3d (column + (1));\r\nindex \x3d G__28216;\r\nline \x3d G__28217;\r\ncolumn \x3d G__28218;\r\ncontinue;\r\n\r\n}\r\n}\r\nbreak;\r\n}\r\n}\r\n});\r\n/**\r\n * Given a string `text`, returns a function that takes an index into the string,\r\n * and returns a cursor, including line and column information.  For efficiency,\r\n * inputs must be fed into the function in increasing order.\r\n */\r\ninstaparse.line_col.make_line_col_fn \x3d (function instaparse$line_col$make_line_col_fn(text){\r\nvar cursor_state \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1((new instaparse.line_col.Cursor((0),(1),(1),null,null,null)));\r\nreturn (function instaparse$line_col$make_line_col_fn_$_line_col(i){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cursor_state,instaparse.line_col.advance_cursor,text,i);\r\n\r\nreturn cljs.core.deref(cursor_state);\r\n});\r\n});\r\ninstaparse.line_col.hiccup_add_line_col_spans \x3d (function instaparse$line_col$hiccup_add_line_col_spans(line_col_fn,parse_tree){\r\nvar m \x3d cljs.core.meta(parse_tree);\r\nvar start_index \x3d new cljs.core.Keyword(\x22instaparse.gll\x22,\x22start-index\x22,\x22instaparse.gll/start-index\x22,404653620).cljs$core$IFn$_invoke$arity$1(m);\r\nvar end_index \x3d new cljs.core.Keyword(\x22instaparse.gll\x22,\x22end-index\x22,\x22instaparse.gll/end-index\x22,-1851404441).cljs$core$IFn$_invoke$arity$1(m);\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d start_index;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn end_index;\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nvar start_cursor \x3d (line_col_fn.cljs$core$IFn$_invoke$arity$1 ? line_col_fn.cljs$core$IFn$_invoke$arity$1(start_index) : line_col_fn.call(null,start_index));\r\nvar children \x3d cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(instaparse.line_col.hiccup_add_line_col_spans,line_col_fn),cljs.core.next(parse_tree)));\r\nvar end_cursor \x3d (line_col_fn.cljs$core$IFn$_invoke$arity$1 ? line_col_fn.cljs$core$IFn$_invoke$arity$1(end_index) : line_col_fn.call(null,end_index));\r\nreturn cljs.core.with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(parse_tree)], null),children),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.meta(parse_tree),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(\x22instaparse.gll\x22,\x22start-line\x22,\x22instaparse.gll/start-line\x22,768862483),new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235).cljs$core$IFn$_invoke$arity$1(start_cursor),new cljs.core.Keyword(\x22instaparse.gll\x22,\x22start-column\x22,\x22instaparse.gll/start-column\x22,-1490883898),new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095).cljs$core$IFn$_invoke$arity$1(start_cursor),new cljs.core.Keyword(\x22instaparse.gll\x22,\x22end-line\x22,\x22instaparse.gll/end-line\x22,-1706020282),new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235).cljs$core$IFn$_invoke$arity$1(end_cursor),new cljs.core.Keyword(\x22instaparse.gll\x22,\x22end-column\x22,\x22instaparse.gll/end-column\x22,942330297),new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095).cljs$core$IFn$_invoke$arity$1(end_cursor)], null)], 0)));\r\n} else {\r\nreturn parse_tree;\r\n}\r\n});\r\ninstaparse.line_col.enlive_add_line_col_spans \x3d (function instaparse$line_col$enlive_add_line_col_spans(line_col_fn,parse_tree){\r\nvar m \x3d cljs.core.meta(parse_tree);\r\nvar start_index \x3d new cljs.core.Keyword(\x22instaparse.gll\x22,\x22start-index\x22,\x22instaparse.gll/start-index\x22,404653620).cljs$core$IFn$_invoke$arity$1(m);\r\nvar end_index \x3d new cljs.core.Keyword(\x22instaparse.gll\x22,\x22end-index\x22,\x22instaparse.gll/end-index\x22,-1851404441).cljs$core$IFn$_invoke$arity$1(m);\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d start_index;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn end_index;\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nvar start_cursor \x3d (line_col_fn.cljs$core$IFn$_invoke$arity$1 ? line_col_fn.cljs$core$IFn$_invoke$arity$1(start_index) : line_col_fn.call(null,start_index));\r\nvar children \x3d cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(instaparse.line_col.enlive_add_line_col_spans,line_col_fn),new cljs.core.Keyword(null,\x22content\x22,\x22content\x22,15833224).cljs$core$IFn$_invoke$arity$1(parse_tree)));\r\nvar end_cursor \x3d (line_col_fn.cljs$core$IFn$_invoke$arity$1 ? line_col_fn.cljs$core$IFn$_invoke$arity$1(end_index) : line_col_fn.call(null,end_index));\r\nreturn cljs.core.with_meta(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parse_tree,new cljs.core.Keyword(null,\x22content\x22,\x22content\x22,15833224),children),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.meta(parse_tree),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(\x22instaparse.gll\x22,\x22start-line\x22,\x22instaparse.gll/start-line\x22,768862483),new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235).cljs$core$IFn$_invoke$arity$1(start_cursor),new cljs.core.Keyword(\x22instaparse.gll\x22,\x22start-column\x22,\x22instaparse.gll/start-column\x22,-1490883898),new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095).cljs$core$IFn$_invoke$arity$1(start_cursor),new cljs.core.Keyword(\x22instaparse.gll\x22,\x22end-line\x22,\x22instaparse.gll/end-line\x22,-1706020282),new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235).cljs$core$IFn$_invoke$arity$1(end_cursor),new cljs.core.Keyword(\x22instaparse.gll\x22,\x22end-column\x22,\x22instaparse.gll/end-column\x22,942330297),new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095).cljs$core$IFn$_invoke$arity$1(end_cursor)], null)], 0)));\r\n} else {\r\nreturn parse_tree;\r\n}\r\n});\r\n/**\r\n * Given a string `text` and a `parse-tree` for text, return parse tree\r\n * with its metadata annotated with line and column info. The info can\r\n * then be found in the metadata map under the keywords:\r\n *  \r\n * :instaparse.gll/start-line, :instaparse.gll/start-column,\r\n * :instaparse.gll/end-line, :instaparse.gll/end-column\r\n * \r\n * The start is inclusive, the end is exclusive. Lines and columns are 1-based.\r\n */\r\ninstaparse.line_col.add_line_col_spans \x3d (function instaparse$line_col$add_line_col_spans(text,parse_tree){\r\nvar line_col_fn \x3d instaparse.line_col.make_line_col_fn(text);\r\nif((parse_tree \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d cljs.core.map_QMARK_(parse_tree);\r\nif(and__4251__auto__){\r\nreturn new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223).cljs$core$IFn$_invoke$arity$1(parse_tree);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nreturn instaparse.line_col.enlive_add_line_col_spans(line_col_fn,parse_tree);\r\n} else {\r\nif(((cljs.core.vector_QMARK_(parse_tree)) \x26\x26 ((cljs.core.first(parse_tree) instanceof cljs.core.Keyword)))){\r\nreturn instaparse.line_col.hiccup_add_line_col_spans(line_col_fn,parse_tree);\r\n} else {\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d cljs.core.sequential_QMARK_(parse_tree);\r\nif(and__4251__auto__){\r\nvar and__4251__auto____$1 \x3d cljs.core.map_QMARK_(cljs.core.first(parse_tree));\r\nif(and__4251__auto____$1){\r\nreturn new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.first(parse_tree));\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nreturn instaparse.transform.map_preserving_meta(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(instaparse.line_col.enlive_add_line_col_spans,line_col_fn),parse_tree);\r\n} else {\r\nif(((cljs.core.sequential_QMARK_(parse_tree)) \x26\x26 (((cljs.core.vector_QMARK_(cljs.core.first(parse_tree))) \x26\x26 ((cljs.core.first(cljs.core.first(parse_tree)) instanceof cljs.core.Keyword)))))){\r\nreturn instaparse.transform.map_preserving_meta(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(instaparse.line_col.hiccup_add_line_col_spans,line_col_fn),parse_tree);\r\n} else {\r\nif((parse_tree instanceof instaparse.gll.Failure)){\r\nreturn parse_tree;\r\n} else {\r\nreturn instaparse.util.throw_illegal_argument_exception.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid parse-tree, not recognized as either enlive or hiccup format.\x22], 0));\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\n");
SHADOW_ENV.evalLoad("instaparse.core.js", true , "goog.provide(\x27instaparse.core\x27);\r\ninstaparse.core._STAR_default_output_format_STAR_ \x3d new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238);\r\n/**\r\n * Changes the default output format.  Input should be :hiccup or :enlive\r\n */\r\ninstaparse.core.set_default_output_format_BANG_ \x3d (function instaparse$core$set_default_output_format_BANG_(type){\r\nif(cljs.core.truth_((function (){var fexpr__28588 \x3d new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),null,new cljs.core.Keyword(null,\x22enlive\x22,\x22enlive\x22,1679023921),null], null), null);\r\nreturn (fexpr__28588.cljs$core$IFn$_invoke$arity$1 ? fexpr__28588.cljs$core$IFn$_invoke$arity$1(type) : fexpr__28588.call(null,type));\r\n})())){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (#{:hiccup :enlive} type)\x22));\r\n}\r\n\r\nreturn (instaparse.core._STAR_default_output_format_STAR_ \x3d type);\r\n});\r\ninstaparse.core._STAR_default_input_format_STAR_ \x3d new cljs.core.Keyword(null,\x22ebnf\x22,\x22ebnf\x22,31967825);\r\n/**\r\n * Changes the default input format.  Input should be :abnf or :ebnf\r\n */\r\ninstaparse.core.set_default_input_format_BANG_ \x3d (function instaparse$core$set_default_input_format_BANG_(type){\r\nif(cljs.core.truth_((function (){var fexpr__28589 \x3d new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22ebnf\x22,\x22ebnf\x22,31967825),null,new cljs.core.Keyword(null,\x22abnf\x22,\x22abnf\x22,-152462052),null], null), null);\r\nreturn (fexpr__28589.cljs$core$IFn$_invoke$arity$1 ? fexpr__28589.cljs$core$IFn$_invoke$arity$1(type) : fexpr__28589.call(null,type));\r\n})())){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (#{:ebnf :abnf} type)\x22));\r\n}\r\n\r\nreturn (instaparse.core._STAR_default_input_format_STAR_ \x3d type);\r\n});\r\n\r\n\r\ninstaparse.core.unhide_parser \x3d (function instaparse$core$unhide_parser(parser,unhide){\r\nvar G__28590 \x3d unhide;\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(null,G__28590)){\r\nreturn parser;\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22content\x22,\x22content\x22,15833224),G__28590)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267),instaparse.combinators_source.unhide_all_content(new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267).cljs$core$IFn$_invoke$arity$1(parser)));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),G__28590)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267),instaparse.combinators_source.unhide_tags(new cljs.core.Keyword(null,\x22output-format\x22,\x22output-format\x22,-1826382676).cljs$core$IFn$_invoke$arity$1(parser),new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267).cljs$core$IFn$_invoke$arity$1(parser)));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22all\x22,\x22all\x22,892129742),G__28590)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267),instaparse.combinators_source.unhide_all(new cljs.core.Keyword(null,\x22output-format\x22,\x22output-format\x22,-1826382676).cljs$core$IFn$_invoke$arity$1(parser),new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267).cljs$core$IFn$_invoke$arity$1(parser)));\r\n} else {\r\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__28590)].join(\x27\x27)));\r\n\r\n}\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Use parser to parse the text.  Returns first parse tree found\r\n * that completely parses the text.  If no parse tree is possible, returns\r\n * a Failure object.\r\n * \r\n * Optional keyword arguments:\r\n * :start :keyword  (where :keyword is name of starting production rule)\r\n * :partial true    (parses that don\x27t consume the whole string are okay)\r\n * :total true      (if parse fails, embed failure node in tree)\r\n * :unhide \x3c:tags or :content or :all\x3e (for this parse, disable hiding)\r\n * :optimize :memory   (when possible, employ strategy to use less memory)\r\n * \r\n * Clj only:\r\n * :trace true      (print diagnostic trace while parsing)\r\n */\r\ninstaparse.core.parse \x3d (function instaparse$core$parse(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___28628 \x3d arguments.length;\r\nvar i__4865__auto___28629 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___28629 \x3c len__4864__auto___28628)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___28629]));\r\n\r\nvar G__28630 \x3d (i__4865__auto___28629 + (1));\r\ni__4865__auto___28629 \x3d G__28630;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((2) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((2)),(0),null)):null);\r\nreturn instaparse.core.parse.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4871__auto__);\r\n});\r\n\r\n(instaparse.core.parse.cljs$core$IFn$_invoke$arity$variadic \x3d (function (parser,text,p__28594){\r\nvar map__28595 \x3d p__28594;\r\nvar map__28595__$1 \x3d cljs.core.__destructure_map(map__28595);\r\nvar options \x3d map__28595__$1;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [null,null,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),null,new cljs.core.Keyword(null,\x22content\x22,\x22content\x22,15833224),null,new cljs.core.Keyword(null,\x22all\x22,\x22all\x22,892129742),null], null), null),cljs.core.get.cljs$core$IFn$_invoke$arity$2(options,new cljs.core.Keyword(null,\x22unhide\x22,\x22unhide\x22,-413983695)))){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (contains? #{nil :tags :content :all} (get options :unhide))\x22));\r\n}\r\n\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [null,null,new cljs.core.Keyword(null,\x22memory\x22,\x22memory\x22,-1449401430),null], null), null),cljs.core.get.cljs$core$IFn$_invoke$arity$2(options,new cljs.core.Keyword(null,\x22optimize\x22,\x22optimize\x22,-1912349448)))){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (contains? #{nil :memory} (get options :optimize))\x22));\r\n}\r\n\r\nvar start_production \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(options,new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981),new cljs.core.Keyword(null,\x22start-production\x22,\x22start-production\x22,687546537).cljs$core$IFn$_invoke$arity$1(parser));\r\nvar partial_QMARK_ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(options,new cljs.core.Keyword(null,\x22partial\x22,\x22partial\x22,241141745),false);\r\nvar optimize_QMARK_ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(options,new cljs.core.Keyword(null,\x22optimize\x22,\x22optimize\x22,-1912349448),false);\r\nvar unhide \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(options,new cljs.core.Keyword(null,\x22unhide\x22,\x22unhide\x22,-413983695));\r\nvar trace_QMARK_ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(options,new cljs.core.Keyword(null,\x22trace\x22,\x22trace\x22,-1082747415),false);\r\nvar parser__$1 \x3d instaparse.core.unhide_parser(parser,unhide);\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22total\x22,\x22total\x22,1916810418).cljs$core$IFn$_invoke$arity$1(options))){\r\nreturn instaparse.gll.parse_total(new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267).cljs$core$IFn$_invoke$arity$1(parser__$1),start_production,text,partial_QMARK_,(function (){var G__28596 \x3d new cljs.core.Keyword(null,\x22output-format\x22,\x22output-format\x22,-1826382676).cljs$core$IFn$_invoke$arity$1(parser__$1);\r\nreturn (instaparse.reduction.node_builders.cljs$core$IFn$_invoke$arity$1 ? instaparse.reduction.node_builders.cljs$core$IFn$_invoke$arity$1(G__28596) : instaparse.reduction.node_builders.call(null,G__28596));\r\n})());\r\n} else {\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d optimize_QMARK_;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn cljs.core.not(partial_QMARK_);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nvar result \x3d instaparse.repeat.try_repeating_parse_strategy(parser__$1,text,start_production);\r\nif(cljs.core.truth_((instaparse.core.failure_QMARK_.cljs$core$IFn$_invoke$arity$1 ? instaparse.core.failure_QMARK_.cljs$core$IFn$_invoke$arity$1(result) : instaparse.core.failure_QMARK_.call(null,result)))){\r\nreturn instaparse.gll.parse(new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267).cljs$core$IFn$_invoke$arity$1(parser__$1),start_production,text,partial_QMARK_);\r\n} else {\r\nreturn result;\r\n}\r\n} else {\r\nreturn instaparse.gll.parse(new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267).cljs$core$IFn$_invoke$arity$1(parser__$1),start_production,text,partial_QMARK_);\r\n\r\n}\r\n}\r\n}));\r\n\r\n(instaparse.core.parse.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/** @this {Function} */\r\n(instaparse.core.parse.cljs$lang$applyTo \x3d (function (seq28591){\r\nvar G__28592 \x3d cljs.core.first(seq28591);\r\nvar seq28591__$1 \x3d cljs.core.next(seq28591);\r\nvar G__28593 \x3d cljs.core.first(seq28591__$1);\r\nvar seq28591__$2 \x3d cljs.core.next(seq28591__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__28592,G__28593,seq28591__$2);\r\n}));\r\n\r\n/**\r\n * Use parser to parse the text.  Returns lazy seq of all parse trees\r\n * that completely parse the text.  If no parse tree is possible, returns\r\n * () with a Failure object attached as metadata.\r\n * \r\n * Optional keyword arguments:\r\n * :start :keyword  (where :keyword is name of starting production rule)\r\n * :partial true    (parses that don\x27t consume the whole string are okay)\r\n * :total true      (if parse fails, embed failure node in tree)\r\n * :unhide \x3c:tags or :content or :all\x3e (for this parse, disable hiding)\r\n * \r\n * Clj only:\r\n * :trace true      (print diagnostic trace while parsing)\r\n */\r\ninstaparse.core.parses \x3d (function instaparse$core$parses(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___28631 \x3d arguments.length;\r\nvar i__4865__auto___28632 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___28632 \x3c len__4864__auto___28631)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___28632]));\r\n\r\nvar G__28633 \x3d (i__4865__auto___28632 + (1));\r\ni__4865__auto___28632 \x3d G__28633;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((2) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((2)),(0),null)):null);\r\nreturn instaparse.core.parses.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4871__auto__);\r\n});\r\n\r\n(instaparse.core.parses.cljs$core$IFn$_invoke$arity$variadic \x3d (function (parser,text,p__28600){\r\nvar map__28601 \x3d p__28600;\r\nvar map__28601__$1 \x3d cljs.core.__destructure_map(map__28601);\r\nvar options \x3d map__28601__$1;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [null,null,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),null,new cljs.core.Keyword(null,\x22content\x22,\x22content\x22,15833224),null,new cljs.core.Keyword(null,\x22all\x22,\x22all\x22,892129742),null], null), null),cljs.core.get.cljs$core$IFn$_invoke$arity$2(options,new cljs.core.Keyword(null,\x22unhide\x22,\x22unhide\x22,-413983695)))){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (contains? #{nil :tags :content :all} (get options :unhide))\x22));\r\n}\r\n\r\nvar start_production \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(options,new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981),new cljs.core.Keyword(null,\x22start-production\x22,\x22start-production\x22,687546537).cljs$core$IFn$_invoke$arity$1(parser));\r\nvar partial_QMARK_ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(options,new cljs.core.Keyword(null,\x22partial\x22,\x22partial\x22,241141745),false);\r\nvar unhide \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(options,new cljs.core.Keyword(null,\x22unhide\x22,\x22unhide\x22,-413983695));\r\nvar trace_QMARK_ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(options,new cljs.core.Keyword(null,\x22trace\x22,\x22trace\x22,-1082747415),false);\r\nvar parser__$1 \x3d instaparse.core.unhide_parser(parser,unhide);\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22total\x22,\x22total\x22,1916810418).cljs$core$IFn$_invoke$arity$1(options))){\r\nreturn instaparse.gll.parses_total(new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267).cljs$core$IFn$_invoke$arity$1(parser__$1),start_production,text,partial_QMARK_,(function (){var G__28602 \x3d new cljs.core.Keyword(null,\x22output-format\x22,\x22output-format\x22,-1826382676).cljs$core$IFn$_invoke$arity$1(parser__$1);\r\nreturn (instaparse.reduction.node_builders.cljs$core$IFn$_invoke$arity$1 ? instaparse.reduction.node_builders.cljs$core$IFn$_invoke$arity$1(G__28602) : instaparse.reduction.node_builders.call(null,G__28602));\r\n})());\r\n} else {\r\nreturn instaparse.gll.parses(new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267).cljs$core$IFn$_invoke$arity$1(parser__$1),start_production,text,partial_QMARK_);\r\n\r\n}\r\n}));\r\n\r\n(instaparse.core.parses.cljs$lang$maxFixedArity \x3d (2));\r\n\r\n/** @this {Function} */\r\n(instaparse.core.parses.cljs$lang$applyTo \x3d (function (seq28597){\r\nvar G__28598 \x3d cljs.core.first(seq28597);\r\nvar seq28597__$1 \x3d cljs.core.next(seq28597);\r\nvar G__28599 \x3d cljs.core.first(seq28597__$1);\r\nvar seq28597__$2 \x3d cljs.core.next(seq28597__$1);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__28598,G__28599,seq28597__$2);\r\n}));\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IRecord}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IFn}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ninstaparse.core.Parser \x3d (function (grammar,start_production,output_format,__meta,__extmap,__hash){\r\nthis.grammar \x3d grammar;\r\nthis.start_production \x3d start_production;\r\nthis.output_format \x3d output_format;\r\nthis.__meta \x3d __meta;\r\nthis.__extmap \x3d __extmap;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716171;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\r\n});\r\n(instaparse.core.Parser.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__4502__auto__,k__4503__auto__){\r\nvar self__ \x3d this;\r\nvar this__4502__auto____$1 \x3d this;\r\nreturn this__4502__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4503__auto__,null);\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__4504__auto__,k28604,else__4505__auto__){\r\nvar self__ \x3d this;\r\nvar this__4504__auto____$1 \x3d this;\r\nvar G__28609 \x3d k28604;\r\nvar G__28609__$1 \x3d (((G__28609 instanceof cljs.core.Keyword))?G__28609.fqn:null);\r\nswitch (G__28609__$1) {\r\ncase \x22grammar\x22:\r\nreturn self__.grammar;\r\n\r\nbreak;\r\ncase \x22start-production\x22:\r\nreturn self__.start_production;\r\n\r\nbreak;\r\ncase \x22output-format\x22:\r\nreturn self__.output_format;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k28604,else__4505__auto__);\r\n\r\n}\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__4522__auto__,f__4523__auto__,init__4524__auto__){\r\nvar self__ \x3d this;\r\nvar this__4522__auto____$1 \x3d this;\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4525__auto__,p__28610){\r\nvar vec__28611 \x3d p__28610;\r\nvar k__4526__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28611,(0),null);\r\nvar v__4527__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28611,(1),null);\r\nreturn (f__4523__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4523__auto__.cljs$core$IFn$_invoke$arity$3(ret__4525__auto__,k__4526__auto__,v__4527__auto__) : f__4523__auto__.call(null,ret__4525__auto__,k__4526__auto__,v__4527__auto__));\r\n}),init__4524__auto__,this__4522__auto____$1);\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__4517__auto__,writer__4518__auto__,opts__4519__auto__){\r\nvar self__ \x3d this;\r\nvar this__4517__auto____$1 \x3d this;\r\nvar pr_pair__4520__auto__ \x3d (function (keyval__4521__auto__){\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__4519__auto__,keyval__4521__auto__);\r\n});\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,pr_pair__4520__auto__,\x22#instaparse.core.Parser{\x22,\x22, \x22,\x22}\x22,opts__4519__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267),self__.grammar],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22start-production\x22,\x22start-production\x22,687546537),self__.start_production],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22output-format\x22,\x22output-format\x22,-1826382676),self__.output_format],null))], null),self__.__extmap));\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__28603){\r\nvar self__ \x3d this;\r\nvar G__28603__$1 \x3d this;\r\nreturn (new cljs.core.RecordIter((0),G__28603__$1,3,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267),new cljs.core.Keyword(null,\x22start-production\x22,\x22start-production\x22,687546537),new cljs.core.Keyword(null,\x22output-format\x22,\x22output-format\x22,-1826382676)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__4500__auto__){\r\nvar self__ \x3d this;\r\nvar this__4500__auto____$1 \x3d this;\r\nreturn self__.__meta;\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__4497__auto__){\r\nvar self__ \x3d this;\r\nvar this__4497__auto____$1 \x3d this;\r\nreturn (new instaparse.core.Parser(self__.grammar,self__.start_production,self__.output_format,self__.__meta,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__4506__auto__){\r\nvar self__ \x3d this;\r\nvar this__4506__auto____$1 \x3d this;\r\nreturn (3 + cljs.core.count(self__.__extmap));\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__4498__auto__){\r\nvar self__ \x3d this;\r\nvar this__4498__auto____$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d (function (coll__4499__auto__){\r\nreturn (-360509877 ^ cljs.core.hash_unordered_coll(coll__4499__auto__));\r\n})(this__4498__auto____$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this28605,other28606){\r\nvar self__ \x3d this;\r\nvar this28605__$1 \x3d this;\r\nreturn (((!((other28606 \x3d\x3d null)))) \x26\x26 ((((this28605__$1.constructor \x3d\x3d\x3d other28606.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this28605__$1.grammar,other28606.grammar)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this28605__$1.start_production,other28606.start_production)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this28605__$1.output_format,other28606.output_format)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this28605__$1.__extmap,other28606.__extmap)))))))))));\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__4512__auto__,k__4513__auto__){\r\nvar self__ \x3d this;\r\nvar this__4512__auto____$1 \x3d this;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22start-production\x22,\x22start-production\x22,687546537),null,new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267),null,new cljs.core.Keyword(null,\x22output-format\x22,\x22output-format\x22,-1826382676),null], null), null),k__4513__auto__)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4512__auto____$1),self__.__meta),k__4513__auto__);\r\n} else {\r\nreturn (new instaparse.core.Parser(self__.grammar,self__.start_production,self__.output_format,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4513__auto__)),null));\r\n}\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__4509__auto__,k28604){\r\nvar self__ \x3d this;\r\nvar this__4509__auto____$1 \x3d this;\r\nvar G__28614 \x3d k28604;\r\nvar G__28614__$1 \x3d (((G__28614 instanceof cljs.core.Keyword))?G__28614.fqn:null);\r\nswitch (G__28614__$1) {\r\ncase \x22grammar\x22:\r\ncase \x22start-production\x22:\r\ncase \x22output-format\x22:\r\nreturn true;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.contains_QMARK_(self__.__extmap,k28604);\r\n\r\n}\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__4510__auto__,k__4511__auto__,G__28603){\r\nvar self__ \x3d this;\r\nvar this__4510__auto____$1 \x3d this;\r\nvar pred__28615 \x3d cljs.core.keyword_identical_QMARK_;\r\nvar expr__28616 \x3d k__4511__auto__;\r\nif(cljs.core.truth_((pred__28615.cljs$core$IFn$_invoke$arity$2 ? pred__28615.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267),expr__28616) : pred__28615.call(null,new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267),expr__28616)))){\r\nreturn (new instaparse.core.Parser(G__28603,self__.start_production,self__.output_format,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__28615.cljs$core$IFn$_invoke$arity$2 ? pred__28615.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22start-production\x22,\x22start-production\x22,687546537),expr__28616) : pred__28615.call(null,new cljs.core.Keyword(null,\x22start-production\x22,\x22start-production\x22,687546537),expr__28616)))){\r\nreturn (new instaparse.core.Parser(self__.grammar,G__28603,self__.output_format,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__28615.cljs$core$IFn$_invoke$arity$2 ? pred__28615.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22output-format\x22,\x22output-format\x22,-1826382676),expr__28616) : pred__28615.call(null,new cljs.core.Keyword(null,\x22output-format\x22,\x22output-format\x22,-1826382676),expr__28616)))){\r\nreturn (new instaparse.core.Parser(self__.grammar,self__.start_production,G__28603,self__.__meta,self__.__extmap,null));\r\n} else {\r\nreturn (new instaparse.core.Parser(self__.grammar,self__.start_production,self__.output_format,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4511__auto__,G__28603),null));\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__4515__auto__){\r\nvar self__ \x3d this;\r\nvar this__4515__auto____$1 \x3d this;\r\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267),self__.grammar,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22start-production\x22,\x22start-production\x22,687546537),self__.start_production,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22output-format\x22,\x22output-format\x22,-1826382676),self__.output_format,null))], null),self__.__extmap));\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__4501__auto__,G__28603){\r\nvar self__ \x3d this;\r\nvar this__4501__auto____$1 \x3d this;\r\nreturn (new instaparse.core.Parser(self__.grammar,self__.start_production,self__.output_format,G__28603,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__4507__auto__,entry__4508__auto__){\r\nvar self__ \x3d this;\r\nvar this__4507__auto____$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(entry__4508__auto__)){\r\nreturn this__4507__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4508__auto__,(0)),cljs.core._nth(entry__4508__auto__,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4507__auto____$1,entry__4508__auto__);\r\n}\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.call \x3d (function (unused__9633__auto__){\r\nvar self__ \x3d this;\r\nvar self__ \x3d this;\r\nvar G__28618 \x3d (arguments.length - (1));\r\nswitch (G__28618) {\r\ncase (1):\r\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\r\n\r\nbreak;\r\ncase (3):\r\nreturn self__.cljs$core$IFn$_invoke$arity$3((arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ncase (5):\r\nreturn self__.cljs$core$IFn$_invoke$arity$5((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\r\n\r\nbreak;\r\ncase (7):\r\nreturn self__.cljs$core$IFn$_invoke$arity$7((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]));\r\n\r\nbreak;\r\ncase (9):\r\nreturn self__.cljs$core$IFn$_invoke$arity$9((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]));\r\n\r\nbreak;\r\ncase (11):\r\nreturn self__.cljs$core$IFn$_invoke$arity$11((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]));\r\n\r\nbreak;\r\ncase (13):\r\nreturn self__.cljs$core$IFn$_invoke$arity$13((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]));\r\n\r\nbreak;\r\ncase (15):\r\nreturn self__.cljs$core$IFn$_invoke$arity$15((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]));\r\n\r\nbreak;\r\ncase (17):\r\nreturn self__.cljs$core$IFn$_invoke$arity$17((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]));\r\n\r\nbreak;\r\ncase (19):\r\nreturn self__.cljs$core$IFn$_invoke$arity$19((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]));\r\n\r\nbreak;\r\ncase (21):\r\nreturn self__.cljs$core$IFn$_invoke$arity$21((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]),(arguments[(21)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\r\n\r\n}\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.apply \x3d (function (self__,args28608){\r\nvar self__ \x3d this;\r\nvar self____$1 \x3d this;\r\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28608)));\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (text){\r\nvar self__ \x3d this;\r\nvar parser \x3d this;\r\nreturn instaparse.core.parse(parser,text);\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IFn$_invoke$arity$3 \x3d (function (text,key1,val1){\r\nvar self__ \x3d this;\r\nvar parser \x3d this;\r\nreturn instaparse.core.parse.cljs$core$IFn$_invoke$arity$variadic(parser,text,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([key1,val1], 0));\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IFn$_invoke$arity$5 \x3d (function (text,key1,val1,key2,val2){\r\nvar self__ \x3d this;\r\nvar parser \x3d this;\r\nreturn instaparse.core.parse.cljs$core$IFn$_invoke$arity$variadic(parser,text,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([key1,val1,key2,val2], 0));\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IFn$_invoke$arity$7 \x3d (function (text,key1,val1,key2,val2,key3,val3){\r\nvar self__ \x3d this;\r\nvar parser \x3d this;\r\nreturn instaparse.core.parse.cljs$core$IFn$_invoke$arity$variadic(parser,text,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([key1,val1,key2,val2,key3,val3], 0));\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IFn$_invoke$arity$9 \x3d (function (text,a,b,c,d,e,f,g,h){\r\nvar self__ \x3d this;\r\nvar parser \x3d this;\r\nreturn instaparse.core.parse.cljs$core$IFn$_invoke$arity$variadic(parser,text,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a,b,c,d,e,f,g,h], 0));\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IFn$_invoke$arity$11 \x3d (function (text,a,b,c,d,e,f,g,h,i,j){\r\nvar self__ \x3d this;\r\nvar parser \x3d this;\r\nreturn instaparse.core.parse.cljs$core$IFn$_invoke$arity$variadic(parser,text,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a,b,c,d,e,f,g,h,i,j], 0));\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IFn$_invoke$arity$13 \x3d (function (text,a,b,c,d,e,f,g,h,i,j,k,l){\r\nvar self__ \x3d this;\r\nvar parser \x3d this;\r\nreturn instaparse.core.parse.cljs$core$IFn$_invoke$arity$variadic(parser,text,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a,b,c,d,e,f,g,h,i,j,k,l], 0));\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IFn$_invoke$arity$15 \x3d (function (text,a,b,c,d,e,f,g,h,i,j,k,l,m,n){\r\nvar self__ \x3d this;\r\nvar parser \x3d this;\r\nreturn instaparse.core.parse.cljs$core$IFn$_invoke$arity$variadic(parser,text,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a,b,c,d,e,f,g,h,i,j,k,l,m,n], 0));\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IFn$_invoke$arity$17 \x3d (function (text,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){\r\nvar self__ \x3d this;\r\nvar parser \x3d this;\r\nreturn instaparse.core.parse.cljs$core$IFn$_invoke$arity$variadic(parser,text,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p], 0));\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IFn$_invoke$arity$19 \x3d (function (text,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){\r\nvar self__ \x3d this;\r\nvar parser \x3d this;\r\nreturn instaparse.core.parse.cljs$core$IFn$_invoke$arity$variadic(parser,text,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p], 0));\r\n}));\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IFn$_invoke$arity$21 \x3d (function (text,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,more){\r\nvar self__ \x3d this;\r\nvar parser \x3d this;\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(instaparse.core.parse,parser,text,a,b,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,more], 0));\r\n}));\r\n\r\n(instaparse.core.Parser.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22grammar\x22,\x22grammar\x22,-773107502,null),new cljs.core.Symbol(null,\x22start-production\x22,\x22start-production\x22,-1966889232,null),new cljs.core.Symbol(null,\x22output-format\x22,\x22output-format\x22,-185851149,null)], null);\r\n}));\r\n\r\n(instaparse.core.Parser.cljs$lang$type \x3d true);\r\n\r\n(instaparse.core.Parser.cljs$lang$ctorPrSeq \x3d (function (this__4546__auto__){\r\nreturn (new cljs.core.List(null,\x22instaparse.core/Parser\x22,null,(1),null));\r\n}));\r\n\r\n(instaparse.core.Parser.cljs$lang$ctorPrWriter \x3d (function (this__4546__auto__,writer__4547__auto__){\r\nreturn cljs.core._write(writer__4547__auto__,\x22instaparse.core/Parser\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for instaparse.core/Parser.\r\n */\r\ninstaparse.core.__GT_Parser \x3d (function instaparse$core$__GT_Parser(grammar,start_production,output_format){\r\nreturn (new instaparse.core.Parser(grammar,start_production,output_format,null,null,null));\r\n});\r\n\r\n/**\r\n * Factory function for instaparse.core/Parser, taking a map of keywords to field values.\r\n */\r\ninstaparse.core.map__GT_Parser \x3d (function instaparse$core$map__GT_Parser(G__28607){\r\nvar extmap__4542__auto__ \x3d (function (){var G__28619 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__28607,new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22start-production\x22,\x22start-production\x22,687546537),new cljs.core.Keyword(null,\x22output-format\x22,\x22output-format\x22,-1826382676)], 0));\r\nif(cljs.core.record_QMARK_(G__28607)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__28619);\r\n} else {\r\nreturn G__28619;\r\n}\r\n})();\r\nreturn (new instaparse.core.Parser(new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267).cljs$core$IFn$_invoke$arity$1(G__28607),new cljs.core.Keyword(null,\x22start-production\x22,\x22start-production\x22,687546537).cljs$core$IFn$_invoke$arity$1(G__28607),new cljs.core.Keyword(null,\x22output-format\x22,\x22output-format\x22,-1826382676).cljs$core$IFn$_invoke$arity$1(G__28607),null,cljs.core.not_empty(extmap__4542__auto__),null));\r\n});\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(instaparse.core.Parser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (parser,writer,_){\r\nvar parser__$1 \x3d this;\r\nreturn cljs.core._write(writer,instaparse.print.Parser__GT_str(parser__$1));\r\n}));\r\n/**\r\n * Takes a string specification of a context-free grammar,\r\n *   or a URI for a text file containing such a specification (Clj only),\r\n *   or a map of parser combinators and returns a parser for that grammar.\r\n * \r\n *   Optional keyword arguments:\r\n *   :input-format :ebnf\r\n *   or\r\n *   :input-format :abnf\r\n * \r\n *   :output-format :enlive\r\n *   or\r\n *   :output-format :hiccup\r\n * \r\n *   :start :keyword (where :keyword is name of starting production rule)\r\n * \r\n *   :string-ci true (treat all string literals as case insensitive)\r\n * \r\n *   :auto-whitespace (:standard or :comma)\r\n *   or\r\n *   :auto-whitespace custom-whitespace-parser\r\n * \r\n *   Clj only:\r\n *   :no-slurp true (disables use of slurp to auto-detect whether\r\n *                input is a URI.  When using this option, input\r\n *                must be a grammar string or grammar map.  Useful\r\n *                for platforms where slurp is slow or not available.)\r\n */\r\ninstaparse.core.parser \x3d (function instaparse$core$parser(var_args){\r\nvar args__4870__auto__ \x3d [];\r\nvar len__4864__auto___28637 \x3d arguments.length;\r\nvar i__4865__auto___28638 \x3d (0);\r\nwhile(true){\r\nif((i__4865__auto___28638 \x3c len__4864__auto___28637)){\r\nargs__4870__auto__.push((arguments[i__4865__auto___28638]));\r\n\r\nvar G__28639 \x3d (i__4865__auto___28638 + (1));\r\ni__4865__auto___28638 \x3d G__28639;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4871__auto__ \x3d ((((1) \x3c args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((1)),(0),null)):null);\r\nreturn instaparse.core.parser.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4871__auto__);\r\n});\r\n\r\n(instaparse.core.parser.cljs$core$IFn$_invoke$arity$variadic \x3d (function (grammar_specification,p__28622){\r\nvar map__28623 \x3d p__28622;\r\nvar map__28623__$1 \x3d cljs.core.__destructure_map(map__28623);\r\nvar options \x3d map__28623__$1;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [null,null,new cljs.core.Keyword(null,\x22ebnf\x22,\x22ebnf\x22,31967825),null,new cljs.core.Keyword(null,\x22abnf\x22,\x22abnf\x22,-152462052),null], null), null),cljs.core.get.cljs$core$IFn$_invoke$arity$2(options,new cljs.core.Keyword(null,\x22input-format\x22,\x22input-format\x22,-422703481)))){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (contains? #{nil :ebnf :abnf} (get options :input-format))\x22));\r\n}\r\n\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [null,null,new cljs.core.Keyword(null,\x22hiccup\x22,\x22hiccup\x22,1218876238),null,new cljs.core.Keyword(null,\x22enlive\x22,\x22enlive\x22,1679023921),null], null), null),cljs.core.get.cljs$core$IFn$_invoke$arity$2(options,new cljs.core.Keyword(null,\x22output-format\x22,\x22output-format\x22,-1826382676)))){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (contains? #{nil :hiccup :enlive} (get options :output-format))\x22));\r\n}\r\n\r\nif((function (){var ws_parser \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(options,new cljs.core.Keyword(null,\x22auto-whitespace\x22,\x22auto-whitespace\x22,741152317));\r\nreturn (((ws_parser \x3d\x3d null)) || (((cljs.core.contains_QMARK_(instaparse.core.standard_whitespace_parsers,ws_parser)) || (((cljs.core.map_QMARK_(ws_parser)) \x26\x26 (((cljs.core.contains_QMARK_(ws_parser,new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267))) \x26\x26 (cljs.core.contains_QMARK_(ws_parser,new cljs.core.Keyword(null,\x22start-production\x22,\x22start-production\x22,687546537))))))))));\r\n})()){\r\n} else {\r\nthrow (new Error(\x22Assert failed: (let [ws-parser (get options :auto-whitespace)] (or (nil? ws-parser) (contains? standard-whitespace-parsers ws-parser) (and (map? ws-parser) (contains? ws-parser :grammar) (contains? ws-parser :start-production))))\x22));\r\n}\r\n\r\nvar input_format \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(options,new cljs.core.Keyword(null,\x22input-format\x22,\x22input-format\x22,-422703481),instaparse.core._STAR_default_input_format_STAR_);\r\nvar build_parser \x3d (function (spec,output_format){\r\nvar _STAR_case_insensitive_literals_STAR__orig_val__28624 \x3d instaparse.cfg._STAR_case_insensitive_literals_STAR_;\r\nvar _STAR_case_insensitive_literals_STAR__temp_val__28625 \x3d new cljs.core.Keyword(null,\x22string-ci\x22,\x22string-ci\x22,374631805).cljs$core$IFn$_invoke$arity$2(options,new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328));\r\n(instaparse.cfg._STAR_case_insensitive_literals_STAR_ \x3d _STAR_case_insensitive_literals_STAR__temp_val__28625);\r\n\r\ntry{var G__28626 \x3d input_format;\r\nvar G__28626__$1 \x3d (((G__28626 instanceof cljs.core.Keyword))?G__28626.fqn:null);\r\nswitch (G__28626__$1) {\r\ncase \x22abnf\x22:\r\nreturn instaparse.abnf.build_parser(spec,output_format);\r\n\r\nbreak;\r\ncase \x22ebnf\x22:\r\nreturn instaparse.cfg.build_parser(spec,output_format);\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__28626__$1)].join(\x27\x27)));\r\n\r\n}\r\n}finally {(instaparse.cfg._STAR_case_insensitive_literals_STAR_ \x3d _STAR_case_insensitive_literals_STAR__orig_val__28624);\r\n}});\r\nvar output_format \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(options,new cljs.core.Keyword(null,\x22output-format\x22,\x22output-format\x22,-1826382676),instaparse.core._STAR_default_output_format_STAR_);\r\nvar start \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(options,new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981),null);\r\nvar built_parser \x3d ((typeof grammar_specification \x3d\x3d\x3d \x27string\x27)?(function (){var parser \x3d build_parser(grammar_specification,output_format);\r\nif(cljs.core.truth_(start)){\r\nreturn instaparse.core.map__GT_Parser(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\x22start-production\x22,\x22start-production\x22,687546537),start));\r\n} else {\r\nreturn instaparse.core.map__GT_Parser(parser);\r\n}\r\n})():((cljs.core.map_QMARK_(grammar_specification))?(function (){var parser \x3d instaparse.cfg.build_parser_from_combinators(grammar_specification,output_format,start);\r\nreturn instaparse.core.map__GT_Parser(parser);\r\n})():((cljs.core.vector_QMARK_(grammar_specification))?(function (){var start__$1 \x3d (cljs.core.truth_(start)?start:(grammar_specification.cljs$core$IFn$_invoke$arity$1 ? grammar_specification.cljs$core$IFn$_invoke$arity$1((0)) : grammar_specification.call(null,(0))));\r\nvar parser \x3d instaparse.cfg.build_parser_from_combinators(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,grammar_specification),output_format,start__$1);\r\nreturn instaparse.core.map__GT_Parser(parser);\r\n})():instaparse.util.throw_illegal_argument_exception.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Expected string, map, or vector as grammar specification, got \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([grammar_specification], 0))], 0))\r\n)));\r\nvar auto_whitespace \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(options,new cljs.core.Keyword(null,\x22auto-whitespace\x22,\x22auto-whitespace\x22,741152317));\r\nvar whitespace_parser \x3d (((auto_whitespace instanceof cljs.core.Keyword))?cljs.core.get.cljs$core$IFn$_invoke$arity$2(instaparse.core.standard_whitespace_parsers,auto_whitespace):auto_whitespace);\r\nvar temp__5751__auto__ \x3d whitespace_parser;\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar map__28627 \x3d temp__5751__auto__;\r\nvar map__28627__$1 \x3d cljs.core.__destructure_map(map__28627);\r\nvar ws_grammar \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28627__$1,new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267));\r\nvar ws_start \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28627__$1,new cljs.core.Keyword(null,\x22start-production\x22,\x22start-production\x22,687546537));\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(built_parser,new cljs.core.Keyword(null,\x22grammar\x22,\x22grammar\x22,1881328267),instaparse.combinators_source.auto_whitespace(built_parser.grammar,built_parser.start_production,ws_grammar,ws_start));\r\n} else {\r\nreturn built_parser;\r\n}\r\n}));\r\n\r\n(instaparse.core.parser.cljs$lang$maxFixedArity \x3d (1));\r\n\r\n/** @this {Function} */\r\n(instaparse.core.parser.cljs$lang$applyTo \x3d (function (seq28620){\r\nvar G__28621 \x3d cljs.core.first(seq28620);\r\nvar seq28620__$1 \x3d cljs.core.next(seq28620);\r\nvar self__4851__auto__ \x3d this;\r\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__28621,seq28620__$1);\r\n}));\r\n\r\n/**\r\n * Tests whether a parse result is a failure.\r\n */\r\ninstaparse.core.failure_QMARK_ \x3d (function instaparse$core$failure_QMARK_(result){\r\nreturn (((result instanceof instaparse.gll.failure_type)) || ((cljs.core.meta(result) instanceof instaparse.gll.failure_type)));\r\n});\r\n/**\r\n * Extracts failure object from failed parse result.\r\n */\r\ninstaparse.core.get_failure \x3d (function instaparse$core$get_failure(result){\r\nif((result instanceof instaparse.gll.failure_type)){\r\nreturn result;\r\n} else {\r\nif((cljs.core.meta(result) instanceof instaparse.gll.failure_type)){\r\nreturn cljs.core.meta(result);\r\n} else {\r\nreturn null;\r\n\r\n}\r\n}\r\n});\r\ninstaparse.core.standard_whitespace_parsers \x3d new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22standard\x22,\x22standard\x22,-1769206695),instaparse.core.parser(\x22whitespace \x3d #\x27\\\\s+\x27\x22),new cljs.core.Keyword(null,\x22comma\x22,\x22comma\x22,1699024745),instaparse.core.parser(\x22whitespace \x3d #\x27[,\\\\s]+\x27\x22)], null);\r\ninstaparse.core.transform \x3d instaparse.transform.transform;\r\ninstaparse.core.add_line_and_column_info_to_metadata \x3d instaparse.line_col.add_line_col_spans;\r\ninstaparse.core.span \x3d instaparse.viz.span;\r\n");
SHADOW_ENV.evalLoad("cljs.tools.reader.edn.js", true , "goog.provide(\x27cljs.tools.reader.edn\x27);\r\n\r\n\r\ncljs.tools.reader.edn.macro_terminating_QMARK_ \x3d (function cljs$tools$reader$edn$macro_terminating_QMARK_(ch){\r\nvar and__4251__auto__ \x3d (!((\x22#\x22 \x3d\x3d\x3d ch)));\r\nif(and__4251__auto__){\r\nvar and__4251__auto____$1 \x3d (!((\x22\x27\x22 \x3d\x3d\x3d ch)));\r\nif(and__4251__auto____$1){\r\nvar and__4251__auto____$2 \x3d (!((\x22:\x22 \x3d\x3d\x3d ch)));\r\nif(and__4251__auto____$2){\r\nreturn (cljs.tools.reader.edn.macros.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.edn.macros.cljs$core$IFn$_invoke$arity$1(ch) : cljs.tools.reader.edn.macros.call(null,ch));\r\n} else {\r\nreturn and__4251__auto____$2;\r\n}\r\n} else {\r\nreturn and__4251__auto____$1;\r\n}\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n});\r\ncljs.tools.reader.edn.not_constituent_QMARK_ \x3d (function cljs$tools$reader$edn$not_constituent_QMARK_(ch){\r\nreturn (((\x22@\x22 \x3d\x3d\x3d ch)) || ((((\x22`\x22 \x3d\x3d\x3d ch)) || ((\x22~\x22 \x3d\x3d\x3d ch)))));\r\n});\r\ncljs.tools.reader.edn.read_token \x3d (function cljs$tools$reader$edn$read_token(var_args){\r\nvar G__27613 \x3d arguments.length;\r\nswitch (G__27613) {\r\ncase 3:\r\nreturn cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$3 \x3d (function (rdr,kind,initch){\r\nreturn cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$4(rdr,kind,initch,true);\r\n}));\r\n\r\n(cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$4 \x3d (function (rdr,kind,initch,validate_leading_QMARK_){\r\nif(cljs.core.not(initch)){\r\nreturn cljs.tools.reader.impl.errors.throw_eof_at_start(rdr,kind);\r\n} else {\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d validate_leading_QMARK_;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn cljs.tools.reader.edn.not_constituent_QMARK_(initch);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nreturn cljs.tools.reader.impl.errors.throw_bad_char(rdr,kind,initch);\r\n} else {\r\nvar sb \x3d (new goog.string.StringBuffer());\r\nvar ch \x3d (function (){\r\ncljs.tools.reader.reader_types.unread(rdr,initch);\r\n\r\nreturn initch;\r\n})()\r\n;\r\nwhile(true){\r\nif(((cljs.tools.reader.impl.utils.whitespace_QMARK_(ch)) || (((cljs.tools.reader.edn.macro_terminating_QMARK_(ch)) || ((ch \x3d\x3d null)))))){\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);\r\n} else {\r\nif(cljs.tools.reader.edn.not_constituent_QMARK_(ch)){\r\nreturn cljs.tools.reader.impl.errors.throw_bad_char(rdr,kind,ch);\r\n} else {\r\nvar G__27691 \x3d (function (){var G__27615 \x3d sb;\r\nG__27615.append(cljs.tools.reader.reader_types.read_char(rdr));\r\n\r\nreturn G__27615;\r\n})();\r\nvar G__27692 \x3d cljs.tools.reader.reader_types.peek_char(rdr);\r\nsb \x3d G__27691;\r\nch \x3d G__27692;\r\ncontinue;\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\n}\r\n}\r\n}));\r\n\r\n(cljs.tools.reader.edn.read_token.cljs$lang$maxFixedArity \x3d 4);\r\n\r\ncljs.tools.reader.edn.read_dispatch \x3d (function cljs$tools$reader$edn$read_dispatch(rdr,_,opts){\r\nvar temp__5751__auto__ \x3d cljs.tools.reader.reader_types.read_char(rdr);\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar ch \x3d temp__5751__auto__;\r\nvar temp__5751__auto____$1 \x3d (cljs.tools.reader.edn.dispatch_macros.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.edn.dispatch_macros.cljs$core$IFn$_invoke$arity$1(ch) : cljs.tools.reader.edn.dispatch_macros.call(null,ch));\r\nif(cljs.core.truth_(temp__5751__auto____$1)){\r\nvar dm \x3d temp__5751__auto____$1;\r\nreturn (dm.cljs$core$IFn$_invoke$arity$3 ? dm.cljs$core$IFn$_invoke$arity$3(rdr,ch,opts) : dm.call(null,rdr,ch,opts));\r\n} else {\r\nvar G__27617 \x3d (function (){var G__27620 \x3d rdr;\r\ncljs.tools.reader.reader_types.unread(G__27620,ch);\r\n\r\nreturn G__27620;\r\n})();\r\nvar G__27618 \x3d ch;\r\nvar G__27619 \x3d opts;\r\nreturn (cljs.tools.reader.edn.read_tagged.cljs$core$IFn$_invoke$arity$3 ? cljs.tools.reader.edn.read_tagged.cljs$core$IFn$_invoke$arity$3(G__27617,G__27618,G__27619) : cljs.tools.reader.edn.read_tagged.call(null,G__27617,G__27618,G__27619));\r\n}\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_eof_at_dispatch(rdr);\r\n}\r\n});\r\ncljs.tools.reader.edn.read_unmatched_delimiter \x3d (function cljs$tools$reader$edn$read_unmatched_delimiter(rdr,ch,opts){\r\nreturn cljs.tools.reader.impl.errors.throw_unmatch_delimiter(rdr,ch);\r\n});\r\ncljs.tools.reader.edn.read_unicode_char \x3d (function cljs$tools$reader$edn$read_unicode_char(var_args){\r\nvar G__27627 \x3d arguments.length;\r\nswitch (G__27627) {\r\ncase 4:\r\nreturn cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ncase 5:\r\nreturn cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$4 \x3d (function (token,offset,length,base){\r\nvar l \x3d (offset + length);\r\nif((cljs.core.count(token) \x3d\x3d\x3d l)){\r\n} else {\r\ncljs.tools.reader.impl.errors.throw_invalid_unicode_literal(null,token);\r\n}\r\n\r\nvar i \x3d offset;\r\nvar uc \x3d (0);\r\nwhile(true){\r\nif((i \x3d\x3d\x3d l)){\r\nreturn String.fromCharCode(uc);\r\n} else {\r\nvar d \x3d cljs.tools.reader.impl.utils.char_code(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(token,i),base);\r\nif((d \x3d\x3d\x3d (-1))){\r\nreturn cljs.tools.reader.impl.errors.throw_invalid_unicode_digit_in_token(null,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(token,i),token);\r\n} else {\r\nvar G__27698 \x3d (i + (1));\r\nvar G__27699 \x3d (d + (uc * base));\r\ni \x3d G__27698;\r\nuc \x3d G__27699;\r\ncontinue;\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$5 \x3d (function (rdr,initch,base,length,exact_QMARK_){\r\nvar i \x3d (1);\r\nvar uc \x3d cljs.tools.reader.impl.utils.char_code(initch,base);\r\nwhile(true){\r\nif((uc \x3d\x3d\x3d (-1))){\r\nreturn cljs.tools.reader.impl.errors.throw_invalid_unicode_digit(rdr,initch);\r\n} else {\r\nif((!((i \x3d\x3d\x3d length)))){\r\nvar ch \x3d cljs.tools.reader.reader_types.peek_char(rdr);\r\nif(cljs.core.truth_((function (){var or__4253__auto__ \x3d cljs.tools.reader.impl.utils.whitespace_QMARK_(ch);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar or__4253__auto____$1 \x3d (cljs.tools.reader.edn.macros.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.edn.macros.cljs$core$IFn$_invoke$arity$1(ch) : cljs.tools.reader.edn.macros.call(null,ch));\r\nif(cljs.core.truth_(or__4253__auto____$1)){\r\nreturn or__4253__auto____$1;\r\n} else {\r\nreturn (ch \x3d\x3d null);\r\n}\r\n}\r\n})())){\r\nif(cljs.core.truth_(exact_QMARK_)){\r\nreturn cljs.tools.reader.impl.errors.throw_invalid_unicode_len(rdr,i,length);\r\n} else {\r\nreturn String.fromCharCode(uc);\r\n}\r\n} else {\r\nvar d \x3d cljs.tools.reader.impl.utils.char_code(ch,base);\r\ncljs.tools.reader.reader_types.read_char(rdr);\r\n\r\nif((d \x3d\x3d\x3d (-1))){\r\nreturn cljs.tools.reader.impl.errors.throw_invalid_unicode_digit(rdr,ch);\r\n} else {\r\nvar G__27701 \x3d (i + (1));\r\nvar G__27702 \x3d (d + (uc * base));\r\ni \x3d G__27701;\r\nuc \x3d G__27702;\r\ncontinue;\r\n}\r\n}\r\n} else {\r\nreturn String.fromCharCode(uc);\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(cljs.tools.reader.edn.read_unicode_char.cljs$lang$maxFixedArity \x3d 5);\r\n\r\ncljs.tools.reader.edn.upper_limit \x3d \x22\\uD7FF\x22.charCodeAt((0));\r\ncljs.tools.reader.edn.lower_limit \x3d \x22\\uE000\x22.charCodeAt((0));\r\ncljs.tools.reader.edn.read_char_STAR_ \x3d (function cljs$tools$reader$edn$read_char_STAR_(rdr,backslash,opts){\r\nvar ch \x3d cljs.tools.reader.reader_types.read_char(rdr);\r\nif((!((ch \x3d\x3d null)))){\r\nvar token \x3d ((((cljs.tools.reader.edn.macro_terminating_QMARK_(ch)) || (((cljs.tools.reader.edn.not_constituent_QMARK_(ch)) || (cljs.tools.reader.impl.utils.whitespace_QMARK_(ch))))))?cljs.core.str.cljs$core$IFn$_invoke$arity$1(ch):cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$4(rdr,new cljs.core.Keyword(null,\x22character\x22,\x22character\x22,380652989),ch,false));\r\nvar token_len \x3d ((token).length);\r\nif(((1) \x3d\x3d\x3d token_len)){\r\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(token,(0));\r\n} else {\r\nif((token \x3d\x3d\x3d \x22newline\x22)){\r\nreturn \x22\\n\x22;\r\n} else {\r\nif((token \x3d\x3d\x3d \x22space\x22)){\r\nreturn \x22 \x22;\r\n} else {\r\nif((token \x3d\x3d\x3d \x22tab\x22)){\r\nreturn \x22\\t\x22;\r\n} else {\r\nif((token \x3d\x3d\x3d \x22backspace\x22)){\r\nreturn \x22\\b\x22;\r\n} else {\r\nif((token \x3d\x3d\x3d \x22formfeed\x22)){\r\nreturn \x22\\f\x22;\r\n} else {\r\nif((token \x3d\x3d\x3d \x22return\x22)){\r\nreturn \x22\\r\x22;\r\n} else {\r\nif(cljs.core.truth_(goog.string.startsWith(token,\x22u\x22))){\r\nvar c \x3d cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$4(token,(1),(4),(16));\r\nvar ic \x3d c.charCodeAt();\r\nif((((ic \x3e cljs.tools.reader.edn.upper_limit)) \x26\x26 ((ic \x3c cljs.tools.reader.edn.lower_limit)))){\r\nreturn cljs.tools.reader.impl.errors.throw_invalid_character_literal(rdr,ic.toString((16)));\r\n} else {\r\nreturn c;\r\n}\r\n} else {\r\nif(cljs.core.truth_(goog.string.startsWith(token,\x22o\x22))){\r\nvar len \x3d (token_len - (1));\r\nif((len \x3e (3))){\r\nreturn cljs.tools.reader.impl.errors.throw_invalid_octal_len(rdr,token);\r\n} else {\r\nvar uc \x3d cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$4(token,(1),len,(8));\r\nif(((uc | (0)) \x3e (255))){\r\nreturn cljs.tools.reader.impl.errors.throw_bad_octal_number(rdr);\r\n} else {\r\nreturn uc;\r\n}\r\n}\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_unsupported_character(rdr,token);\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_eof_in_character(rdr);\r\n}\r\n});\r\ncljs.tools.reader.edn.starting_line_col_info \x3d (function cljs$tools$reader$edn$starting_line_col_info(rdr){\r\nif(cljs.tools.reader.reader_types.indexing_reader_QMARK_(rdr)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.tools.reader.reader_types.get_line_number(rdr),(((cljs.tools.reader.reader_types.get_column_number(rdr) | (0)) - (1)) | (0))], null);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ncljs.tools.reader.edn.read_delimited \x3d (function cljs$tools$reader$edn$read_delimited(kind,delim,rdr,opts){\r\nvar vec__27633 \x3d cljs.tools.reader.edn.starting_line_col_info(rdr);\r\nvar start_line \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27633,(0),null);\r\nvar start_column \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27633,(1),null);\r\nvar delim__$1 \x3d cljs.tools.reader.impl.utils.char$(delim);\r\nvar a \x3d cljs.core.transient$(cljs.core.PersistentVector.EMPTY);\r\nwhile(true){\r\nvar ch \x3d cljs.tools.reader.impl.commons.read_past(cljs.tools.reader.impl.utils.whitespace_QMARK_,rdr);\r\nif(cljs.core.truth_(ch)){\r\n} else {\r\ncljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$5(rdr,kind,start_line,start_column,cljs.core.count(a));\r\n}\r\n\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(delim__$1,cljs.tools.reader.impl.utils.char$(ch))){\r\nreturn cljs.core.persistent_BANG_(a);\r\n} else {\r\nvar temp__5751__auto__ \x3d (cljs.tools.reader.edn.macros.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.edn.macros.cljs$core$IFn$_invoke$arity$1(ch) : cljs.tools.reader.edn.macros.call(null,ch));\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar macrofn \x3d temp__5751__auto__;\r\nvar mret \x3d (macrofn.cljs$core$IFn$_invoke$arity$3 ? macrofn.cljs$core$IFn$_invoke$arity$3(rdr,ch,opts) : macrofn.call(null,rdr,ch,opts));\r\nvar G__27708 \x3d (((!((mret \x3d\x3d\x3d rdr))))?cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(a,mret):a);\r\na \x3d G__27708;\r\ncontinue;\r\n} else {\r\nvar o \x3d (function (){var G__27636 \x3d (function (){var G__27640 \x3d rdr;\r\ncljs.tools.reader.reader_types.unread(G__27640,ch);\r\n\r\nreturn G__27640;\r\n})();\r\nvar G__27637 \x3d true;\r\nvar G__27638 \x3d null;\r\nvar G__27639 \x3d opts;\r\nreturn (cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4 ? cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4(G__27636,G__27637,G__27638,G__27639) : cljs.tools.reader.edn.read.call(null,G__27636,G__27637,G__27638,G__27639));\r\n})();\r\nvar G__27709 \x3d (((!((o \x3d\x3d\x3d rdr))))?cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(a,o):a);\r\na \x3d G__27709;\r\ncontinue;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.tools.reader.edn.read_list \x3d (function cljs$tools$reader$edn$read_list(rdr,_,opts){\r\nvar the_list \x3d cljs.tools.reader.edn.read_delimited(new cljs.core.Keyword(null,\x22list\x22,\x22list\x22,765357683),\x22)\x22,rdr,opts);\r\nif(cljs.core.empty_QMARK_(the_list)){\r\nreturn cljs.core.List.EMPTY;\r\n} else {\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.list,the_list);\r\n}\r\n});\r\ncljs.tools.reader.edn.read_vector \x3d (function cljs$tools$reader$edn$read_vector(rdr,_,opts){\r\nreturn cljs.tools.reader.edn.read_delimited(new cljs.core.Keyword(null,\x22vector\x22,\x22vector\x22,1902966158),\x22]\x22,rdr,opts);\r\n});\r\ncljs.tools.reader.edn.read_map \x3d (function cljs$tools$reader$edn$read_map(rdr,_,opts){\r\nvar vec__27645 \x3d cljs.tools.reader.edn.starting_line_col_info(rdr);\r\nvar start_line \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27645,(0),null);\r\nvar start_column \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27645,(1),null);\r\nvar the_map \x3d cljs.tools.reader.edn.read_delimited(new cljs.core.Keyword(null,\x22map\x22,\x22map\x22,1371690461),\x22}\x22,rdr,opts);\r\nvar map_count \x3d cljs.core.count(the_map);\r\nvar ks \x3d cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2((2),the_map);\r\nvar key_set \x3d cljs.core.set(ks);\r\nif(cljs.core.odd_QMARK_(map_count)){\r\ncljs.tools.reader.impl.errors.throw_odd_map(rdr,start_line,start_column,the_map);\r\n} else {\r\n}\r\n\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(key_set),cljs.core.count(ks))){\r\n} else {\r\ncljs.tools.reader.impl.errors.throw_dup_keys(rdr,new cljs.core.Keyword(null,\x22map\x22,\x22map\x22,1371690461),ks);\r\n}\r\n\r\nif((map_count \x3c\x3d ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){\r\nreturn cljs.core.PersistentArrayMap.fromArray(cljs.core.to_array(the_map),true,true);\r\n} else {\r\nreturn cljs.core.PersistentHashMap.fromArray(cljs.core.to_array(the_map),true);\r\n}\r\n});\r\ncljs.tools.reader.edn.read_number \x3d (function cljs$tools$reader$edn$read_number(rdr,initch,opts){\r\nvar sb \x3d (function (){var G__27648 \x3d (new goog.string.StringBuffer());\r\nG__27648.append(initch);\r\n\r\nreturn G__27648;\r\n})();\r\nvar ch \x3d cljs.tools.reader.reader_types.read_char(rdr);\r\nwhile(true){\r\nif(cljs.core.truth_((function (){var or__4253__auto__ \x3d cljs.tools.reader.impl.utils.whitespace_QMARK_(ch);\r\nif(or__4253__auto__){\r\nreturn or__4253__auto__;\r\n} else {\r\nvar or__4253__auto____$1 \x3d (cljs.tools.reader.edn.macros.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.edn.macros.cljs$core$IFn$_invoke$arity$1(ch) : cljs.tools.reader.edn.macros.call(null,ch));\r\nif(cljs.core.truth_(or__4253__auto____$1)){\r\nreturn or__4253__auto____$1;\r\n} else {\r\nreturn (ch \x3d\x3d null);\r\n}\r\n}\r\n})())){\r\nvar s \x3d cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);\r\ncljs.tools.reader.reader_types.unread(rdr,ch);\r\n\r\nvar or__4253__auto__ \x3d cljs.tools.reader.impl.commons.match_number(s);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_invalid_number(rdr,s);\r\n}\r\n} else {\r\nvar G__27710 \x3d (function (){var G__27650 \x3d sb;\r\nG__27650.append(ch);\r\n\r\nreturn G__27650;\r\n})();\r\nvar G__27711 \x3d cljs.tools.reader.reader_types.read_char(rdr);\r\nsb \x3d G__27710;\r\nch \x3d G__27711;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.tools.reader.edn.escape_char \x3d (function cljs$tools$reader$edn$escape_char(sb,rdr){\r\nvar ch \x3d cljs.tools.reader.reader_types.read_char(rdr);\r\nvar G__27651 \x3d ch;\r\nswitch (G__27651) {\r\ncase \x22t\x22:\r\nreturn \x22\\t\x22;\r\n\r\nbreak;\r\ncase \x22r\x22:\r\nreturn \x22\\r\x22;\r\n\r\nbreak;\r\ncase \x22n\x22:\r\nreturn \x22\\n\x22;\r\n\r\nbreak;\r\ncase \x22\\\\\x22:\r\nreturn \x22\\\\\x22;\r\n\r\nbreak;\r\ncase \x22\\\x22\x22:\r\nreturn \x22\\\x22\x22;\r\n\r\nbreak;\r\ncase \x22b\x22:\r\nreturn \x22\\b\x22;\r\n\r\nbreak;\r\ncase \x22f\x22:\r\nreturn \x22\\f\x22;\r\n\r\nbreak;\r\ncase \x22u\x22:\r\nvar ch__$1 \x3d cljs.tools.reader.reader_types.read_char(rdr);\r\nif(((-1) \x3d\x3d\x3d parseInt((ch__$1 | (0)),(16)))){\r\nreturn cljs.tools.reader.impl.errors.throw_invalid_unicode_escape(rdr,ch__$1);\r\n} else {\r\nreturn cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$5(rdr,ch__$1,(16),(4),true);\r\n}\r\n\r\nbreak;\r\ndefault:\r\nif(cljs.tools.reader.impl.utils.numeric_QMARK_(ch)){\r\nvar ch__$1 \x3d cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$5(rdr,ch,(8),(3),false);\r\nif(((ch__$1 | (0)) \x3e (255))){\r\nreturn cljs.tools.reader.impl.errors.throw_bad_octal_number(rdr);\r\n} else {\r\nreturn ch__$1;\r\n}\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_bad_escape_char(rdr,ch);\r\n}\r\n\r\n}\r\n});\r\ncljs.tools.reader.edn.read_string_STAR_ \x3d (function cljs$tools$reader$edn$read_string_STAR_(rdr,_,opts){\r\nvar sb \x3d (new goog.string.StringBuffer());\r\nvar ch \x3d cljs.tools.reader.reader_types.read_char(rdr);\r\nwhile(true){\r\nvar G__27656 \x3d ch;\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(null,G__27656)){\r\nreturn cljs.tools.reader.impl.errors.throw_eof_reading.cljs$core$IFn$_invoke$arity$variadic(rdr,new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22\\\x22\x22,sb], 0));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22\\\\\x22,G__27656)){\r\nvar G__27713 \x3d (function (){var G__27661 \x3d sb;\r\nG__27661.append(cljs.tools.reader.edn.escape_char(sb,rdr));\r\n\r\nreturn G__27661;\r\n})();\r\nvar G__27714 \x3d cljs.tools.reader.reader_types.read_char(rdr);\r\nsb \x3d G__27713;\r\nch \x3d G__27714;\r\ncontinue;\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22\\\x22\x22,G__27656)){\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);\r\n} else {\r\nvar G__27715 \x3d (function (){var G__27662 \x3d sb;\r\nG__27662.append(ch);\r\n\r\nreturn G__27662;\r\n})();\r\nvar G__27716 \x3d cljs.tools.reader.reader_types.read_char(rdr);\r\nsb \x3d G__27715;\r\nch \x3d G__27716;\r\ncontinue;\r\n\r\n}\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\ncljs.tools.reader.edn.read_symbol \x3d (function cljs$tools$reader$edn$read_symbol(rdr,initch){\r\nvar temp__5753__auto__ \x3d cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$3(rdr,new cljs.core.Keyword(null,\x22symbol\x22,\x22symbol\x22,-1038572696),initch);\r\nif(cljs.core.truth_(temp__5753__auto__)){\r\nvar token \x3d temp__5753__auto__;\r\nvar G__27664 \x3d token;\r\nswitch (G__27664) {\r\ncase \x22nil\x22:\r\nreturn null;\r\n\r\nbreak;\r\ncase \x22true\x22:\r\nreturn true;\r\n\r\nbreak;\r\ncase \x22false\x22:\r\nreturn false;\r\n\r\nbreak;\r\ncase \x22/\x22:\r\nreturn new cljs.core.Symbol(null,\x22/\x22,\x22/\x22,-1371932971,null);\r\n\r\nbreak;\r\ndefault:\r\nvar or__4253__auto__ \x3d (function (){var temp__5753__auto____$1 \x3d cljs.tools.reader.impl.commons.parse_symbol(token);\r\nif(cljs.core.truth_(temp__5753__auto____$1)){\r\nvar p \x3d temp__5753__auto____$1;\r\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$2((p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1((0)) : p.call(null,(0))),(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1((1)) : p.call(null,(1))));\r\n} else {\r\nreturn null;\r\n}\r\n})();\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_invalid(rdr,new cljs.core.Keyword(null,\x22symbol\x22,\x22symbol\x22,-1038572696),token);\r\n}\r\n\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ncljs.tools.reader.edn.read_keyword \x3d (function cljs$tools$reader$edn$read_keyword(reader,initch,opts){\r\nvar ch \x3d cljs.tools.reader.reader_types.read_char(reader);\r\nif((!(cljs.tools.reader.impl.utils.whitespace_QMARK_(ch)))){\r\nvar token \x3d cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$3(reader,new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),ch);\r\nvar s \x3d cljs.tools.reader.impl.commons.parse_symbol(token);\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d s;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn ((-1) \x3d\x3d\x3d token.indexOf(\x22::\x22));\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nvar ns \x3d (s.cljs$core$IFn$_invoke$arity$1 ? s.cljs$core$IFn$_invoke$arity$1((0)) : s.call(null,(0)));\r\nvar name \x3d (s.cljs$core$IFn$_invoke$arity$1 ? s.cljs$core$IFn$_invoke$arity$1((1)) : s.call(null,(1)));\r\nif((\x22:\x22 \x3d\x3d\x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$2(token,(0)))){\r\nreturn cljs.tools.reader.impl.errors.throw_invalid(reader,new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),[\x22:\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(token)].join(\x27\x27));\r\n} else {\r\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(ns,name);\r\n}\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_invalid(reader,new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),[\x22:\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(token)].join(\x27\x27));\r\n}\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_single_colon(reader);\r\n}\r\n});\r\ncljs.tools.reader.edn.wrapping_reader \x3d (function cljs$tools$reader$edn$wrapping_reader(sym){\r\nreturn (function (rdr,_,opts){\r\nreturn (new cljs.core.List(null,sym,(new cljs.core.List(null,(cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4 ? cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4(rdr,true,null,opts) : cljs.tools.reader.edn.read.call(null,rdr,true,null,opts)),null,(1),null)),(2),null));\r\n});\r\n});\r\ncljs.tools.reader.edn.read_meta \x3d (function cljs$tools$reader$edn$read_meta(rdr,_,opts){\r\nvar m \x3d cljs.tools.reader.impl.utils.desugar_meta((cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4 ? cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4(rdr,true,null,opts) : cljs.tools.reader.edn.read.call(null,rdr,true,null,opts)));\r\nif(cljs.core.map_QMARK_(m)){\r\n} else {\r\ncljs.tools.reader.impl.errors.throw_bad_metadata(rdr,m);\r\n}\r\n\r\nvar o \x3d (cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4 ? cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4(rdr,true,null,opts) : cljs.tools.reader.edn.read.call(null,rdr,true,null,opts));\r\nif((((!((o \x3d\x3d null))))?(((((o.cljs$lang$protocol_mask$partition0$ \x26 (131072))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d o.cljs$core$IMeta$))))?true:false):false)){\r\nreturn cljs.core.with_meta(o,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.meta(o),m], 0)));\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_bad_metadata_target(rdr,o);\r\n}\r\n});\r\ncljs.tools.reader.edn.read_set \x3d (function cljs$tools$reader$edn$read_set(rdr,_,opts){\r\nvar coll \x3d cljs.tools.reader.edn.read_delimited(new cljs.core.Keyword(null,\x22set\x22,\x22set\x22,304602554),\x22}\x22,rdr,opts);\r\nvar the_set \x3d cljs.core.set(coll);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(coll),cljs.core.count(the_set))){\r\n} else {\r\ncljs.tools.reader.impl.errors.throw_dup_keys(rdr,new cljs.core.Keyword(null,\x22set\x22,\x22set\x22,304602554),coll);\r\n}\r\n\r\nreturn the_set;\r\n});\r\ncljs.tools.reader.edn.read_discard \x3d (function cljs$tools$reader$edn$read_discard(rdr,_,opts){\r\nvar G__27671 \x3d rdr;\r\n(cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4 ? cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4(G__27671,true,null,true) : cljs.tools.reader.edn.read.call(null,G__27671,true,null,true));\r\n\r\nreturn G__27671;\r\n});\r\ncljs.tools.reader.edn.read_namespaced_map \x3d (function cljs$tools$reader$edn$read_namespaced_map(rdr,_,opts){\r\nvar token \x3d cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$3(rdr,new cljs.core.Keyword(null,\x22namespaced-map\x22,\x22namespaced-map\x22,1235665380),cljs.tools.reader.reader_types.read_char(rdr));\r\nvar temp__5751__auto__ \x3d (function (){var G__27672 \x3d token;\r\nvar G__27672__$1 \x3d (((G__27672 \x3d\x3d null))?null:cljs.tools.reader.impl.commons.parse_symbol(G__27672));\r\nif((G__27672__$1 \x3d\x3d null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.tools.reader.impl.utils.second_SINGLEQUOTE_(G__27672__$1);\r\n}\r\n})();\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar ns \x3d temp__5751__auto__;\r\nvar ch \x3d cljs.tools.reader.impl.commons.read_past(cljs.tools.reader.impl.utils.whitespace_QMARK_,rdr);\r\nif((ch \x3d\x3d\x3d \x22{\x22)){\r\nvar items \x3d cljs.tools.reader.edn.read_delimited(new cljs.core.Keyword(null,\x22namespaced-map\x22,\x22namespaced-map\x22,1235665380),\x22}\x22,rdr,opts);\r\nif(cljs.core.odd_QMARK_(cljs.core.count(items))){\r\ncljs.tools.reader.impl.errors.throw_odd_map(rdr,null,null,items);\r\n} else {\r\n}\r\n\r\nvar keys \x3d cljs.tools.reader.impl.utils.namespace_keys(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2((2),items));\r\nvar vals \x3d cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2((2),cljs.core.rest(items));\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(cljs.core.set(keys)),cljs.core.count(keys))){\r\n} else {\r\ncljs.tools.reader.impl.errors.throw_dup_keys(rdr,new cljs.core.Keyword(null,\x22namespaced-map\x22,\x22namespaced-map\x22,1235665380),keys);\r\n}\r\n\r\nreturn cljs.core.zipmap(keys,vals);\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_ns_map_no_map(rdr,token);\r\n}\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_bad_ns(rdr,token);\r\n}\r\n});\r\ncljs.tools.reader.edn.read_symbolic_value \x3d (function cljs$tools$reader$edn$read_symbolic_value(rdr,_,opts){\r\nvar sym \x3d (cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4 ? cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4(rdr,true,null,opts) : cljs.tools.reader.edn.read.call(null,rdr,true,null,opts));\r\nvar G__27673 \x3d sym;\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\x22NaN\x22,\x22NaN\x22,666918153,null),G__27673)){\r\nreturn Number.NaN;\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\x22-Inf\x22,\x22-Inf\x22,-2123243689,null),G__27673)){\r\nreturn Number.NEGATIVE_INFINITY;\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\x22Inf\x22,\x22Inf\x22,647172781,null),G__27673)){\r\nreturn Number.POSITIVE_INFINITY;\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\x22Invalid token: ##\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)].join(\x27\x27)], 0));\r\n\r\n}\r\n}\r\n}\r\n});\r\ncljs.tools.reader.edn.macros \x3d (function cljs$tools$reader$edn$macros(ch){\r\nvar G__27674 \x3d ch;\r\nswitch (G__27674) {\r\ncase \x22\\\x22\x22:\r\nreturn cljs.tools.reader.edn.read_string_STAR_;\r\n\r\nbreak;\r\ncase \x22:\x22:\r\nreturn cljs.tools.reader.edn.read_keyword;\r\n\r\nbreak;\r\ncase \x22;\x22:\r\nreturn cljs.tools.reader.impl.commons.read_comment;\r\n\r\nbreak;\r\ncase \x22^\x22:\r\nreturn cljs.tools.reader.edn.read_meta;\r\n\r\nbreak;\r\ncase \x22(\x22:\r\nreturn cljs.tools.reader.edn.read_list;\r\n\r\nbreak;\r\ncase \x22)\x22:\r\nreturn cljs.tools.reader.edn.read_unmatched_delimiter;\r\n\r\nbreak;\r\ncase \x22[\x22:\r\nreturn cljs.tools.reader.edn.read_vector;\r\n\r\nbreak;\r\ncase \x22]\x22:\r\nreturn cljs.tools.reader.edn.read_unmatched_delimiter;\r\n\r\nbreak;\r\ncase \x22{\x22:\r\nreturn cljs.tools.reader.edn.read_map;\r\n\r\nbreak;\r\ncase \x22}\x22:\r\nreturn cljs.tools.reader.edn.read_unmatched_delimiter;\r\n\r\nbreak;\r\ncase \x22\\\\\x22:\r\nreturn cljs.tools.reader.edn.read_char_STAR_;\r\n\r\nbreak;\r\ncase \x22#\x22:\r\nreturn cljs.tools.reader.edn.read_dispatch;\r\n\r\nbreak;\r\ndefault:\r\nreturn null;\r\n\r\n}\r\n});\r\ncljs.tools.reader.edn.dispatch_macros \x3d (function cljs$tools$reader$edn$dispatch_macros(ch){\r\nvar G__27676 \x3d ch;\r\nswitch (G__27676) {\r\ncase \x22^\x22:\r\nreturn cljs.tools.reader.edn.read_meta;\r\n\r\nbreak;\r\ncase \x22{\x22:\r\nreturn cljs.tools.reader.edn.read_set;\r\n\r\nbreak;\r\ncase \x22\x3c\x22:\r\nreturn cljs.tools.reader.impl.commons.throwing_reader(\x22Unreadable form\x22);\r\n\r\nbreak;\r\ncase \x22!\x22:\r\nreturn cljs.tools.reader.impl.commons.read_comment;\r\n\r\nbreak;\r\ncase \x22_\x22:\r\nreturn cljs.tools.reader.edn.read_discard;\r\n\r\nbreak;\r\ncase \x22:\x22:\r\nreturn cljs.tools.reader.edn.read_namespaced_map;\r\n\r\nbreak;\r\ncase \x22#\x22:\r\nreturn cljs.tools.reader.edn.read_symbolic_value;\r\n\r\nbreak;\r\ndefault:\r\nreturn null;\r\n\r\n}\r\n});\r\ncljs.tools.reader.edn.read_tagged \x3d (function cljs$tools$reader$edn$read_tagged(rdr,initch,opts){\r\nvar tag \x3d (cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4 ? cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4(rdr,true,null,opts) : cljs.tools.reader.edn.read.call(null,rdr,true,null,opts));\r\nvar object \x3d (cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4 ? cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4(rdr,true,null,opts) : cljs.tools.reader.edn.read.call(null,rdr,true,null,opts));\r\nif((!((tag instanceof cljs.core.Symbol)))){\r\ncljs.tools.reader.impl.errors.throw_bad_reader_tag(rdr,\x22Reader tag must be a symbol\x22);\r\n} else {\r\n}\r\n\r\nvar temp__5751__auto__ \x3d (function (){var or__4253__auto__ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22readers\x22,\x22readers\x22,-2118263030).cljs$core$IFn$_invoke$arity$1(opts),tag);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn (cljs.tools.reader.default_data_readers.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.default_data_readers.cljs$core$IFn$_invoke$arity$1(tag) : cljs.tools.reader.default_data_readers.call(null,tag));\r\n}\r\n})();\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar f \x3d temp__5751__auto__;\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(object) : f.call(null,object));\r\n} else {\r\nvar temp__5751__auto____$1 \x3d new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328).cljs$core$IFn$_invoke$arity$1(opts);\r\nif(cljs.core.truth_(temp__5751__auto____$1)){\r\nvar d \x3d temp__5751__auto____$1;\r\nreturn (d.cljs$core$IFn$_invoke$arity$2 ? d.cljs$core$IFn$_invoke$arity$2(tag,object) : d.call(null,tag,object));\r\n} else {\r\nreturn cljs.tools.reader.impl.errors.throw_unknown_reader_tag(rdr,tag);\r\n}\r\n}\r\n});\r\n/**\r\n * Reads the first object from an IPushbackReader.\r\n * Returns the object read. If EOF, throws if eof-error? is true otherwise returns eof.\r\n * If no reader is provided, *in* will be used.\r\n * \r\n * Reads data in the edn format (subset of Clojure data):\r\n * http://edn-format.org\r\n * \r\n * cljs.tools.reader.edn/read doesn\x27t depend on dynamic Vars, all configuration\r\n * is done by passing an opt map.\r\n * \r\n * opts is a map that can include the following keys:\r\n * :eof - value to return on end-of-file. When not supplied, eof throws an exception.\r\n * :readers  - a map of tag symbols to data-reader functions to be considered before default-data-readers.\r\n *            When not supplied, only the default-data-readers will be used.\r\n * :default - A function of two args, that will, if present and no reader is found for a tag,\r\n *            be called with the tag and the value.\r\n */\r\ncljs.tools.reader.edn.read \x3d (function cljs$tools$reader$edn$read(var_args){\r\nvar G__27681 \x3d arguments.length;\r\nswitch (G__27681) {\r\ncase 1:\r\nreturn cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$1 \x3d (function (reader){\r\nreturn cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,reader);\r\n}));\r\n\r\n(cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$2 \x3d (function (p__27682,reader){\r\nvar map__27683 \x3d p__27682;\r\nvar map__27683__$1 \x3d cljs.core.__destructure_map(map__27683);\r\nvar opts \x3d map__27683__$1;\r\nvar eof \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27683__$1,new cljs.core.Keyword(null,\x22eof\x22,\x22eof\x22,-489063237));\r\nvar eof_error_QMARK_ \x3d (!(cljs.core.contains_QMARK_(opts,new cljs.core.Keyword(null,\x22eof\x22,\x22eof\x22,-489063237))));\r\nreturn cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4(reader,eof_error_QMARK_,eof,opts);\r\n}));\r\n\r\n(cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4 \x3d (function (reader,eof_error_QMARK_,eof,opts){\r\ntry{while(true){\r\nvar ch \x3d cljs.tools.reader.reader_types.read_char(reader);\r\nif(cljs.tools.reader.impl.utils.whitespace_QMARK_(ch)){\r\ncontinue;\r\n} else {\r\nif((ch \x3d\x3d null)){\r\nif(cljs.core.truth_(eof_error_QMARK_)){\r\nreturn cljs.tools.reader.impl.errors.throw_eof_error(reader,null);\r\n} else {\r\nreturn eof;\r\n}\r\n} else {\r\nif(cljs.tools.reader.impl.commons.number_literal_QMARK_(reader,ch)){\r\nreturn cljs.tools.reader.edn.read_number(reader,ch,opts);\r\n} else {\r\nvar f \x3d cljs.tools.reader.edn.macros(ch);\r\nif(cljs.core.truth_(f)){\r\nvar res \x3d (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(reader,ch,opts) : f.call(null,reader,ch,opts));\r\nif((res \x3d\x3d\x3d reader)){\r\ncontinue;\r\n} else {\r\nreturn res;\r\n}\r\n} else {\r\nreturn cljs.tools.reader.edn.read_symbol(reader,ch);\r\n}\r\n\r\n}\r\n}\r\n}\r\nbreak;\r\n}\r\n}catch (e27684){if((e27684 instanceof Error)){\r\nvar e \x3d e27684;\r\nif(cljs.tools.reader.impl.utils.ex_info_QMARK_(e)){\r\nvar d \x3d cljs.core.ex_data(e);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22reader-exception\x22,\x22reader-exception\x22,-1938323098),new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348).cljs$core$IFn$_invoke$arity$1(d))){\r\nthrow e;\r\n} else {\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(e.message,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),new cljs.core.Keyword(null,\x22reader-exception\x22,\x22reader-exception\x22,-1938323098)], null),d,((cljs.tools.reader.reader_types.indexing_reader_QMARK_(reader))?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),cljs.tools.reader.reader_types.get_line_number(reader),new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),cljs.tools.reader.reader_types.get_column_number(reader),new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),cljs.tools.reader.reader_types.get_file_name(reader)], null):null)], 0)),e);\r\n}\r\n} else {\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(e.message,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),new cljs.core.Keyword(null,\x22reader-exception\x22,\x22reader-exception\x22,-1938323098)], null),((cljs.tools.reader.reader_types.indexing_reader_QMARK_(reader))?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),cljs.tools.reader.reader_types.get_line_number(reader),new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),cljs.tools.reader.reader_types.get_column_number(reader),new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),cljs.tools.reader.reader_types.get_file_name(reader)], null):null)], 0)),e);\r\n}\r\n} else {\r\nthrow e27684;\r\n\r\n}\r\n}}));\r\n\r\n(cljs.tools.reader.edn.read.cljs$lang$maxFixedArity \x3d 4);\r\n\r\n/**\r\n * Reads one object from the string s.\r\n * Returns nil when s is nil or empty.\r\n * \r\n * Reads data in the edn format (subset of Clojure data):\r\n * http://edn-format.org\r\n * \r\n * opts is a map as per cljs.tools.reader.edn/read\r\n */\r\ncljs.tools.reader.edn.read_string \x3d (function cljs$tools$reader$edn$read_string(var_args){\r\nvar G__27687 \x3d arguments.length;\r\nswitch (G__27687) {\r\ncase 1:\r\nreturn cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$1 \x3d (function (s){\r\nreturn cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22eof\x22,\x22eof\x22,-489063237),null], null),s);\r\n}));\r\n\r\n(cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$2 \x3d (function (opts,s){\r\nif(cljs.core.truth_((function (){var and__4251__auto__ \x3d s;\r\nif(cljs.core.truth_(and__4251__auto__)){\r\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(s,\x22\x22);\r\n} else {\r\nreturn and__4251__auto__;\r\n}\r\n})())){\r\nreturn cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$2(opts,cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1(s));\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(cljs.tools.reader.edn.read_string.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n");
SHADOW_ENV.evalLoad("cljs.reader.js", true , "goog.provide(\x27cljs.reader\x27);\r\ngoog.scope(function(){\r\n  cljs.reader.goog$module$goog$object \x3d goog.module.get(\x27goog.object\x27);\r\n});\r\ncljs.reader.zero_fill_right_and_truncate \x3d (function cljs$reader$zero_fill_right_and_truncate(s,width){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(width,cljs.core.count(s))){\r\nreturn s;\r\n} else {\r\nif((width \x3c cljs.core.count(s))){\r\nreturn cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),width);\r\n} else {\r\nvar b \x3d (new goog.string.StringBuffer(s));\r\nwhile(true){\r\nif((b.getLength() \x3c width)){\r\nvar G__27849 \x3d b.append(\x220\x22);\r\nb \x3d G__27849;\r\ncontinue;\r\n} else {\r\nreturn b.toString();\r\n}\r\nbreak;\r\n}\r\n\r\n}\r\n}\r\n});\r\ncljs.reader.divisible_QMARK_ \x3d (function cljs$reader$divisible_QMARK_(num,div){\r\nreturn (cljs.core.mod(num,div) \x3d\x3d\x3d (0));\r\n});\r\ncljs.reader.indivisible_QMARK_ \x3d (function cljs$reader$indivisible_QMARK_(num,div){\r\nreturn (!(cljs.reader.divisible_QMARK_(num,div)));\r\n});\r\ncljs.reader.leap_year_QMARK_ \x3d (function cljs$reader$leap_year_QMARK_(year){\r\nreturn ((cljs.reader.divisible_QMARK_(year,(4))) \x26\x26 (((cljs.reader.indivisible_QMARK_(year,(100))) || (cljs.reader.divisible_QMARK_(year,(400))))));\r\n});\r\ncljs.reader.days_in_month \x3d (function (){var dim_norm \x3d new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,(31),(28),(31),(30),(31),(30),(31),(31),(30),(31),(30),(31)], null);\r\nvar dim_leap \x3d new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,(31),(29),(31),(30),(31),(30),(31),(31),(30),(31),(30),(31)], null);\r\nreturn (function (month,leap_year_QMARK_){\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2((cljs.core.truth_(leap_year_QMARK_)?dim_leap:dim_norm),month);\r\n});\r\n})();\r\ncljs.reader.timestamp_regex \x3d /(\\d\\d\\d\\d)(?:-(\\d\\d)(?:-(\\d\\d)(?:[T](\\d\\d)(?::(\\d\\d)(?::(\\d\\d)(?:[.](\\d+))?)?)?)?)?)?(?:[Z]|([-+])(\\d\\d):(\\d\\d))?/;\r\ncljs.reader.parse_int \x3d (function cljs$reader$parse_int(s){\r\nvar n \x3d parseInt(s,(10));\r\nif(cljs.core.not(isNaN(n))){\r\nreturn n;\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ncljs.reader.check \x3d (function cljs$reader$check(low,n,high,msg){\r\nif((((low \x3c\x3d n)) \x26\x26 ((n \x3c\x3d high)))){\r\n} else {\r\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg),\x22 Failed:  \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(low),\x22\x3c\x3d\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(n),\x22\x3c\x3d\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(high)].join(\x27\x27)));\r\n}\r\n\r\nreturn n;\r\n});\r\ncljs.reader.parse_and_validate_timestamp \x3d (function cljs$reader$parse_and_validate_timestamp(s){\r\nvar vec__27811 \x3d cljs.core.re_matches(cljs.reader.timestamp_regex,s);\r\nvar _ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27811,(0),null);\r\nvar years \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27811,(1),null);\r\nvar months \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27811,(2),null);\r\nvar days \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27811,(3),null);\r\nvar hours \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27811,(4),null);\r\nvar minutes \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27811,(5),null);\r\nvar seconds \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27811,(6),null);\r\nvar fraction \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27811,(7),null);\r\nvar offset_sign \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27811,(8),null);\r\nvar offset_hours \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27811,(9),null);\r\nvar offset_minutes \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27811,(10),null);\r\nvar v \x3d vec__27811;\r\nif(cljs.core.not(v)){\r\nthrow (new Error([\x22Unrecognized date/time syntax: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join(\x27\x27)));\r\n} else {\r\nvar years__$1 \x3d cljs.reader.parse_int(years);\r\nvar months__$1 \x3d (function (){var or__4253__auto__ \x3d cljs.reader.parse_int(months);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn (1);\r\n}\r\n})();\r\nvar days__$1 \x3d (function (){var or__4253__auto__ \x3d cljs.reader.parse_int(days);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn (1);\r\n}\r\n})();\r\nvar hours__$1 \x3d (function (){var or__4253__auto__ \x3d cljs.reader.parse_int(hours);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn (0);\r\n}\r\n})();\r\nvar minutes__$1 \x3d (function (){var or__4253__auto__ \x3d cljs.reader.parse_int(minutes);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn (0);\r\n}\r\n})();\r\nvar seconds__$1 \x3d (function (){var or__4253__auto__ \x3d cljs.reader.parse_int(seconds);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn (0);\r\n}\r\n})();\r\nvar fraction__$1 \x3d (function (){var or__4253__auto__ \x3d cljs.reader.parse_int(cljs.reader.zero_fill_right_and_truncate(fraction,(3)));\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn (0);\r\n}\r\n})();\r\nvar offset_sign__$1 \x3d ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(offset_sign,\x22-\x22))?(-1):(1));\r\nvar offset_hours__$1 \x3d (function (){var or__4253__auto__ \x3d cljs.reader.parse_int(offset_hours);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn (0);\r\n}\r\n})();\r\nvar offset_minutes__$1 \x3d (function (){var or__4253__auto__ \x3d cljs.reader.parse_int(offset_minutes);\r\nif(cljs.core.truth_(or__4253__auto__)){\r\nreturn or__4253__auto__;\r\n} else {\r\nreturn (0);\r\n}\r\n})();\r\nvar offset \x3d (offset_sign__$1 * ((offset_hours__$1 * (60)) + offset_minutes__$1));\r\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1,cljs.reader.check((1),months__$1,(12),\x22timestamp month field must be in range 1..12\x22),cljs.reader.check((1),days__$1,cljs.reader.days_in_month(months__$1,cljs.reader.leap_year_QMARK_(years__$1)),\x22timestamp day field must be in range 1..last day in month\x22),cljs.reader.check((0),hours__$1,(23),\x22timestamp hour field must be in range 0..23\x22),cljs.reader.check((0),minutes__$1,(59),\x22timestamp minute field must be in range 0..59\x22),cljs.reader.check((0),seconds__$1,((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(minutes__$1,(59)))?(60):(59)),\x22timestamp second field must be in range 0..60\x22),cljs.reader.check((0),fraction__$1,(999),\x22timestamp millisecond field must be in range 0..999\x22),offset], null);\r\n}\r\n});\r\ncljs.reader.parse_timestamp \x3d (function cljs$reader$parse_timestamp(ts){\r\nvar temp__5751__auto__ \x3d cljs.reader.parse_and_validate_timestamp(ts);\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar vec__27818 \x3d temp__5751__auto__;\r\nvar years \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27818,(0),null);\r\nvar months \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27818,(1),null);\r\nvar days \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27818,(2),null);\r\nvar hours \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27818,(3),null);\r\nvar minutes \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27818,(4),null);\r\nvar seconds \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27818,(5),null);\r\nvar ms \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27818,(6),null);\r\nvar offset \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27818,(7),null);\r\nreturn (new Date((Date.UTC(years,(months - (1)),days,hours,minutes,seconds,ms) - ((offset * (60)) * (1000)))));\r\n} else {\r\nthrow (new Error([\x22Unrecognized date/time syntax: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(ts)].join(\x27\x27)));\r\n}\r\n});\r\ncljs.reader.read_date \x3d (function cljs$reader$read_date(s){\r\nif(typeof s \x3d\x3d\x3d \x27string\x27){\r\nreturn cljs.reader.parse_timestamp(s);\r\n} else {\r\nthrow (new Error(\x22Instance literal expects a string for its timestamp.\x22));\r\n}\r\n});\r\ncljs.reader.read_queue \x3d (function cljs$reader$read_queue(elems){\r\nif(cljs.core.vector_QMARK_(elems)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentQueue.EMPTY,elems);\r\n} else {\r\nthrow (new Error(\x22Queue literal expects a vector for its elements.\x22));\r\n}\r\n});\r\ncljs.reader.read_js \x3d (function cljs$reader$read_js(form){\r\nif(cljs.core.vector_QMARK_(form)){\r\nvar arr \x3d [];\r\nvar seq__27821_27850 \x3d cljs.core.seq(form);\r\nvar chunk__27822_27851 \x3d null;\r\nvar count__27823_27852 \x3d (0);\r\nvar i__27824_27853 \x3d (0);\r\nwhile(true){\r\nif((i__27824_27853 \x3c count__27823_27852)){\r\nvar x_27854 \x3d chunk__27822_27851.cljs$core$IIndexed$_nth$arity$2(null,i__27824_27853);\r\narr.push(x_27854);\r\n\r\n\r\nvar G__27855 \x3d seq__27821_27850;\r\nvar G__27856 \x3d chunk__27822_27851;\r\nvar G__27857 \x3d count__27823_27852;\r\nvar G__27858 \x3d (i__27824_27853 + (1));\r\nseq__27821_27850 \x3d G__27855;\r\nchunk__27822_27851 \x3d G__27856;\r\ncount__27823_27852 \x3d G__27857;\r\ni__27824_27853 \x3d G__27858;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto___27859 \x3d cljs.core.seq(seq__27821_27850);\r\nif(temp__5753__auto___27859){\r\nvar seq__27821_27860__$1 \x3d temp__5753__auto___27859;\r\nif(cljs.core.chunked_seq_QMARK_(seq__27821_27860__$1)){\r\nvar c__4679__auto___27861 \x3d cljs.core.chunk_first(seq__27821_27860__$1);\r\nvar G__27862 \x3d cljs.core.chunk_rest(seq__27821_27860__$1);\r\nvar G__27863 \x3d c__4679__auto___27861;\r\nvar G__27864 \x3d cljs.core.count(c__4679__auto___27861);\r\nvar G__27865 \x3d (0);\r\nseq__27821_27850 \x3d G__27862;\r\nchunk__27822_27851 \x3d G__27863;\r\ncount__27823_27852 \x3d G__27864;\r\ni__27824_27853 \x3d G__27865;\r\ncontinue;\r\n} else {\r\nvar x_27866 \x3d cljs.core.first(seq__27821_27860__$1);\r\narr.push(x_27866);\r\n\r\n\r\nvar G__27867 \x3d cljs.core.next(seq__27821_27860__$1);\r\nvar G__27868 \x3d null;\r\nvar G__27869 \x3d (0);\r\nvar G__27870 \x3d (0);\r\nseq__27821_27850 \x3d G__27867;\r\nchunk__27822_27851 \x3d G__27868;\r\ncount__27823_27852 \x3d G__27869;\r\ni__27824_27853 \x3d G__27870;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nreturn arr;\r\n} else {\r\nif(cljs.core.map_QMARK_(form)){\r\nvar obj \x3d ({});\r\nvar seq__27827_27871 \x3d cljs.core.seq(form);\r\nvar chunk__27828_27872 \x3d null;\r\nvar count__27829_27873 \x3d (0);\r\nvar i__27830_27874 \x3d (0);\r\nwhile(true){\r\nif((i__27830_27874 \x3c count__27829_27873)){\r\nvar vec__27837_27875 \x3d chunk__27828_27872.cljs$core$IIndexed$_nth$arity$2(null,i__27830_27874);\r\nvar k_27876 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27837_27875,(0),null);\r\nvar v_27877 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27837_27875,(1),null);\r\ncljs.reader.goog$module$goog$object.set(obj,cljs.core.name(k_27876),v_27877);\r\n\r\n\r\nvar G__27878 \x3d seq__27827_27871;\r\nvar G__27879 \x3d chunk__27828_27872;\r\nvar G__27880 \x3d count__27829_27873;\r\nvar G__27881 \x3d (i__27830_27874 + (1));\r\nseq__27827_27871 \x3d G__27878;\r\nchunk__27828_27872 \x3d G__27879;\r\ncount__27829_27873 \x3d G__27880;\r\ni__27830_27874 \x3d G__27881;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto___27882 \x3d cljs.core.seq(seq__27827_27871);\r\nif(temp__5753__auto___27882){\r\nvar seq__27827_27883__$1 \x3d temp__5753__auto___27882;\r\nif(cljs.core.chunked_seq_QMARK_(seq__27827_27883__$1)){\r\nvar c__4679__auto___27884 \x3d cljs.core.chunk_first(seq__27827_27883__$1);\r\nvar G__27885 \x3d cljs.core.chunk_rest(seq__27827_27883__$1);\r\nvar G__27886 \x3d c__4679__auto___27884;\r\nvar G__27887 \x3d cljs.core.count(c__4679__auto___27884);\r\nvar G__27888 \x3d (0);\r\nseq__27827_27871 \x3d G__27885;\r\nchunk__27828_27872 \x3d G__27886;\r\ncount__27829_27873 \x3d G__27887;\r\ni__27830_27874 \x3d G__27888;\r\ncontinue;\r\n} else {\r\nvar vec__27840_27889 \x3d cljs.core.first(seq__27827_27883__$1);\r\nvar k_27890 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27840_27889,(0),null);\r\nvar v_27891 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27840_27889,(1),null);\r\ncljs.reader.goog$module$goog$object.set(obj,cljs.core.name(k_27890),v_27891);\r\n\r\n\r\nvar G__27892 \x3d cljs.core.next(seq__27827_27883__$1);\r\nvar G__27893 \x3d null;\r\nvar G__27894 \x3d (0);\r\nvar G__27895 \x3d (0);\r\nseq__27827_27871 \x3d G__27892;\r\nchunk__27828_27872 \x3d G__27893;\r\ncount__27829_27873 \x3d G__27894;\r\ni__27830_27874 \x3d G__27895;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nreturn obj;\r\n} else {\r\nthrow (new Error([\x22JS literal expects a vector or map containing \x22,\x22only string or unqualified keyword keys\x22].join(\x27\x27)));\r\n\r\n}\r\n}\r\n});\r\ncljs.reader.read_uuid \x3d (function cljs$reader$read_uuid(uuid){\r\nif(typeof uuid \x3d\x3d\x3d \x27string\x27){\r\nreturn cljs.core.uuid(uuid);\r\n} else {\r\nthrow (new Error(\x22UUID literal expects a string as its representation.\x22));\r\n}\r\n});\r\ncljs.reader._STAR_default_data_reader_fn_STAR_ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\r\ncljs.reader._STAR_tag_table_STAR_ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(null,\x22inst\x22,\x22inst\x22,-2008473268,null),cljs.reader.read_date,new cljs.core.Symbol(null,\x22uuid\x22,\x22uuid\x22,-504564192,null),cljs.reader.read_uuid,new cljs.core.Symbol(null,\x22queue\x22,\x22queue\x22,-1198599890,null),cljs.reader.read_queue,new cljs.core.Symbol(null,\x22js\x22,\x22js\x22,-886355190,null),cljs.reader.read_js], null),cljs.core.PersistentArrayMap.EMPTY], 0)));\r\n/**\r\n * Reads the first object from an cljs.tools.reader.reader-types/IPushbackReader.\r\n * Returns the object read. If EOF, throws if eof-error? is true otherwise returns eof.\r\n * If no reader is provided, *in* will be used.\r\n * \r\n * Reads data in the edn format (subset of Clojure data):\r\n * http://edn-format.org\r\n * \r\n * cljs.tools.reader.edn/read doesn\x27t depend on dynamic Vars, all configuration\r\n * is done by passing an opt map.\r\n * \r\n * opts is a map that can include the following keys:\r\n * :eof - value to return on end-of-file. When not supplied, eof throws an exception.\r\n * :readers  - a map of tag symbols to data-reader functions to be considered before default-data-readers.\r\n *            When not supplied, only the default-data-readers will be used.\r\n * :default - A function of two args, that will, if present and no reader is found for a tag,\r\n *            be called with the tag and the value.\r\n */\r\ncljs.reader.read \x3d (function cljs$reader$read(var_args){\r\nvar G__27844 \x3d arguments.length;\r\nswitch (G__27844) {\r\ncase 1:\r\nreturn cljs.reader.read.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.reader.read.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn cljs.reader.read.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.reader.read.cljs$core$IFn$_invoke$arity$1 \x3d (function (reader){\r\nreturn cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22readers\x22,\x22readers\x22,-2118263030),cljs.core.deref(cljs.reader._STAR_tag_table_STAR_),new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),cljs.core.deref(cljs.reader._STAR_default_data_reader_fn_STAR_),new cljs.core.Keyword(null,\x22eof\x22,\x22eof\x22,-489063237),null], null),reader);\r\n}));\r\n\r\n(cljs.reader.read.cljs$core$IFn$_invoke$arity$2 \x3d (function (p__27845,reader){\r\nvar map__27846 \x3d p__27845;\r\nvar map__27846__$1 \x3d cljs.core.__destructure_map(map__27846);\r\nvar opts \x3d map__27846__$1;\r\nvar eof \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27846__$1,new cljs.core.Keyword(null,\x22eof\x22,\x22eof\x22,-489063237));\r\nreturn cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$2(cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([opts,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),cljs.core.deref(cljs.reader._STAR_default_data_reader_fn_STAR_)], null)], 0)),new cljs.core.Keyword(null,\x22readers\x22,\x22readers\x22,-2118263030),(function (m){\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.deref(cljs.reader._STAR_tag_table_STAR_),m], 0));\r\n})),reader);\r\n}));\r\n\r\n(cljs.reader.read.cljs$core$IFn$_invoke$arity$4 \x3d (function (reader,eof_error_QMARK_,eof,opts){\r\nreturn cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4(reader,eof_error_QMARK_,eof,cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([opts,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),cljs.core.deref(cljs.reader._STAR_default_data_reader_fn_STAR_)], null)], 0)),new cljs.core.Keyword(null,\x22readers\x22,\x22readers\x22,-2118263030),(function (m){\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.deref(cljs.reader._STAR_tag_table_STAR_),m], 0));\r\n})));\r\n}));\r\n\r\n(cljs.reader.read.cljs$lang$maxFixedArity \x3d 4);\r\n\r\n/**\r\n * Reads one object from the string s.\r\n * Returns nil when s is nil or empty.\r\n * \r\n * Reads data in the edn format (subset of Clojure data):\r\n * http://edn-format.org\r\n * \r\n * opts is a map as per cljs.tools.reader.edn/read\r\n */\r\ncljs.reader.read_string \x3d (function cljs$reader$read_string(var_args){\r\nvar G__27848 \x3d arguments.length;\r\nswitch (G__27848) {\r\ncase 1:\r\nreturn cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.reader.read_string.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1 \x3d (function (s){\r\nreturn cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22readers\x22,\x22readers\x22,-2118263030),cljs.core.deref(cljs.reader._STAR_tag_table_STAR_),new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),cljs.core.deref(cljs.reader._STAR_default_data_reader_fn_STAR_),new cljs.core.Keyword(null,\x22eof\x22,\x22eof\x22,-489063237),null], null),s);\r\n}));\r\n\r\n(cljs.reader.read_string.cljs$core$IFn$_invoke$arity$2 \x3d (function (opts,s){\r\nreturn cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$2(cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),cljs.core.deref(cljs.reader._STAR_default_data_reader_fn_STAR_)], null),opts], 0)),new cljs.core.Keyword(null,\x22readers\x22,\x22readers\x22,-2118263030),(function (m){\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.deref(cljs.reader._STAR_tag_table_STAR_),m], 0));\r\n})),s);\r\n}));\r\n\r\n(cljs.reader.read_string.cljs$lang$maxFixedArity \x3d 2);\r\n\r\ncljs.reader.register_tag_parser_BANG_ \x3d (function cljs$reader$register_tag_parser_BANG_(tag,f){\r\nvar old_parser \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.reader._STAR_tag_table_STAR_),tag);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.reader._STAR_tag_table_STAR_,cljs.core.assoc,tag,f);\r\n\r\nreturn old_parser;\r\n});\r\ncljs.reader.deregister_tag_parser_BANG_ \x3d (function cljs$reader$deregister_tag_parser_BANG_(tag){\r\nvar old_parser \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.reader._STAR_tag_table_STAR_),tag);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.reader._STAR_tag_table_STAR_,cljs.core.dissoc,tag);\r\n\r\nreturn old_parser;\r\n});\r\ncljs.reader.register_default_tag_parser_BANG_ \x3d (function cljs$reader$register_default_tag_parser_BANG_(f){\r\nvar old_parser \x3d cljs.core.deref(cljs.reader._STAR_default_data_reader_fn_STAR_);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.reader._STAR_default_data_reader_fn_STAR_,(function (_){\r\nreturn f;\r\n}));\r\n\r\nreturn old_parser;\r\n});\r\ncljs.reader.deregister_default_tag_parser_BANG_ \x3d (function cljs$reader$deregister_default_tag_parser_BANG_(){\r\nvar old_parser \x3d cljs.core.deref(cljs.reader._STAR_default_data_reader_fn_STAR_);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.reader._STAR_default_data_reader_fn_STAR_,(function (_){\r\nreturn null;\r\n}));\r\n\r\nreturn old_parser;\r\n});\r\n");
SHADOW_ENV.evalLoad("clojure.edn.js", true , "goog.provide(\x27clojure.edn\x27);\r\n/**\r\n * Reads the first object from an cljs.tools.reader.reader-types/IPushbackReader.\r\n * Returns the object read. If EOF, throws if eof-error? is true otherwise returns eof.\r\n * If no reader is provided, *in* will be used.\r\n * \r\n * Reads data in the edn format (subset of Clojure data):\r\n * http://edn-format.org\r\n * \r\n * cljs.tools.reader.edn/read doesn\x27t depend on dynamic Vars, all configuration\r\n * is done by passing an opt map.\r\n * \r\n * opts is a map that can include the following keys:\r\n * :eof - value to return on end-of-file. When not supplied, eof throws an exception.\r\n * :readers  - a map of tag symbols to data-reader functions to be considered before default-data-readers.\r\n *            When not supplied, only the default-data-readers will be used.\r\n * :default - A function of two args, that will, if present and no reader is found for a tag,\r\n *            be called with the tag and the value.\r\n */\r\nclojure.edn.read \x3d (function clojure$edn$read(var_args){\r\nvar G__28148 \x3d arguments.length;\r\nswitch (G__28148) {\r\ncase 1:\r\nreturn clojure.edn.read.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn clojure.edn.read.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 4:\r\nreturn clojure.edn.read.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(clojure.edn.read.cljs$core$IFn$_invoke$arity$1 \x3d (function (reader){\r\nreturn cljs.reader.read.cljs$core$IFn$_invoke$arity$1(reader);\r\n}));\r\n\r\n(clojure.edn.read.cljs$core$IFn$_invoke$arity$2 \x3d (function (opts,reader){\r\nreturn cljs.reader.read.cljs$core$IFn$_invoke$arity$2(opts,reader);\r\n}));\r\n\r\n(clojure.edn.read.cljs$core$IFn$_invoke$arity$4 \x3d (function (reader,eof_error_QMARK_,eof,opts){\r\nreturn cljs.reader.read.cljs$core$IFn$_invoke$arity$4(reader,eof_error_QMARK_,eof,opts);\r\n}));\r\n\r\n(clojure.edn.read.cljs$lang$maxFixedArity \x3d 4);\r\n\r\n/**\r\n * Reads one object from the string s.\r\n * Returns nil when s is nil or empty.\r\n * \r\n * Reads data in the edn format (subset of Clojure data):\r\n * http://edn-format.org\r\n * \r\n * opts is a map as per cljs.tools.reader.edn/read\r\n */\r\nclojure.edn.read_string \x3d (function clojure$edn$read_string(var_args){\r\nvar G__28190 \x3d arguments.length;\r\nswitch (G__28190) {\r\ncase 1:\r\nreturn clojure.edn.read_string.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn clojure.edn.read_string.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\r\n\r\n}\r\n});\r\n\r\n(clojure.edn.read_string.cljs$core$IFn$_invoke$arity$1 \x3d (function (s){\r\nreturn cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1(s);\r\n}));\r\n\r\n(clojure.edn.read_string.cljs$core$IFn$_invoke$arity$2 \x3d (function (opts,s){\r\nreturn cljs.reader.read_string.cljs$core$IFn$_invoke$arity$2(opts,s);\r\n}));\r\n\r\n(clojure.edn.read_string.cljs$lang$maxFixedArity \x3d 2);\r\n\r\n");
SHADOW_ENV.evalLoad("space.parser.js", true , "goog.provide(\x27space.parser\x27);\r\nspace.parser.indent_depth \x3d (function space$parser$indent_depth(s){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(s),\x22 \x22)){\r\nreturn ((1) + (function (){var G__17685 \x3d cljs.core.rest(s);\r\nreturn (space.parser.indent_depth.cljs$core$IFn$_invoke$arity$1 ? space.parser.indent_depth.cljs$core$IFn$_invoke$arity$1(G__17685) : space.parser.indent_depth.call(null,G__17685));\r\n})());\r\n} else {\r\nreturn (0);\r\n}\r\n});\r\nspace.parser.strip_indent \x3d (function space$parser$strip_indent(d,s){\r\nwhile(true){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(s),\x22 \x22)){\r\nvar G__17697 \x3d (d + (1));\r\nvar G__17698 \x3d cljs.core.rest(s);\r\nd \x3d G__17697;\r\ns \x3d G__17698;\r\ncontinue;\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d,s], null);\r\n}\r\nbreak;\r\n}\r\n});\r\nspace.parser.tokenize \x3d (function space$parser$tokenize(indent,remaining,result){\r\nwhile(true){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(remaining),\x22\\n\x22)){\r\nvar vec__17687 \x3d space.parser.strip_indent((0),cljs.core.rest(remaining));\r\nvar depth \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17687,(0),null);\r\nvar r \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17687,(1),null);\r\nvar G__17699 \x3d depth;\r\nvar G__17700 \x3d r;\r\nvar G__17701 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(result,((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(depth,indent))?\x22\\n\x22:(((depth \x3e indent))?\x22#\x3e\x22:(((depth \x3c indent))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(cljs.core.quot((indent - depth),(2)),\x22#\x3c\x22),\x22\\n\x22)):null))));\r\nindent \x3d G__17699;\r\nremaining \x3d G__17700;\r\nresult \x3d G__17701;\r\ncontinue;\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(remaining),null)){\r\nreturn result;\r\n} else {\r\nvar G__17702 \x3d indent;\r\nvar G__17703 \x3d cljs.core.rest(remaining);\r\nvar G__17704 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(result,cljs.core.first(remaining));\r\nindent \x3d G__17702;\r\nremaining \x3d G__17703;\r\nresult \x3d G__17704;\r\ncontinue;\r\n\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\nspace.parser.tokenized_string \x3d (function space$parser$tokenized_string(s){\r\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$1(space.parser.tokenize((0),clojure.string.replace([\x22\\n\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),\x22\\n\x22].join(\x27\x27),/\\n+/,\x22\\n\x22),cljs.core.PersistentVector.EMPTY));\r\n});\r\nspace.parser.G \x3d \x22\\n\x3cprogram\x3e            \x3d vs (exp vs)*\\n\\n\x3cexp\x3e              \x3d exp-indent-list\\n\x3cexp-indent-list\x3e  \x3d indent-list  | exp-nesting-list\\n\x3cexp-nesting-list\x3e \x3d nesting-list | exp-infix\\n\x3cexp-infix\x3e        \x3d infix        | exp-postfix\\n\x3cexp-postfix\x3e      \x3d postfix      | exp-atom\\n\x3cexp-atom\x3e         \x3d atom         | list\\n\x3catom\x3e             \x3d symbol | number\\n\\nindent-list        \x3d exp-infix (hs exp-infix)* indent indent-list-line (vs indent-list-line)* unindent\\n\x3cindent-list-line\x3e \x3d exp-infix (hs exp-infix)* | exp-indent-list\\nnesting-list       \x3d exp-infix (hs exp-infix)* \x3c\x27; \x27\x3e exp-indent-list\\ninfix              \x3d exp-infix hs dot exp-atom hs exp-postfix\\npostfix            \x3d exp-postfix vs? indent? dot exp-atom unindent?\\nlist               \x3d exp? \x3c\x27(\x27\x3e (exp hs)* exp \x3c\x27)\x27\x3e\\n\\nsymbol   \x3d #\x27[^ ,\\\\n\\\\(\\\\);#\\\\d\\\\.]+\x27\\nnumber   \x3d #\x27\\\\d+\x27\\n\\n\x3cdot\x3e      \x3d \x3c\x27.\x27\x3e\\n\x3cvs\x3e       \x3d \x3c#\x27\\\\n+\x27\x3e\\n\x3chs\x3e       \x3d \x3c#\x27[ ,]+\x27\x3e\\n\x3cindent\x3e   \x3d \x3c\x27#\x3e\x27\x3e\\n\x3cunindent\x3e \x3d \x3c\x27#\x3c\x27\x3e\\n\x22;\r\nspace.parser.s \x3d \x22\\ndef plus; fn (a b)\\n  if a .+ zero\\n    b\\n    plus(a.--, b.++)\\n\\nplus(1, 2)\\n\x22;\r\nspace.parser.parser \x3d instaparse.core.parser(space.parser.G);\r\nspace.parser.parse \x3d (function space$parser$parse(s){\r\nvar G__17694 \x3d space.parser.tokenized_string(s);\r\nreturn (space.parser.parser.cljs$core$IFn$_invoke$arity$1 ? space.parser.parser.cljs$core$IFn$_invoke$arity$1(G__17694) : space.parser.parser.call(null,G__17694));\r\n});\r\nspace.parser.strip \x3d (function space$parser$strip(tree){\r\nvar G__17695 \x3d new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\x22list\x22,\x22list\x22,765357683),(function() { \r\nvar G__17706__delegate \x3d function (x){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.list,x);\r\n};\r\nvar G__17706 \x3d function (var_args){\r\nvar x \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__17707__i \x3d 0, G__17707__a \x3d new Array(arguments.length -  0);\r\nwhile (G__17707__i \x3c G__17707__a.length) {G__17707__a[G__17707__i] \x3d arguments[G__17707__i + 0]; ++G__17707__i;}\r\n  x \x3d new cljs.core.IndexedSeq(G__17707__a,0,null);\r\n} \r\nreturn G__17706__delegate.call(this,x);};\r\nG__17706.cljs$lang$maxFixedArity \x3d 0;\r\nG__17706.cljs$lang$applyTo \x3d (function (arglist__17708){\r\nvar x \x3d cljs.core.seq(arglist__17708);\r\nreturn G__17706__delegate(x);\r\n});\r\nG__17706.cljs$core$IFn$_invoke$arity$variadic \x3d G__17706__delegate;\r\nreturn G__17706;\r\n})()\r\n,new cljs.core.Keyword(null,\x22indent-list\x22,\x22indent-list\x22,783853140),(function() { \r\nvar G__17712__delegate \x3d function (x){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.list,x);\r\n};\r\nvar G__17712 \x3d function (var_args){\r\nvar x \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__17713__i \x3d 0, G__17713__a \x3d new Array(arguments.length -  0);\r\nwhile (G__17713__i \x3c G__17713__a.length) {G__17713__a[G__17713__i] \x3d arguments[G__17713__i + 0]; ++G__17713__i;}\r\n  x \x3d new cljs.core.IndexedSeq(G__17713__a,0,null);\r\n} \r\nreturn G__17712__delegate.call(this,x);};\r\nG__17712.cljs$lang$maxFixedArity \x3d 0;\r\nG__17712.cljs$lang$applyTo \x3d (function (arglist__17714){\r\nvar x \x3d cljs.core.seq(arglist__17714);\r\nreturn G__17712__delegate(x);\r\n});\r\nG__17712.cljs$core$IFn$_invoke$arity$variadic \x3d G__17712__delegate;\r\nreturn G__17712;\r\n})()\r\n,new cljs.core.Keyword(null,\x22nesting-list\x22,\x22nesting-list\x22,-1336379425),(function() { \r\nvar G__17715__delegate \x3d function (x){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.list,x);\r\n};\r\nvar G__17715 \x3d function (var_args){\r\nvar x \x3d null;\r\nif (arguments.length \x3e 0) {\r\nvar G__17716__i \x3d 0, G__17716__a \x3d new Array(arguments.length -  0);\r\nwhile (G__17716__i \x3c G__17716__a.length) {G__17716__a[G__17716__i] \x3d arguments[G__17716__i + 0]; ++G__17716__i;}\r\n  x \x3d new cljs.core.IndexedSeq(G__17716__a,0,null);\r\n} \r\nreturn G__17715__delegate.call(this,x);};\r\nG__17715.cljs$lang$maxFixedArity \x3d 0;\r\nG__17715.cljs$lang$applyTo \x3d (function (arglist__17717){\r\nvar x \x3d cljs.core.seq(arglist__17717);\r\nreturn G__17715__delegate(x);\r\n});\r\nG__17715.cljs$core$IFn$_invoke$arity$variadic \x3d G__17715__delegate;\r\nreturn G__17715;\r\n})()\r\n,new cljs.core.Keyword(null,\x22symbol\x22,\x22symbol\x22,-1038572696),cljs.core.symbol,new cljs.core.Keyword(null,\x22number\x22,\x22number\x22,1570378438),(function (x){\r\nreturn clojure.edn.read_string.cljs$core$IFn$_invoke$arity$1(x);\r\n}),new cljs.core.Keyword(null,\x22postfix\x22,\x22postfix\x22,-571724593),(function() { \r\nvar G__17718__delegate \x3d function (pre,post,args){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.list,post,pre,args);\r\n};\r\nvar G__17718 \x3d function (pre,post,var_args){\r\nvar args \x3d null;\r\nif (arguments.length \x3e 2) {\r\nvar G__17719__i \x3d 0, G__17719__a \x3d new Array(arguments.length -  2);\r\nwhile (G__17719__i \x3c G__17719__a.length) {G__17719__a[G__17719__i] \x3d arguments[G__17719__i + 2]; ++G__17719__i;}\r\n  args \x3d new cljs.core.IndexedSeq(G__17719__a,0,null);\r\n} \r\nreturn G__17718__delegate.call(this,pre,post,args);};\r\nG__17718.cljs$lang$maxFixedArity \x3d 2;\r\nG__17718.cljs$lang$applyTo \x3d (function (arglist__17720){\r\nvar pre \x3d cljs.core.first(arglist__17720);\r\narglist__17720 \x3d cljs.core.next(arglist__17720);\r\nvar post \x3d cljs.core.first(arglist__17720);\r\nvar args \x3d cljs.core.rest(arglist__17720);\r\nreturn G__17718__delegate(pre,post,args);\r\n});\r\nG__17718.cljs$core$IFn$_invoke$arity$variadic \x3d G__17718__delegate;\r\nreturn G__17718;\r\n})()\r\n,new cljs.core.Keyword(null,\x22infix\x22,\x22infix\x22,1991018113),(function (a,op,b){\r\nreturn (new cljs.core.List(null,op,(new cljs.core.List(null,a,(new cljs.core.List(null,b,null,(1),null)),(2),null)),(3),null));\r\n})], null);\r\nvar G__17696 \x3d tree;\r\nreturn (instaparse.core.transform.cljs$core$IFn$_invoke$arity$2 ? instaparse.core.transform.cljs$core$IFn$_invoke$arity$2(G__17695,G__17696) : instaparse.core.transform.call(null,G__17695,G__17696));\r\n});\r\nspace.parser.strip(space.parser.parse(space.parser.s));\r\n");
SHADOW_ENV.evalLoad("space.eval.js", true , "goog.provide(\x27space.eval\x27);\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IRecord}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\nspace.eval.Proc \x3d (function (env,args,body,__meta,__extmap,__hash){\r\nthis.env \x3d env;\r\nthis.args \x3d args;\r\nthis.body \x3d body;\r\nthis.__meta \x3d __meta;\r\nthis.__extmap \x3d __extmap;\r\nthis.__hash \x3d __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\r\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\r\n});\r\n(space.eval.Proc.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__4502__auto__,k__4503__auto__){\r\nvar self__ \x3d this;\r\nvar this__4502__auto____$1 \x3d this;\r\nreturn this__4502__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4503__auto__,null);\r\n}));\r\n\r\n(space.eval.Proc.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__4504__auto__,k17820,else__4505__auto__){\r\nvar self__ \x3d this;\r\nvar this__4504__auto____$1 \x3d this;\r\nvar G__17824 \x3d k17820;\r\nvar G__17824__$1 \x3d (((G__17824 instanceof cljs.core.Keyword))?G__17824.fqn:null);\r\nswitch (G__17824__$1) {\r\ncase \x22env\x22:\r\nreturn self__.env;\r\n\r\nbreak;\r\ncase \x22args\x22:\r\nreturn self__.args;\r\n\r\nbreak;\r\ncase \x22body\x22:\r\nreturn self__.body;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k17820,else__4505__auto__);\r\n\r\n}\r\n}));\r\n\r\n(space.eval.Proc.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__4522__auto__,f__4523__auto__,init__4524__auto__){\r\nvar self__ \x3d this;\r\nvar this__4522__auto____$1 \x3d this;\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4525__auto__,p__17825){\r\nvar vec__17826 \x3d p__17825;\r\nvar k__4526__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17826,(0),null);\r\nvar v__4527__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17826,(1),null);\r\nreturn (f__4523__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4523__auto__.cljs$core$IFn$_invoke$arity$3(ret__4525__auto__,k__4526__auto__,v__4527__auto__) : f__4523__auto__.call(null,ret__4525__auto__,k__4526__auto__,v__4527__auto__));\r\n}),init__4524__auto__,this__4522__auto____$1);\r\n}));\r\n\r\n(space.eval.Proc.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__4517__auto__,writer__4518__auto__,opts__4519__auto__){\r\nvar self__ \x3d this;\r\nvar this__4517__auto____$1 \x3d this;\r\nvar pr_pair__4520__auto__ \x3d (function (keyval__4521__auto__){\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__4519__auto__,keyval__4521__auto__);\r\n});\r\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,pr_pair__4520__auto__,\x22#space.eval.Proc{\x22,\x22, \x22,\x22}\x22,opts__4519__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22env\x22,\x22env\x22,-1815813235),self__.env],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22args\x22,\x22args\x22,1315556576),self__.args],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669),self__.body],null))], null),self__.__extmap));\r\n}));\r\n\r\n(space.eval.Proc.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__17819){\r\nvar self__ \x3d this;\r\nvar G__17819__$1 \x3d this;\r\nreturn (new cljs.core.RecordIter((0),G__17819__$1,3,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22env\x22,\x22env\x22,-1815813235),new cljs.core.Keyword(null,\x22args\x22,\x22args\x22,1315556576),new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\r\n}));\r\n\r\n(space.eval.Proc.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__4500__auto__){\r\nvar self__ \x3d this;\r\nvar this__4500__auto____$1 \x3d this;\r\nreturn self__.__meta;\r\n}));\r\n\r\n(space.eval.Proc.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__4497__auto__){\r\nvar self__ \x3d this;\r\nvar this__4497__auto____$1 \x3d this;\r\nreturn (new space.eval.Proc(self__.env,self__.args,self__.body,self__.__meta,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(space.eval.Proc.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__4506__auto__){\r\nvar self__ \x3d this;\r\nvar this__4506__auto____$1 \x3d this;\r\nreturn (3 + cljs.core.count(self__.__extmap));\r\n}));\r\n\r\n(space.eval.Proc.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__4498__auto__){\r\nvar self__ \x3d this;\r\nvar this__4498__auto____$1 \x3d this;\r\nvar h__4360__auto__ \x3d self__.__hash;\r\nif((!((h__4360__auto__ \x3d\x3d null)))){\r\nreturn h__4360__auto__;\r\n} else {\r\nvar h__4360__auto____$1 \x3d (function (coll__4499__auto__){\r\nreturn (1991494207 ^ cljs.core.hash_unordered_coll(coll__4499__auto__));\r\n})(this__4498__auto____$1);\r\n(self__.__hash \x3d h__4360__auto____$1);\r\n\r\nreturn h__4360__auto____$1;\r\n}\r\n}));\r\n\r\n(space.eval.Proc.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this17821,other17822){\r\nvar self__ \x3d this;\r\nvar this17821__$1 \x3d this;\r\nreturn (((!((other17822 \x3d\x3d null)))) \x26\x26 ((((this17821__$1.constructor \x3d\x3d\x3d other17822.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17821__$1.env,other17822.env)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17821__$1.args,other17822.args)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17821__$1.body,other17822.body)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this17821__$1.__extmap,other17822.__extmap)))))))))));\r\n}));\r\n\r\n(space.eval.Proc.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__4512__auto__,k__4513__auto__){\r\nvar self__ \x3d this;\r\nvar this__4512__auto____$1 \x3d this;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22args\x22,\x22args\x22,1315556576),null,new cljs.core.Keyword(null,\x22env\x22,\x22env\x22,-1815813235),null,new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669),null], null), null),k__4513__auto__)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4512__auto____$1),self__.__meta),k__4513__auto__);\r\n} else {\r\nreturn (new space.eval.Proc(self__.env,self__.args,self__.body,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4513__auto__)),null));\r\n}\r\n}));\r\n\r\n(space.eval.Proc.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__4509__auto__,k17820){\r\nvar self__ \x3d this;\r\nvar this__4509__auto____$1 \x3d this;\r\nvar G__17829 \x3d k17820;\r\nvar G__17829__$1 \x3d (((G__17829 instanceof cljs.core.Keyword))?G__17829.fqn:null);\r\nswitch (G__17829__$1) {\r\ncase \x22env\x22:\r\ncase \x22args\x22:\r\ncase \x22body\x22:\r\nreturn true;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.contains_QMARK_(self__.__extmap,k17820);\r\n\r\n}\r\n}));\r\n\r\n(space.eval.Proc.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__4510__auto__,k__4511__auto__,G__17819){\r\nvar self__ \x3d this;\r\nvar this__4510__auto____$1 \x3d this;\r\nvar pred__17830 \x3d cljs.core.keyword_identical_QMARK_;\r\nvar expr__17831 \x3d k__4511__auto__;\r\nif(cljs.core.truth_((pred__17830.cljs$core$IFn$_invoke$arity$2 ? pred__17830.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22env\x22,\x22env\x22,-1815813235),expr__17831) : pred__17830.call(null,new cljs.core.Keyword(null,\x22env\x22,\x22env\x22,-1815813235),expr__17831)))){\r\nreturn (new space.eval.Proc(G__17819,self__.args,self__.body,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17830.cljs$core$IFn$_invoke$arity$2 ? pred__17830.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22args\x22,\x22args\x22,1315556576),expr__17831) : pred__17830.call(null,new cljs.core.Keyword(null,\x22args\x22,\x22args\x22,1315556576),expr__17831)))){\r\nreturn (new space.eval.Proc(self__.env,G__17819,self__.body,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((pred__17830.cljs$core$IFn$_invoke$arity$2 ? pred__17830.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669),expr__17831) : pred__17830.call(null,new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669),expr__17831)))){\r\nreturn (new space.eval.Proc(self__.env,self__.args,G__17819,self__.__meta,self__.__extmap,null));\r\n} else {\r\nreturn (new space.eval.Proc(self__.env,self__.args,self__.body,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4511__auto__,G__17819),null));\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(space.eval.Proc.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__4515__auto__){\r\nvar self__ \x3d this;\r\nvar this__4515__auto____$1 \x3d this;\r\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22env\x22,\x22env\x22,-1815813235),self__.env,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22args\x22,\x22args\x22,1315556576),self__.args,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669),self__.body,null))], null),self__.__extmap));\r\n}));\r\n\r\n(space.eval.Proc.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__4501__auto__,G__17819){\r\nvar self__ \x3d this;\r\nvar this__4501__auto____$1 \x3d this;\r\nreturn (new space.eval.Proc(self__.env,self__.args,self__.body,G__17819,self__.__extmap,self__.__hash));\r\n}));\r\n\r\n(space.eval.Proc.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__4507__auto__,entry__4508__auto__){\r\nvar self__ \x3d this;\r\nvar this__4507__auto____$1 \x3d this;\r\nif(cljs.core.vector_QMARK_(entry__4508__auto__)){\r\nreturn this__4507__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4508__auto__,(0)),cljs.core._nth(entry__4508__auto__,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4507__auto____$1,entry__4508__auto__);\r\n}\r\n}));\r\n\r\n(space.eval.Proc.getBasis \x3d (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22env\x22,\x22env\x22,-175281708,null),new cljs.core.Symbol(null,\x22args\x22,\x22args\x22,-1338879193,null),new cljs.core.Symbol(null,\x22body\x22,\x22body\x22,-408674142,null)], null);\r\n}));\r\n\r\n(space.eval.Proc.cljs$lang$type \x3d true);\r\n\r\n(space.eval.Proc.cljs$lang$ctorPrSeq \x3d (function (this__4546__auto__){\r\nreturn (new cljs.core.List(null,\x22space.eval/Proc\x22,null,(1),null));\r\n}));\r\n\r\n(space.eval.Proc.cljs$lang$ctorPrWriter \x3d (function (this__4546__auto__,writer__4547__auto__){\r\nreturn cljs.core._write(writer__4547__auto__,\x22space.eval/Proc\x22);\r\n}));\r\n\r\n/**\r\n * Positional factory function for space.eval/Proc.\r\n */\r\nspace.eval.__GT_Proc \x3d (function space$eval$__GT_Proc(env,args,body){\r\nreturn (new space.eval.Proc(env,args,body,null,null,null));\r\n});\r\n\r\n/**\r\n * Factory function for space.eval/Proc, taking a map of keywords to field values.\r\n */\r\nspace.eval.map__GT_Proc \x3d (function space$eval$map__GT_Proc(G__17823){\r\nvar extmap__4542__auto__ \x3d (function (){var G__17833 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__17823,new cljs.core.Keyword(null,\x22env\x22,\x22env\x22,-1815813235),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22args\x22,\x22args\x22,1315556576),new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669)], 0));\r\nif(cljs.core.record_QMARK_(G__17823)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__17833);\r\n} else {\r\nreturn G__17833;\r\n}\r\n})();\r\nreturn (new space.eval.Proc(new cljs.core.Keyword(null,\x22env\x22,\x22env\x22,-1815813235).cljs$core$IFn$_invoke$arity$1(G__17823),new cljs.core.Keyword(null,\x22args\x22,\x22args\x22,1315556576).cljs$core$IFn$_invoke$arity$1(G__17823),new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669).cljs$core$IFn$_invoke$arity$1(G__17823),null,cljs.core.not_empty(extmap__4542__auto__),null));\r\n});\r\n\r\nspace.eval.atom_QMARK_ \x3d (function space$eval$atom_QMARK_(x){\r\nreturn (x instanceof cljs.core.Atom);\r\n});\r\nspace.eval.env_get \x3d (function space$eval$env_get(env,symbol){\r\nvar resolved \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(env,symbol);\r\nif(space.eval.atom_QMARK_(resolved)){\r\nreturn cljs.core.deref(resolved);\r\n} else {\r\nif(cljs.core.truth_(resolved)){\r\nreturn resolved;\r\n} else {\r\nreturn [\x22unresolved symbol \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(symbol)].join(\x27\x27);\r\n\r\n}\r\n}\r\n});\r\nspace.eval.env_set \x3d (function space$eval$env_set(env,symbol,value){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,symbol,cljs.core.atom.cljs$core$IFn$_invoke$arity$1(value));\r\n});\r\nspace.eval.env_set_multiple \x3d (function space$eval$env_set_multiple(env,symbols,values){\r\nwhile(true){\r\nif(cljs.core.empty_QMARK_(symbols)){\r\nreturn env;\r\n} else {\r\nvar G__17891 \x3d space.eval.env_set(env,cljs.core.first(symbols),cljs.core.first(values));\r\nvar G__17892 \x3d cljs.core.rest(symbols);\r\nvar G__17893 \x3d cljs.core.rest(values);\r\nenv \x3d G__17891;\r\nsymbols \x3d G__17892;\r\nvalues \x3d G__17893;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\nspace.eval.env_set_BANG_ \x3d (function space$eval$env_set_BANG_(env,symbol,value){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(env,symbol),cljs.core.constantly(value));\r\n\r\nreturn env;\r\n});\r\nspace.eval.env_set_multiple_BANG_ \x3d (function space$eval$env_set_multiple_BANG_(env,symbols,values){\r\nwhile(true){\r\nif(cljs.core.empty_QMARK_(symbols)){\r\nreturn env;\r\n} else {\r\nvar G__17894 \x3d space.eval.env_set_BANG_(env,cljs.core.first(symbols),cljs.core.first(values));\r\nvar G__17895 \x3d cljs.core.rest(symbols);\r\nvar G__17896 \x3d cljs.core.rest(values);\r\nenv \x3d G__17894;\r\nsymbols \x3d G__17895;\r\nvalues \x3d G__17896;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\nspace.eval.eval_if \x3d (function space$eval$eval_if(p__17834,env){\r\nvar vec__17835 \x3d p__17834;\r\nvar condition \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17835,(0),null);\r\nvar consequent \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17835,(1),null);\r\nvar alternative \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17835,(2),null);\r\nif(cljs.core.truth_((space.eval.eval.cljs$core$IFn$_invoke$arity$2 ? space.eval.eval.cljs$core$IFn$_invoke$arity$2(condition,env) : space.eval.eval.call(null,condition,env)))){\r\nreturn (space.eval.eval.cljs$core$IFn$_invoke$arity$2 ? space.eval.eval.cljs$core$IFn$_invoke$arity$2(consequent,env) : space.eval.eval.call(null,consequent,env));\r\n} else {\r\nreturn (space.eval.eval.cljs$core$IFn$_invoke$arity$2 ? space.eval.eval.cljs$core$IFn$_invoke$arity$2(alternative,env) : space.eval.eval.call(null,alternative,env));\r\n}\r\n});\r\nspace.eval.eval_letrec \x3d (function space$eval$eval_letrec(p__17839,env){\r\nvar vec__17840 \x3d p__17839;\r\nvar bindings \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17840,(0),null);\r\nvar body \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17840,(1),null);\r\nvar keys \x3d cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2((2),bindings);\r\nvar exps \x3d cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2((2),cljs.core.rest(bindings));\r\nvar env__$1 \x3d space.eval.env_set_multiple(env,keys,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null,\x22uninitialised\x22,\x22uninitialised\x22,660292280,null)));\r\nspace.eval.env_set_multiple_BANG_(env__$1,keys,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__17838_SHARP_){\r\nreturn (space.eval.eval.cljs$core$IFn$_invoke$arity$2 ? space.eval.eval.cljs$core$IFn$_invoke$arity$2(p1__17838_SHARP_,env__$1) : space.eval.eval.call(null,p1__17838_SHARP_,env__$1));\r\n}),exps));\r\n\r\nreturn (space.eval.eval.cljs$core$IFn$_invoke$arity$2 ? space.eval.eval.cljs$core$IFn$_invoke$arity$2(body,env__$1) : space.eval.eval.call(null,body,env__$1));\r\n});\r\nspace.eval.eval_let \x3d (function space$eval$eval_let(p__17843,env){\r\nvar vec__17844 \x3d p__17843;\r\nvar bindings \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17844,(0),null);\r\nvar body \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17844,(1),null);\r\nvar G__17847 \x3d body;\r\nvar G__17848 \x3d (space.eval.apply_bindings.cljs$core$IFn$_invoke$arity$2 ? space.eval.apply_bindings.cljs$core$IFn$_invoke$arity$2(env,bindings) : space.eval.apply_bindings.call(null,env,bindings));\r\nreturn (space.eval.eval.cljs$core$IFn$_invoke$arity$2 ? space.eval.eval.cljs$core$IFn$_invoke$arity$2(G__17847,G__17848) : space.eval.eval.call(null,G__17847,G__17848));\r\n});\r\nspace.eval.eval_fn \x3d (function space$eval$eval_fn(p__17849,env){\r\nvar vec__17850 \x3d p__17849;\r\nvar args \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17850,(0),null);\r\nvar body \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17850,(1),null);\r\nreturn space.eval.__GT_Proc(env,args,body);\r\n});\r\nspace.eval.apply_bindings \x3d (function space$eval$apply_bindings(env,keyvals){\r\nwhile(true){\r\nif(cljs.core.empty_QMARK_(keyvals)){\r\nreturn env;\r\n} else {\r\nvar G__17897 \x3d space.eval.env_set(env,cljs.core.first(keyvals),(function (){var G__17853 \x3d cljs.core.second(keyvals);\r\nvar G__17854 \x3d env;\r\nreturn (space.eval.eval.cljs$core$IFn$_invoke$arity$2 ? space.eval.eval.cljs$core$IFn$_invoke$arity$2(G__17853,G__17854) : space.eval.eval.call(null,G__17853,G__17854));\r\n})());\r\nvar G__17898 \x3d cljs.core.drop.cljs$core$IFn$_invoke$arity$2((2),keyvals);\r\nenv \x3d G__17897;\r\nkeyvals \x3d G__17898;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\nspace.eval.eval_apply \x3d (function space$eval$eval_apply(p__17856,env){\r\nvar vec__17857 \x3d p__17856;\r\nvar seq__17858 \x3d cljs.core.seq(vec__17857);\r\nvar first__17859 \x3d cljs.core.first(seq__17858);\r\nvar seq__17858__$1 \x3d cljs.core.next(seq__17858);\r\nvar exp \x3d first__17859;\r\nvar args \x3d seq__17858__$1;\r\nvar f \x3d (space.eval.eval.cljs$core$IFn$_invoke$arity$2 ? space.eval.eval.cljs$core$IFn$_invoke$arity$2(exp,env) : space.eval.eval.call(null,exp,env));\r\nvar args__$1 \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__17855_SHARP_){\r\nreturn (space.eval.eval.cljs$core$IFn$_invoke$arity$2 ? space.eval.eval.cljs$core$IFn$_invoke$arity$2(p1__17855_SHARP_,env) : space.eval.eval.call(null,p1__17855_SHARP_,env));\r\n}),args);\r\nif(cljs.core.fn_QMARK_(f)){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args__$1);\r\n} else {\r\nvar G__17860 \x3d new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669).cljs$core$IFn$_invoke$arity$1(f);\r\nvar G__17861 \x3d space.eval.env_set_multiple(new cljs.core.Keyword(null,\x22env\x22,\x22env\x22,-1815813235).cljs$core$IFn$_invoke$arity$1(f),new cljs.core.Keyword(null,\x22args\x22,\x22args\x22,1315556576).cljs$core$IFn$_invoke$arity$1(f),args__$1);\r\nreturn (space.eval.eval.cljs$core$IFn$_invoke$arity$2 ? space.eval.eval.cljs$core$IFn$_invoke$arity$2(G__17860,G__17861) : space.eval.eval.call(null,G__17860,G__17861));\r\n}\r\n});\r\nspace.eval.eval_quote \x3d (function space$eval$eval_quote(p__17862,env){\r\nvar vec__17863 \x3d p__17862;\r\nvar body \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17863,(0),null);\r\nreturn body;\r\n});\r\nspace.eval.eval_do_defrec \x3d (function space$eval$eval_do_defrec(p__17866,env,bindings){\r\nwhile(true){\r\nvar vec__17867 \x3d p__17866;\r\nvar seq__17868 \x3d cljs.core.seq(vec__17867);\r\nvar first__17869 \x3d cljs.core.first(seq__17868);\r\nvar seq__17868__$1 \x3d cljs.core.next(seq__17868);\r\nvar exp \x3d first__17869;\r\nvar rest \x3d seq__17868__$1;\r\nif(((cljs.core.seq_QMARK_(exp)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(exp),new cljs.core.Symbol(null,\x22defrec\x22,\x22defrec\x22,-15343195,null))))){\r\nvar G__17899 \x3d rest;\r\nvar G__17900 \x3d env;\r\nvar G__17901 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bindings,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(exp,(2))),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(exp,(1)));\r\np__17866 \x3d G__17899;\r\nenv \x3d G__17900;\r\nbindings \x3d G__17901;\r\ncontinue;\r\n} else {\r\nreturn space.eval.eval_letrec(cljs.core.cons(bindings,(new cljs.core.List(null,cljs.core.cons(new cljs.core.Symbol(null,\x22do\x22,\x22do\x22,1686842252,null),cljs.core.cons(exp,rest)),null,(1),null))),env);\r\n}\r\nbreak;\r\n}\r\n});\r\nspace.eval.eval_do_def \x3d (function space$eval$eval_do_def(p__17870,env){\r\nvar vec__17871 \x3d p__17870;\r\nvar seq__17872 \x3d cljs.core.seq(vec__17871);\r\nvar first__17873 \x3d cljs.core.first(seq__17872);\r\nvar seq__17872__$1 \x3d cljs.core.next(seq__17872);\r\nvar vec__17874 \x3d first__17873;\r\nvar _ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17874,(0),null);\r\nvar key \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17874,(1),null);\r\nvar exp \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17874,(2),null);\r\nvar rest \x3d seq__17872__$1;\r\nvar G__17877 \x3d rest;\r\nvar G__17878 \x3d space.eval.env_set(env,key,(space.eval.eval.cljs$core$IFn$_invoke$arity$2 ? space.eval.eval.cljs$core$IFn$_invoke$arity$2(exp,env) : space.eval.eval.call(null,exp,env)));\r\nreturn (space.eval.eval_do.cljs$core$IFn$_invoke$arity$2 ? space.eval.eval_do.cljs$core$IFn$_invoke$arity$2(G__17877,G__17878) : space.eval.eval_do.call(null,G__17877,G__17878));\r\n});\r\nspace.eval.eval_do \x3d (function space$eval$eval_do(p__17879,env){\r\nvar vec__17880 \x3d p__17879;\r\nvar seq__17881 \x3d cljs.core.seq(vec__17880);\r\nvar first__17882 \x3d cljs.core.first(seq__17881);\r\nvar seq__17881__$1 \x3d cljs.core.next(seq__17881);\r\nvar exp \x3d first__17882;\r\nvar rest \x3d seq__17881__$1;\r\nif(cljs.core.empty_QMARK_(rest)){\r\nreturn (space.eval.eval.cljs$core$IFn$_invoke$arity$2 ? space.eval.eval.cljs$core$IFn$_invoke$arity$2(exp,env) : space.eval.eval.call(null,exp,env));\r\n} else {\r\nif(((cljs.core.seq_QMARK_(exp)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(exp),new cljs.core.Symbol(null,\x22defrec\x22,\x22defrec\x22,-15343195,null))))){\r\nreturn space.eval.eval_do_defrec(cljs.core.cons(exp,rest),env,cljs.core.List.EMPTY);\r\n} else {\r\nif(((cljs.core.seq_QMARK_(exp)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(exp),new cljs.core.Symbol(null,\x22def\x22,\x22def\x22,597100991,null))))){\r\nreturn space.eval.eval_do_def(cljs.core.cons(exp,rest),env);\r\n} else {\r\n(space.eval.eval.cljs$core$IFn$_invoke$arity$2 ? space.eval.eval.cljs$core$IFn$_invoke$arity$2(exp,env) : space.eval.eval.call(null,exp,env));\r\n\r\nreturn (space.eval.eval_do.cljs$core$IFn$_invoke$arity$2 ? space.eval.eval_do.cljs$core$IFn$_invoke$arity$2(rest,env) : space.eval.eval_do.call(null,rest,env));\r\n\r\n}\r\n}\r\n}\r\n});\r\nspace.eval.special_forms \x3d new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null,\x22if\x22,\x22if\x22,1181717262,null),space.eval.eval_if,new cljs.core.Symbol(null,\x22letrec\x22,\x22letrec\x22,-39593707,null),space.eval.eval_letrec,new cljs.core.Symbol(null,\x22let\x22,\x22let\x22,358118826,null),space.eval.eval_let,new cljs.core.Symbol(null,\x22fn\x22,\x22fn\x22,465265323,null),space.eval.eval_fn,new cljs.core.Symbol(null,\x22quote\x22,\x22quote\x22,1377916282,null),space.eval.eval_quote,new cljs.core.Symbol(null,\x22do\x22,\x22do\x22,1686842252,null),space.eval.eval_do], null);\r\nspace.eval.eval \x3d (function space$eval$eval(exp,env){\r\nif(typeof exp \x3d\x3d\x3d \x27number\x27){\r\nreturn exp;\r\n} else {\r\nif((exp instanceof cljs.core.Symbol)){\r\nreturn space.eval.env_get(env,exp);\r\n} else {\r\nif(cljs.core.truth_((function (){var G__17883 \x3d cljs.core.first(exp);\r\nreturn (space.eval.special_forms.cljs$core$IFn$_invoke$arity$1 ? space.eval.special_forms.cljs$core$IFn$_invoke$arity$1(G__17883) : space.eval.special_forms.call(null,G__17883));\r\n})())){\r\nvar G__17886 \x3d cljs.core.rest(exp);\r\nvar G__17887 \x3d env;\r\nvar fexpr__17885 \x3d (function (){var G__17888 \x3d cljs.core.first(exp);\r\nreturn (space.eval.special_forms.cljs$core$IFn$_invoke$arity$1 ? space.eval.special_forms.cljs$core$IFn$_invoke$arity$1(G__17888) : space.eval.special_forms.call(null,G__17888));\r\n})();\r\nreturn (fexpr__17885.cljs$core$IFn$_invoke$arity$2 ? fexpr__17885.cljs$core$IFn$_invoke$arity$2(G__17886,G__17887) : fexpr__17885.call(null,G__17886,G__17887));\r\n} else {\r\nif(cljs.core.list_QMARK_(exp)){\r\nreturn space.eval.eval_apply(exp,env);\r\n} else {\r\nreturn \x22unkown\x22;\r\n\r\n}\r\n}\r\n}\r\n}\r\n});\r\nspace.eval.default_env \x3d new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Symbol(null,\x22+\x22,\x22+\x22,-740910886,null),cljs.core._PLUS_,new cljs.core.Symbol(null,\x22-\x22,\x22-\x22,-471816912,null),cljs.core._,new cljs.core.Symbol(null,\x22*\x22,\x22*\x22,345799209,null),cljs.core._STAR_,new cljs.core.Symbol(null,\x22/\x22,\x22/\x22,-1371932971,null),cljs.core._SLASH_,new cljs.core.Symbol(null,\x22dec\x22,\x22dec\x22,-766002333,null),cljs.core.dec,new cljs.core.Symbol(null,\x22inc\x22,\x22inc\x22,324505433,null),cljs.core.inc,new cljs.core.Symbol(null,\x22\x3d\x22,\x22\x3d\x22,-1501502141,null),cljs.core._EQ_], null);\r\nspace.eval.eval(cljs.core.list(new cljs.core.Symbol(null,\x22do\x22,\x22do\x22,1686842252,null),cljs.core.list(new cljs.core.Symbol(null,\x22defrec\x22,\x22defrec\x22,-15343195,null),new cljs.core.Symbol(null,\x22f\x22,\x22f\x22,43394975,null),cljs.core.list(new cljs.core.Symbol(null,\x22fn\x22,\x22fn\x22,465265323,null),cljs.core.List.EMPTY,cljs.core.list(new cljs.core.Symbol(null,\x22g\x22,\x22g\x22,-916345864,null)))),cljs.core.list(new cljs.core.Symbol(null,\x22defrec\x22,\x22defrec\x22,-15343195,null),new cljs.core.Symbol(null,\x22g\x22,\x22g\x22,-916345864,null),cljs.core.list(new cljs.core.Symbol(null,\x22fn\x22,\x22fn\x22,465265323,null),cljs.core.List.EMPTY,(1))),(4),cljs.core.list(new cljs.core.Symbol(null,\x22f\x22,\x22f\x22,43394975,null),(0))),space.eval.default_env);\r\nspace.eval.eval_do(cljs.core.list(new cljs.core.Symbol(null,\x22do\x22,\x22do\x22,1686842252,null),cljs.core.list(new cljs.core.Symbol(null,\x22def\x22,\x22def\x22,597100991,null),new cljs.core.Symbol(null,\x22x\x22,\x22x\x22,-555367584,null),(10)),cljs.core.list(new cljs.core.Symbol(null,\x22def\x22,\x22def\x22,597100991,null),new cljs.core.Symbol(null,\x22y\x22,\x22y\x22,-117328249,null),cljs.core.list(new cljs.core.Symbol(null,\x22+\x22,\x22+\x22,-740910886,null),new cljs.core.Symbol(null,\x22x\x22,\x22x\x22,-555367584,null),(10))),new cljs.core.Symbol(null,\x22y\x22,\x22y\x22,-117328249,null)),space.eval.default_env);\r\nspace.eval.eval_letrec(cljs.core.list(cljs.core.list(new cljs.core.Symbol(null,\x22x\x22,\x22x\x22,-555367584,null),(1),new cljs.core.Symbol(null,\x22y\x22,\x22y\x22,-117328249,null),new cljs.core.Symbol(null,\x22x\x22,\x22x\x22,-555367584,null)),new cljs.core.Symbol(null,\x22x\x22,\x22x\x22,-555367584,null)),space.eval.default_env);\r\nspace.eval.eval(cljs.core.list(new cljs.core.Symbol(null,\x22letrec\x22,\x22letrec\x22,-39593707,null),cljs.core.list(new cljs.core.Symbol(null,\x22add\x22,\x22add\x22,1875819266,null),cljs.core.list(new cljs.core.Symbol(null,\x22fn\x22,\x22fn\x22,465265323,null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22a\x22,\x22a\x22,-482876059,null),new cljs.core.Symbol(null,\x22b\x22,\x22b\x22,-1172211299,null)], null),cljs.core.list(new cljs.core.Symbol(null,\x22if\x22,\x22if\x22,1181717262,null),cljs.core.list(new cljs.core.Symbol(null,\x22\x3d\x22,\x22\x3d\x22,-1501502141,null),new cljs.core.Symbol(null,\x22a\x22,\x22a\x22,-482876059,null),(0)),new cljs.core.Symbol(null,\x22b\x22,\x22b\x22,-1172211299,null),cljs.core.list(new cljs.core.Symbol(null,\x22add\x22,\x22add\x22,1875819266,null),cljs.core.list(new cljs.core.Symbol(null,\x22dec\x22,\x22dec\x22,-766002333,null),new cljs.core.Symbol(null,\x22a\x22,\x22a\x22,-482876059,null)),cljs.core.list(new cljs.core.Symbol(null,\x22inc\x22,\x22inc\x22,324505433,null),new cljs.core.Symbol(null,\x22b\x22,\x22b\x22,-1172211299,null)))))),cljs.core.list(new cljs.core.Symbol(null,\x22add\x22,\x22add\x22,1875819266,null),(2),(3))),space.eval.default_env);\r\nspace.eval.eval(cljs.core.list(new cljs.core.Symbol(null,\x22+\x22,\x22+\x22,-740910886,null),(2),(3)),space.eval.default_env);\r\nspace.eval.eval(cljs.core.list(new cljs.core.Symbol(null,\x22letrec\x22,\x22letrec\x22,-39593707,null),cljs.core.list(new cljs.core.Symbol(null,\x22add\x22,\x22add\x22,1875819266,null),cljs.core.list(new cljs.core.Symbol(null,\x22fn\x22,\x22fn\x22,465265323,null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22a\x22,\x22a\x22,-482876059,null),new cljs.core.Symbol(null,\x22b\x22,\x22b\x22,-1172211299,null)], null),cljs.core.list(new cljs.core.Symbol(null,\x22if\x22,\x22if\x22,1181717262,null),cljs.core.list(new cljs.core.Symbol(null,\x22\x3d\x22,\x22\x3d\x22,-1501502141,null),new cljs.core.Symbol(null,\x22a\x22,\x22a\x22,-482876059,null),(0)),new cljs.core.Symbol(null,\x22b\x22,\x22b\x22,-1172211299,null),cljs.core.list(new cljs.core.Symbol(null,\x22add\x22,\x22add\x22,1875819266,null),cljs.core.list(new cljs.core.Symbol(null,\x22dec\x22,\x22dec\x22,-766002333,null),new cljs.core.Symbol(null,\x22a\x22,\x22a\x22,-482876059,null)),cljs.core.list(new cljs.core.Symbol(null,\x22inc\x22,\x22inc\x22,324505433,null),new cljs.core.Symbol(null,\x22b\x22,\x22b\x22,-1172211299,null)))))),cljs.core.list(new cljs.core.Symbol(null,\x22add\x22,\x22add\x22,1875819266,null),(2),(3))),space.eval.default_env);\r\nspace.eval.eval(cljs.core.list(new cljs.core.Symbol(null,\x22letrec\x22,\x22letrec\x22,-39593707,null),cljs.core.list(new cljs.core.Symbol(null,\x22even\x22,\x22even\x22,1364685835,null),cljs.core.list(new cljs.core.Symbol(null,\x22fn\x22,\x22fn\x22,465265323,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22x\x22,\x22x\x22,-555367584,null)], null),cljs.core.list(new cljs.core.Symbol(null,\x22if\x22,\x22if\x22,1181717262,null),cljs.core.list(new cljs.core.Symbol(null,\x22\x3d\x22,\x22\x3d\x22,-1501502141,null),new cljs.core.Symbol(null,\x22x\x22,\x22x\x22,-555367584,null),(0)),cljs.core.list(new cljs.core.Symbol(null,\x22quote\x22,\x22quote\x22,1377916282,null),new cljs.core.Symbol(null,\x22even\x22,\x22even\x22,1364685835,null)),cljs.core.list(new cljs.core.Symbol(null,\x22uneven\x22,\x22uneven\x22,1610741334,null),cljs.core.list(new cljs.core.Symbol(null,\x22dec\x22,\x22dec\x22,-766002333,null),new cljs.core.Symbol(null,\x22x\x22,\x22x\x22,-555367584,null))))),new cljs.core.Symbol(null,\x22uneven\x22,\x22uneven\x22,1610741334,null),cljs.core.list(new cljs.core.Symbol(null,\x22fn\x22,\x22fn\x22,465265323,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22x\x22,\x22x\x22,-555367584,null)], null),cljs.core.list(new cljs.core.Symbol(null,\x22if\x22,\x22if\x22,1181717262,null),cljs.core.list(new cljs.core.Symbol(null,\x22\x3d\x22,\x22\x3d\x22,-1501502141,null),new cljs.core.Symbol(null,\x22x\x22,\x22x\x22,-555367584,null),(0)),cljs.core.list(new cljs.core.Symbol(null,\x22quote\x22,\x22quote\x22,1377916282,null),new cljs.core.Symbol(null,\x22uneven\x22,\x22uneven\x22,1610741334,null)),cljs.core.list(new cljs.core.Symbol(null,\x22even\x22,\x22even\x22,1364685835,null),cljs.core.list(new cljs.core.Symbol(null,\x22dec\x22,\x22dec\x22,-766002333,null),new cljs.core.Symbol(null,\x22x\x22,\x22x\x22,-555367584,null)))))),cljs.core.list(new cljs.core.Symbol(null,\x22even\x22,\x22even\x22,1364685835,null),(5))),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\x22\x3d\x22,\x22\x3d\x22,-1501502141,null),cljs.core._EQ_,new cljs.core.Symbol(null,\x22dec\x22,\x22dec\x22,-766002333,null),cljs.core.dec], null));\r\nvar a_17902 \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(a_17902,cljs.core.constantly(a_17902));\r\n\r\ncljs.core.deref(a_17902);\r\n");
SHADOW_ENV.evalLoad("space.main.js", true , "goog.provide(\x27space.main\x27);\r\nspace.main.process \x3d (function space$main$process(s){\r\nvar tree \x3d space.parser.parse(s);\r\nvar lisp \x3d space.parser.strip(tree);\r\nvar lisp__$1 \x3d (new cljs.core.List(null,cljs.core.cons(new cljs.core.Symbol(null,\x22do\x22,\x22do\x22,1686842252,null),lisp),null,(1),null));\r\nvar sb__4795__auto__ \x3d (new goog.string.StringBuffer());\r\nvar _STAR_print_newline_STAR__orig_val__17778_17789 \x3d cljs.core._STAR_print_newline_STAR_;\r\nvar _STAR_print_fn_STAR__orig_val__17779_17790 \x3d cljs.core._STAR_print_fn_STAR_;\r\nvar _STAR_print_newline_STAR__temp_val__17780_17791 \x3d true;\r\nvar _STAR_print_fn_STAR__temp_val__17781_17792 \x3d (function (x__4796__auto__){\r\nreturn sb__4795__auto__.append(x__4796__auto__);\r\n});\r\n(cljs.core._STAR_print_newline_STAR_ \x3d _STAR_print_newline_STAR__temp_val__17780_17791);\r\n\r\n(cljs.core._STAR_print_fn_STAR_ \x3d _STAR_print_fn_STAR__temp_val__17781_17792);\r\n\r\ntry{cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1(space.eval.eval(cljs.core.first(lisp__$1),space.eval.default_env));\r\n\r\ncljs.core.newline.cljs$core$IFn$_invoke$arity$0();\r\n\r\nvar _STAR_print_pprint_dispatch_STAR__orig_val__17782_17793 \x3d cljs.pprint._STAR_print_pprint_dispatch_STAR_;\r\nvar _STAR_print_miser_width_STAR__orig_val__17783_17794 \x3d cljs.pprint._STAR_print_miser_width_STAR_;\r\nvar _STAR_print_right_margin_STAR__orig_val__17784_17795 \x3d cljs.pprint._STAR_print_right_margin_STAR_;\r\nvar _STAR_print_pprint_dispatch_STAR__temp_val__17785_17796 \x3d cljs.pprint.code_dispatch;\r\nvar _STAR_print_miser_width_STAR__temp_val__17786_17797 \x3d (20);\r\nvar _STAR_print_right_margin_STAR__temp_val__17787_17798 \x3d (30);\r\n(cljs.pprint._STAR_print_pprint_dispatch_STAR_ \x3d _STAR_print_pprint_dispatch_STAR__temp_val__17785_17796);\r\n\r\n(cljs.pprint._STAR_print_miser_width_STAR_ \x3d _STAR_print_miser_width_STAR__temp_val__17786_17797);\r\n\r\n(cljs.pprint._STAR_print_right_margin_STAR_ \x3d _STAR_print_right_margin_STAR__temp_val__17787_17798);\r\n\r\ntry{cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1(lisp__$1);\r\n}finally {(cljs.pprint._STAR_print_right_margin_STAR_ \x3d _STAR_print_right_margin_STAR__orig_val__17784_17795);\r\n\r\n(cljs.pprint._STAR_print_miser_width_STAR_ \x3d _STAR_print_miser_width_STAR__orig_val__17783_17794);\r\n\r\n(cljs.pprint._STAR_print_pprint_dispatch_STAR_ \x3d _STAR_print_pprint_dispatch_STAR__orig_val__17782_17793);\r\n}\r\ncljs.core.newline.cljs$core$IFn$_invoke$arity$0();\r\n\r\ncljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1(tree);\r\n}finally {(cljs.core._STAR_print_fn_STAR_ \x3d _STAR_print_fn_STAR__orig_val__17779_17790);\r\n\r\n(cljs.core._STAR_print_newline_STAR_ \x3d _STAR_print_newline_STAR__orig_val__17778_17789);\r\n}\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4795__auto__);\r\n});\r\nspace.main.process(\x221\x22);\r\nspace.main.process(\x22\\nletfn add (a b)\\n  if a .\x3d 0\\n    b\\n    add(a.dec, b.inc)\\n  add(2, 3)\\n\x22);\r\nspace.main.init \x3d (function space$main$init(){\r\nvar input \x3d document.querySelector(\x22#input\x22);\r\nvar button \x3d document.querySelector(\x22#button\x22);\r\nvar output \x3d document.querySelector(\x22#output\x22);\r\nreturn (button.onclick \x3d (function (){\r\nreturn (output.innerHTML \x3d space.main.process(input.value));\r\n}));\r\n});\r\n");
SHADOW_ENV.evalLoad("shadow.module.main.append.js", false , "\ntry { space.main.init(); } catch (e) { console.error(\x22An error occurred when calling (space.main/init)\x22); throw(e); }");